# Ingest repository_dispatch events and trigger appropriate workflows 
name: Listener

on:
  repository_dispatch:
    types: [Open, Update, Merge, Close]

jobs: 
  open-update: 
    if: ${{ github.event.action == 'Open' || github.event.action == 'Update' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Pass branch name to env
        run: |
          BRANCH_NAME=${{ github.event.client_payload.branchName }}
          BRANCH_NAME=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]')
          BRANCH_NAME=$(echo "$BRANCH_NAME" | sed -e "s/[^a-z0-9]/-/g")
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      
      - uses: ./.github/actions/replace_specs_snippets
        id: replace-specs-snippets
        with: 
          branch-name: ${{ github.event.client_payload.branchName }}
          username: ${{ secrets.DX_GITHUB_USERNAME }}
          token: ${{ secrets.DX_GITHUB_TOKEN }}
          origin-repo: ${{ github.event.client_payload.originRepo }}
          author: ${{ github.event.client_payload.author }}
      
      - name: Open Pull Request
        if: steps.replace-specs-snippets.outputs.needs_pr
        run: |
          hub pull-request --base Bandwidth:main $(if ${{ github.event.client_payload.draftPr }} ; then echo "-d" ; fi) -m '${{ inputs.branch-name }}' -m 'Update API specs from upstream api-specs repository. Opened By: @${{ inputs.author }}'
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Output PR Number
        run: |
          PR_NUMBER=$(hub pr list -h ${{ inputs.branch-name }} -f %I)
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check and Update Draft Status
        if: steps.replace-specs-snippets.outputs.needs_pr==false
        run: |
          PR_STATE=$(hub pr list -h ${{ inputs.branch-name }}  -f %pS)
          if ${{ github.event.client_payload.draftPr }}
          then
            if [ "$PR_STATE" == "open" ]
            then
              id=$(gh pr view --json id -q '.id')
              number=${{ env.PR_NUMBER }}
              MUTATION='
                mutation($id: ID!) {
                  convertPullRequestToDraft(input: { pullRequestId: $id }) {
                    pullRequest {
                      id
                      number
                      isDraft
                    }
                  }
                }
              '
              gh api graphql -F id="${id}" -f query="${MUTATION}" >/dev/null
            fi 
          else
            if [ "$PR_STATE" == "draft" ]
            then
              gh pr ready
            fi 
          fi
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on Corresponding Repo
        uses: ./.github/actions/add_pr_comment
        with: 
          username: ${{ secrets.DX_GITHUB_USERNAME }}
          token: ${{ secrets.DX_GITHUB_TOKEN }}
          repo-name: ${{ github.event.client_payload.originRepo }}
          pr-number: ${{ github.event.client_payload.prNumber }}
          message: 'Preview site: http://bw-api-docs-${{ env.BRANCH_NAME }}.s3-website-us-east-1.amazonaws.com/\nPlease note that it may take a couple minutes for your preview site to become available.\n\nSee the corresponding PR opened on the docsite repository (no action required):\nhttps://github.com/Bandwidth/api-docs/pull/${{ env.PR_NUMBER }}'

  merge: 
    if: ${{ github.event.action == 'Merge' }} 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set PR number as env variable
        run: |
          echo "PR_NUMBER=$(hub pr list -h ${{ github.event.client_payload.branchName }} -f %I)" >> $GITHUB_ENV
        env: 
          GITHUB_TOKEN: ${{ secrets.DX_GITHUB_TOKEN }}
      
      - uses: ./.github/actions/add_pr_comment
        with: 
          username: ${{ secrets.DX_GITHUB_USERNAME }}
          token: ${{ secrets.DX_GITHUB_TOKEN }}
          repo-name: api-docs
          pr-number: ${{ env.PR_NUMBER }}
          message: 'Corresponding Pull Request on [${{ github.event.client_payload.originRepo }}](https://github.com/Bandwidth/${{ github.event.client_payload.originRepo }}/pull/${{ github.event.client_payload.prNumber }}) was merged.'

  close: 
    if: ${{ github.event.action == 'Close' }} 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      # Close the cooresponding PR
      # - run: | 
      #     PR_NUMBER=$(hub pr list -h ${{ github.event.client_payload.branchName }} -f %I)
      #     hub issue update $PR_NUMBER -s closed
     
      - name: Set PR number as env variable
        run: |
          echo "PR_NUMBER=$(hub pr list -h ${{ github.event.client_payload.branchName }} -f %I)" >> $GITHUB_ENV
        env: 
          GITHUB_TOKEN: ${{ secrets.DX_GITHUB_TOKEN }}
      
      - uses: ./.github/actions/add_pr_comment
        with: 
          username: ${{ secrets.DX_GITHUB_USERNAME }}
          token: ${{ secrets.DX_GITHUB_TOKEN }}
          repo-name: api-docs
          pr-number: ${{ env.PR_NUMBER }}
          message: 'Corresponding Pull Request on [${{ github.event.client_payload.originRepo }}](https://github.com/Bandwidth/${{ github.event.client_payload.originRepo }}/pull/${{ github.event.client_payload.prNumber }}) was closed.'
