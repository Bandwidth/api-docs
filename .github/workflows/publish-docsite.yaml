# Deploys the doc site to an S3 bucket

name: Publish Docsite

on:
  release:
    types:
      - published

jobs:
  cypress:
    name: Cypress Tests
    runs-on: ${{ matrix.os }}
    container:
      image: cypress/browsers:node16.13.2-chrome97-ff96
      options: --user 1001 --shm-size=2g     
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: node -v   

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cypress run 
        uses: cypress-io/github-action@v4.2.0
        timeout-minutes: 40
        with:
          record: true
          browser: ${{ matrix.browser }}
          start: npm start
          wait-on: http://localhost:3000
          wait-on-timeout: 180
          config-file: ./cypress.config.ts          
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # overwrite commit message sent to Dashboard
          COMMIT_INFO_MESSAGE: ${{github.event.pull_request.title}}
          # re-enable PR comment bot
          COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}    
  publish:
    name: Publish Docsite
    needs: cypress    
    runs-on: ubuntu-latest
    if: ${{ !github.event.release.prerelease && github.event.release.target_commitish == 'main' }}
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Generate Static Site
      run: |
          cd site
          yarn install --pure-lockfile
          npm run build

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Create Bucket
      run: |
        echo $BUCKET_NAME
        aws s3 mb s3://$BUCKET_NAME --region us-east-1
        aws s3 website s3://$BUCKET_NAME --index-document index.html
      env:
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}

    - name: Sync zip to Bucket
      run: |
        aws s3 sync ./site/build s3://$BUCKET_NAME --acl public-read --delete
      env:
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        
    - name: Invalidate Cloudfront Cache
      run: 
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID}} --paths "/" "/*"

  cypress_post_test:
    runs-on: ${{ matrix.os }}
    needs: [cypress, publish]
    container:
      image: cypress/browsers:node16.13.2-chrome97-ff96
      options: --user 1001 --shm-size=2g     
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]   
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: node -v   

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cypress Post Deployment Test
        timeout-minutes: 40
        with:
          record: true
          browser: ${{ matrix.browser }}
          config-file: ./cypress.config.ts
          tag: production          
        env:
          CYPRESS_host: https://dev.bandwidth.com/
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # overwrite commit message sent to Dashboard
          COMMIT_INFO_MESSAGE: ${{github.event.pull_request.title}}
          # re-enable PR comment bot
          COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}
