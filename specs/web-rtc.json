{
   "openapi": "3.0.2",
   "info": {
      "version": "0.3.0",
      "title": "WebRtc",
      "description": "Bandwidth WebRTC API",
      "contact": {
         "name": "Bandwidth Edge Services",
         "email": "edge-services@bandwidth.com",
         "url": "https://support.bandwidth.com"
      },
      "x-server-configuration": {
        "default-environment": "production",
        "default-server": "default",
        "environments": [
            {
                "name": "production",
                "servers": [
                   {
                      "name": "default",
                      "url": "https://api.webrtc.bandwidth.com/v1"
                   }
                ]
             },
             {
                "name": "custom",
                "servers": [
                   {
                      "name": "default",
                      "url": "{base_url}"
                   }
                ]
             }
        ],
        "parameters": [
            {
                "name": "base_url",
                "description": "",
                "type": "string",
                "example": "https://www.example.com"
            }
        ]
    }
   },
   "servers": [
      {
         "url": "https://api.webrtc.bandwidth.com/v1",
         "description": "Production WebRTC APIs"
      },
      {
         "url": "https://rtc-api.edge.bandwidth.com/v1",
         "description": "Staging WebRTC APIs"
      }
   ],
   "resources": {
      "/accounts/{accountId}/participants": {
         "description": "Manage participants in a session"
      },
      "/accounts/{accountId}/sessions": {
         "description": "Sessions allow you to create media connections between participants"
      }
   },
   "paths": {
      "/accounts/{accountId}/participants": {
         "post": {
            "description": "Create a new participant under this account\n\nParticipants are idempotent, so relevant parameters must be set in this function if desired\n",
            "operationId": "createParticipant",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "description": "Participant parameters",
               "required": false,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Participant"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Success",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "participant": {
                                 "$ref": "#/components/schemas/Participant"
                              },
                              "token": {
                                 "type": "string",
                                 "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyfQ.L8i6g3PfcHlioHCCPURC9pmXT7gdJpx3kOoyAfNUwCc",
                                 "description": "Auth token for the returned participant\n\nThis should be passed to the participant so that they can connect to the platform\n"
                              }
                           }
                        }
                     }
                  }
               },
               "400": {
                  "description": "Bad Request"
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/accounts/{accountId}/participants/{participantId}": {
         "get": {
            "description": "Get participant by ID",
            "operationId": "getParticipant",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "participantId",
                  "in": "path",
                  "description": "Participant ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Participant"
                        }
                     }
                  }
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "404": {
                  "description": "Not Found"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         },
         "delete": {
            "description": "Delete participant by ID",
            "operationId": "deleteParticipant",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "participantId",
                  "in": "path",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "204": {
                  "description": "No Content"
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "404": {
                  "description": "Not Found"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/accounts/{accountId}/sessions": {
         "post": {
            "description": "Create a new session\n\nSessions are idempotent, so relevant parameters must be set in this function if desired\n",
            "operationId": "createSession",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "description": "Session parameters",
               "required": false,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Session"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Success",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Session"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Bad Request"
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/accounts/{accountId}/sessions/{sessionId}": {
         "get": {
            "description": "Get session by ID",
            "operationId": "getSession",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "sessionId",
                  "in": "path",
                  "description": "Session ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Session"
                        }
                     }
                  }
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "404": {
                  "description": "Not Found"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         },
         "delete": {
            "description": "Delete session by ID",
            "operationId": "deleteSession",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "sessionId",
                  "in": "path",
                  "description": "Session ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "204": {
                  "description": "No Content"
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "404": {
                  "description": "Not Found"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/accounts/{accountId}/sessions/{sessionId}/participants": {
         "get": {
            "description": "List participants in a session",
            "operationId": "listSessionParticipants",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "sessionId",
                  "in": "path",
                  "description": "Session ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/Participant"
                           }
                        }
                     }
                  }
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "404": {
                  "description": "Not Found"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/accounts/{accountId}/sessions/{sessionId}/participants/{participantId}": {
         "put": {
            "description": "Add a participant to a session\n\nSubscriptions can optionally be provided as part of this call\n",
            "operationId": "addParticipantToSession",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "sessionId",
                  "in": "path",
                  "description": "Session ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "participantId",
                  "in": "path",
                  "description": "Participant ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "description": "Subscriptions the participant should be created with",
               "required": false,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Subscriptions"
                     }
                  }
               }
            },
            "responses": {
               "204": {
                  "description": "No Content"
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "404": {
                  "description": "Not Found"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         },
         "delete": {
            "description": "Remove a participant from a session\n\nThis will automatically remove any subscriptions the participant has associated with this session\n",
            "operationId": "removeParticipantFromSession",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "participantId",
                  "in": "path",
                  "description": "Participant ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "sessionId",
                  "in": "path",
                  "description": "Session ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "204": {
                  "description": "No Content"
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "404": {
                  "description": "Not Found"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      },
      "/accounts/{accountId}/sessions/{sessionId}/participants/{participantId}/subscriptions": {
         "get": {
            "description": "Get a participant's subscriptions",
            "operationId": "getParticipantSubscriptions",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "participantId",
                  "in": "path",
                  "description": "Participant ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "sessionId",
                  "in": "path",
                  "description": "Session ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Success",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Subscriptions"
                        }
                     }
                  }
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "404": {
                  "description": "Not Found"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         },
         "put": {
            "description": "Update a participant's subscriptions\n\nThis is a full update that will replace the participant's subscriptions. First call `getParticipantSubscriptions` if you need the current subscriptions. Call this function with no `Subscriptions` object to remove all subscriptions\n",
            "operationId": "updateParticipantSubscriptions",
            "parameters": [
               {
                  "name": "accountId",
                  "in": "path",
                  "description": "Account ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "participantId",
                  "in": "path",
                  "description": "Participant ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "sessionId",
                  "in": "path",
                  "description": "Session ID",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "description": "Initial state",
               "required": false,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Subscriptions"
                     }
                  }
               }
            },
            "responses": {
               "204": {
                  "description": "No Content"
               },
               "400": {
                  "description": "Bad Request"
               },
               "401": {
                  "description": "Unauthorized"
               },
               "403": {
                  "description": "Access Denied"
               },
               "404": {
                  "description": "Not Found"
               },
               "default": {
                  "description": "Unexpected Error",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Error"
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "Session": {
            "type": "object",
            "description": "A session object",
            "properties": {
               "id": {
                  "type": "string",
                  "description": "Unique id of the session",
                  "example": "75c21163-e110-41bc-bd76-1bb428ec85d5",
                  "readOnly": true
               },
               "tag": {
                  "type": "string",
                  "description": "User defined tag to associate with the session",
                  "example": "session1"
               }
            }
         },
         "Participant": {
            "type": "object",
            "description": "A participant object",
            "properties": {
               "id": {
                  "type": "string",
                  "description": "Unique id of the participant",
                  "readOnly": true,
                  "example": "320e2af6-13ec-498d-8b51-daba52c37853"
               },
               "callbackUrl": {
                  "type": "string",
                  "description": "Full callback url to use for notifications about this participant",
                  "example": "https://example.com/callback"
               },
               "publishPermissions": {
                  "type": "array",
                  "description": "Defines if this participant can publish audio or video",
                  "example": [
                     "VIDEO",
                     "AUDIO"
                  ],
                  "uniqueItems": true,
                  "items": {
                     "type": "string",
                     "enum": [
                        "AUDIO",
                        "VIDEO"
                     ]
                  }
               },
               "sessions": {
                  "type": "array",
                  "description": "List of session ids this participant is associated with\n\nCapped to one\n",
                  "example": [
                     "75c21163-e110-41bc-bd76-1bb428ec85d5"
                  ],
                  "readOnly": true,
                  "items": {
                     "type": "string"
                  }
               },
               "subscriptions": {
                  "type": "object",
                  "description": "Subscriptions for this participant",
                  "example": {
                     "sessionId": "d8886aad-b956-4e1b-b2f4-d7c9f8162772",
                     "participants": [
                        {
                           "participantId": "568749d5-04d5-483d-adf5-deac7dd3d521"
                        },
                        {
                           "participantId": "0275e47f-dd21-4cf0-a1e1-dfdc719e73a7"
                        }
                     ]
                  },
                  "$ref": "#/components/schemas/Subscriptions"
               },
               "tag": {
                  "type": "string",
                  "description": "User defined tag to associate with the participant",
                  "example": "participant1"
               }
            }
         },
         "Subscriptions": {
            "type": "object",
            "required": [
               "sessionId"
            ],
            "properties": {
               "sessionId": {
                  "type": "string",
                  "description": "Session the subscriptions are associated with\n\nIf this is the only field, the subscriber will be subscribed to all participants in the session (including any participants that are later added to the session)\n",
                  "example": "d8886aad-b956-4e1b-b2f4-d7c9f8162772"
               },
               "participants": {
                  "type": "array",
                  "description": "Subset of participants to subscribe to in the session. Optional.",
                  "example": [
                     "568749d5-04d5-483d-adf5-deac7dd3d521",
                     "0275e47f-dd21-4cf0-a1e1-dfdc719e73a7"
                  ],
                  "items": {
                     "$ref": "#/components/schemas/ParticipantSubscription"
                  }
               }
            }
         },
         "ParticipantSubscription": {
            "type": "object",
            "required": [
               "participantId"
            ],
            "properties": {
               "participantId": {
                  "type": "string",
                  "description": "Participant the subscriber should be subscribed to",
                  "example": "568749d5-04d5-483d-adf5-deac7dd3d521"
               }
            }
         },
         "Error": {
            "type": "object",
            "required": [
               "code",
               "message"
            ],
            "properties": {
               "code": {
                  "type": "integer",
                  "format": "int32",
                  "example": "unknown_error"
               },
               "message": {
                  "type": "string",
                  "example": "There was an unexpected error"
               }
            }
         }
      },
      "securitySchemes": {
         "basicAuth": {
            "type": "http",
            "scheme": "basic"
         },
         "token": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
         }
      }
   },
   "security": [
      {
         "basicAuth": []
      },
      {
         "token": []
      }
   ]
}
