{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Iris",
    "description" : "Bandwidth Iris",
    "version" : "1.0.0",
    "x-server-configuration" : {
      "default-environment" : "production",
      "default-server" : "default",
      "environments" : [ {
        "name" : "production",
        "servers" : [ {
          "name" : "default",
          "url" : "https://dashboard.bandwidth.com/api/"
        } ]
      }, {
        "name" : "custom",
        "servers" : [ {
          "name" : "default",
          "url" : "{base_url}"
        } ]
      } ],
      "parameters" : [ {
        "name" : "base_url",
        "description" : "",
        "type" : "string",
        "example" : "https://www.example.com"
      } ]
    }
  },
  "servers" : [ {
    "url" : "https://dashboard.bandwidth.com/api/",
    "description" : "Production",
    "variables" : { }
  } ],
  "security" : [ {
    "httpBasic" : [ ]
  } ],
  "paths" : {
    "/accounts/{accountId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "This API call retrieves information about the account indicated by the Account ID.",
        "operationId" : "getPomAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PomAccountResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AccountResponse>    <Account>        <AccountId>14</AccountId>        <AssociatedCatapultAccount>u-ertyhgfd12dcvdhnboklk</AssociatedCatapultAccount>        <GlobalAccountNumber>globalAccount</GlobalAccountNumber>        <CompanyName>CWI Hosting</CompanyName>        <AccountType>Business</AccountType>        <NenaId></NenaId>        <CustomerSegment>Trial</CustomerSegment>        <Tiers>            <Tier>0</Tier>        </Tiers>        <Address>            <HouseNumber>904</HouseNumber>            <HouseSuffix>E</HouseSuffix>            <PreDirectional></PreDirectional>            <StreetName>Anson</StreetName>            <StreetSuffix>St</StreetSuffix>            <PostDirectional></PostDirectional>            <AddressLine2></AddressLine2>            <City>Marshalltown</City>            <StateCode>IA</StateCode>            <Zip>50158</Zip>            <PlusFour></PlusFour>            <County></County>            <Country>United States</Country>            <AddressType>Billing</AddressType>        </Address>        <Contact>            <FirstName>Sanjay</FirstName>            <LastName>Rao</LastName>            <Phone>9195441234</Phone>            <Email>srao@bandwidth.com</Email>        </Contact>        <AltSpid>X455</AltSpid>        <SPID>9999</SPID>        <PortCarrierType>WIRELINE</PortCarrierType>    </Account></AccountResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Updates Account. <br>Note that the body is similar in structure to POST for /accounts. <br>Accounts with Customer Segment set to Enterprise Telephony are not allowed to have SPID or Alternative SPID configured. <br>There are some specific values for &lt;AssociatedCatapultAccount&gt; covered in folow table:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">       <tbody>          <tr>             <th>Existing value</th>             <th>New value</th>             <th>Action description</th>          </tr>          <tr>             <td>empty</td>             <td>empty</td>             <td>Association for Account is not provided</td>          </tr>          <tr>             <td>empty</td>             <td>string 'NEW' (case sensitive)</td>             <td>Update Iris Account and set Associated Identifier equal to Iris Account ID. New Assiciated Account with this ID is created on the external service</td>          </tr>          <tr>             <td>u-id(anyone)</td>             <td>string 'NEW' (case sensitive)</td>             <td>Association and Account update can't be performed. There is no way to change Association Identifier directly without removing a previous association</td>          </tr>          <tr>             <td>empty</td>             <td>Nonexistent u-id</td>             <td>Association and Account update can't be performed. There is no way to use Association Identifier that doesn't exist</td>          </tr>          <tr>             <td>empty</td>             <td>u-id value that is already associated with other Iris Account</td>             <td>Association and Account update can't be performed. There is no way to use Associated Identifier that is associated with other Iris Account</td>          </tr>          <tr>             <td>empty</td>             <td>Existing u-id value</td>             <td>Update Iris Account with association to new u-id</td>          </tr>          <tr>             <td>existing u-id</td>             <td>Nonexistent u-id value</td>             <td>Association and Account update can't be performed. There is no way to use Association Identifier that doesn't exist</td>          </tr>          <tr>             <td>existing u-id</td>             <td>u-id value that is already associated with other Iris Account</td>             <td>Association and Account update can't be performed. There is no way to use Associated Identifier that is associated with other Iris Account</td>          </tr>          <tr>             <td>existing u-id with assigned Applications on Account</td>             <td>new existing u-id</td>             <td>Association and Account update can't be performed. There is no way to reassign u-id with already assigned Applications on Iris Account</td>          </tr>          <tr>             <td>existing u-id with assigned Applications on Account's Locations</td>             <td>new existing u-id</td>             <td>Association and Account update can't be performed. There is no way to reassign u-id with already assigned Applications on Iris Account's Locations</td>          </tr>          <tr>             <td>existing u-id</td>             <td>new existing u-id</td>             <td>Update Iris Account with association to new u-id</td>          </tr>          <tr>             <td>existing u-id</td>             <td>same existing u-id</td>             <td>Update Iris Account without following association. Association already exists</td>          </tr>          <tr>             <td>value in Iris Account ID format</td>             <td>same value in format of Iris Account ID</td>             <td>Update Iris Account without following association. Association already exists</td>          </tr>          <tr>             <td>existing u-id</td>             <td>value in Iris Account ID format</td>             <td>Association and Account update can't be performed. There is no way to change Association Identifier directly without removing a previous association</td>          </tr>          <tr>             <td>empty</td>             <td>value in Iris Account ID format</td>             <td>Association and Account update can't be performed. There is no way explicitly to set Association Identifier in Iris Account ID format</td>          </tr>          <tr>             <td>value in Iris Account ID format</td>             <td>other value in Iris Account ID format</td>             <td>Association and Account update can't be performed. There is no way to set differ Association Identifier in Iris Account ID format</td>          </tr>          <tr>             <td>value in Iris Account ID format or u-id with assigned Applications on Account or Locations</td>             <td>empty</td>             <td>Association and Account update can't be performed. There is no way to remove association with existing Applications on Account or Locations</td>          </tr>          <tr>             <td>value in Iris Account ID format or u-id</td>             <td>empty</td>             <td>Update Iris Account. Association is removed</td>          </tr>       </tbody>    </table>    <br>  Field &lt;CustomerSegment&gt; is optional and can have following values:  <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">     <tbody>        <tr>           <th>Value</th>           <th>Description</th>        </tr>        <tr>           <td>EnterpriseTelephony</td>           <td>Allows Origination and Termination products to be assigned to account, not allows UC trunking</td>        </tr>        <tr>           <td>UC</td>           <td>Allows UC trunking product and blocks Origination and Termination products</td>        </tr>        <tr>           <td>Wholesale</td>           <td>Allows Origination and Termination products to be assigned to account, not allows UC trunking</td>        </tr>        <tr>           <td>Trial</td>           <td>Does not limit products assignement. Allows to switch to EnterpriseTelephony, UC or Wholesale customer segment, but reverse transition to Trial from any other explicit segment is forbidden.</td>        </tr>        <tr>           <td>Wholesale-implied</td>           <td>Is returned if account has Origination or Termination product and no explicit customer segment set. On update this option is ignored</td>        </tr>        <tr>           <td>UC-implied</td>           <td>Is returned if account has UC product and no explicit customer segment set. On update this option is ignored</td>        </tr>     </tbody>  </table>  <br>  <ul>      <li>If the Customer Segment has never been explicitly set, or has been explicitly set to Trial, then you may set the Customer Segment to Wholesale, UC, or Enterprise Telephony, depending on the products assigned to the account.</li>      <li>If the Customer Segment shows up as Wholesale-implied, or UC-implied (in the GET response), it means the Customer Segment has never been explicitly set for the account.</li>      <li>If an account has the UcTrunking product, the Customer Segment can only be set to UC or Trial.</li>      <li>If an account has the Origination and/or Termination products, the Customer Segment cannot be set to UC.</li>      <li>If the account has never had a TN assigned, the Customer Segment may be changed according to the rules above. Otherwise (if the account has had a TN assigned), if the Customer Segment has been explicitly set to Wholesale, Enterprise Telephony, or UC, it cannot be changed.</li>  </ul>",
        "operationId" : "updatePomAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PomAccount"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PomAccountResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AccountResponse>    <Account>        <AccountId>14</AccountId>        <AssociatedCatapultAccount>u-ertyhgfd12dcvdhnboklk</AssociatedCatapultAccount>        <GlobalAccountNumber>globalAccount</GlobalAccountNumber>        <CompanyName>CWI Hosting</CompanyName>        <AccountType>Business</AccountType>        <NenaId></NenaId>        <CustomerSegment>Trial</CustomerSegment>        <Tiers>            <Tier>0</Tier>        </Tiers>        <Address>            <HouseNumber>904</HouseNumber>            <HouseSuffix>E</HouseSuffix>            <PreDirectional></PreDirectional>            <StreetName>Anson</StreetName>            <StreetSuffix>St</StreetSuffix>            <PostDirectional></PostDirectional>            <AddressLine2></AddressLine2>            <City>Marshalltown</City>            <StateCode>IA</StateCode>            <Zip>50158</Zip>            <PlusFour></PlusFour>            <County></County>            <Country>United States</Country>            <AddressType>Billing</AddressType>        </Address>        <Contact>            <FirstName>Sanjay</FirstName>            <LastName>Rao</LastName>            <Phone>9195441234</Phone>            <Email>srao@bandwidth.com</Email>        </Contact>        <AltSpid>X455</AltSpid>        <SPID>9999</SPID>        <PortCarrierType>WIRELINE</PortCarrierType>    </Account></AccountResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AccountResponse>    <ResponseStatus>        <ErrorCode>12112</ErrorCode>        <Description>The verifiable address closest to the submitted access is included below. Please use that street address or another valid street address in your next request</Description>    </ResponseStatus>    <AddressErrorDescription>        <AddressInconsistencies>Some adjustments are required to allow the address to pass geocoding:Specified value - Street Name : \"ANSUN\" Valid value - \"ANSON\"</AddressInconsistencies>        <RecommendedAddress>            <AddressLine1>904 E ANSON ST</AddressLine1>            <HouseNumber>904</HouseNumber>            <PreDirectional>E</PreDirectional>            <StreetName>ANSON</StreetName>            <StreetSuffix>ST</StreetSuffix>            <City>MARSHALLTOWN</City>            <StateCode>IA</StateCode>            <Zip>50158</Zip>            <PlusFour>3522</PlusFour>            <Country>US</Country>        </RecommendedAddress>    </AddressErrorDescription>    <Account>        <GlobalAccountNumber>asd</GlobalAccountNumber>        <CompanyName>Nico Trading</CompanyName>        <AccountType>Business</AccountType>        <Tiers>            <Tier>0</Tier>        </Tiers>        <Address>            <HouseNumber>904</HouseNumber>            <HouseSuffix>E</HouseSuffix>            <PreDirectional></PreDirectional>            <StreetName>Ansun</StreetName>            <StreetSuffix>St</StreetSuffix>            <PostDirectional></PostDirectional>            <AddressLine2></AddressLine2>            <City>Marshalltown</City>            <StateCode>IA</StateCode>            <Zip>50158</Zip>            <PlusFour></PlusFour>            <County></County>            <Country>United States</Country>            <AddressType>Billing</AddressType>        </Address>        <Contact>            <FirstName>First</FirstName>            <LastName>Last</LastName>            <Phone>9195551213</Phone>            <Email>noone@bandy.com</Email>        </Contact>        <AltSpid>X455</AltSpid>        <PortCarrierType>WIRELESS</PortCarrierType>    </Account></AccountResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "savePomAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/PomAccount"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PomAccountResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deletePomAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PomAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getAllRegions",
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "reprovisionTns",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TelephoneNumbers"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnsReprovisioningResponse"
                }
              }
            }
          }
        }
      }
    },
    "/search" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "accountsSeacrch",
        "parameters" : [ {
          "name" : "TN",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "host",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "discover what is currently enabled on the account",
        "operationId" : "getProducts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountProductsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><AccountProductsResponse>    <Products>        <Product>            <Name>Termination</Name>            <Features>                <Feature>TermHttpVoice</Feature>            </Features>        </Product>        <Product>            <Name>VirtualInventory</Name>        </Product>        <Product>            <Name>TollFree</Name>        </Product>        <Product>            <Name>Origination</Name>            <Features>                <Feature>CallForwarding</Feature>                <Feature>DlDa</Feature>                <Feature>CNAM</Feature>                <Feature>OrigHttpVoice</Feature>            </Features>        </Product>        <Product>            <Name>MESSAGING</Name>            <Features>              <Feature>SMS</Feature>              <Feature>MMS</Feature>              <Feature>HTTP</Feature>              <Feature>HTTPV2</Feature>              <Feature>TollFree</Feature>            </Features>        </Product>        <Product>            <Name>NumberManagement</Name>            <Features>              <Feature>ORDERING</Feature>              <Feature>LNP</Feature>              <Feature>EXTERNAL_TNS</Feature>              <Feature>PROTECTED_TNS</Feature>              <Feature>TN_ASSIGNMENT</Feature>              <Feature>RESERVATION</Feature>              <Feature>LSR</Feature>            </Features>        </Product>    </Products></AccountProductsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Add a new product to the account, features can be added together with product",
        "operationId" : "createAccountProduct",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountProduct"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountProductResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/{productName}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAccountProduct",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountProductResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "updateAccountProduct",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountProduct"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountProductResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/addresses" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "GET is used to retrieve all addresses.",
        "operationId" : "getAddresses",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "e911locationid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "suggestions",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - the addresses retrieval request will return a list of all addresses having specified type.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AddressesResponse> <TotalCount>1</TotalCount> <Links> <first>Link=&lt;http://admin.localhost:8080/api/accounts/8000259/addresses?type=e911&amp;page=1&amp;size=500&gt;;rel=\"first\";</first> <next>Link=&lt;http://localhost:8080/api/accounts/8000259/addresses?type=E911&amp;page=501&amp;size=500&gt;;rel=\"next\";</next> </Links> <Addresses> <Address> <HouseNumber>207</HouseNumber> <HouseSuffix></HouseSuffix> <PreDirectional></PreDirectional> <StreetName>Elmastar</StreetName> <StreetSuffix>AlternateStar</StreetSuffix> <PostDirectional></PostDirectional> <AddressLine2></AddressLine2> <City>Carpinteriaaly</City> <StateCode>NY</StateCode> <Zip>93019</Zip> <PlusFour></PlusFour> <County></County> <Country>United States</Country> <AddressType>E911</AddressType> <EndpointCount>2</EndpointCount> <ValidationStatus>VALID</ValidationStatus> </Address> </Addresses> </AddressesResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found - if the account specified does not exist or is locked or there are no addresses for specified search criteria it will result in a not found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AddressesResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </AddressesResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/aeuis/{identifier}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "GET is used to retrieve a detailed information of Alternate end user identifier by acid.",
        "operationId" : "getAEUI",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "identifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - will return full information about AEUI for the specified acid.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlternateEndUserIdentifierResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AlternateEndUserIdentifierResponse> <AlternateEndUserIdentifier> <Identifier>DavidAcid</Identifier> <CallbackNumber>8042105760</CallbackNumber> <E911> <CallerName>David</CallerName> <Address> <HouseNumber>900</HouseNumber> <HouseSuffix></HouseSuffix> <PreDirectional></PreDirectional> <StreetName>MAIN CAMPUS</StreetName> <StreetSuffix>DR</StreetSuffix> <AddressLine2></AddressLine2> <City>RALEIGH</City> <StateCode>NC</StateCode> <Zip>27606</Zip> <PlusFour>5214</PlusFour> <Country>United States</Country> <AddressType>Billing</AddressType> </Address> <EmergencyNotificationGroup> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> <Description>Building 5, 5th Floor.</Description> </EmergencyNotificationGroup> </E911> </AlternateEndUserIdentifier> </AlternateEndUserIdentifierResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found - if the account specified does not exist or is locked or there are no AEUI that corresponds to specified acid it will result in a \"NOT FOUND\" response.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AlternateEndUserIdentifierResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </AlternateEndUserIdentifierResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/aeuis" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "GET is used to retrieve all Alternate end user identifiers.",
        "operationId" : "getAEUIS_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        },{
          "name" : "aeui",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "callback",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pidfloenabledonly",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "suggestions",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "callername",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "e911addressId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - the AEUIs retrieval request will return a list of all AEUIs.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlternateEndUserIdentifiersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AlternateEndUserIdentifiersResponse> <TotalCount>2</TotalCount> <Links> <first>Link=&lt;http://localhost:8080/iris/accounts/14/aeuis?page=1&amp;size=500&gt;;rel=\"first\";</first> </Links> <AlternateEndUserIdentifiers> <AlternateEndUserIdentifier> <Identifier>DavidAcid</Identifier> <CallbackNumber>8042105760</CallbackNumber> <EmergencyNotificationGroup> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> <Description>Building 5, 5th Floor.</Description> </EmergencyNotificationGroup> </AlternateEndUserIdentifier> <AlternateEndUserIdentifier> <Identifier>JohnAcid</Identifier> <CallbackNumber>8042105618</CallbackNumber> </AlternateEndUserIdentifier> </AlternateEndUserIdentifiers> </AlternateEndUserIdentifiersResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found - if the account specified does not exist or is locked or there are no AEUIs for specified search criteria it will result in a \"NOT FOUND\" response.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AlternateEndUserIdentifiersResponse> <ResponseStatus> <ErrorCode>12087</ErrorCode> <Description>Alternate End User Identifiers were not found.</Description> </ResponseStatus> </AlternateEndUserIdentifiersResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/analytics/messaging/mdrs" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve messaging analytics, where the Message Detail Record (MDRs) are chosen based on the search parameters provided in the API Call.",
        "operationId" : "getAccountAnalyticsMessagingMdrs",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "messageId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceTn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destinationTn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toDateTime",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "messageStatus",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "errorCode",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageToken",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the MDR query provides information about messaging analytic on account. Links to assist in pagination are also provided.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<MessageSearchResponse>    <TotalCount>16</TotalCount>    <MDRList>        <MDR>            <MessageId>5ec299de91cfaadfe7a19dda</MessageId>            <AccountId>120</AccountId>            <DestinationTn>+15540117618</DestinationTn>            <SourceTn>+11639010043</SourceTn>            <MessageStatus>DELIVERED</MessageStatus>            <MessageDirection>OUTBOUND</MessageDirection>            <MessageType>sms</MessageType>            <SegmentCount>5</SegmentCount>            <ErrorCode>3131</ErrorCode>            <ReceiveTime>2020-05-27T17:24:56.000Z</ReceiveTime>        </MDR>        <MDR>            <MessageId>5ec299de91cfaadfe7a19dda</MessageId>            <AccountId>120</AccountId>            <DestinationTn>+15540117618</DestinationTn>            <SourceTn>+11639010043</SourceTn>            <MessageStatus>DELIVERED</MessageStatus>            <MessageDirection>OUTBOUND</MessageDirection>            <MessageType>sms</MessageType>            <SegmentCount>5</SegmentCount>            <ErrorCode>3131</ErrorCode>            <ReceiveTime>2020-05-27T17:24:56.000Z</ReceiveTime>        </MDR>    </MDRList></MessageSearchResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - Account has no messaging analytics feature assigned",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><MessageSearchResponse>    <ResponseStatus>        <ErrorCode>12168</ErrorCode>        <Description>Account 9999999 has no messaging analytics feature assigned</Description>    </ResponseStatus></MessageSearchResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden - Loged in user has no requested account assigned",
            "content" : {
              "application/xml" : { }
            }
          },
          "503" : {
            "description" : "Service Temporarily Unavailable - Message search api temporary unavailable",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><MessageSearchResponse>    <ResponseStatus>        <ErrorCode>12169</ErrorCode>        <Description>Message search api temporary unavailable</Description>    </ResponseStatus></MessageSearchResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/applications" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Lists all Applications<br><p><br>  <ul>    <li> CallbackCreds Password is not returned in response for security reasons </li>  </ul></p>",
        "operationId" : "getAllApplications",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ApplicationProvisioningResponse> <ApplicationList> <Application> <ApplicationId>2cfcb382-161c-46d4-8c67-87ca09a72c85</ApplicationId> <ServiceType>Messaging-V2</ServiceType> <AppName>app1</AppName> <MsgCallbackUrl>http://a.com</MsgCallbackUrl> </Application> <Application> <ApplicationId>0cb0112b-5998-4c81-999a-0d3fb5e3f8e2</ApplicationId> <ServiceType>Voice-V2</ServiceType> <AppName>app2</AppName> <CallInitiatedCallbackUrl>http://b.com</CallInitiatedCallbackUrl> <CallbackCreds> <UserId>15jPWZmXdm</UserId> </CallbackCreds> <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl> <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod> <CallInitiatedFallbackCreds> <UserId>login2</UserId> </CallInitiatedFallbackCreds> <CallbackTimeout>20</CallbackTimeout> </Application> </ApplicationList> </ApplicationProvisioningResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Create an Application, CallbackUrl field is deprecated field, use MsgCallbackUrl instead",
        "operationId" : "createApplication",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<!--Messaging-V2 application--> <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ApplicationProvisioningResponse> <Application> <ApplicationId>d4d1b41d-4c05-47d0-838a-34e4f14e4e3e</ApplicationId> <ServiceType>Messaging-V2</ServiceType> <AppName>EBVICs</AppName> <MsgCallbackUrl>http://example.com</MsgCallbackUrl> <CallbackCreds> <UserId>15jPWZmXdm</UserId> </CallbackCreds> </Application> </ApplicationProvisioningResponse> <!--Voice-V2 application--> <ApplicationProvisioningResponse> <Application> <ApplicationId>d3e418e9-1833-49c1-b6c7-ca1700f79586</ApplicationId> <ServiceType>Voice-V2</ServiceType> <AppName>v1</AppName> <CallInitiatedCallbackUrl>https://a.com</CallInitiatedCallbackUrl> <CallInitiatedMethod>GET</CallInitiatedMethod> <CallStatusCallbackUrl>https://b.com</CallStatusCallbackUrl> <CallStatusMethod>GET</CallStatusMethod> <CallbackCreds> <UserId>login123</UserId> </CallbackCreds> <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl> <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod> <CallInitiatedFallbackCreds> <UserId>login2</UserId> </CallInitiatedFallbackCreds> <CallbackTimeout>20</CallbackTimeout> </Application> </ApplicationProvisioningResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/applications/{applicationId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve an Application",
        "operationId" : "getApplicationById",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "applicationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <!--Messaging-V2 application example--> <ApplicationProvisioningResponse> <Application> <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId> <ServiceType>Messaging-V2</ServiceType> <AppName>qMmmTT</AppName> <MsgCallbackUrl>http://example.com</MsgCallbackUrl> <CallbackCreds> <UserId>15jPWZmXdm</UserId> </CallbackCreds> </Application> </ApplicationProvisioningResponse> <!--Voice-V2 application example--> <ApplicationProvisioningResponse> <Application> <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId> <ServiceType>Voice-V2</ServiceType> <AppName>qMmmTT</AppName> <CallInitiatedCallbackUrl>http://example.com</CallInitiatedCallbackUrl> <CallbackCreds> <UserId>15jPWZmXdm</UserId> </CallbackCreds> <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl> <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod> <CallInitiatedFallbackCreds> <UserId>login2</UserId> </CallInitiatedFallbackCreds> <CallbackTimeout>20</CallbackTimeout> </Application> </ApplicationProvisioningResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Update an Application. <br> <ul>    <li> ServiceType can have value of Voice-V2 or Messaging-V2 but it can't be changed for existing application </li> </ul>     <p>For ServiceType of Messaging-V2 <br>       <ul>         <li> MsgCallbackUrl (CallbackUrl - is deprecated) is required </li>       </ul>     </p>     <p>For ServiceType of Voice-V2       <ul>         <li> CallInitiatedCallbackUrl - required for voice </li>         <li> CallInitiatedMethod - optional for voice [POST|GET] default is POST if not specified</li>         <li> CallStatusCallbackUrl - optional for voice </li>         <li> CallStatusMethod - optional for voice [POST|GET] default is POST if not specified </li>         <li> CallInitiatedFallbackUrl - optional for voice </li>         <li> CallInitiatedFallbackMethod - optional for voice [POST|GET] default is POST if not specified </li>         <li> CallbackTimeout - optional for voice. Range from 1 to 25 seconds. </li>       </ul>     </p>     <p>CallbackCreds - can only be specified by External users       <ul>          <li> CallbackCreds with same UserId but different Password will change password</li>          <li> If you want credentials, both UserId and Password must be specified.</li>          <li> If you do not want passwords, CallbackCreds should be omitted entirely.</li>          <li> UserId and Password should have length between 6 and 63 symbols.</li>       </ul>     </p>     <p>CallInitiatedFallbackCreds - can only be specified by External users      <ul>         <li> If you want credentials, both UserId and Password must be specified.</li>         <li> If you do not want passwords, CallInitiatedFallbackCreds should be omitted entirely.</li>         <li> UserId and Password should have length between 6 and 63 symbols.</li>       </ul>     </p>",
        "operationId" : "updateApplication",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "applicationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ApplicationProvisioningResponse> <Application> <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId> <ServiceType>Voice-V2</ServiceType> <AppName>EBVICs</AppName> <CallInitiatedCallbackUrl>https://example2.com</CallInitiatedCallbackUrl> <CallInitiatedMethod>[GET|POST]</CallInitiatedMethod> <CallStatusCallbackUrl>https://example3.com</CallStatusCallbackUrl> <CallStatusMethod>[GET|POST]</CallStatusMethod> </Application> </ApplicationProvisioningResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "Delete an Application. <br>An Application cannot be removed from an account if that Application is referenced by any Location associated with the account.<br>",
        "operationId" : "deleteApplication",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "applicationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "external" ],
        "description" : "Patch update an Application<br> <ul>  <li> CallStatusCallbackUrl can be removed by settings its value to 'remove'  </li> </ul>",
        "operationId" : "patchApplication",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "applicationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ApplicationProvisioningResponse> <Application> <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId> <ServiceType>Voice-V2</ServiceType> <AppName>EBVICs</AppName> <CallInitiatedCallbackUrl>https://example2.com</CallInitiatedCallbackUrl> <CallInitiatedMethod>[GET|POST]</CallInitiatedMethod> <CallStatusCallbackUrl>https://example3.com</CallStatusCallbackUrl> <CallStatusMethod>[GET|POST]</CallStatusMethod> </Application> </ApplicationProvisioningResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/applications/{applicationId}/associatedsippeers" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve a list of sippeers, associated with application",
        "operationId" : "getAssociatedSippeersByApplicationIdId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "applicationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssociatedSipPeersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AssociatedSipPeersResponse> <AssociatedSipPeers> <AssociatedSipPeer> <SiteId>482</SiteId> <SiteName>site_e867f</SiteName> <PeerId>500018</PeerId> <PeerName>sippeer-e867f</PeerName> </AssociatedSipPeer> <AssociatedSipPeer> <SiteId>483</SiteId> <SiteName>site_e867d</SiteName> <PeerId>500019</PeerId> <PeerName>sippeer-e867d</PeerName> </AssociatedSipPeer> </AssociatedSipPeers> </AssociatedSipPeersResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AssociatedSipPeersResponse> <ResponseStatus> <ErrorCode>12103</ErrorCode> <Description> Current 1 Account have no Catapult association </Description> </ResponseStatus> </AssociatedSipPeersResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AssociatedSipPeersResponse> <ResponseStatus> <ErrorCode>13629</ErrorCode> <Description> Application with id 'non_existing' not found </Description> </ResponseStatus> </AssociatedSipPeersResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/a2pcampaignids/{id}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve the information for a specific Campaign ID.",
        "operationId" : "getAdminData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <A2pCampaignId>        <CampaignId>Campaign 1</CampaignId>        <CampaignIdDescription>Some description</CampaignIdDescription>        <AccountId>1</AccountId>    </A2pCampaignId></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Campaign ID not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>      <ErrorCode>12114</ErrorCode>      <Description>A2P Campaign Id 'someCampaignId' does not exist</Description></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Create a Campaign ID or update its description. Campaign ID and Description are required. Account ID must be empty or an existing Account ID. <br>The Campaign ID should be:<ul>    <li>equal to an {id} parameter in URL</li>    <li>globally unique</li>    <li>a non-empty string no longer than 64 characters long</li>    <li>only alphanumeric values, dashes, underscores, singular whitespaces and dots are allowed</li>    <li>whitespaces are only allowed inside the string, and they should not be consecutive</li></ul>",
        "operationId" : "updateAdminData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/A2pCampaignId"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Campaign ID updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <A2pCampaignId>        <CampaignId>Campaign 1</CampaignId>        <CampaignIdDescription>Some description</CampaignIdDescription>        <AccountId>1</AccountId>    </A2pCampaignId></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Campaign ID updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <A2pCampaignId>        <CampaignId>Campaign 1</CampaignId>        <CampaignIdDescription>Some description</CampaignIdDescription>        <AccountId>1</AccountId>    </A2pCampaignId></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error. Possible reasons:<ul>    <li>Code 12820: Campaign ID in the link and in the body is not the same.</li>    <li>Code 12822: A2P Campaign ID 'Campaign/1' is not valid. Needs to be between 1 and 64 characters.    Only alphanumeric values, dashes, underscores, singular whitespaces and dots are allowed.    Whitespaces at the beginning or at the end of string are not allowed.</li>    <li>Code 12836:The provided Account Id '**' is not a valid Account Id.</ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12822</ErrorCode>        <Description>A2P Campaign ID 'Campaign/1' is not valid. Needs to be between 1 and 64 characters.            Only alphanumeric values, dashes, underscores, singular whitespaces and dots are allowed.            Whitespaces at the beginning or at the end of string are not allowed.        </Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete Campaign ID.",
        "operationId" : "deleteAdminData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Campaign ID deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "empty response"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Campaign ID not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "empty response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/a2pcampaignids" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAllAdminData",
        "parameters" : [ {
          "name" : "nameFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List the collection of valid Campaign IDs",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <A2pCampaignIdList>        <A2pCampaignId>            <CampaignId>Campaign 1</CampaignId>            <CampaignIdDescription>Some description</CampaignIdDescription>        </A2pCampaignId>        <A2pCampaignId>            <CampaignId>Yet_another_Campaign</CampaignId>            <CampaignIdDescription>Yet another description</CampaignIdDescription>            <AccountId>1</AccountId>        </A2pCampaignId>    </A2pCampaignIdList></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/a2pclasses/{id}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get A2P Class.",
        "operationId" : "getAdminData_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return A2P Class",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <A2pClass>        <MessageClass>TestClass</MessageClass>        <ClassDescription>This is a test.</ClassDescription>    </A2pClass></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A2P Class not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12114</ErrorCode>        <Description>A2P Class with Id 'TestClass' not found</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Create or update A2P Class.",
        "operationId" : "updateAdminData_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/A2pClass"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A2P Class updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <A2pClass>        <MessageClass>Test Message_Class</MessageClass>        <ClassDescription>Test Class Description</ClassDescription>    </A2pClass></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "A2P Class created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <A2pClass>        <MessageClass>Test Message_Class</MessageClass>        <ClassDescription>Test Class Description</ClassDescription>    </A2pClass></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12821</ErrorCode>        <Description>Message Class in the link is not the same as in the request body.</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete A2P Class.",
        "operationId" : "deleteAdminData_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A2P Class deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "A2P Class not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/admin/data/a2pclasses" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get all A2P Classes.",
        "operationId" : "getAllAdminData_1",
        "parameters" : [ {
          "name" : "nameFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return existing A2P Classes",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <A2pClassList>        <A2pClass>            <MessageClass>TestClass</MessageClass>            <ClassDescription>This is a test.</ClassDescription>        </A2pClass>        <A2pClass>            <MessageClass>Test_Class</MessageClass>            <ClassDescription>Another test.</ClassDescription>        </A2pClass>    </A2pClassList></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/breakoutcountries/{breakOutCountry}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get Break Out Country.",
        "operationId" : "getAdminData_2",
        "parameters" : [ {
          "name" : "breakOutCountry",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return Break Out Country settings",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminDataResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Country>        <Name>Canada</Name>        <Alpha3Code>CAN</Alpha3Code>        <CountryCode>1</CountryCode>        <PrefixDigits>            <Digits>613</Digits>            <Digits>438</Digits>            <Digits>343</Digits>        </PrefixDigits>        <AuthRequired>true</AuthRequired>        <BillingEnabled>false</BillingEnabled>    </Country></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Break Out Country does not exist",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12986</ErrorCode>        <Description>The 3 letter country code CAR is not recognized as a valid country</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Create or update Break Out Country settings. The \"Name\" field is optional and will not be retained. Validations:<br> - The 3 letter country code should belong to an existing country - The Break Out Country in the URL should match the 3 letter country code in the payload - \"CountryCode\" field should consist of 1-3 digits - Each \"Digits\" field should consist of 1-4 digits",
        "operationId" : "updateAdminData_2",
        "parameters" : [ {
          "name" : "breakOutCountry",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/BreakOutCountry"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Break Out Country was updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Country>        <Name>Canada</Name>        <Alpha3Code>CAN</Alpha3Code>        <CountryCode>1</CountryCode>        <PrefixDigits>            <Digits>613</Digits>            <Digits>438</Digits>            <Digits>343</Digits>        </PrefixDigits>        <AuthRequired>true</AuthRequired>        <BillingEnabled>false</BillingEnabled>    </Country></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Break Out Country was created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Country>        <Name>Canada</Name>        <Alpha3Code>CAN</Alpha3Code>        <CountryCode>1</CountryCode>        <PrefixDigits>            <Digits>613</Digits>            <Digits>438</Digits>            <Digits>343</Digits>        </PrefixDigits>        <AuthRequired>true</AuthRequired>        <BillingEnabled>false</BillingEnabled>    </Country></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12991</ErrorCode>        <Description>The Country in the URL is different than the 3 letter country code in the payload</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Break Out Country does not exist",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12986</ErrorCode>        <Description>The 3 letter country code CAR is not recognized as a valid country</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete Break Out Country.",
        "operationId" : "deleteAdminData_2",
        "parameters" : [ {
          "name" : "breakOutCountry",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Break Out Country deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Break Out Country does not exist",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12986</ErrorCode>        <Description>The 3 letter country code CAR is not recognized as a valid country</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/breakoutcountries" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all existing Break Out Countries.",
        "operationId" : "getAllAdminData_2",
        "responses" : {
          "200" : {
            "description" : "Return existing Break Out Countries.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <BreakOutCountries>        <Country>            <Name>Canada</Name>            <Alpha3Code>CAN</Alpha3Code>            <CountryCode>1</CountryCode>            <PrefixDigits>                <Digits>613</Digits>                <Digits>438</Digits>                <Digits>343</Digits>            </PrefixDigits>            <AuthRequired>true</AuthRequired>            <BillingEnabled>false</BillingEnabled>        </Country>        <Country>            <Name>Ukraine</Name>            <Alpha3Code>UKR</Alpha3Code>            <CountryCode>380</CountryCode>            <PrefixDigits>                <Digits>43</Digits>                <Digits>123</Digits>                <Digits>543</Digits>            </PrefixDigits>            <AuthRequired>false</AuthRequired>            <BillingEnabled>true</BillingEnabled>        </Country>    </BreakOutCountries></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{id}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAdminData_6",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "updateAdminData_10",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SbcNodeGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteAdminData_9",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/bwspids" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get all bwspids",
        "operationId" : "getAllAdminData_3",
        "parameters" : [ {
          "name" : "nameFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return existing Bwspids",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <BwspidSystemValues>        <BwspidSystemValue>            <Id>2</Id>            <RouteType>onNet</RouteType>            <Priority>1</Priority>            <Spid>E830</Spid>            <Type>NNID</Type>            <Alias>BW ESPID E830 Route</Alias>        </BwspidSystemValue>        <BwspidSystemValue>            <Id>4</Id>            <RouteType>onNet</RouteType>            <Priority>2</Priority>            <Spid>X641</Spid>            <Type>NPAC</Type>            <Alias>Bandwidth ALT-SPID</Alias>        </BwspidSystemValue>    </BwspidSystemValues></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/bwspids/{id}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get Bwspid",
        "operationId" : "getAdminData_3",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return Bwspid",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <BwspidSystemValue>        <Id>2</Id>        <RouteType>onNet</RouteType>        <Priority>1</Priority>        <Spid>E830</Spid>        <Type>NNID</Type>        <Alias>BW ESPID E830 Route</Alias>    </BwspidSystemValue></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bwspid not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12098</ErrorCode>        <Description>Bwspid value Id '1111' does not exist</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/countries/{countryId}" : {
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Update settings for a country.&lt;Country&gt; can have the following values:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">    <tbody>        <tr>            <th>Value></th>            <th>Description</th>        </tr>        <tr>            <td>CountryName</td>            <td>Name of the country. This field is required and is not updatable via this API.</td>        </tr>        <tr>            <td>ThreeLetterCode</td>            <td>Three letter code of the country. This field is required and is not updatable via this API.</td>        </tr>        <tr>            <td>TwoLetterCode</td>            <td>Two letter code of the country. This field is required and is not updatable via this API.</td>        </tr>        <tr>            <td>Supported</td>            <td>Determines whether or not Bandwidth supports numbers from this country. This field is required.</td>        </tr>    </tbody>    </table>",
        "operationId" : "updateAdminData_4",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Country"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Country settings updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Country>        <CountryName>Afghanistan</CountryName>        <Supported>false</Supported>        <ThreeLetterCode>AFG</ThreeLetterCode>        <TwoLetterCode>AF</TwoLetterCode>    </Country></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>13015</ErrorCode>        <Description>The Countries API only supports changing the supported value</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/countries" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get details on all countries in the system",
        "operationId" : "getAllAdminData_4",
        "responses" : {
          "200" : {
            "description" : "Returns details for countries",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Countries>        <Country>            <Id>228</Id>            <CountryName>Afghanistan</CountryName>            <Supported>false</Supported>            <ThreeLetterCode>AFG</ThreeLetterCode>            <TwoLetterCode>AF</TwoLetterCode>        </Country>        <Country>            <Id>229</Id>            <CountryName>Albania</CountryName>            <Supported>false</Supported>            <ThreeLetterCode>ALB</ThreeLetterCode>            <TwoLetterCode>AL</TwoLetterCode>        </Country>    </Countries></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/internationalvendorsettings/{vendorId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get current settings for an international vendor.",
        "operationId" : "getAdminData_4",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns settings for an international vendor",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <InternationalVendor>        <VendorId>32</VendorId>        <Supported>true</Supported>    </InternationalVendor></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "International settings not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Update settings for an international vendor.&lt;InternationalVendor&gt; can have the following values:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">    <tbody>        <tr>            <th>Value</th>            <th>Description</th>        </tr>        <tr>            <td>VendorId</td>            <td>Id of the vendor that these international settings apply to. This field is required.</td>        </tr>        <tr>            <td>Supported</td>            <td>Specifies whether the vendor is currently a supported international vendor.</td>        </tr>    </tbody>    </table>    ",
        "operationId" : "updateAdminData_5",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/InternationalVendor"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "International vendor settings updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Vendor>        <VendorId>32</VendorId>        <Supported>false</Supported>    </Vendor></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "International vendor settings created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Vendor>        <VendorId>34</VendorId>        <Supported>false</Supported>    </Vendor></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12734</ErrorCode>        <Description>Vendor ID in the link and in the body is not the same.</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete international vendor settings.",
        "operationId" : "deleteAdminData_4",
        "parameters" : [ {
          "name" : "vendorId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "International vendor settings deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/internationalvendorsettings" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get international-specific settings for international vendors",
        "operationId" : "getAllAdminData_5",
        "responses" : {
          "200" : {
            "description" : "Returns international-specific settings for international vendors",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <InternationalVendors>        <InternationalVendor>            <VendorId>47</VendorId>            <Supported>false</Supported>        </InternationalVendor>        <InternationalVendor>            <VendorId>32</VendorId>            <VendorName> Connexstar</VendorName>        </InternationalVendor>    </InternationalVendors></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create settings for an international vendor.<br/>&lt;InternationalVendor&gt; can have the following values:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">    <tbody>        <tr>            <th>Value</th>            <th>Desription</th>        </tr>        <tr>            <td>VendorId</td>            <td>Id of the vendor that these international settings apply to. This field is required.</td>        </tr>        <tr>            <td>Supported</td>            <td>Specifies whether the vendor is currently a supported international vendor.</td>        </tr>    </tbody>    </table>    ",
        "operationId" : "createAdminData",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/InternationalVendor"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "International for vendor created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <InternationalVendor>        <VendorId>32</VendorId>        <Supported>true</Supported>    </InternationalVendor></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12991</ErrorCode>        <Description>Vendor with id=32 does not exist.</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{l3ErrorCode}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getAdminData_5",
        "parameters" : [ {
          "name" : "l3ErrorCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "updateAdminData_6",
        "parameters" : [ {
          "name" : "l3ErrorCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Level3PortingErrorSettingPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteAdminData_5",
        "parameters" : [ {
          "name" : "l3ErrorCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/blockedaccount/{accountId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "This resource retrieves information about pom.",
        "operationId" : "getAdminData_7",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><PomAccountResponse>    <PomAccount>        <Type>BLOCKED</Type>        <AccountId>20</AccountId>    </PomAccount></PomAccountResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Account does not have a POM configuration.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><PomAccountResponse>    <ResponseStatus>        <ErrorCode>12020</ErrorCode>        <Description>Account '120' does not exist</Description>    </ResponseStatus></PomAccountResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Allows the user update the account pom configuration.",
        "operationId" : "updateAdminData_3",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessagingBlockedAccountId"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Pom Account Configuration has been updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><PomAccountResponse>    <PomAccount>        <Type>GOOGLE</Type>        <AccountId>1</AccountId>    </PomAccount></PomAccountResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Some information is not correct.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><PomAccountResponse>    <ResponseStatus>        <ErrorCode>12138</ErrorCode>        <Description>Type has an invalid value. Please refer to acceptable PomType values.</Description>    </ResponseStatus></PomAccountResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Pom account configuration not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><PomAccountResponse>    <ResponseStatus>        <ErrorCode>4022</ErrorCode>        <Description>Account '2' does not exist or is locked</Description>    </ResponseStatus></PomAccountResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Removing pom account configuration.",
        "operationId" : "deleteAdminData_3",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User has been successfully removed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "User was not found.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/admin/data/nnroutes/{id}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get NNRoute.",
        "operationId" : "getAdminData_8",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return NNRoute",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <NNRoute>        <Nnid>1234567</Nnid>        <Espid>5E23</Espid>        <Name>routeName1</Name>        <DeliveryNetwork>Bandwidth</DeliveryNetwork>        <ProvisionerIds>            <ProvisionerId>bandwidth</ProvisionerId>            <ProvisionerId>ringcentral</ProvisionerId>        </ProvisionerIds>    </NNRoute></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NNRoute not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Allows to create or update NNRoute.",
        "operationId" : "updateAdminData_8",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/NnRoute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "NNRoute updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <NNRoute>      <Nnid>1234567</Nnid>      <Espid>5E23</Espid>      <Name>routeName1</Name>      <DeliveryNetwork>Bandwidth</DeliveryNetwork>      <TrafficType>A2P</TrafficType>      <ProvisionerIds>        <ProvisionerId>bandwidth</ProvisionerId>        <ProvisionerId>ringcentral</ProvisionerId>      </ProvisionerIds>    </NNRoute></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "NNRoute created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <NNRoute>      <Nnid>1234567</Nnid>      <Espid>5E23</Espid>      <Name>routeName1</Name>      <DeliveryNetwork>Bandwidth</DeliveryNetwork>      <TrafficType>A2P</TrafficType>      <ProvisionerIds>        <ProvisionerId>bandwidth</ProvisionerId>        <ProvisionerId>ringcentral</ProvisionerId>      </ProvisionerIds>    </NNRoute></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12942</ErrorCode>        <Description>NetNumber ID in the link and in the body is not the same.</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete NNRoute.",
        "operationId" : "deleteAdminData_7",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "NNRoute deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "NNRoute not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/nnroutes" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all NNRoutes",
        "operationId" : "getAllAdminData_7",
        "parameters" : [ {
          "name" : "nameFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return existing NNRoutes",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <NNRoutes>        <NNRoute>            <Espid>5123</Espid>            <Nnid>1234567</Nnid>            <Name>RouteName1(12345)</Name>            <DeliveryNetwork>Bandwidth</DeliveryNetwork>            <ProvisionerIds>                <ProvisionerId>bandwidth</ProvisionerId>                <ProvisionerId>ringcentral</ProvisionerId>            </ProvisionerIds>        </NNRoute>        <NNRoute>            <Espid>AB22</Espid>            <Nnid>1234222</Nnid>            <Name>RouteName2(12346)</Name>            <DeliveryNetwork>other</DeliveryNetwork>            <ProvisionerIds>                <ProvisionerId>republic</ProvisionerId>            </ProvisionerIds>        </NNRoute>    </NNRoutes></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/proxypeers/{id}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve the information for a specific proxy sippeer.",
        "operationId" : "getAdminData_9",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>  <ProxyPeer>    <Name>LXZAjsRw</Name>    <Service>HTTPV1</Service>    <ProxyPeerId>500020</ProxyPeerId>  </ProxyPeer></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "proxy sippeer not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>  <ResponseStatus>    <Description>The resource does not exist</Description>  </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Create a proxy sippeer or update its service type. All fields in the payload are required <br>The proxy peer name should be:<ul>    <li>equal to an {name} parameter in URL</li>    <li>globally unique</li>    <li>a non-empty string no longer than 64 characters long</li></ul>",
        "operationId" : "updateAdminData_9",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProxyPeerValue"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Campaign ID updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>  <AdminDataResponse>    <ProxyPeer>      <Name>meleRAej</Name>      <Service>HTTPV1</Service>      <ProxyPeerId>500023</ProxyPeerId>    </ProxyPeer>  </AdminDataResponse>"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Campaign ID updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>  <ProxyPeer>    <Name>meleRAej</Name>    <Service>HTTPV1</Service>    <ProxyPeerId>500023</ProxyPeerId>  </ProxyPeer></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AdminDataResponse>  <ResponseStatus>    <ErrorCode>1003</ErrorCode>    <Description>Service is required</Description>  </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete proxy sipppeer",
        "operationId" : "deleteAdminData_8",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Proxy sipppeer deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "empty response"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Proxy sipppeer not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "empty response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/proxypeers" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get all proxy sippeers (they should be sippeers of catapult accounts)",
        "operationId" : "getAllAdminData_8",
        "parameters" : [ {
          "name" : "nameFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return all proxy sippeers",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse> <ProxyPeers>   <ProxyPeer>     <Name>LXZAjsRw</Name>     <Service>HTTPV2</Service>     <ProxyPeerId>500020</ProxyPeerId>   </ProxyPeer>   <ProxyPeer>     <Name>UpuPPekG</Name>     <Service>HTTPV1</Service>     <ProxyPeerId>500021</ProxyPeerId>   </ProxyPeer> </ProxyPeers></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/sbcnodegroups" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAllAdminData_9",
        "responses" : {
          "200" : {
            "description" : "Return all existing SBC Node Groups",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SbcNodeGroups"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AdminDataResponse>    <SbcNodeGroups>             <SbcNodeGroup>                 <Id>1</Id>                 <Name>East Coast 01</Name>             </SbcNodeGroup>             <SbcNodeGroup>                 <Id>2</Id>                 <Name>West Coast 01</Name>             </SbcNodeGroup>         </SbcNodeGroups></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "createAdminData_2",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SbcNodeGroup"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "creates a SBC node group",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>    <SbcNodeGroup>            <Name>sbc_name</Name>                <Nodes>                    <Node>node0001</Node>                    <Node>node0002</Node>                </Nodes>        </SbcNodeGroup>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "invalid sbc node parameters, duplicate node names or empty node names aren't accepted",
            "content" : {
              "application/xml" : { }
            }
          },
          "409" : {
            "description" : "this sbc group name already exists in IRIS",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "accounts/{accountId}/sbcnodegroups/{sbcGroupId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAdminData_10",
        "parameters" : [ {
          "name" : "sbcGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/systemeventsubscriptions/{id}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "get SystemEventSubscription.",
        "operationId" : "getAdminData_11",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <SystemEventSubscription>        <SubscriptionId>12</SubscriptionId>        <SystemEvent>e911PsapNotificationEvent</SystemEvent>        <Email>support2@bandwidth.com</Email>        <DigestType>none</DigestType>    </SystemEventSubscription></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "SystemEventSubscription not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Allows replacement of a specified System Event Subscription. See endpoint /admin/data/systemEventSubscriptions for details about the elements.",
        "operationId" : "updateAdminData_7",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SystemEventSubscription"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated SystemEventSubscription",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <SystemEventNotification>        <SubscriptionId>5</SubscriptionId>        <SystemEvent>e911PsapNotificationEvent</SystemEvent>        <Email>support@bandwidth.com</Email>        <ZendeskGroupId>12345</ZendeskGroupId>    </SystemEventNotification></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<!-- System event of such type does not exist --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12115</ErrorCode>        <Description>System event of type 'someEvent' not found</Description>    </ResponseStatus></AdminDataResponse><!-- Invalid email --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12510</ErrorCode>        <Description>Email address 'support@bandwidth' is not valid</Description>    </ResponseStatus></AdminDataResponse><!-- One of required fields is missed --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12116</ErrorCode>        <Description>One of Email, ZendeskGroupId, or CallbackOrderType is required.</Description>    </ResponseStatus></AdminDataResponse><!-- Invalid CallbackOrderType value --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12165</ErrorCode>        <Description>CallbackOrderType value port is not supported. Supported values are: 'port_in'.</Description>    </ResponseStatus></AdminDataResponse><!-- Invalid zendesk group id --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12117</ErrorCode>        <Description>Zendesk group id should be positive integer integer greater then '0'</Description>    </ResponseStatus></AdminDataResponse><!-- Incorrect digest type --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>14500</ErrorCode>        <Description>Incorrect digest type</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "SystemEventSubscription not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Update to current SystemEventSubscription violates uniqueness constraint",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <Description>The resource already exists</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Allows removal of a specified System Event Subscription. Once the subscription is removed, the notifications will no longer be sent.",
        "operationId" : "deleteAdminData_6",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SystemEventNotification and subscriber are deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/systemeventsubscriptions" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAllAdminData_10",
        "parameters" : [ {
          "name" : "nameFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a list, possibly empty, of all configured System Event Subscriptions.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <SystemEventSubscriptionList>        <SystemEventSubscription>            <SubscriptionId>5</SubscriptionId>            <SystemEvent>e911PsapNotificationEvent</SystemEvent>            <Email>support@bandwidth.com</Email>            <DigestType>daily</DigestType>        </SystemEventSubscription>        <SystemEventSubscription>            <SubscriptionId>9</SubscriptionId>            <SystemEvent>e911PsapNotificationEvent</SystemEvent>            <ZendeskGroupId>1234</ZendeskGroupId>            <DigestType>none</DigestType>        </SystemEventSubscription>        <SystemEventSubscription>            <SubscriptionId>102</SubscriptionId>            <SystemEvent>portinChangesAndNotesCallback</SystemEvent>            <DigestType>none</DigestType>            <CallbackOrderType>port_in</CallbackOrderType>        </SystemEventSubscription>    </SystemEventSubscriptionList></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Allows creation of a single System Event Subscription. The payload elements are as follows:<br/><table>       <tr><th> Element </th><th> Required </th><th> Usage </th></tr>       <tr><td>    SubscriptionId </td><td> No </td><td> This element should generally be omitted for new entries. It simply provides a unique identifier for the subscription. </td></tr>       <tr><td>    SystemEvent </td><td> Yes </td><td> Specifies the event to which you are subscribing. Must be one of the values listed above. </td></tr>       <tr><td>    Email </td><td> No* </td><td> For notification via email, specifies the email address to which the notification information is sent. </td></tr>       <tr><td>    ZendeskGroupId </td><td> No* </td><td> For notification via Zendesk ticket, specifies the Zendesk queue number to which the notification information is sent. </td></tr>       <tr><td>    CallbackOrderType </td><td> No* </td><td> For notification via API callback, specifies the predefined order type for which notification information will be sent via the predefined callback URL. </td></tr>       <tr><td>    DigestType </td><td> No </td><td> Values: daily, none. Specifies whether you wish to receive a daily digest of event instances instead of a notification for each event instance. Value daily is not supported for all events. </td></tr></table>* Exactly one of Email, ZendeskGroupId, or CallbackOrderType must be specified. Most events support only one type of notification.",
        "operationId" : "createAdminData_3",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SystemEventSubscription"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created new SystemEventSubscription",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <SystemEventSubscription>        <SubscriptionId>12</SubscriptionId>        <SystemEvent>e911PsapNotificationEvent</SystemEvent>        <Email>support2@bandwidth.com</Email>        <DigestType>none</DigestType>    </SystemEventSubscription></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<!-- System event of such type does not exist --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12115</ErrorCode>        <Description>System event of type 'someEvent' not found</Description>    </ResponseStatus></AdminDataResponse><!-- Invalid email --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12510</ErrorCode>        <Description>Email address 'support@bandwidth' is not valid</Description>    </ResponseStatus></AdminDataResponse><!-- One of required fields is missed --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12116</ErrorCode>        <Description>One of Email, ZendeskGroupId, or CallbackOrderType is required.</Description>    </ResponseStatus></AdminDataResponse><!-- Invalid CallbackOrderType value --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12165</ErrorCode>        <Description>CallbackOrderType value port is not supported. Supported values are: 'port_in'.</Description>    </ResponseStatus></AdminDataResponse><!-- Invalid zendesk group id --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12117</ErrorCode>        <Description>Zendesk group id should be positive integer integer greater then '0'</Description>    </ResponseStatus></AdminDataResponse><!-- Incorrect digest type --><AdminDataResponse>    <ResponseStatus>        <ErrorCode>14500</ErrorCode>        <Description>Incorrect digest type</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Such SystemEventSubscription already exists",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <Description>The resource already exists</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/tntypes/{tnTypeId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get TnType",
        "operationId" : "getAdminData_13",
        "parameters" : [ {
          "name" : "tnTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return details for TnTypes",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <TnType>        <Source>libphonenumber</Source>        <Type>FOO</Type>        <IsAllowed>false</IsAllowed>        <TnTypeId>41</TnTypeId>    </TnType></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Update TnType",
        "operationId" : "updateAdminData_11",
        "parameters" : [ {
          "name" : "tnTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/TnTypePayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "TnType updated successfully",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation failed",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/admin/data/tntypes" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get TnType",
        "operationId" : "getAllAdminData_11",
        "responses" : {
          "200" : {
            "description" : "Return list of TnTypes",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <TnTypes>        <TnType>            <Source>libphonenumber</Source>            <Type>FIXED_LINE</Type>            <IsAllowed>false</IsAllowed>            <TnTypeId>1</TnTypeId>        </TnType>        <TnType>            <Source>libphonenumber</Source>            <Type>FIXED_LINE_OR_MOBILE</Type>            <IsAllowed>false</IsAllowed>            <TnTypeId>2</TnTypeId>        </TnType></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create a new TnType",
        "operationId" : "getAdminData_12",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/TnTypePayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "TnType Created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <TnType>        <Source>libphonenumber</Source>        <Type>FOO2</Type>        <IsAllowed>false</IsAllowed>        <TnTypeId>42</TnTypeId>    </TnType></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AdminDataResponse>    <ResponseStatus>        <Description>Invalid Source specified.</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Source/Type combination is already present. Use PUT under /{id} to enable/disable the TnType",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/admin/data/vendors/{id}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get Vendor.",
        "operationId" : "getAdminData_14",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return Vendor",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Vendor>        <VendorId>32</VendorId>        <LegacyId>12280865-a1c5-4293-aae8-10c3291e3a06</LegacyId>        <ManualPortEnabled>false</ManualPortEnabled>        <VendorName> Connexstar</VendorName>        <TollfreeManualPortEnabled>false</TollfreeManualPortEnabled>        <OnNet>false</OnNet>    </Vendor></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Vendor not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Allows to create or update Vendor.",
        "operationId" : "updateAdminData_12",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vendor"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Vendor updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Vendor>        <VendorId>32</VendorId>        <LegacyId>12280865-a1c5-4293-aae8-10c3291e3a06</LegacyId>        <ManualPortEnabled>false</ManualPortEnabled>        <VendorName> Connexstar</VendorName>        <TollfreeManualPortEnabled>false</TollfreeManualPortEnabled>        <OnNet>false</OnNet>    </Vendor></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Vendor created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <Vendor>        <VendorId>32</VendorId>        <LegacyId>12280865-a1c5-4293-aae8-10c3291e3a06</LegacyId>        <ManualPortEnabled>false</ManualPortEnabled>        <VendorName> Connexstar</VendorName>        <TollfreeManualPortEnabled>false</TollfreeManualPortEnabled>        <OnNet>false</OnNet>    </Vendor></AdminDataResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <ResponseStatus>        <ErrorCode>12734</ErrorCode>        <Description>Vendor ID in the link and in the body is not the same.</Description>    </ResponseStatus></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete Vendor.",
        "operationId" : "deleteAdminData_10",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Vendor deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/admin/data/vendors" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get all vendors and filter by name",
        "operationId" : "getAllAdminData_12",
        "parameters" : [ {
          "name" : "nameFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return existing Vendors",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AdminDataResponse>    <VendorList>        <Vendor>            <VendorId>47</VendorId>            <VendorName> Broadwing</VendorName>        </Vendor>        <Vendor>            <VendorId>32</VendorId>            <VendorName> Connexstar</VendorName>        </Vendor>    </VendorList></AdminDataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{property}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAdminOptionErrorWithParameter",
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/{accountId}" : {
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteAdminData_11",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/{sippeerId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAdminData_16",
        "parameters" : [ {
          "name" : "sippeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "updateAdminData_13",
        "parameters" : [ {
          "name" : "sippeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SlingshotEnv"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteAdminData_12",
        "parameters" : [ {
          "name" : "sippeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/e911/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "The GET returns the current settings, indicating the user ID, and the result from attempted authentication with the stored credentials.  If the Authentication fails subsequent attempts will be made using default credentials until the issue is resolved.",
        "operationId" : "getE911Configuration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The E911 settings element is returned.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/E911SettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><E911SettingsResponse>    <E911Settings>        <DashUserId>[alphanumeric]</DashUserId>        <!-- failed if a 401 or 403 is http response code received from -->        <!-- the DASH API on the last attempt to authenticate with the -->        <!-- credentials, passed otherwise -->        <DashAuthenticationStatus>[passed|failed|unknown]</DashAuthenticationStatus>        <Hosts>            <Host>                <HostName>12.34.56.78</HostName>            </Host>        </Hosts>    </E911Settings></E911SettingsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUNDIf the E911 product exists on the account, but settings are missing, then the 404 not found response is used.If the E911 product does not exist on the account then the 404 will indicate that the E911 products resource cannot be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><E911SettingsResponse>    <ResponseStatus>        <!-- possibly a different Errorcode will be required -->        <ErrorCode>12030</ErrorCode>        <Description>E911 product settings have not been configured</Description>    </ResponseStatus></E911SettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "This resource can be PUT or POSTed to in order to establish the appropriate settings.Some of the important values that are established as part of this termination are...<table><tr><th>parameter</th><th>description</th></tr><tr><td>DashUserId</td><td>[Alphanumeric with symbols] the User ID to be used to access Dash for this Bandwidth Dashboard API account</td></tr><tr><td>DashPassword</td><td>[Alphanumeric with symbols] the Password to be used to access Dash for this Bandwidth Dashboard API account</td></tr><tr><td>Hosts</td><td>List of IP ranges to be used only for e911 traffic</td></tr></table>",
        "operationId" : "updateE911Configuration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/E911Settings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the E911 Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/E911SettingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the E911 settings resource is incorrect or other factors prevent execution of the POST  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<E911SettingsResponse>    <ResponseStatus>        <ErrorCode>******</ErrorCode>        <Description>Passwords may contain only alphanumeric and symbol characters</Description>    </ResponseStatus></E911SettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "This resource can be PUT or POSTed to in order to establish the appropriate settings.Some of the important values that are established as part of this termination are...<table><tr><th>parameter</th><th>description</th></tr><tr><td>DashUserId</td><td>[Alphanumeric with symbols] the User ID to be used to access Dash for this Bandwidth Dashboard API account. 50 characters, ascii, without % symbol or whitespace.</td></tr><tr><td>DashPassword</td><td>[Alphanumeric] the Password to be used to access Dash for this Bandwidth Dashboard API account - 50 characters</td></tr><tr><td>Hosts</td><td>List of IP ranges to be used only for e911 traffic</td></tr></table>",
        "operationId" : "createE911Configuration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/E911Settings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the E911 Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/E911SettingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the E911 settings resource is incorrect or other factors prevent execution of the POST  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<E911SettingsResponse>    <ResponseStatus>        <ErrorCode>******</ErrorCode>        <Description>Passwords may contain only alphanumeric and symbol characters</Description>    </ResponseStatus></E911SettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/edgemanagement/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "There are three primary settings that are provided as part of the Edge Management product: The SBC settings that are associated with the account,SipAuthentication that provide settings for SIP authentication and ProductSpecificAccessRestrictions that can restrict Termination traffic for sipCredendital.    <br>    <b>SbcSettings:</b>    <table>    <tr><th>Parameter</th><th>Description</th></tr>    <tr><td>TrunkGroupId</td><td>element defines id of the trunk group associated with the Account in TGA</td></tr>    <tr><td>NodeGroupName</td><td>element are the node group name set up in TGA</td></tr>    </table>    <br>    <b>SipAuthentication:</b>     <table>     <tr><th>Parameter</th><th>Description</th></tr>     <tr><td>Enabled</td><td>enable SIP Authentication on account. Values that can be accepted: true, false</td></tr>     <tr><td>Status</td><td>provide information about processing status. This field cannot be updated.</td></tr>     <tr><td>Errors</td><td>List of errors that happened during sip auth provisioning. This field cannot be updated.</td></tr>     </table>    <br><br>    <b>ProductSpecificAccessRestrictions</b>(requires existence of SipCredentialSettings)<b>:</b>    <table>    <tr><th>Parameter</th><th>Description</th></tr>    <tr><td>RestrictedProduct</td><td>Product to restrict. Values that can be accepted: Termination</td></tr>    <tr><td>RestrictedAccessType</td><td>Type of restriction. Values that can be accepted: SipCredentials</td></tr>    </table>",
        "operationId" : "getEdgeManagementConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An optional description of the response.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EdgeManagementConfigurationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementSettings>    <SbcSettings>        <TrunkGroupId>Trunkgroupidfortheaccounttraffic</TrunkGroupId>        <NodeGroupName>East Coast 01</NodeGroupName>    </SbcSettings>    <SipAuthentication>        <Enabled>true/false</Enabled>        <Status>COMPLETE/FAILED/PROCESSING</Status>        <Errors>            <Error>                <Code>26001</Code>                <Description>TGA database is not reachable.</Description>            </Error>            <Error>                <Code>27002</Code>                <Description>Amazon route 53 is not reachable.</Description>            </Error>        </Errors>    </SipAuthentication>    <ProductSpecificAccessRestrictions>       <AccessRestriction>           <RestrictedProduct>Termination</RestrictedProduct>           <RestrictedAccessTypes>               <RestrictedAccessType>SipCredentials</RestrictedAccessType>           </RestrictedAccessTypes>       </AccessRestriction>    </ProductSpecificAccessRestrictions></EdgeManagementSettings>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "If the settings are not present for the EdgeManagement product a 404 NOT FOUND is returned with an explanatory payload.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementSettingsResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></EdgeManagementSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "This Edge Management settings resource can be PUT or POSTed to in order to establish the appropriate settings.",
        "operationId" : "updateEdgeManagementConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/EdgeManagementConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the Edge Management Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EdgeManagementConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the edge Management settings resource is incorrect or the account is not configured for Edge Management.  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementSettingsResponse>    <ResponseStatus>        <ErrorCode>12602</ErrorCode>        <Description>SbcSettings is required when creating EdgeManagementSettings</Description>    </ResponseStatus></EdgeManagementSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "This Edge Management settings resource can be PUT or POSTed to in order to establish the appropriate settings.",
        "operationId" : "createEdgeManagementConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/EdgeManagementConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the Edge Management Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EdgeManagementConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the edge Management settings resource is incorrect or the account is not configured for Edge Management.  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementSettingsResponse>    <ResponseStatus>        <ErrorCode>12602</ErrorCode>        <Description>TrunkGroupName is required when creating EdgeManagementSettings</Description>    </ResponseStatus></EdgeManagementSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/edgemanagement/settings/sipauthentication" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get SIP Authentication Configuration",
        "description" : "Gets all SIP Authentication settings",
        "operationId" : "getSipAuthenticationConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An optional description of the response.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSipAuthSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipAuthenticationResponse>    <SipAuthentication>        <Realm>cust27.auth.bandwidth.com</Realm>        <DefaultGroupName>10000105_27</DefaultGroupName>        <SBC>            <Zone>                <Id>1</Id>                <Name>CUST27_10000105_ZONE</Name>                <SipSigPort>                    <Index>1</Index>                    <PortNumber>1</PortNumber>                </SipSigPort>            </Zone>        </SBC>        <DNSRecords>            <DNSRecord>                <Type>A</Type>                <Name>cust27.auth.bandwidth.com</Name>                <Data>235.152.100.100</Data>                <TTL>300</TTL>            </DNSRecord>            <DNSRecord>                <Type>A</Type>                <Name>cust27.auth.bandwidth.com</Name>                <Data>235.152.100.200</Data>                <TTL>300</TTL>            </DNSRecord>            <DNSRecord>                <Type>SRV</Type>                <Name>_sip._udp.cust27.auth.bandwidth.com</Name>                <Data>5 50 5000 test.host1</Data>                <TTL>300</TTL>            </DNSRecord>            <DNSRecord>                <Type>SRV</Type>                <Name>_sip._udp.cust27.auth.bandwidth.com</Name>                <Data>5 50 5000 test.host2</Data>                <TTL>300</TTL>            </DNSRecord>        </DNSRecords>    </SipAuthentication></SipAuthenticationResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "If the configuration is not present a 404 NOT FOUND is returned with an explanatory payload.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipAuthenticationResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></SipAuthenticationResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/geocoderequest" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "POST is used to validate address as geocode-able one. Request payload is the address to geocode. If decomposed elements are provided for AddressLine 1 then AddressLine1 is ignored. At least HouseNumber and StreetName are required to use them as replacement of AddressLine1. If at least HouseNumber or StreetName is absent then AddressLine1 is used. AddressLine1 information is required in either way. City and StateCode fields are required.",
        "operationId" : "getAddresses_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GeocodeRequestAddress"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK - service validates address perfectly.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeocodeRequestResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <GeocodeRequestResponse> <GeocodedAddress> <AddressLine1>904 E ANSON ST</AddressLine1> <HouseNumber>904</HouseNumber> <PreDirectional>E</PreDirectional> <StreetName>ANSON</StreetName> <StreetSuffix>ST</StreetSuffix> <City>MARSHALLTOWN</City> <StateCode>IA</StateCode> <Zip>50158</Zip> <PlusFour>3522</PlusFour> <Country>US</Country> </GeocodedAddress> <RequestAddress> <HouseNumber>904</HouseNumber> <HouseSuffix>E</HouseSuffix> <StreetName>Anson</StreetName> <StreetSuffix>St</StreetSuffix> <City>Marshalltown</City> <StateCode>IA</StateCode> <Zip>50158</Zip> <Country>US</Country> <AddressLine1>904 E Anson St</AddressLine1> </RequestAddress> </GeocodeRequestResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request - service cannot geocode address or validation rules were violated.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <GeocodeRequestResponse> <ResponseStatus> <ErrorCode>12110</ErrorCode> <Description>This address could not be validated / geocoded</Description> </ResponseStatus> </GeocodeRequestResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict - address is close to one that can be geocoded.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <GeocodeRequestResponse> <ErrorMessage> Some adjustments are required to allow the address to pass geocoding%3A Specified value - Street Name %3A \"ANSUN\" Valid value - \"ANSON\" Specified value - Street Suffix %3A \"STR\" Valid value - \"ST\" </ErrorMessage> <GeocodedAddress> <AddressLine1>904 E ANSON ST</AddressLine1> <HouseNumber>904</HouseNumber> <PreDirectional>E</PreDirectional> <StreetName>ANSON</StreetName> <StreetSuffix>ST</StreetSuffix> <City>MARSHALLTOWN</City> <StateCode>IA</StateCode> <Zip>50158</Zip> <PlusFour>3522</PlusFour> <Country>US</Country> </GeocodedAddress> <RequestAddress> <HouseNumber>904</HouseNumber> <HouseSuffix>E</HouseSuffix> <StreetName>Ansun</StreetName> <StreetSuffix>Str</StreetSuffix> <City>Marshalltown</City> <StateCode>IA</StateCode> <Zip>50158</Zip> <Country>US</Country> <AddressLine1>904 E Ansun Str</AddressLine1> </RequestAddress> </GeocodeRequestResponse>"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "System error - internal error which cannot be fixed by changing payload etc.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <GeocodeRequestResponse> <ResponseStatus> <ErrorCode>12111</ErrorCode> <Description>Error during E911 Geocoding API response handling</Description> </ResponseStatus> </GeocodeRequestResponse>"
                  }
                }
              }
            }
          },
          "503" : {
            "description" : "Service unavailable - for some reason service is temporary unavailable.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <GeocodeRequestResponse> <ResponseStatus> <ErrorCode>12109</ErrorCode> <Description>E911 Geocoding Service is temporary unavailable</Description> </ResponseStatus> </GeocodeRequestResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{holidayDate}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getHoliday",
        "parameters" : [ {
          "name" : "holidayDate",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HolidayResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "updateHoliday",
        "parameters" : [ {
          "name" : "holidayDate",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/HolidayPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HolidayResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteHoliday",
        "parameters" : [ {
          "name" : "holidayDate",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HolidayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "The GET returns the current settings, indicating is Messaging product enabled now and if yes will Messaging feature be enabled on each new telephone number.",
        "operationId" : "getMessagingSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The Messaging settings element is returned.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagingSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><MessagingSettingsResponse>    <MessagingSettings>        <Enabled>true</Enabled>        <EnabledOnNewTN>true</EnabledOnNewTN>        <SupportedOnImportedTns>false</SupportedOnImportedTns>        <EnableOnNetMessageRoutes>true</EnableOnNetMessageRoutes>        <EnableOffNetMessageRoutes>false</EnableOffNetMessageRoutes>        <PreventUpdatingNetNumber>false</PreventUpdatingNetNumber>        <ProxyPeersOwner>true</ProxyPeersOwner>        <BreakOutCountries>            <Country>CAN</Country>            <Country>GBR</Country>        </BreakOutCountries>    </MessagingSettings></MessagingSettingsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUNDIf the Messaging product exists on the account, but settings are missing, then the 404 not found response is used.If the Messaging product does not exist on the account then the 404 will indicate that the Messaging products resource cannot be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><MessagingSettingsResponse>    <ResponseStatus>        <!-- possibly a different Errorcode will be required -->        <ErrorCode>12030</ErrorCode>        <Description>Messaging product settings have not been configured</Description>    </ResponseStatus></MessagingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "This resource can be used for PUT to establish the appropriate settings. Messaging settings cannot be changed if previous settings are not applied yet.Some of the important values that are established as part of this termination are...<table>    <tr><th>parameter</th><th>description</th></tr>    <tr><td>Enabled</td><td>[Boolean] flag to enable/disable Messaging product on the account. Value is required.</td></tr>    <tr><td>EnabledOnNewTN</td><td>[Boolean] flag to enable/disable Messaging feature on each new telephone number. Value is required if Enabled = true </td></tr>    <tr><td>ExistingTNAction</td><td>[Enum] action will be performed to all existing telephone numbers on the account. Valid values: enable, disable, nochange.</td></tr>    <tr><td>SupportedOnImportedTns</td><td>[Boolean] Whether the account can assign non-Bandwidth TNs for Messaging. The default is false.</td><tr>    <tr><td>PreventUpdatingNetNumber</td><td>[Boolean] flag to block NetNumber updates on all of the TNs on the account. The default is false.</td></tr>    <tr><td>EnableOnNetMessageRoutes</td><td>[Boolean] flag to enable/disable message routing on the Bandwidth messaging network. The default is true.</td></tr>    <tr><td>EnableOffNetMessageRoutes</td><td>[Boolean] flag to enable/disable message routing around the Bandwidth messaging network. The default is false.</td></tr>    <tr><td>ProxyPeersOwner</td><td>[Boolean] flag to enable/disable the ability of having sipPeers that could be used as proxy peers for http messaging. </td><tr>    <tr><td>BreakOutCountries</td><td>[List] Holds list of breakout countries. </td><tr></table>",
        "operationId" : "updateMessagingSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessagingSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the SMS Settings. There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagingSettingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the SMS settings resource is incorrect or other factors prevent execution of the POST. The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<MessagingSettingsResponse>    <ResponseStatus>        <ErrorCode>******</ErrorCode>        <Description>MessagingSettings are processing now. You cannot change it before previous settings was applied.</Description>    </ResponseStatus></MessagingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "This resource can be used for POST to establish the appropriate settings.Some of the important values that are established as part of this termination are...<table>    <tr><th>parameter</th><th>description</th></tr>    <tr><td>Enabled</td><td>[Boolean] flag to enable/disable Messaging product on the account. Value is required.</td></tr>    <tr><td>EnabledOnNewTN</td><td>[Boolean] flag to enable/disable Messaging feature on each new telephone number. Value is required if Enabled = true </td></tr>    <tr><td>ExistingTNAction</td><td>[Enum] action will be performed to all existing telephone numbers on the account. Valid values: enable, disable, nochange.</td></tr>    <tr><td>SupportedOnImportedTns</td><td>[Boolean] Whether the account can assign non-Bandwidth TNs for Messaging. The default is false.</td><tr>    <tr><td>PreventUpdatingNetNumber</td><td>[Boolean] flag to block NetNumber updates on all of the TNs on the account. The default is false.</td></tr>    <tr><td>EnableOnNetMessageRoutes</td><td>[Boolean] flag to enable/disable message routing on the Bandwidth messaging network. The default is true.</td></tr>    <tr><td>EnableOffNetMessageRoutes</td><td>[Boolean] flag to enable/disable message routing around the Bandwidth messaging network. The default is false.</td></tr>    <tr><td>ProxyPeersOwner</td><td>[Boolean] flag to enable/disable the ability of having sipPeers that could be used as proxy peers for http messaging. </td><tr>    <tr><td>BreakOutCountries</td><td>[List] Holds list of breakout countries, if empty, current countries will be removed. </td><tr></table>",
        "operationId" : "createMessagingSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessagingSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the Messaging Settings. There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagingSettingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the Messaging settings resource is incorrect or other factors prevent execution of the POST. The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<MessagingSettingsResponse>    <ResponseStatus>        <ErrorCode>******</ErrorCode>        <Description>The supplied ExistingTNAction 'foo' is not valid. Valid values: ENABLE, DISABLE, NOCHANGE</Description>    </ResponseStatus></MessagingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/routes" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "The GET returns the current list of routes associated with the various types of TNs that can be assigned messaging routes.Zero or more routes can be returned for each type of TN; each one of these routes is identified by an NNID, or an ESPID while we transition from ESPIDs to NNIDs.For reference the various types of TNs that can be assigned differentiated routes are...<table>    <tr><th>XML element</th><th>Type of TN description</th></tr>    <tr><td>OnNetTns</td><td>On Net Bandwidth owned TNs</td></tr>    <tr><td>OffNetTns</td><td>Off-net TNs in Bandwidth's inventory</td></tr>    <tr><td>OffNetCanadianTns</td><td>Canadian TNs in Bandwidth's inventory</td></tr>    <tr><td>TollFreeTns</td><td>TollFree TNs in Bandwidth's inventory</td></tr>    <tr><td>ExternalCustomerOwnedTns</td><td>TNs owned by the customer in NPAC, and imported into Bandwidth's inventory for the customer's use</td></tr>    <tr><td>ExternalThirdPartyTns</td><td>TNs owned by a 3rd party in NPAC, and imported into Bandwidth's inventory for the customer's use</td></tr>    <tr><td>ExternalCanadianTns</td><td>Canadian TNs eh, imported into Bandwidth's inventory for the customer's use</td></tr>    <tr><td>ExternalTollFreeTns</td><td>Toll Free TNs imported into Bandwidth's inventory for the customer's use</td></tr>    <tr><td>A2pTollFreeTns</td><td>A2P Non Toll Free NNID</td></tr>    <tr><td>A2pNonTollFreeTns</td><td>A2P Toll Free NNID</td></tr></table>If a single route is returned that implies that all of the TNs of the associated type will use the listed NNID for routing.If no route values are returnet that implies that Bandwidth is not involved in setting up routes - that must be done using other means.It also implies that Messages sent to TNs of that type will be routed off-net.If there are multiple route values configured it means that the customer is empowered to assign one of the NNIDs to any of the messaging enabled TNs on their account.In the multiple routes case the only one route per Tn Type in the list is taken to be the default value assigned to TNs when provisioned.",
        "operationId" : "getAccountRoutes",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "details",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Messaging Routes are returned.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountMessagingRoutesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountMessagingRoutesResponse> <MessagingRoutes> <MessagingRoute> <NNID>123456</NNID> <TNType>ExternalCanadianTns</TNType> <Default>true</Default> <Details> <NNRoute> <Nnid>123456</Nnid> <Espid>E830</Espid> <DeliveryNetwork>Bandwidth</DeliveryNetwork> <ProvisionerIds/> </NNRoute> </Details> </MessagingRoute> <MessagingRoute> <NNID>123456</NNID> <TNType>ExternalCustomerOwnedTns</TNType> <Default>true</Default> <Details> <NNRoute> <Nnid>123456</Nnid> <Espid>E830</Espid> <DeliveryNetwork>Bandwidth</DeliveryNetwork> <ProvisionerIds/> </NNRoute> </Details> </MessagingRoute> </MessagingRoutes> </AccountMessagingRoutesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "This resource can be used to establish the appropriate messaging routes for various types of TNs described in the GET above.It is assumed that the MessagingRoutes resource exists if the messaging product has been configured.<br>The description of the payload values is provided in the description of the GET above, as has the implications of 0,1 or many routes associated withany specific type of TN.<br>PUT of an empty list will remove all of the routes associated with the account.",
        "operationId" : "setAccountRoutes",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/MessagingRoutes"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of messaging routes.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountMessagingRoutesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountMessagingRoutesResponse> <MessagingRoutes> <MessagingRoute> <NNID>123456</NNID> <TNType>ExternalCanadianTns</TNType> <Default>true</Default> </MessagingRoute> <MessagingRoute> <NNID>123457</NNID> <TNType>ExternalCanadianTns</TNType> <Default>false</Default> </MessagingRoute> </MessagingRoutes> </AccountMessagingRoutesResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned if user tries to create/update routs with incorrrect TnType, sets the indentical routes or provide not only one default route per TnType. E.g. in case with more then one defaul NNID per Tn Type",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountMessagingRoutesResponse> <ResponseStatus> <ErrorCode>12955</ErrorCode> <Description>There should be one and only one default NNID per TN Type</Description> </ResponseStatus> </AccountMessagingRoutesResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "a 409 CONFLICT will be returned if user tries to create/update routs with NNID which doesn't present in the system.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountMessagingRoutesResponse> <ResponseStatus> <ErrorCode>12954</ErrorCode> <Description>NNID '70732143' was not found in list of authorized NNIDs</Description> </ResponseStatus> </AccountMessagingRoutesResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/sms" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get sms settings for account",
        "operationId" : "getSmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AccountSmsFeatureResponse>    <AccountSmsFeature>        <AccountSmsFeatureSettings>            <TollFree>true</TollFree>            <ShortCode>true</ShortCode>            <Zone1>true</Zone1>            <Zone2>true</Zone2>            <Zone3>true</Zone3>            <Zone4>true</Zone4>            <Zone5>true</Zone5>            <SmppEnabled>true</SmppEnabled>            <DefaultProvider>0</DefaultProvider>        </AccountSmsFeatureSettings>        <SmppSettings>            <SmppUsername>testUser</SmppUsername>            <Password>secret</Password>            <Dlr>FINAL</Dlr>            <DlrCarrier>false</DlrCarrier>            <MaxPendingSubmits>100</MaxPendingSubmits>            <ForceTon>false</ForceTon>            <AllowThirdPartyTN>false</AllowThirdPartyTN>            <ConnectionTypeDefault>RECEIVER_ONLY</ConnectionTypeDefault>            <MaxConnections>5</MaxConnections>            <SrcTon>DEFAULT</SrcTon>            <SrcNpi>DEFAULT</SrcNpi>            <DstTon>DEFAULT</DstTon>            <DstNpi>DEFAULT</DstNpi>        </SmppSettings>    </AccountSmsFeature></AccountSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "update sms feature settings",
        "operationId" : "updateSmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountSmsFeature"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "settings were successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSmsFeatureResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Trying to change '%s' feature settings but that feature is not enabled for account %d.</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountSmsFeatureResponse> <ResponseStatus> <ErrorCode>12773</ErrorCode> <Description>Trying to change SMS feature settings but that feature is not enabled for account 123.</Description> </ResponseStatus> </AccountSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "add sms feature settings",
        "operationId" : "createSmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountSmsFeature"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "sms feature settings were successfuly added <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountSmsFeatureResponse> <AccountSmsFeature> <AccountSmsFeatureSettings> <TollFree>true</TollFree> <ShortCode>true</ShortCode> <Zone1>true</Zone1> <Zone2>true</Zone2> <Zone3>true</Zone3> <Zone4>true</Zone4> <Zone5>true</Zone5> <SmppEnabled>true</SmppEnabled> <DefaultProvider>0</DefaultProvider> </AccountSmsFeatureSettings> <SmppSettings> <SmppUsername>testUser</SmppUsername> <Password>secret</Password> <Dlr>FINAL</Dlr> <DlrCarrier>false</DlrCarrier> <MaxPendingSubmits>100</MaxPendingSubmits> <ForceTon>false</ForceTon> <AllowThirdPartyTN>false</AllowThirdPartyTN> <ConnectionTypeDefault>RECEIVER_ONLY</ConnectionTypeDefault> <MaxConnections>5</MaxConnections> <SrcTon>DEFAULT</SrcTon> <SrcNpi>DEFAULT</SrcNpi> <DstTon>DEFAULT</DstTon> <DstNpi>DEFAULT</DstNpi> </SmppSettings> </AccountSmsFeature> </AccountSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Trying to change '%s' feature settings but that feature is not enabled for account %d.</li>   <li>%s is required</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountSmsFeatureResponse> <ResponseStatus> <ErrorCode>12773</ErrorCode> <Description>Trying to change SMS feature settings but that feature is not enabled for account 123.</Description> </ResponseStatus> </AccountSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/http" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get http settings for account",
        "operationId" : "getHttpFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountHttpFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AccountHttpFeatureResponse>    <AccountHttpFeature>        <DefaultProxyPeerId>500031</DefaultProxyPeerId>    </AccountHttpFeature></AccountHttpFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "update http feature settings",
        "operationId" : "updateHttpFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountHttpFeature"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "settings were successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountHttpFeatureResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Specified sippeer id does not exist <br>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountHttpFeatureResponse> <ResponseStatus> <ErrorCode>12771</ErrorCode> <Description>Specified sippeer id 45 does not exist.</Description> </ResponseStatus> </AccountHttpFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "add http feature settings",
        "operationId" : "createHttpFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountHttpFeature"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "http feature settings was successfully added <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountHttpFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountHttpFeatureResponse> <AccountHttpFeature> <DefaultProxyPeerId>1</DefaultProxyPeerId> </AccountHttpFeature> </AccountHttpFeatureResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Specified sippeer id does not exist <br>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AccountHttpFeatureResponse> <ResponseStatus> <ErrorCode>12771</ErrorCode> <Description>Specified sippeer id 45 does not exist.</Description> </ResponseStatus> </AccountHttpFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "delete http settings",
        "operationId" : "deleteHttpFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "settings were deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountHttpFeatureResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "http settings were not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/mms/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "retrieveMmsFeatureSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountMmsFeatureSettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/mms/mm4settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get mm4 settings for account",
        "operationId" : "retrieveMmsFeatureMm4Settings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MmsFeatureMm4SettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?><AccountProductResponse>  <Product>    <Name>MESSAGING</Name>    <Features>      <Feature>SMS</Feature>      <Feature>HTTPV2</Feature>    </Features>  </Product></AccountProductResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "update mms feature settings",
        "operationId" : "updateMmsFeatureMm4Settings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mm4Settings"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "settings were successfully updatetat",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MmsFeatureMm4SettingsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "mm4 settings are not allowed if mm4 is disabled <br>",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/mms" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get mms settings for account",
        "operationId" : "getMmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountMmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AccountMmsFeatureResponse>    <MmsFeature>        <MmsSettings>            <MM4Enabled>true</MM4Enabled>            <TollFreeMMSAllowed>true</TollFreeMMSAllowed>            <DefaultProvider>1</DefaultProvider>        </MmsSettings>        <MM4Settings>            <ConnValidWindow>5</ConnValidWindow>            <MaxConn>10</MaxConn>            <PersistentConn>false</PersistentConn>            <KeepAliveNoop>false</KeepAliveNoop>            <SkipAck>true</SkipAck>            <AllowMultiRecepient>false</AllowMultiRecepient>            <ConnMessageRatio>1.5</ConnMessageRatio>            <ConnSentTimeout>10</ConnSentTimeout>            <GenDlr>false</GenDlr>            <GenReadReply>false</GenReadReply>            <MaxMessagesInQueue>100</MaxMessagesInQueue>            <LoopAllowed>false</LoopAllowed>            <ForceAck>false</ForceAck>            <AsyncMessageFlowSupported>false</AsyncMessageFlowSupported>        </MM4Settings>    </MmsFeature></AccountMmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "update mms feature settings",
        "operationId" : "updateMmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountMmsFeature"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "settings were successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountMmsFeatureResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Trying to change '%s' feature settings but that feature is not enabled for account %d.</li>   <li>mm4Settings is not allowed/li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountMmsFeatureResponse> <ResponseStatus> <ErrorCode>1005</ErrorCode> <Description>mm4Settings is not allowed</Description> </ResponseStatus> </AccountMmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "set mms feature settings",
        "operationId" : "createMmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountMmsFeature"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "mms feature settings were successfully added <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountMmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountMmsFeatureResponse> <MmsFeature> <MmsSettings> <MM4Enabled>true</MM4Enabled> <TollFreeMMSAllowed>true</TollFreeMMSAllowed> <DefaultProvider>1</DefaultProvider> </MmsSettings> <MM4Settings> <ConnValidWindow>5</ConnValidWindow> <MaxConn>10</MaxConn> <PersistentConn>false</PersistentConn> <KeepAliveNoop>false</KeepAliveNoop> <SkipAck>true</SkipAck> <AllowMultiRecepient>false</AllowMultiRecepient> <ConnMessageRatio>1.5</ConnMessageRatio> <ConnSentTimeout>10</ConnSentTimeout> <GenDlr>false</GenDlr> <GenReadReply>false</GenReadReply> <MaxMessagesInQueue>100</MaxMessagesInQueue> <LoopAllowed>false</LoopAllowed> <ForceAck>false</ForceAck> <AsyncMessageFlowSupported>false</AsyncMessageFlowSupported> </MM4Settings> </MmsFeature> </AccountMmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Trying to change '%s' feature settings but that feature is not enabled for account %d.</li>   <li>Specified sippeer id does not exist</li>   <li>mm4AdminSettings is required</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <AccountMmsFeatureResponse> <ResponseStatus> <ErrorCode>1003</ErrorCode> <Description>mm4AdminSettings is required</Description> </ResponseStatus> </AccountMmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "delete mms settings",
        "operationId" : "deleteMmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "settings were deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountMmsFeatureResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "mms settings were not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/bocAcctList" : {
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "updateMigration",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BocAccountList"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "createMigration",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BocAccountList"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/bocAcctList/{countryCode}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getMigration",
        "parameters" : [ {
          "name" : "countryCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/ganProfileAttribute" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getMigrations",
        "parameters" : [ {
          "name" : "rollbackAccountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/ganProfileAttribute/{accountId}" : {
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "migrateAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/GanProfileAttributeMigration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/nnidAccountSync" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "post",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NnidAccountSync"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/{tnHistory}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "tag",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "post_1",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TnHistoryRecast"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "cleanupOldHistories",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TnHistoryCleanup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/numbermanagement/settings" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Examine the Numbermanagement settings of the account.",
        "operationId" : "getNumberManagementSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Numbermanagement settings are not empty for account",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NumberManagementSettings"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><NumberManagementSettingsResponse>  <NumberManagementSettings>    <CnamDip>      <SustainedRequestRate>5</SustainedRequestRate>      <BurstRequestRate>5</BurstRequestRate>      <SourceIps>        <Host>          <HostName>168.148.181.232/24</HostName>        </Host>      </SourceIps>    </CnamDip>    <LNP>      <FalloutManagementGrade>2</FalloutManagementGrade>    </LNP>    <VendorIds>      <VendorId>1</VendorId>    </VendorIds>    <Countries>      <CountryTwoLetterCode>GB</CountryTwoLetterCode>    </Countries>    <TnTypeIds>      <TnTypeId>2</TnTypeId>    <TnTypeIds>  </NumberManagementSettings></NumberManagementSettingsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Numbermanagement product is not enabled on account",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><NumberManagementSettingsResponse>  <ResponseStatus>    <ErrorCode>12017</ErrorCode>    <Description>Account '12346189' does not have product 'NumberManagement'</Description>  </ResponseStatus></NumberManagementSettingsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "There are no Numbermanagement settings for account",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Update Numbermanagement product settings on the account.Acceptable values for the FalloutManagementGrade are 1, 2, and 3.To delete cnamdip settings no CnamDip element should be sent.To set default value of FalloutManagementGrade no LNP element should be sent.",
        "operationId" : "updateNumberManagementSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NumberManagementSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NumberManagementSettings"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"yes\"?><NumberManagementSettings>  <CnamDip>    <SustainedRequestRate>5</SustainedRequestRate>    <BurstRequestRate>5</BurstRequestRate>    <SourceIps>      <Host>        <HostName>174.193.241.245</HostName>      </Host>    </SourceIps>  </CnamDip>  <LNP>    <FalloutManagementGrade>2</FalloutManagementGrade>  </LNP>  <VendorIds>    <VendorId>1</VendorId>  </VendorIds>  <Countries>    <CountryTwoLetterCode>GB</CountryTwoLetterCode>  </Countries>  <TnTypeIds>    <TnTypeId>2</TnTypeId>  <TnTypeIds></NumberManagementSettings>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "LnpFalloutManagement feature is not set on the account, or validation issue with given TnType/Vendor/Country",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><NumberManagementSettingsResponse>  <ResponseStatus>    <ErrorCode>12162</ErrorCode>    <Description>FalloutManagementGrade cannot be set. Please enable the Fallout Management feature on the account first.</Description>  </ResponseStatus></NumberManagementSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/origination/settings" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "The GET returns the current settings, describing the inbound and bidirectional traffic levels that will be permitted.  See the ",
        "operationId" : "getOriginationConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The settings element is returned.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OriginationConfigurationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OriginationSettingResponse>    <OriginationSettings>        <ConcurrentBidirectionalCalls>5</ConcurrentBidirectionalCalls>        <ConcurrentInboundCalls>500</ConcurrentInboundCalls>        <RedirectEnabled>true</RedirectEnabled>    </OriginationSettings></OriginationSettingResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "BAD REQUESTIf the settings are not present for the Origination product a 404 NOT FOUND is returned with an explanatory payload.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OriginationSettingResponse>    <ResponseStatus>        <ErrorCode>12017</ErrorCode>        <Description>Account '646' does not have product 'Origination'</Description>    </ResponseStatus></OriginationSettingResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUNDIf the product exists on the account, but settings are missing, then the not found response is used.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OriginationSettingResponse>    <ResponseStatus>        <ErrorCode>12030</ErrorCode>        <Description>Origination product has not been configured</Description>    </ResponseStatus></OriginationSettingResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "This resource can be PUT or POSTed to in order to establish the appropriate settings.Some of the important values that are established as part of this termination are...<table><tr><th>parameter</th><th>description</th></tr><tr><td>ConcurrentInboundCalls</td><td>integer</td></tr><tr><td>ConcurrentBidirectionalCalls</td><td>integer</td></tr><tr><td>RedirectEnabled</td><td>true | false - enables 3xx redirection routing for account</td></tr></table>",
        "operationId" : "updateOriginationConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/OriginationConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the Termination Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OriginationConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the termination settings resource is incorrect or other factors prevent execution of the POST  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<OriginationSettingResponse>    <ResponseStatus>        <ErrorCode>12591</ErrorCode>        <Description>ConcurrentBidirectionalCalls requires Termination and Origination product</Description>    </ResponseStatus></OriginationSettingResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "This resource can be PUT or POSTed to in order to establish the appropriate settings.Some of the important values that are established as part of this termination are...<table><tr><th>parameter</th><th>description</th></tr><tr><td>ConcurrentInboundCalls</td><td>integer</td></tr><tr><td>ConcurrentBidirectionalCalls</td><td>integer</td></tr><tr><td>RedirectEnabled</td><td>true | false - enables 3xx redirection routing for account</td></tr></table>",
        "operationId" : "createOriginationConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/OriginationConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the Termination Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OriginationConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the termination settings resource is incorrect or other factors prevent execution of the POST  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<OriginationSettingResponse>    <ResponseStatus>        <ErrorCode>12591</ErrorCode>        <Description>ConcurrentBidirectionalCalls requires Termination and Origination product</Description>    </ResponseStatus></OriginationSettingResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{productname}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getProduct",
        "parameters" : [ {
          "name" : "productname",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{propertyName}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getProperty",
        "parameters" : [ {
          "name" : "propertyName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductsResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "flipProperty",
        "parameters" : [ {
          "name" : "propertyName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SettingPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sipcredentials" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get all SIP credentials",
        "description" : "GET is used to retrieve all SIP credentials for the account.",
        "operationId" : "getSipCredentials",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "usernamefragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainfragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - the SIP credentials retrieval request will return a list of the SIP credentials that are created on this account.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSipCredentials"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <SipCredentialsResponse> <Links> <first>Link=&lt;http://qa.bandwidth.com/iris/accounts/14/sipcredentials?size=500&amp;page=1&gt;;rel=\"first\"; </first> </Links> <SipCredentials> <SipCredential> <UserName>John</UserName> <Domain>bw.com</Domain> <Hash1>1g32gadgs433dd4</Hash1> <Hash1b>1g32gadgs433d24</Hash1b> </SipCredential> <SipCredential> <UserName>Mathew@bw.com</UserName> <Hash1>43543gggs43g324</Hash1> </SipCredential> </SipCredentials> </SipCredentialsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found - if the account specified does not exist or is locked or there are no SIP credentials associated with specified account it will result in a not found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <SipCredentialsResponse> <ResponseStatus> <ErrorCode>23008</ErrorCode> <Description>There are no Sip credentials associated with the account with ID = 41</Description> </ResponseStatus> </SipCredentialsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "summary" : "Add SIP credentials",
        "description" : "POST is used to create SIP credentials and associate its with the account.The key data elements in the submission are - <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">  <tbody>    <tr>      <td>UserName</td>      <td>This is subscriber name or aggregated name and domain value(ex: John@bw.com). Field is required. Max length - 32 characters.</td>    </tr>    <tr>      <td>Domain</td>      <td>This is subscriber domain. Domain is optional and if present will be appended to the UserName with an '@'. Max length - 32 characters.</td>    </tr>    <tr>      <td>Hash1</td>      <td>This is hash value #1 in MD5 representation. Field is required. Max length - 64 characters.</td>    </tr>    <tr>      <td>Hash1b</td>      <td>This is hash value #2 in MD5 representation. Field is optional. Max length - 64 characters.</td>    </tr>  </tbody></table>",
        "operationId" : "createSipCredentials",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountSipCredentials"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created - If there was at least one valid credential entry in specified list then such response will be returned.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSipCredentialsCreateResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <SipCredentialsResponse> <Errors> <Error> <ErrorCode>1003</ErrorCode> <Description>UserName is required</Description> <SipCredential> <Domain>bw.com</Domain> <Hash1>1g32gadgs433dd4</Hash1> <Hash1b>1g32gadgs433d24</Hash1b> </SipCredential> </Error> </Errors> <ValidSipCredentials> <SipCredential> <UserName>Bill</UserName> <Domain>bw.com</Domain> <Hash1>43543gggs43g324</Hash1> <Hash1b>4562gadgs433454</Hash1b> </SipCredential> </ValidSipCredentials> </SipCredentialsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - If all credential entries in specified list are invalid it will result in bad request with list of errors.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <SipCredentialsResponse> <ResponseStatus> <Description>Please check your input parameters.</Description> </ResponseStatus> <Errors> <Error> <ErrorCode>1003</ErrorCode> <Description>UserName is required</Description> <SipCredential> <Domain>bw.com</Domain> <Hash1>1g32gadgs433dd4</Hash1> <Hash1b>1g32gadgs433d24</Hash1b> </SipCredential> </Error> <Error> <ErrorCode>23009</ErrorCode> <Description>Sip credential Bill@bw.com does already exist on the account with ID = 41</Description> <SipCredential> <UserName>Bill</UserName> <Domain>bw.com</Domain> <Hash1>43543gggs43g324</Hash1> <Hash1b>4562gadgs433454</Hash1b> </SipCredential> </Error> </Errors> </SipCredentialsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sipCredentials" : {
      "get" : {
        "tags" : [ "internal" ],
        "summary" : "Get all SIP credentials",
        "description" : "TODO",
        "operationId" : "getSipCredentials_1",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "usernamefragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainfragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipCredentials"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sipcredentials/{aggregatedusername}" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get SIP credentials by aggregated username",
        "description" : "TODO",
        "operationId" : "getSipCredential",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "aggregatedusername",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipCredentialResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "summary" : "Update SIP credentials",
        "description" : "TODO",
        "operationId" : "updateSipCredential",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "aggregatedusername",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipCredential"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipCredentialResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "summary" : "Delete SIP credentials",
        "description" : "TODO",
        "operationId" : "deleteSipCredential",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "aggregatedusername",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/sipCredentials/{aggregatedusername}" : {
      "get" : {
        "tags" : [ "internal" ],
        "summary" : "Get SIP credentials by aggregated username",
        "description" : "TODO",
        "operationId" : "getSipCredential_1",
        "parameters" : [ {
          "name" : "aggregatedusername",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipCredentials"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Site",
        "description" : "retrieves the information associated with the site id",
        "operationId" : "getSite",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "site id successfully retrieved",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SiteResponse>    <Site>        <Id>3013</Id>        <Name>Raleigh</Name>        <Description>Test Gateway</Description>        <CustomerName>BW</CustomerName>        <Address>            <HouseNumber>1600</HouseNumber>            <StreetName>PENNSYLVANIA</StreetName>            <StreetSuffix>AVE</StreetSuffix>            <PostDirectional>NW</PostDirectional>            <City>WASHINGTON</City>            <StateCode>DC</StateCode>            <Zip>20006</Zip>            <Country>US</Country>            <AddressType>Service</AddressType>        </Address>        <!-- Following appears only for sites on UC Trunking accounts. -->        <UcTrunkingConfiguration>            <Type>Seats</Type>            <UsageCategory>UC500</UsageCategory>        </UcTrunkingConfiguration>    </Site></SiteResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "the site id entered does not exist",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SiteResponse>    <ResponseStatus>        <ErrorCode>12016</ErrorCode>        <Description>Site '3014' does not exist</Description>    </ResponseStatus></SiteResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "summary" : "Update Site",
        "description" : "updates the contents of a site id",
        "operationId" : "updateSite",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "the site id has been successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Information essential to the site id is missing",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?> <SiteResponse> <ResponseStatus> <ErrorCode>1003</ErrorCode> <Description>Address is required</Description> </ResponseStatus> </SiteResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Address needs some changes",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SiteResponse>    <ResponseStatus>        <ErrorCode>12112</ErrorCode>        <Description>The verifiable address closest to the submitted access is included below. Please use that street address or another valid street address in your next request</Description>    </ResponseStatus>    <AddressErrorDescription>        <AddressInconsistencies>Some adjustments are required to allow the address to pass geocoding:Specified value - Street Name : \"PENNSYLVANIO\" Valid value - \"PENNSYLVANIA\"</AddressInconsistencies>        <RecommendedAddress>            <AddressLine1>1600 PENNSYLVANIA AVE NW</AddressLine1>            <HouseNumber>1600</HouseNumber>            <StreetName>PENNSYLVANIA</StreetName>            <StreetSuffix>AVE</StreetSuffix>            <PostDirectional>NW</PostDirectional>            <City>WASHINGTON</City>            <StateCode>DC</StateCode>            <Zip>20006</Zip>            <Country>US</Country>        </RecommendedAddress>    </AddressErrorDescription>    <Site>        <Name>Raleigh</Name>        <Description>SIP gateway</Description>        <CustomerName>BW</CustomerName>        <CustomerProvidedId>1234567890</CustomerProvidedId>        <Address>            <HouseNumber>1600</HouseNumber>            <StreetName>PENNSYLVANIO</StreetName>            <StreetSuffix>AVE</StreetSuffix>            <PostDirectional>NW</PostDirectional>            <City>WASHINGTON</City>            <StateCode>DC</StateCode>            <Zip>20006</Zip>            <Country>US</Country>            <AddressType>Service</AddressType>        </Address>        <!-- Following applies only to sites on UC Trunking accounts. -->        <UcTrunkingConfiguration>            <Type>Seats</Type>            <UsageCategory>UC500</UsageCategory>        </UcTrunkingConfiguration>    </Site></SiteResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "summary" : "Delete Site",
        "description" : "deletes the site - sites can only be deleted if there are no SIP Peers attached to it",
        "operationId" : "deleteSite",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "the site has been successfully deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "DELETE request is invalid given the current state of the site",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?> <SiteResponse> <ResponseStatus> <ErrorCode>12054</ErrorCode> <Description> This site is currently locked for contract paperwork. Please contact support for further assistance. </Description> </ResponseStatus> </SiteResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Sites",
        "description" : "retrieve a list of all the sites associated with the account",
        "operationId" : "getSites",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tnCounts",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "sipPeerDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "summary",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SitesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><SitesResponse>    <Sites>        <Site>            <Id>399</Id>            <Name>Testsite</Name>            <Description>NewSite</Description>        </Site>        <Site>            <Id>403</Id>            <Name>GABESITEa</Name>            <Description>Awesomeness</Description>        </Site>    </Sites></SitesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Add a site to the account",
        "operationId" : "createSite",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Site"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The site has been successfully added to the account",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Information is missing from the body of the add site request",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SiteResponse>    <ResponseStatus>        <ErrorCode>1003</ErrorCode>        <Description>Address is required</Description>    </ResponseStatus></SiteResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Address needs some changes",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SiteResponse>    <ResponseStatus>        <ErrorCode>12112</ErrorCode>        <Description>The verifiable address closest to the submitted access is included below. Please use that street address or another valid street address in your next request</Description>    </ResponseStatus>    <AddressErrorDescription>        <AddressInconsistencies>Some adjustments are required to allow the address to pass geocoding:Specified value - Street Name : \"PENNSYLVANIO\" Valid value - \"PENNSYLVANIA\"</AddressInconsistencies>        <RecommendedAddress>            <AddressLine1>1600 PENNSYLVANIA AVE NW</AddressLine1>            <HouseNumber>1600</HouseNumber>            <StreetName>PENNSYLVANIA</StreetName>            <StreetSuffix>AVE</StreetSuffix>            <PostDirectional>NW</PostDirectional>            <City>WASHINGTON</City>            <StateCode>DC</StateCode>            <Zip>20006</Zip>            <Country>US</Country>        </RecommendedAddress>    </AddressErrorDescription>    <Site>        <Name>Raleigh</Name>        <Description>Test Gateway</Description>        <CustomerName>BW</CustomerName>        <Address>            <HouseNumber>1600</HouseNumber>            <StreetName>PENNSYLVANIO</StreetName>            <StreetSuffix>AVE</StreetSuffix>            <PostDirectional>NW</PostDirectional>            <City>WASHINGTON</City>            <StateCode>DC</StateCode>            <Zip>20006</Zip>            <Country>US</Country>        </Address>        <UcTrunkingConfiguration>            <Type>Seats</Type>            <UsageCategory>UC500</UsageCategory>        </UcTrunkingConfiguration>    </Site></SiteResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/lock" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the current lock state of a site.",
        "operationId" : "getSiteLock",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "site id successfully retrieved",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLockResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SiteLockResponse>    <Lock>        <Locked>true</Locked>    </Lock></SiteLockResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Modifies the lock state of a site.",
        "operationId" : "updateSiteLock",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The site's lock state has been successfully updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLockResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The request to modify the site's locked state was invalid.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" ?> <SiteLockResponse> <ResponseStatus> <ErrorCode>12632</ErrorCode> <Description>Invalid Locked field value 'not true' (expected 'true' or 'false').</Description> </ResponseStatus> </SiteLockResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "createSiteLock",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteLock"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteLockResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/billingId" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the current billing ID of a site.",
        "operationId" : "getSiteBillingId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "site id successfully retrieved",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteBillingIdResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SiteBillingIdResponse>    <BillingId>        <IdValue>true</IdValue>    </BillingId></SiteBillingIdResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Modifies the billing ID of a site.",
        "operationId" : "updateSiteBillingId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteBillingId"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The site's billing ID has been successfully updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteBillingIdResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The request to modify the site's billing ID was invalid.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" ?> <SiteBillingIdResponse> <ResponseStatus> <ErrorCode>12632</ErrorCode> <Description>Invalid BillingId->IdValue (expected numeric value).</Description> </ResponseStatus> </SiteBillingIdResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "createSiteBillingId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteBillingId"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteBillingIdResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteSiteBillingId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteBillingIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/contract" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the current billing ID of a site.",
        "operationId" : "getSiteContract",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "contract successfully retrieved",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteContractResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SiteContractResponse>    <Contract>        <SalesRepresentative>            <Id>12345</Id>            <FirstName>John</FirstName>            <LastName>Doe</LastName>            <Email>noreply@bandwidth.com</Email>            <PhoneNumber>9195555555</PhoneNumber>        </SalesRepresentative>        <ContactPerson>            <FirstName>Jane</FirstName>            <LastName>Doe</LastName>            <Email>jbs@bandwidth.com</Email>            <PhoneNumber>9195555555</PhoneNumber>        </ContactPerson>    </Contract></SiteContractResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "the billing ID does not exist",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SiteContractResponse>    <ResponseStatus>        <ErrorCode>12057</ErrorCode>        <Description>Contract for site id '332' does not exist</Description>    </ResponseStatus></SiteContractResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Updates the contract of a site.",
        "operationId" : "updateSiteContract",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteContract"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "An HTTP 200 (OK) is returned if the site's contract has been successfully updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteContractResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "An HTTP 400 (BAD REQUEST) is returned if the request to modify the site's contract was invalid, e.g. the Contact Person is omitted.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" ?><SiteContractResponse>    <ResponseStatus>        <ErrorCode>12051</ErrorCode>        <Description>The following fields are required for Agent accounts: ContactPerson->Email</Description>    </ResponseStatus></SiteContractResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "createSiteContract",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteContract"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteContractResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Deletes the contract from a locked site.",
        "operationId" : "deleteSiteContract",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An HTTP 200 (OK) is returned if the site's contract has been successfully deleted.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteContractResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "An HTTP 404 (NOT FOUND) is returned if the site's contract does not exist",
            "content" : {
              "application/xml" : { }
            }
          },
          "408" : {
            "description" : "An HTTP 408 (CONFLICT) is returned if the request to modify the site's contract can not be completed in the site's current state. The site must be unlocked to perform this operation.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" ?><SiteContractResponse>    <ResponseStatus>        <ErrorCode>12058</ErrorCode>        <Description>            This site is currently unlocked, and the requested operation can only be completed on a locked site. Please contact support for further assistance.        </Description>    </ResponseStatus></SiteContractResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "These are the settings associated with the provisioning of Termination settings. The current values represented below detail the legacy Termination settings appropriate for customers currently on Bandwidth Dashboard API.  In the future Bandwidth Dashboard API customers will use the Roger Termination Product manager, and define the set of Roger parameters using an extension of this interface.  A parameter 'RogerUsedForTerminationSettings' is used to control this behavior...    <ul>    <li>If RogerUsedForTerminationSettings is false, then the LegacyTerminationSettings will be used, RogerTerminationSettings will be empty</li>    <li>If RogerUsedForTerminationSettings is transition, then both LegacyTerminationSettings and RogerTerminationSettings elements are used</li>    <li>If RogerUsedForTerminationSettings is true, then the RogerTerminationSettings element will be used.  LegacyTerminationSettings will be empty.</li>    </ul>    <ul>    <li>HttpVoiceProxyTermHost is created automatically when the first voice application is created for HTTP Voice V2 for this account, and deleted when the last voice application for HTTP Voice V2 is removed from this account.</li>    <li>HttpVoiceProxyTermHost is only displayed for internal users.</li>    </ul>",
        "operationId" : "getTerminationConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An optional description of the response.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountTerminationConfigurationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TerminationSettingResponse>    <TerminationSettings>        <RogerUsedForTerminationSettings>false</RogerUsedForTerminationSettings>        <LegacyTerminationSettings>            <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>            <CpsQueue>300</CpsQueue>            <ConcurrentOutboundCalls>15</ConcurrentOutboundCalls>            <ConcurrentBidirectionalCalls>0</ConcurrentBidirectionalCalls>            <BillingType>DNIS</BillingType>            <RateType>npanxx</RateType>            <DiscountPercentage>29</DiscountPercentage>            <GuaranteedTermination>false</GuaranteedTermination>        </LegacyTerminationSettings>        <RogerTerminationSettings/>    </TerminationSettings>    <!-- For Full Termination -->    <TerminationSettings>        <RogerUsedForTerminationSettings>true</RogerUsedForTerminationSettings>        <HttpVoiceProxyTermHost>[Host IP address]</HttpVoiceProxyTermHost> <!-- Read only -->        <RogerTerminationSettings>            <SubnetAddressingAllowed>true</SubnetAddressingAllowed>        </RogerTerminationSettings>    </TerminationSettings></TerminationSettingResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "If the settings are not present for the Termination product a 404 NOT FOUND is returned with an explanatory payload.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OriginationSettingResponse>    <ResponseStatus>        <ErrorCode>12030</ErrorCode>        <Description>Termination product has not been configured</Description>    </ResponseStatus></OriginationSettingResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "This resource can be PUT or POSTed to in order to establish the appropriate settings.Some of the important values that are established as part of this termination are described in the section on POST.",
        "operationId" : "updateTerminationConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountTerminationConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the Termination Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountTerminationConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the termination settings resource is incorrect.  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationSettingResponse>    <ResponseStatus>        <ErrorCode>12586</ErrorCode>        <Description>CustomerTrafficAllowed is not valid. Valid values: ALL, LITE, DOMESTIC, NONE</Description>    </ResponseStatus></TerminationSettingResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "This resource can be PUT or POSTed to in order to establish the appropriate settings.Some of the important values that are established as part of this termination are...<table><tr><th>parameter</th><th>description</th></tr><tr><td>RogerUsedForTerminationSettings</td><td>Boolean - a flag to indicate whether termination services are controlled by Roger or not</td></tr><tr><td>LegacyTerminationSettings</td><td>a group encapsulating legacy termination settings</td></tr><tr><td>ConcurrentOutboundCalls</td><td>integer</td></tr><tr><td>ConcurrentBidirectionalCalls</td><td>integer</td></tr><tr><td>CpsQueue</td><td>an integer value - typically 300</td></tr><tr><td>CustomerTrafficAllowed</td><td>ALL, LITE, NONE and DOMESTIC</td></tr><tr><td>RateType</td><td>npanxx, flat, fullcr or billnumlcr</td></tr><tr><td>DiscountPercentage</td><td>an integer between 0 and 100</td></tr><tr><td>GuaranteedTermination</td><td>true or false</td></tr><tr><td>RogerTerminationSettings</td><td>a group encapsulating the new (undeveloped) ROGER termination settings</td></tr><tr><td>SubnetAddressingAllowed</td><td>true or false</td></tr></table>",
        "operationId" : "createTerminationConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountTerminationConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the Termination Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountTerminationConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the termination settings resource is incorrect.  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationSettingResponse>    <ResponseStatus>        <ErrorCode>nnnnn</ErrorCode>        <Description>Legacy Termination settings description incompatible with use of Roger for termination</Description>    </ResponseStatus></TerminationSettingResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/product/{productId}/toassign" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get product and assignment mask for this product",
        "operationId" : "getProductToAssign",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationProductResponse> <TerminationProductWrapper> <TerminationProduct> <id>4</id> <name>Product name</name> <TerminationAttributes> <TerminationAttribute> <id>15</id> <type>TRACE</type> <value>true</value> <effectiveDate>2014-10-23T13:57:43</effectiveDate> <inEffectiveDate>2014-10-23T13:57:43</inEffectiveDate> </TerminationAttribute> </TerminationAttributes> </TerminationProduct> <TerminationProductAssignment> <productName>Product name</productName> <attributes/> </TerminationProductAssignment> </TerminationProductWrapper> </TerminationProductResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "assignment was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/product/{productId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get assignment by product id",
        "operationId" : "getAssignedProduct",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCustomerProductAssignmentResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCustomerProductAssignmentResponse> <TerminationProductWrapper> <TerminationProduct> <id>2</id> <name>Some name</name> <TerminationAttributes> <TerminationAttribute> <id>9</id> <type>TRACE</type> <value>true</value> <effectiveDate>2014-10-23T13:45:34</effectiveDate> <inEffectiveDate>2014-10-23T13:45:34</inEffectiveDate> </TerminationAttribute> </TerminationAttributes> </TerminationProduct> </TerminationProductWrapper> </TerminationCustomerProductAssignmentResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "product assignment was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "delete product assignment",
        "operationId" : "deleteAssignedProduct",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCustomerProductAssignmentResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCustomerProductAssignmentResponse> <TerminationProductWrapper> <TerminationProduct> <id>3</id> <name>Default Dto</name> <TerminationAttributes> <TerminationAttribute> <id>12</id> <type>TRACE</type> <value>true</value> <effectiveDate>2014-10-23T13:51:03</effectiveDate> <inEffectiveDate>2014-10-23T13:51:03</inEffectiveDate> </TerminationAttribute> </TerminationAttributes> </TerminationProduct> </TerminationProductWrapper> </TerminationCustomerProductAssignmentResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "some required value was not found",
            "content" : {
              "application/xml" : { }
            }
          },
          "404" : {
            "description" : "account or attribute was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/product" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getAllAssignedProducts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCustomerProductAssignmentsResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "updateProduct",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationProductAssignment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCustomerProductAssignmentResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "assign product to customer",
        "operationId" : "assignProduct",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationProductAssignment"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "product was successfully assigned",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCustomerProductAssignmentResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "specified in request account was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/ratedeck" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getAssignedRateDecks",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "assign rate deck to customer",
        "operationId" : "assignRateDeck",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationRateDeckAssignment"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "rate deck was successfully assigned",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "account or ratedeck was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/ratedeck/{assignmentId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get assignment by id",
        "operationId" : "getAssignedRateDeck",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "assignmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationRateDeckAssignmentResponse> <TerminationRateDeckAssignment> <id>4</id> <termServiceRateDeckId>5</termServiceRateDeckId> <termServiceAccountId>51</termServiceAccountId> <externalProfileId>78</externalProfileId> <externalAssignmentId>4</externalAssignmentId> <billingAccountId>1000</billingAccountId> <increaseDate>2014-10-23T12:10:35</increaseDate> <decreaseDate>2014-10-23T12:10:35</decreaseDate> </TerminationRateDeckAssignment> </TerminationRateDeckAssignmentResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "account or rate deck assignment was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "delete rate deck assignment",
        "operationId" : "deleteAssignedRateDeck",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "assignmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "rate deck assignment was deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "account or rate deck assignment was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/attribute" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get all attributes for account",
        "operationId" : "getCustomerAttributes",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationAttributesResponse> <TerminationAttributesWrapper> <accountId>42</accountId> <TerminationAttributes> <TerminationAttribute> <id>2</id> <type>TRACE</type> <value>true</value> <effectiveDate>2014-10-23T12:49:18</effectiveDate> <inEffectiveDate>2014-10-23T12:49:18</inEffectiveDate> <externalId>5</externalId> </TerminationAttribute> </TerminationAttributes> </TerminationAttributesWrapper> </TerminationAttributesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "add to customer attribute",
        "operationId" : "postCustomerAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttribute"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "attribute was successfully added",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "specified in request account was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/attribute/{attributeId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get account attribute by id",
        "operationId" : "getCustomerAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationAttributeResponse> <TerminationAttributeWrapper> <accountId>44</accountId> <TerminationAttribute> <id>4</id> <type>TRACE</type> <value>true</value> <effectiveDate>2014-10-23T13:10:18</effectiveDate> <inEffectiveDate>2014-10-23T13:10:18</inEffectiveDate> <externalId>7</externalId> </TerminationAttribute> </TerminationAttributeWrapper> </TerminationAttributeResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "account or attribute was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "update account attribute (attribute value)",
        "operationId" : "putCustomerAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttribute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TerminationAttributeResponse>    <TerminationAttributeWrapper>        <accountId>45</accountId>        <TerminationAttribute>            <id>5</id>            <type>TRACE</type>            <value>false</value>            <effectiveDate>2014-10-23T13:20:29</effectiveDate>            <inEffectiveDate>2014-10-23T13:20:29</inEffectiveDate>            <externalId>8</externalId>        </TerminationAttribute>    </TerminationAttributeWrapper></TerminationAttributeResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "update validation failed, eg changed forbidden fields (like metadata name)",
            "content" : {
              "application/xml" : { }
            }
          },
          "404" : {
            "description" : "account or attribute was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "delete account attribute",
        "operationId" : "deleteCustomerAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "account attribute was deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "some required value was not found",
            "content" : {
              "application/xml" : { }
            }
          },
          "404" : {
            "description" : "account or attribute was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/migrate" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "postTerminationMigrate",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationMigrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/tollfree/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve Toll Free Settings for this account",
        "operationId" : "getTollFreeConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TollFreeSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TollFreeSettings>    <RespOrgException>        true    </RespOrgException></TollFreeSettings>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failure to parse the request, or inconsistent provisioned data, such as no related product associated with the account.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Update Toll Free Settings for this account",
        "operationId" : "updateTollFreeConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TollFreeSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Created - Toll Free Settings are successfully updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TollFreeSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failure to parse the request, or inconsistent provisioned data, such as no related product associated with the account.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/trunkgroups" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves an account's trunk groups.",
        "operationId" : "getTrunkGroups",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An account's trunk groups have been successfully retrieved.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrunkGroupsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TrunkGroupsResponse>    <TrunkGroups>        <TrunkGroup>            <Id>NOC_111DMD46OYPX41J2_TG</Id>            <Status>SAVED</Status>        </TrunkGroup>    </TrunkGroups></TrunkGroupsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/uctrunks" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get UC Trunking Hosted Configuration",
        "description" : "These are the settings associated with the provisioning of UC Trunking settings.",
        "operationId" : "getUcTrunkingHostedConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UcTrunkingCloudConfigurationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<UcTrunkingSettingsResponse>    <UcTrunkingSettings>        <!-- Either AGENT (for Agency+ accounts) or RESELLER (for wholesale) -->        <PartnerType>AGENT</PartnerType>        <MaxUcTrunks>40</MaxUcTrunks>        <BillingType>DNIS</BillingType>        <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>        <UsageCategory>UC500</UsageCategory>        <TrunkAllocationRules>            <TrunkAllocationRule>                <LowerBound>1</LowerBound>                <Ratio>1</Ratio>            </TrunkAllocationRule>            <TrunkAllocationRule>                <LowerBound>10</LowerBound>                <Ratio>2</Ratio>            </TrunkAllocationRule>            <TrunkAllocationRule>                <LowerBound>15</LowerBound>                <Ratio>5</Ratio>            </TrunkAllocationRule>        </TrunkAllocationRules>    </UcTrunkingSettings></UcTrunkingSettingsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "If the settings are not present for the UC Trunking product a 404 NOT FOUND is returned with an explanatory payload.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UcTrunkingSettingsResponse>    <ResponseStatus>        <ErrorCode>12017</ErrorCode>        <Description>Account '14' does not have product 'UcTrunking'</Description>    </ResponseStatus></UcTrunkingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "summary" : "Update UC Trunking Hosted Configuration",
        "description" : "This resource can be PUT or POSTed to in order to establish the appropriate settings.Some of the important values that are established as part of this UC Trunking are described in the section on POST.",
        "operationId" : "updateUcTrunkingHostedConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UcTrunkingCloudConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the UC Trunking Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UcTrunkingCloudConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the UC Trunking settings resource is incorrect.  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UCTrunkingSettingResponse>    <ResponseStatus>        <ErrorCode></ErrorCode>        <Description></Description>    </ResponseStatus></UCTrunkingSettingResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "summary" : "Create UC Trunking Hosted Configuration",
        "description" : "Creates a UC Trunking hosted (cloud) configuration",
        "operationId" : "createUcTrunkingHostedConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UcTrunkingCloudConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the UC Trunking Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UcTrunkingCloudConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the UC Trunking settings resource is incorrect.  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UCTrunkingSettingResponse>    <ResponseStatus>        <ErrorCode></ErrorCode>        <Description></Description>    </ResponseStatus></UCTrunkingSettingResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/uctrunking/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get UC Trunking Configuration",
        "description" : "These are the settings associated with the provisioning of UC Trunking settings.",
        "operationId" : "getUcTrunkingConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OriginationConfigurationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<UcTrunkingSettingsResponse>    <UcTrunkingSettings>        <!-- Either AGENT (for Agency+ accounts) or RESELLER (for wholesale) -->        <PartnerType>AGENT</PartnerType>        <MaxUcTrunks>40</MaxUcTrunks>        <BillingType>DNIS</BillingType>        <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>        <UsageCategory>UC500</UsageCategory>        <TrunkAllocationRules>            <TrunkAllocationRule>                <LowerBound>1</LowerBound>                <Ratio>1</Ratio>            </TrunkAllocationRule>            <TrunkAllocationRule>                <LowerBound>10</LowerBound>                <Ratio>2</Ratio>            </TrunkAllocationRule>            <TrunkAllocationRule>                <LowerBound>15</LowerBound>                <Ratio>5</Ratio>            </TrunkAllocationRule>        </TrunkAllocationRules>    </UcTrunkingSettings></UcTrunkingSettingsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "If the settings are not present for the UC Trunking product a 404 NOT FOUND is returned with an explanatory payload.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UcTrunkingSettingsResponse>    <ResponseStatus>        <ErrorCode>12017</ErrorCode>        <Description>Account '14' does not have product 'UcTrunking'</Description>    </ResponseStatus></UcTrunkingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "summary" : "Update UC Trunking Configuration",
        "description" : "This resource can be PUT or POSTed to in order to establish the appropriate settings.Some of the important values that are established as part of this UC Trunking are described in the section on POST.",
        "operationId" : "updateUcTrunkingConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UcTrunkingConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the UC Trunking Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UcTrunkingConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the UC Trunking settings resource is incorrect.  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UCTrunkingSettingResponse>    <ResponseStatus>        <ErrorCode></ErrorCode>        <Description></Description>    </ResponseStatus></UCTrunkingSettingResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "summary" : "Create UC Trunking Configuration",
        "description" : "This resource can be PUT or POSTed to in order to establish the appropriate settings.",
        "operationId" : "createUcTrunkingConfiguration",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UcTrunkingConfigurationPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "a 200 OK is returned on successful updating of the UC Trunking Settings.  There is no payload returned with a 200 OK.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UcTrunkingConfigurationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "a 400 BAD REQUEST will be returned with a descriptive payload if the XML describing the UC Trunking settings resource is incorrect.  The error contains an error code and description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UCTrunkingSettingResponse>    <ResponseStatus>        <ErrorCode></ErrorCode>        <Description></Description>    </ResponseStatus></UCTrunkingSettingResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/{accounts}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getLdapAccounts",
        "parameters" : [ {
          "name" : "suggestions",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return all existed accounts",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IrisAccountsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapAccountsResponse>    <AccountList>        <totalCount>10</totalCount>        <Account>            <AccountId>1</AccountId>            <AccountName>OneCompany</AccountName>        </Account>        <Account>            <AccountId>2</AccountId>            <AccountName>Test Republic Wireless</AccountName>        </Account>        <Account>            <AccountId>753</AccountId>            <AccountName>Bandwidth CLEC</AccountName>        </Account>    </AccountList></LdapAccountsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/{accounts}/{accountId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about account by unique account id.",
        "operationId" : "getLdapAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IrisAccountResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapAccountResponse> <Account> <AccountId>5000056</AccountId> <AccountName>Comtel Connect LLC</AccountName> </Account> </LdapAccountResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The account does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapAccountResponse> <ResponseStatus> <ErrorCode>12020</ErrorCode> <Description>Account '500005' does not exist</Description> </ResponseStatus> <Account> <AccountId>500005</AccountId> </Account> </LdapAccountResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about domain with some name.",
        "operationId" : "getDomain",
        "parameters" : [ {
          "name" : "domainName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><DomainResponse>    <Domain>        <DomainName>Iris</DomainName>        <DomainDescription>Bandwidth Dashboard API and Portal Users</DomainDescription>        <DomainSettings />    </Domain></DomainResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Domain name not found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><DomainResponse>    <ResponseStatus>        <ErrorCode>12068</ErrorCode>        <Description>Domain 'iris' does not exist</Description>    </ResponseStatus></DomainResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/{permissions}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getLdapPermissions",
        "responses" : {
          "200" : {
            "description" : "Return all existed permissions",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapPermissionsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapPermissionsResponse>    <PermissionList>        <Permission>            <PermissionId>report-list-instances</PermissionId>            <Internal>false</Internal>        </Permission>        <Permission>            <PermissionId>report-create-definition</PermissionId>            <Internal>false</Internal>        </Permission>        <Permission>            <PermissionId>report-delete-definition</PermissionId>            <PermissionDescription>Report-retrieve-file description-DEL</PermissionDescription>            <Internal>true</Internal>        </Permission>        <Permission>            <PermissionId>report-create-instance</PermissionId>            <PermissionDescription>Lets user to create report instances</PermissionDescription>            <Internal>true</Internal>        </Permission>    </PermissionList></LdapPermissionsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/{permissions}/{permissionId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about permission by unique permission name.",
        "operationId" : "getLdapPermission",
        "parameters" : [ {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapPermissionResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapPermissionResponse> <Permission> <PermissionId>report-create-instance</PermissionId> <PermissionDescription>Lets user to create report instances</PermissionDescription> <Internal>false</Internal> </Permission> </LdapPermissionResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The permission does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapPermissionResponse> <ResponseStatus> <ErrorCode>12069</ErrorCode> <Description>Permission 'report-create-instance123' does not exist</Description> </ResponseStatus> </LdapPermissionResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Updates the information for permission by unique permission name or creates permission, if it doesn't exist.",
        "operationId" : "updateLdapPermission",
        "parameters" : [ {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapPermission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The permission has been successfully updated or created and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapPermissionResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapPermissionResponse> <Permission> <PermissionId>report-create-instance</PermissionId> <PermissionDescription>Lets user to create report instances</PermissionDescription> <Internal>false</Internal> </Permission> </LdapPermissionResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Removes specified permission.",
        "operationId" : "deleteLdapPermission",
        "parameters" : [ {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The permission has been successfully removed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapPermissionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The permission does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapPermissionResponse> <ResponseStatus> <ErrorCode>12069</ErrorCode> <Description>Permission 'test-permission2' does not exist</Description> </ResponseStatus> </LdapPermissionResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/{userPreferences}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getLdapUserPreferences",
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserPreferencesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/{roles}/{roleId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about role by unique role name.",
        "operationId" : "getLdapRole",
        "parameters" : [ {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapRoleResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapRoleResponse> <Role> <RoleId>report-editor</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>123</RoleDescription> <Internal>false</Internal> </Role> </LdapRoleResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The role does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapRoleResponse> <ResponseStatus> <ErrorCode>12070</ErrorCode> <Description>Role 'report-editor1' does not exist</Description> </ResponseStatus> </LdapRoleResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/{roles}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getLdapRoles",
        "responses" : {
          "200" : {
            "description" : "Return all existed roles",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapRoleResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapRolesResponse>    <RoleList>        <Role>            <RoleId>report-editor</RoleId>            <RoleSimpleName>Simple Name</RoleSimpleName>            <RoleDescription>report editor role</RoleDescription>            <Internal>false</Internal>        </Role>        <Role>            <RoleId>admin-role</RoleId>            <RoleSimpleName>Simple Name</RoleSimpleName>            <RoleDescription>Admin role</RoleDescription>            <Internal>true</Internal>        </Role>    </RoleList></LdapRolesResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/{roles}/{roleId}/{permissions}/{permissionId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about permission by unique name, related to specific role.",
        "operationId" : "getLdapRolePermissions",
        "parameters" : [ {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapRolePermissionXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapRolePermissionResponse> <Role> <RoleId>test-role</RoleId> <PermissionList> <Permission> <PermissionId>report-retrieve-file-9</PermissionId> <Internal>true</Internal> </Permission> </PermissionList> </Role> </LdapRolePermissionResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The role or permission does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapRolePermissionResponse> <ResponseStatus> <ErrorCode>12069</ErrorCode> <Description>Permission 'report-create-definition1' does not exist in role 'test-role'</Description> </ResponseStatus> <Role> <RoleId>test-role</RoleId> <PermissionList> <Permission> <PermissionId>report-create-definition1</PermissionId> </Permission> </PermissionList> </Role> </LdapRolePermissionResponse> <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapRolePermissionResponse> <ResponseStatus> <ErrorCode>12073</ErrorCode> <Description>Role 'test-role1' does not exist</Description> </ResponseStatus> <Role> <RoleId>test-role1</RoleId> <PermissionList> <Permission> <PermissionId>report-create-definition1</PermissionId> </Permission> </PermissionList> </Role> </LdapRolePermissionResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/{roles}/{roleId}/{permissions}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getLdapRolePermissions_1",
        "parameters" : [ {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return all existing permissions for role",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapRolePermissionsXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapRolePermissionsResponse>    <Role>        <PermissionList>            <Permission>                <PermissionId>report-list-reports</PermissionId>                <PermissionDescription>Default Description</PermissionDescription>                <Internal>false</Internal>            </Permission>            <Permission>                <PermissionId>report-retrieve-file-9</PermissionId>                <Internal>true</Internal>            </Permission>            <Permission>                <PermissionId>report-retrieve-file-8</PermissionId>                <PermissionDescription>123</PermissionDescription>                <Internal>true</Internal>            </Permission>            <Permission>                <PermissionId>test-permission-put-1</PermissionId>                <PermissionDescription>123</PermissionDescription>                <Internal>true</Internal>            </Permission>        </PermissionList>    </Role></LdapRolePermissionsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/tokens" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "listTokens",
        "parameters" : [ {
          "name" : "accountScope",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokensResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "createTokenSecretPair",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TokenScope"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/tokens/{tokenId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "retrieveToken",
        "parameters" : [ {
          "name" : "tokenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountScope",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "deleteToken",
        "parameters" : [ {
          "name" : "tokenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountScope",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about user.",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserResponse>    <User>        <UserId>user</UserId>        <Email>user@gmail.com</Email>        <EmailValidated>true</EmailValidated>        <UserSettings>            <Scope>Account</Scope>            <Active>true</Active>            <AllowedApiOrigin>API</AllowedApiOrigin>        </UserSettings>        <UserProfile>            <FirstName>J</FirstName>            <LastName>M</LastName>        </UserProfile>        <RoleList>            <Role>                <RoleId>Test</RoleId>                <RoleSimpleName>Simple Name</RoleSimpleName>                <RoleDescription>Desc</RoleDescription>            </Role>        </RoleList>        <AccountList>            <Account>                <AccountId>123</AccountId>                <AccountName>Neustar</AccountName>            </Account>        </AccountList>    </User></LdapUserResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "User ID is not correct.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserResponse>    <ResponseStatus>        <ErrorCode>1012</ErrorCode>        <Description>userId is too short. Min length 4 characters</Description>    </ResponseStatus>    <User>        <UserId>tst</UserId>    </User></LdapUserResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserResponse>    <ResponseStatus>        <ErrorCode>12000</ErrorCode>        <Description>User 'testing' does not exist</Description>    </ResponseStatus>    <User>        <UserId>testing</UserId>    </User></LdapUserResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Allows the user update.",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapUser"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "User updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserResponse>    <User>        <UserId>test3</UserId>        <Email>test3@gmail.com</Email>        <EmailValidated>true</EmailValidated>        <UserSettings>            <Active>false</Active>            <AllowedApiOrigin>API</AllowedApiOrigin>        </UserSettings>        <UserProfile>            <FirstName>J</FirstName>            <LastName>M</LastName>            <StreetAddress>                <HouseNumber>123</HouseNumber>                <StreetName>Street</StreetName>                <City>Raleigh</City>                <State>NC</State>                <PostalCode>12345</PostalCode>            </StreetAddress>            <TelephoneNumbers>                <HomePhone>2027445566</HomePhone>                <CellPhone>2027445577</CellPhone>                <WorkPhone>2027445588</WorkPhone>                <OtherPhone>2027445599</OtherPhone>            </TelephoneNumbers>            <CompanyName>MyCompany</CompanyName>        </UserProfile>    </User></LdapUserResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Some information is not correct.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserResponse>    <ResponseStatus>        <ErrorCode>12071</ErrorCode>        <Description>A user with email 'test@gmail.com' already exists</Description>    </ResponseStatus>    <User>        <UserId>test</UserId>        <Email>test@gmail.com</Email>        <Password>123456</Password>        <UserProfile>            <FirstName>J</FirstName>            <LastName>M</LastName>            <StreetAddress>                <HouseNumber>123</HouseNumber>                <StreetName>Street</StreetName>                <City>Raleigh</City>                <State>NC</State>                <PostalCode>12345</PostalCode>            </StreetAddress>            <TelephoneNumbers>                <HomePhone>2027445566</HomePhone>                <CellPhone>2027445577</CellPhone>                <WorkPhone>2027445588</WorkPhone>                <OtherPhone>2027445599</OtherPhone>            </TelephoneNumbers>            <CompanyName>MyCompany</CompanyName>        </UserProfile>    </User></LdapUserResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "User has access for users in accounts that they control.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserResponse>    <ResponseStatus>        <ErrorCode>12697</ErrorCode>        <Description>This user can only manage users in accounts that they control</Description>    </ResponseStatus>    <User>        <UserId>test1Uid</UserId>        <Email>yyy@gmail.com</Email>        <EmailValidated>true</EmailValidated>        <UserSettings>            <Scope>Account</Scope>            <Active>true</Active>            <AllowedApiOrigin>API</AllowedApiOrigin>        </UserSettings>        <UserProfile>            <FirstName>test2FN</FirstName>            <LastName>test2LN</LastName>            <TelephoneNumbers>                <HomePhone>2022345678</HomePhone>            </TelephoneNumbers>        </UserProfile>        <RoleList>            <Role>                <RoleId>default</RoleId>                <RoleSimpleName>default role</RoleSimpleName>                <RoleDescription>default</RoleDescription>            </Role>        </RoleList>    </User></LdapUserResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserResponse>    <ResponseStatus>        <ErrorCode>12000</ErrorCode>        <Description>User 'testing' does not exist</Description>    </ResponseStatus>    <User>        <UserId>testing</UserId>        <Email>testing@gmail.com</Email>        <Password>123456</Password>        <UserProfile>            <FirstName>J</FirstName>            <LastName>M</LastName>            <StreetAddress>                <HouseNumber>123</HouseNumber>                <StreetName>Street</StreetName>                <City>Raleigh</City>                <State>NC</State>                <PostalCode>12345</PostalCode>            </StreetAddress>            <TelephoneNumbers>                <HomePhone>2027445566</HomePhone>                <CellPhone>2027445577</CellPhone>                <WorkPhone>2027445588</WorkPhone>                <OtherPhone>2027445599</OtherPhone>            </TelephoneNumbers>            <CompanyName>MyCompany</CompanyName>        </UserProfile>    </User></LdapUserResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Allows to create a new user.",
        "operationId" : "createUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapUser"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "User successfully created.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserResponse>    <User>        <UserId>test</UserId>        <Email>test@gmail.com</Email>        <EmailValidated>true</EmailValidated>        <UserSettings>            <Active>false</Active>            <AllowedApiOrigin>GUI</AllowedApiOrigin>        </UserSettings>        <UserProfile>            <FirstName>J</FirstName>            <LastName>M</LastName>            <StreetAddress>                <HouseNumber>123</HouseNumber>                <StreetName>Street</StreetName>                <City>Raleigh</City>                <State>NC</State>                <PostalCode>12345</PostalCode>            </StreetAddress>            <TelephoneNumbers>                <HomePhone>2027445566</HomePhone>                <CellPhone>2027445577</CellPhone>                <WorkPhone>2027445588</WorkPhone>                <OtherPhone>2027445599</OtherPhone>            </TelephoneNumbers>            <CompanyName>MyCompany</CompanyName>        </UserProfile>    </User></LdapUserResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Some information is not correct.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserResponse>    <ResponseStatus>        <ErrorCode>12688</ErrorCode>        <Description>User ID in request body must match with user ID in URL</Description>    </ResponseStatus>    <User>        <UserId>test</UserId>        <Email>test@gmail.com</Email>        <Password>123456</Password>        <UserProfile>            <FirstName>J</FirstName>            <LastName>M</LastName>            <StreetAddress>                <HouseNumber>123</HouseNumber>                <StreetName>Street</StreetName>                <City>Raleigh</City>                <State>NC</State>                <PostalCode>12345</PostalCode>            </StreetAddress>            <TelephoneNumbers>                <HomePhone>2027445566</HomePhone>                <CellPhone>2027445577</CellPhone>                <WorkPhone>2027445588</WorkPhone>                <OtherPhone>2027445599</OtherPhone>            </TelephoneNumbers>            <CompanyName>MyCompany</CompanyName>        </UserProfile>    </User></LdapUserResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Removing migrated user and all related information from LDAP.",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User has been successfully removed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "User was not found.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/{domainName}/users/permittedaccess" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Determine whether the current user has named permission",
        "operationId" : "validateUserPermission",
        "parameters" : [ {
          "name" : "permission",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The user does have the named permission",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUsersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "empty body"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User does not have the named permission in their set of named permissions",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "empty body"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about  all users.",
        "operationId" : "getUsers",
        "parameters" : [ {
          "name" : "suggestions",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUsersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUsersResponse>    <UserList>    <totalCount>4030</totalCount>    <User>        <FirstName>Addindg</FirstName>        <LastName>User 1</LastName>        <UserId>addinguser1</UserId>        <Email>addinguser1@gmail.com</Email>        <Scope>All</Scope>        <EmailValidated>false</EmailValidated>        <Active>true</Active>    </User>    <User>        <FirstName>Adding</FirstName>        <LastName>User 2</LastName>        <UserId>addinguser2</UserId>        <Email>addinguser2@gmail.com</Email>        <Scope>All</Scope>        <EmailValidated>false</EmailValidated>        <Active>true</Active>    </User></LdapUsersResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}/{password}" : {
      "put" : {
        "tags" : [ "external" ],
        "description" : "Update user's password. Only logged user can change your password.",
        "operationId" : "updatePassword",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapUserPassword"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Password updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserPasswordResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserPasswordResponse>     <User>         <UserId>testCreateUserQ</UserId>         <Password>testCreateUserQ</Password>     </User> </LdapUserPasswordResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Password is not correct.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserPasswordResponse>    <ResponseStatus>        <ErrorCode>1012</ErrorCode>        <Description>Password is too short. Min length 6 characters</Description>    </ResponseStatus>    <User>        <UserId>testCreateUserQ</UserId>        <Password>test</Password>    </User></LdapUserPasswordResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserPasswordResponse>    <ResponseStatus>        <ErrorCode>12618</ErrorCode>        <Description>Provided username 'testCreateUserQ1' doesn't match login username 'systemUser'</Description>    </ResponseStatus>    <User>        <UserId>testCreateUserQ1</UserId>        <Password>testCreateUserQ</Password>    </User></LdapUserPasswordResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}/{accounts}/{accountId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getUserAccount",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccountResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "addUserAccount",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccountResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "deleteUserAccount",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}/{accounts}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about accounts associated with user.",
        "operationId" : "getUserAccounts",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccountsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UserAccountsResponse>    <User>        <AccountList>            <Account>                <AccountId>123</AccountId>                <AccountName>Neustar</AccountName>            </Account>            <Account>                <AccountId>2</AccountId>                <AccountName>Google</AccountName>            </Account>        </AccountList>    </User></UserAccountsResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "User has system-wide scope.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UserAccountsResponse>    <ResponseStatus>        <ErrorCode>12079</ErrorCode>        <Description>Accounts cannot be associated with user that have system-wide scope</Description>    </ResponseStatus>    <User/></UserAccountsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<UserAccountsResponse>    <ResponseStatus>        <ErrorCode>12000</ErrorCode>        <Description>User 'testing' does not exist</Description>    </ResponseStatus>    <User/></UserAccountsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Allows the user replace associated accounts.",
        "operationId" : "replaceUserAccounts",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapAccountsDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Replaced user accounts association.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccountsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UserAccountsResponse>    <User>        <UserId>testCreatingUser1</UserId>        <AccountList>            <Account>                <AccountId>123</AccountId>                <AccountName>Neustar</AccountName>            </Account>            <Account>                <AccountId>1</AccountId>                <AccountName>test1</AccountName>            </Account>        </AccountList>    </User></UserAccountsResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Account scope user can add just own accounts.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UserAccountsResponse>    <ResponseStatus>        <ErrorCode>12689</ErrorCode>        <Description>Account(s) assigned to this user must be managed by the assigning user</Description>    </ResponseStatus>    <User>        <UserId>testCreatingUser1</UserId>        <AccountList>            <Account>                <AccountId>123</AccountId>            </Account>            <Account>                <AccountId>2</AccountId>            </Account>        </AccountList>    </User></UserAccountsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "User not found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UserAccountsResponse>    <ResponseStatus>        <ErrorCode>12000</ErrorCode>        <Description>User 'testing' does not exist</Description>    </ResponseStatus>    <User>        <UserId>testCreatingUser1</UserId>        <AccountList>            <Account>                <AccountId>123</AccountId>            </Account>            <Account>                <AccountId>2</AccountId>            </Account>        </AccountList>    </User></UserAccountsResponse>"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Some information is not correct.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UserAccountsResponse>    <ResponseStatus>        <ErrorCode>12020</ErrorCode>        <Description>Account '1' does not exist</Description>    </ResponseStatus>    <User>        <UserId>testCreatingUser1</UserId>        <AccountList>            <Account>                <AccountId>123</AccountId>            </Account>            <Account>                <AccountId>1</AccountId>            </Account>        </AccountList>    </User></UserAccountsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userid}/logs/{eventId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the details of a change, with prior and new values as appropriate.",
        "operationId" : "getUserEventDetails",
        "parameters" : [ {
          "name" : "userid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserActivityEventDetailsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserActivityEventDetailsResponse> <UserActivityEventDetails> <UserEvent/> <BeforeChanges> <UserId>testUser1</UserId> <RoleList/> </BeforeChanges> <AfterChanges> <UserId>testUser1</UserId> <RoleList> <Role> <RoleId>default</RoleId> </Role> <Role> <RoleId>LsrManagement</RoleId> </Role> </RoleList> </AfterChanges> </UserActivityEventDetails> </UserActivityEventDetailsResponse>"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "A 204 No Content response indicates that no changes of user have been exist in event.  There is no body associated with this response.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserActivityEventDetailsResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Event is not associated with impacted user or does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserActivityEventDetailsResponse> <ResponseStatus> <ErrorCode>12095</ErrorCode> <Description>User event with id '315' is not associated with user 'testUser1'</Description> </ResponseStatus> <UserActivityEventDetails> <UserEvent> <EventId>315</EventId> </UserEvent> </UserActivityEventDetails> </UserActivityEventDetailsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userid}/logs" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about user access activity in date range.",
        "operationId" : "getUserEventsLog",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserActivityEventLogResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserEventLog> <Links> <first>Link=&lt;http://admin.localhost:8080/iris/identitydomains/dashboard/users/testUser1/logs?startDate=2016-05-04&amp;endDate=2016-05-06&amp;page=1&amp;size=2&gt;;rel=\"first\";</first> <next>Link=&lt;http://admin.localhost:8080/iris/identitydomains/dashboard/users/testUser1/logs?startDate=2016-05-04&amp;endDate=2016-05-06&amp;page=2&amp;size=2&gt;;rel=\"next\";</next> </Links> <UserEvents> <UserEvent> <EventId>23</EventId> <EventDate>2016-05-06T18:18:44.473Z</EventDate> <InvokingUser>systemUser</InvokingUser> <Event>USER_SETTINGS_UPDATE</Event> <Success>false</Success> </UserEvent> <UserEvent> <EventId>19</EventId> <EventDate>2016-05-06T18:18:02.586Z</EventDate> <InvokingUser>systemUser</InvokingUser> <Event>USER_SETTINGS_UPDATE</Event> <Success>true</Success> <ContainDetails>true</ContainDetails> </UserEvent> </UserEvents> </UserEventLog>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Incorrect date range.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserEventLog> <ResponseStatus> <ErrorCode>15509</ErrorCode> <Description>'startDate' must not be after 'endDate'</Description> </ResponseStatus> </UserEventLog>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}/{preferences}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves all user preferences.",
        "operationId" : "getLdapUserPreferencesXref",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserPreferenceXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UserPreferencesResponse>    <UserPreferences>        <UserPreference>            <PreferenceName>tnFormat</PreferenceName>            <PreferenceValue>E.164</PreferenceValue>        </UserPreference>        <UserPreference>            <PreferenceName>preferredPortal</PreferenceName>            <PreferenceValue>NEW</PreferenceValue>        </UserPreference>    </UserPreferences></UserPreferencesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Updates preference list for single user.",
        "operationId" : "updateLdapUserPreferencesXref",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapUserPreferences"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The information has been successfully updated and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserPreferenceXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserPreferencesResponse> <User> <UserId>user</UserId> <UserPreferences> <UserPreference> <PreferenceName>tnFormat</PreferenceName> <PreferenceValue>E.164</PreferenceValue> </UserPreference> <UserPreference> <PreferenceName>preferredPortal</PreferenceName> <PreferenceValue>NEW</PreferenceValue> </UserPreference> </UserPreferences> </User> </LdapUserPreferencesResponse>"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "The information was not processed and error appeared.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserPreferencesResponse>    <ResponseStatus>        <ErrorCode>12091</ErrorCode>        <Description>User preference 'tnFormat' value 'E.1641' is invalid. Valid values : '[E.164, 10D, 11D]'</Description>    </ResponseStatus>    <User>        <UserId>user</UserId>        <UserPreferences>            <UserPreference>                <PreferenceName>tnFormat</PreferenceName>                <PreferenceValue>E.1641</PreferenceValue>            </UserPreference>            <UserPreference>                <PreferenceName>preferredPortal</PreferenceName>                <PreferenceValue>NEW</PreferenceValue>            </UserPreference>        </UserPreferences>    </User></LdapUserPreferencesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Creates user-preference relation if it doesn't exist.",
        "operationId" : "getLdapUserPreferenceXref",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapUserPreference"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The relation has been successfully created and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserPreferenceXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserPreferencesResponse>    <User>        <UserId>user</UserId>        <UserPreferences>            <UserPreference>                <PreferenceName>tnFormat</PreferenceName>                <PreferenceValue>E.164</PreferenceValue>            </UserPreference>            <UserPreference>                <PreferenceName>preferredPortal</PreferenceName>                <PreferenceValue>NEW</PreferenceValue>            </UserPreference>        </UserPreferences>    </User></LdapUserPreferencesResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "User preference already exists.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserPreferenceResponse>    <ResponseStatus>        <ErrorCode>12090</ErrorCode>        <Description>User 'user' already has preference 'preferredPortal'</Description>    </ResponseStatus>    <User>        <UserId>user</UserId>        <UserPreferences>            <UserPreference>                <PreferenceName>preferredPortal</PreferenceName>                <PreferenceValue>OLD</PreferenceValue>            </UserPreference>        </UserPreferences>    </User></LdapUserPreferenceResponse>"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Provided data in payload is incorrect.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserPreferenceResponse>    <ResponseStatus>        <ErrorCode>12092</ErrorCode>        <Description>User Preference 'preferredPortal1' does not exist</Description>    </ResponseStatus>    <User>        <UserId>user</UserId>        <UserPreferences>            <UserPreference>                <PreferenceName>preferredPortal1</PreferenceName>                <PreferenceValue>OLD</PreferenceValue>            </UserPreference>        </UserPreferences>    </User></LdapUserPreferenceResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}/{preferences}/{preferenceName}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves user preference by name if it exists.",
        "operationId" : "getLdapUserPreferenceXref_2",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preferenceName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserPreferenceXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><UserPreference>    <PreferenceName>tnFormat</PreferenceName>    <PreferenceValue>E.164</PreferenceValue></UserPreference>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The preference does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserPreferenceResponse>    <ResponseStatus>        <ErrorCode>12089</ErrorCode>        <Description>User 'user' does not have preference 'preferredPortal'</Description>    </ResponseStatus>    <User>        <UserId>user</UserId>        <UserPreferences>            <UserPreference>                <PreferenceName>preferredPortal</PreferenceName>            </UserPreference>        </UserPreferences>    </User></LdapUserPreferenceResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Updates user-preference relation.",
        "operationId" : "getLdapUserPreferenceXref_1",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preferenceName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapUserPreference"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The information has been successfully updated and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserPreferenceXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserPreferenceResponse>    <User>        <UserId>user</UserId>        <UserPreferences>            <UserPreference>                <PreferenceName>preferredPortal1</PreferenceName>                <PreferenceValue>OLD</PreferenceValue>            </UserPreference>        </UserPreferences>    </User></LdapUserPreferenceResponse>"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Provided data in payload is incorrect.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserPreferenceResponse>    <ResponseStatus>        <ErrorCode>12092</ErrorCode>        <Description>User Preference 'preferredPortal1' does not exist</Description>    </ResponseStatus>    <User>        <UserId>user</UserId>        <UserPreferences>            <UserPreference>                <PreferenceName>preferredPortal1</PreferenceName>                <PreferenceValue>OLD</PreferenceValue>            </UserPreference>        </UserPreferences>    </User></LdapUserPreferenceResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "Removes user-preference relation.",
        "operationId" : "deleteLdapUserPreferenceXref",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "preferenceName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully deleted.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserPreferenceXrefResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "User preference does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserPreferenceResponse>    <ResponseStatus>        <ErrorCode>12089</ErrorCode>        <Description>User 'user' does not have preference 'preferredPortal'</Description>    </ResponseStatus>    <User>        <UserId>user</UserId>        <UserPreferences>            <UserPreference>                <PreferenceName>preferredPortal</PreferenceName>            </UserPreference>        </UserPreferences>    </User></LdapUserPreferenceResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}/{profile}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about first name, last name, company name, contact telephone numbers and address by unique user name.",
        "operationId" : "getUserProfile",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProfileResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserProfileResponse> <User> <UserProfile> <FirstName>J</FirstName> <LastName>M</LastName> <StreetAddress> <HouseNumber>123</HouseNumber> <StreetName>Street</StreetName> <City>Raleigh</City> <State>NC</State> <PostalCode>12345</PostalCode> </StreetAddress> <TelephoneNumbers> <HomePhone>2027445566</HomePhone> <CellPhone>2027445577</CellPhone> <WorkPhone>2027445588</WorkPhone> <OtherPhone>2027445599</OtherPhone> </TelephoneNumbers> <CompanyName>MyCompany</CompanyName> </UserProfile> </User> </UserProfileResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The user does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserProfileResponse> <ResponseStatus> <ErrorCode>12000</ErrorCode> <Description>User 'jbm' does not exist</Description> </ResponseStatus> <User> <UserProfile> <FirstName>J</FirstName> <LastName>M</LastName> <StreetAddress> <HouseNumber>123</HouseNumber> <StreetName>Street</StreetName> <City>Raleigh</City> <State>NC</State> <PostalCode>12345</PostalCode> </StreetAddress> <TelephoneNumbers> <HomePhone>2027445566</HomePhone> <CellPhone>2027445577</CellPhone> <WorkPhone>2027445588</WorkPhone> <OtherPhone>2027445599</OtherPhone> </TelephoneNumbers> <CompanyName>MyCompany</CompanyName> </UserProfile> </User> </UserProfileResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Updates the information about user profile by unique user name. Note, that empty fields will work like delete.",
        "operationId" : "upsertUserProfile",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The user profile has been successfully updated and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProfileResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserProfileResponse> <User> <UserId>jbm</UserId> <UserProfile> <FirstName>J</FirstName> <LastName>M</LastName> <StreetAddress> <HouseNumber>345</HouseNumber> </StreetAddress> <TelephoneNumbers> <HomePhone>2027445599</HomePhone> </TelephoneNumbers> <CompanyName>MyCompany</CompanyName> </UserProfile> </User> </UserProfileResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The user don't put telephone number.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserProfileResponse> <ResponseStatus> <ErrorCode>12686</ErrorCode> <Description>At least one telephone number must be provided.</Description> </ResponseStatus> <User> <UserId>jbm</UserId> <UserProfile> <FirstName>J</FirstName> <LastName>M</LastName> <StreetAddress> <HouseNumber>345</HouseNumber> </StreetAddress> <CompanyName>MyCompany</CompanyName> </UserProfile> </User> </UserProfileResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}/{roles}/{roleId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about permission by unique name, related to specific user.",
        "operationId" : "getLdapUserRoles",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserRoleXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserRoleResponse> <User> <RoleList> <Role> <RoleId>test-1234</RoleId> <RoleDescription>1234567</RoleDescription> </Role> </RoleList> </User> </LdapUserRoleResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The user, role or user-to-role association does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserRoleResponse> <ResponseStatus> <ErrorCode>12073</ErrorCode> <Description>Role 'test-12345' does not exist</Description> </ResponseStatus> <User> <UserId>vboginskiy</UserId> <RoleList> <Role> <RoleId>test-12345</RoleId> </Role> </RoleList> </User> </LdapUserRoleResponse> <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapUserRoleResponse> <ResponseStatus> <ErrorCode>12000</ErrorCode> <Description>User 'vboginskiy1' does not exist</Description> </ResponseStatus> <User> <UserId>vboginskiy1</UserId> <RoleList> <Role> <RoleId>test-1234</RoleId> </Role> </RoleList> </User> </LdapUserRoleResponse> <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapUserRoleResponse> <ResponseStatus> <ErrorCode>12083</ErrorCode> <Description>Role 'test-role-put-3' is not associated with user 'vboginskiy'</Description> </ResponseStatus> <User> <UserId>vboginskiy</UserId> <RoleList> <Role> <RoleId>test-role-put-3</RoleId> </Role> </RoleList> </User> </LdapUserRoleResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Adds role to user.",
        "operationId" : "createLdapUserRoleXref",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The existing role-user relation is updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserRoleXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapUserRoleResponse> <User> <UserId>suser</UserId> <RoleList> <Role> <RoleId>report-editor</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>123</RoleDescription> </Role> <Role> <RoleId>test-role</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>555</RoleDescription> </Role> <Role> <RoleId>test-role-put-3</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>1234567</RoleDescription> </Role> <Role> <RoleId>test-1234</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>1234567</RoleDescription> </Role> </RoleList> </User> </LdapUserRoleResponse>"
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "The role has been successfully added to user.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserRoleXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserRoleResponse> <User> <UserId>suser</UserId> <RoleList> <Role> <RoleId>report-editor</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>123</RoleDescription> </Role> <Role> <RoleId>test-role</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>555</RoleDescription> </Role> <Role> <RoleId>test-role-put-3</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>1234567</RoleDescription> </Role> <Role> <RoleId>test-1234</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>1234567</RoleDescription> </Role> </RoleList> </User> </LdapUserRoleResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Create failed, role cannot be associated to certain user.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapUserRoleResponse> <ResponseStatus> <ErrorCode>12085</ErrorCode> <Description>Some of role(s) '[admin-role]' defined as internal. Internal roles cannot be associated to user 'accountUser' with scope 'AccountAdmin' or 'Account'</Description> </ResponseStatus> <User> <UserId>accountUser</UserId> <RoleList> <Role> <RoleId>admin-role</RoleId> </Role> </RoleList> </User> </LdapUserRoleResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "Removes specified role from user.",
        "operationId" : "deleteLdapUserRoleXref",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The role has been successfully removed from user.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserRoleXrefResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The role is not related to certain user.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapUserRoleResponse> <ResponseStatus> <ErrorCode>12083</ErrorCode> <Description>Role 'test' is not associated with user 'vboginskiy'</Description> </ResponseStatus> <User> <UserId>vboginskiy</UserId> <RoleList> <Role> <RoleId>test</RoleId> </Role> </RoleList> </User> </LdapUserRoleResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}/{roles}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getLdapUserRoles_1",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return all existing roles for user",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserRolesXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LdapUserRolesResponse>    <User>        <RoleList>            <Role>                <RoleId>test-role</RoleId>                <RoleSimpleName>Simple Name</RoleSimpleName>                <RoleDescription>555</RoleDescription>            </Role>            <Role>                <RoleId>test-1234</RoleId>                <RoleSimpleName>Simple Name</RoleSimpleName>                <RoleDescription>1234567</RoleDescription>            </Role>        </RoleList>    </User></LdapUserRolesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Rewrites all existing roles, related to user.",
        "operationId" : "updateLdapUserRoles",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LdapRoles"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The user-roles relations has been successfully updated or created and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LdapUserRolesXrefResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapUserRolesResponse> <User> <UserId>vboginskiy</UserId> <RoleList> <Role> <RoleId>test-role</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>555</RoleDescription> <Internal>false</Internal> </Role> <Role> <RoleId>test-1234</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>1234567</RoleDescription> <Internal>false</Internal> </Role> <Role> <RoleId>report-editor</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>123</RoleDescription> <Internal>false</Internal> </Role> </RoleList> </User> </LdapUserRolesResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Data in body formed in wrong way, validation error appears.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LdapUserRolesResponse> <ResponseStatus> <ErrorCode>1012</ErrorCode> <Description>RoleId is too short. Min length 4 characters</Description> </ResponseStatus> <User> <UserId>vboginskiy</UserId> <RoleList> <Role> <RoleId>tes</RoleId> </Role> <Role> <RoleId>test-1234</RoleId> </Role> <Role> <RoleId>report-editor</RoleId> </Role> </RoleList> </User> </LdapUserRolesResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Update failed, some of roles cannot be associated with user.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapUserRolesResponse> <ResponseStatus> <ErrorCode>12085</ErrorCode> <Description>Some of role(s) '[test]' defined as internal. Internal roles cannot be associated to user 'vboginskiy' with scope 'Account'</Description> </ResponseStatus> <User> <UserId>vboginskiy</UserId> <RoleList> <Role> <RoleId>test</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>1234567</RoleDescription> <Internal>true</Internal> </Role> <Role> <RoleId>test-1234</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>1234567</RoleDescription> <Internal>false</Internal> </Role> <Role> <RoleId>report-editor</RoleId> <RoleSimpleName>Simple Name</RoleSimpleName> <RoleDescription>123</RoleDescription> <Internal>false</Internal> </Role> </RoleList> </User> </LdapUserRolesResponse>"
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Some of roles cannot be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <LdapUserRolesResponse> <ResponseStatus> <ErrorCode>12084</ErrorCode> <Description>Some of your role(s) '[test1234]' do not exist</Description> </ResponseStatus> <User> <UserId>vboginskiy</UserId> <RoleList> <Role> <RoleId>test1234</RoleId> </Role> <Role> <RoleId>test-1234</RoleId> </Role> <Role> <RoleId>report-editor</RoleId> </Role> </RoleList> </User> </LdapUserRolesResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{domainName}/users/{userId}/{settings}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information about scope and active status by unique user name.",
        "operationId" : "getUserSettings",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserSettingsResponse> <User> <UserSettings> <Scope>Account</Scope> <Active>true</Active> <AllowedApiOrigin>GUI</AllowedApiOrigin> </UserSettings> </User> </UserSettingsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The user has more then one scope.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserSettingsResponse> <ResponseStatus> <ErrorCode>12070</ErrorCode> <Description>User 'jbm' has more than one scope. Will automatically reset to lowest users scope.</Description> </ResponseStatus> <User> <UserSettings> <Scope>All</Scope> <Active>true</Active> <AllowedApiOrigin>GUI</AllowedApiOrigin> </UserSettings> </User> </UserSettingsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The user does not exist.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserSettingsResponse> <ResponseStatus> <ErrorCode>12000</ErrorCode> <Description>User 'jbm' does not exist</Description> </ResponseStatus> <User/> </UserSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Updates the information about scope and active by unique user name.",
        "operationId" : "upsertUserSettings",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The user settings has been successfully updated and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserSettingsResponse> <User> <UserId>testCreatingUser1</UserId> <UserSettings> <Scope>All</Scope> <Active>true</Active> <AllowedApiOrigin>API</AllowedApiOrigin> </UserSettings> </User> </UserSettingsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The user try setup scope that higher than his own.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserSettingsResponse> <ResponseStatus> <ErrorCode>12676</ErrorCode> <Description>Scope priority can't be higher than your own.</Description> </ResponseStatus> <User> <UserId>testCreatingUser1</UserId> <UserSettings> <Scope>All</Scope> <Active>true</Active> <AllowedApiOrigin>API</AllowedApiOrigin> </UserSettings> </User> </UserSettingsResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "The user try activate another user having no accoounts assigned to it.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <UserSettingsResponse> <ResponseStatus> <ErrorCode>12102</ErrorCode> <Description>Forbidden action. User 'testCreatingUser1' should have at least one account assigned to it.</Description> </ResponseStatus> <User> <UserId>testCreatingUser1</UserId> <UserSettings> <Scope>All</Scope> <Active>true</Active> <AllowedApiOrigin>API</AllowedApiOrigin> </UserSettings> </User> </UserSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/analytics/{dataType}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getNumberAssignmentAnalytics",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnalyticsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/analytics" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAnalytics",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Not Found - if the API call does not specify the type of data.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AnalyticsResult> <ErrorList> <Error> <Code>12751</Code> <Description>The specific type of analytics data must be declared. Options are [numbersassignmentdata]</Description> </Error> </ErrorList> </AnalyticsResult>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/numbersAssignment" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve a list of the TelephoneNumbersAssignment orders that are associated with the account. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getOrders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the TelephoneNumbersAssignment Orders query provides information about the TelephoneNumbersAssignment Orders, including the data associated with the order, the state of the order, and a list of the successfully uploaded Telephone Numbers, and decriptions of any encountered errors.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersAssignmentOrderHistoryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request.  If any errors are found in the processing of the query string a 400 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Create a TelephoneNumbersAssignment order to register the assignment status of a list of telephone numbers.  The telephone numbers can be declared to be either ASSIGNED or UNASSIGNED.The key data elements in the submission are - <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">  <tbody>    <tr>      <td>CustomerOrderID</td>      <td>An order ID created by the customer for their tracking purposes. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</td>    </tr>    <tr>      <td>Action</td>      <td>(Required) Declare whether the listed Telephone Numbers are to be ASSIGNED or UNASSIGNED</td>    </tr>  </tbody></table>",
        "operationId" : "createOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TelephoneNumbersAssignmentOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created <br>A 201 response indicates that an order has been created.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TelephoneNumbersAssignmentOrderResponse> <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate> <AccountId>1</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId> <ProcessingStatus>PARTIAL</ProcessingStatus> <TotalQuantity>4</TotalQuantity> <FailedQuantity>1</FailedQuantity> <TelephoneNumbersAssignmentOrder> <CustomerOrderId>ICPA123ABC</CustomerOrderId> <Action>ASSIGN</Action> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> <TelephoneNumber>4158714245</TelephoneNumber> <TelephoneNumber>4352154439</TelephoneNumber> <TelephoneNumber>4352154466</TelephoneNumber> </TelephoneNumbers> </TelephoneNumbersAssignmentOrder> <Errors> <Error> <Code>5076</Code> <Description>Number does not belong to this account.</Description> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> </TelephoneNumbersAssignmentOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request <br> A 400 response Indicates that the order could not be created.Error text and an error code will be provided in the ErrorList element.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TelephoneNumbersAssignmentOrderResponse> <ResponseStatus> <ErrorCode>13554</ErrorCode> <Description>Assignment action is invalid. Valid values ASSIGN, UNASSIGN</Description> </ResponseStatus> </TelephoneNumbersAssignmentOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billingsettings" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "GET is used to retrieve all possible billing settings on account along with active ones.",
        "operationId" : "getSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok - Billing settings successfully retrieved",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BillingSettings> <BillingSetting> <Key> <Id>NADP_TERM</Id> <Display>Domestic Termination</Display> </Key> <Values> <Value> <Id>TERM_SELECT</Id> <Display>Select</Display> <Active>True</Active> </Value> <Value> <Id>TERM_PRIORITY</Id> <Display>Priority</Display> <Active>False</Active> </Value> <Value> <Id>TERM_FLAT</Id> <Display>Flat Rate</Display> <Active>False</Active> </Value> </Values> </BillingSetting> </BillingSettings>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "PUT is used to update all billing settings on account. Ones which were previously stored but not included in current payload will be removed. After PUT complete system will automatically send backoffice API notification about billing settings change on account billing scope and all subsequent scopes (sites, sippeers). Payload should follow the rules below. <table> <tr> <th>Parameter</th> <th>Description</th> </tr> <tr> <td>BillingSettings</td> <td>Contains a list of zero or more BillingSetting nodes</td> </tr> <tr> <td>BillingSetting</td> <td>Has one Key node and one Values node</td> </tr> <tr> <td>Key</td> <td>Has one Id node and optional field Display</td> </tr> <tr> <td>Values</td> <td>Has at least one Value node. List must contain one active Value (Active node containing \"True\")</td> </tr> <tr> <td>Value</td> <td>Has one Id node and optional field Display</td> </tr> <tr> <td>Display</td> <td>Optional field. Max length is 64 characters</td> </tr> <tr> <td>Id</td> <td>Mandatory field. Max length is 64 characters</td> </tr> <tr> <td>Active</td> <td>Optional field (see Values description though). Acceptable values True or False</td> </tr> </table>",
        "operationId" : "updateSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BillingSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK - billing setting were successfully updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <BillingSettingsResponse> <BillingSettings> <BillingSetting> <Key> <Id>NADP_TERM</Id> </Key> <Values> <Value> <Id>TERM_SELECT</Id> <Active>true</Active> </Value> </Values> </BillingSetting> </BillingSettings> </BillingSettingsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request - in case of violation payload rules",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BillingSettingsResponse> <ResponseStatus> <ErrorCode>1003</ErrorCode> <Description>At least one Value is required.</Description> </ResponseStatus> </BillingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/csrs" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the csr orders for the given account ID.<br>",
        "operationId" : "getAccountCsrOrders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response will include all CSR related data.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<CsrResponses>    <TotalCount>3</TotalCount>    <Links>        <first>Link=&lt;http://admin.localhost:8080/iris/accounts/1/csrs?page=1&amp;size=3&amp;shortPayload=true&gt;;rel=\"first\";</first>    </Links>    <CsrResponse>        <CustomerOrderId>someValue</CustomerOrderId>        <LastModifiedBy>systemUser</LastModifiedBy>        <OrderCreateDate>2019-10-25T09:51:17Z</OrderCreateDate>        <AccountId>1</AccountId>        <OrderId>a2f55ebe-782a-4242-983b-6ae6cfa97833</OrderId>        <LastModifiedDate>2019-10-25T12:51:22.139Z</LastModifiedDate>        <Status>COMPLETE</Status>        <AccountNumber>987654321</AccountNumber>        <AccountTelephoneNumber>9196194444</AccountTelephoneNumber>        <EndUserName>bandwidthGuy</EndUserName>        <AuthorizingUserName>importantAuthGuy</AuthorizingUserName>        <CustomerCode>123</CustomerCode>        <EndUserPIN>12345</EndUserPIN>        <AddressLine1>900 Main Campus Dr</AddressLine1>        <City>Raleigh</City>        <State>NC</State>        <ZIPCode>27612</ZIPCode>       <TypeOfService>residential</TypeOfService>       <CsrData>        <AccountNumber>123456789</AccountNumber>        <CustomerName>JOHN SMITH</CustomerName>        <ServiceAddress>            <UnparsedAddress>900 MAIN CAMPUS DR</UnparsedAddress>            <City>RALEIGH</City>            <State>NC</State>            <Zip>27616</Zip>        </ServiceAddress>        <WorkingTelephoneNumber>9196191211</WorkingTelephoneNumber>        <WorkingTelephoneNumbersOnAccount>            <TelephoneNumber>9196191211</TelephoneNumber>        </WorkingTelephoneNumbersOnAccount>    </CsrData>    </CsrResponse>    <CsrResponse>        <!-- SNIP -->    </CsrResponse>    <CsrResponse>        <!-- SNIP -->    </CsrResponse>    <!-- SNIP --></CsrResponses>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Creates a csr order.<br>Upon a successfully-submitted payload, the order will have a status of \"RECEIVED\".<br><br><br>",
        "operationId" : "createCsrOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Csr"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The order has been created and an order ID will be specified in the payload and in the header.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<CsrResponse>    <OrderId>4f5b3804-3d0d-49de-a133-d4b67ad6fa11</OrderId>    <Status>RECEIVED</Status>    <AccountNumber>123456789ABC</AccountNumber>    <AccountTelephoneNumber>9196191234</AccountTelephoneNumber>    <EndUserName>Bandwidth User</EndUserName>    <AuthorizingUserName>Auth Bandwidth User</AuthorizingUserName>    <CustomerCode>123</CustomerCode>    <EndUserPIN>123ABC</EndUserPIN>    <EndUserPassword>supersecretpassword123</EndUserPassword>    <AddressLine1>900 Main Campus Drive</AddressLine1>    <City>Raleigh</City>    <State>NC</State>    <ZIPCode>27606</ZIPCode>    <TypeOfService>business</TypeOfService></CsrResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The order failed. One of the input parameters is invalid.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<CsrResponse>    <Errors>        <Error>            <Code>26002</Code>            <Description>Customer order ID is invalid. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</Description>        </Error>    </Errors></CsrResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Action can not be performed because account does not have CSR product feature enabled.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<CsrResponse>    <Errors>        <Error>            <Code>12160</Code>            <Description>The operation could not be performed because Account 123 does not have the CSR feature enabled.</Description>        </Error>    </Errors></CsrResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/csrs/{orderid}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information associated with the specified csr order ID number.",
        "operationId" : "retrieveCsrOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<CsrResponse>    <CustomerOrderId>someValue</CustomerOrderId>    <LastModifiedBy>systemUser</LastModifiedBy>    <OrderCreateDate>2019-10-25T09:51:17Z</OrderCreateDate>    <AccountId>1</AccountId>    <OrderId>a2f55ebe-782a-4242-983b-6ae6cfa97833</OrderId>    <LastModifiedDate>2019-10-25T12:51:22.139Z</LastModifiedDate>    <Status>COMPLETE</Status>    <AccountNumber>987654321</AccountNumber>    <AccountTelephoneNumber>9196194444</AccountTelephoneNumber>    <EndUserName>bandwidthGuy</EndUserName>    <AuthorizingUserName>importantAuthGuy</AuthorizingUserName>    <CustomerCode>123</CustomerCode>    <EndUserPIN>12345</EndUserPIN>    <EndUserPassword>enduserpassword123</EndUserPassword>    <AddressLine1>900 Main Campus Dr</AddressLine1>    <City>Raleigh</City>    <State>NC</State>    <ZIPCode>27612</ZIPCode>    <TypeOfService>residential</TypeOfService>    <CsrData>        <AccountNumber>123456789</AccountNumber>        <CustomerName>JOHN SMITH</CustomerName>        <ServiceAddress>            <UnparsedAddress>900 MAIN CAMPUS DR</UnparsedAddress>            <City>RALEIGH</City>            <State>NC</State>            <Zip>27616</Zip>        </ServiceAddress>        <WorkingTelephoneNumber>9196191211</WorkingTelephoneNumber>        <WorkingTelephoneNumbersOnAccount>            <TelephoneNumber>9196191211</TelephoneNumber>        </WorkingTelephoneNumbersOnAccount>    </CsrData>    <!-- This section is present if tram responds with error -->    <Errors>        <Error>            <Code>26500</Code>            <Description>CSR is not available for this TN</Description>        </Error>    </Errors></CsrResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Order ID has invalid format.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<CsrResponse>    <Errors>        <Error>            <Code>5061</Code>            <Description>Order ID is invalid.</Description>        </Error>    </Errors></CsrResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Order does not exists or belongs to different account.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<CsrResponse>    <Errors>        <Error>            <Code>26005</Code>            <Description>CSR order not found</Description>        </Error>    </Errors></CsrResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Action can not be performed because account does not have CSR product feature enabled.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<CsrResponse>    <Errors>        <Error>            <Code>12160</Code>            <Description>The operation could not be performed because Account 123 does not have the CSR feature enabled.</Description>        </Error>    </Errors></CsrResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Replaces the existing csr conditional data with specificed csr conditional data. To cancel CSR order need provide Status tag with REQUESTED_CANCEL value. Note that csr order must be a non-real time with PROCESSING or ACTION_REQUIRED status.",
        "operationId" : "updateCsrOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Csr"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The csr conditional data was successfully updated for the order.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><CsrResponse>    <CustomerOrderId>TEST BWDB-6506</CustomerOrderId>    <LastModifiedBy>systemUser</LastModifiedBy>    <OrderCreateDate>2020-01-13T21:14:35Z</OrderCreateDate>    <AccountId>14</AccountId>    <OrderId>5c3b8240-52b5-45a5-8d7d-42a71ebcd1ba</OrderId>    <LastModifiedDate>2020-01-13T16:51:21.920Z</LastModifiedDate>    <Status>COMPLETE</Status>    <AccountNumber>987654321</AccountNumber>    <AccountTelephoneNumber>9196194444</AccountTelephoneNumber>    <EndUserName>bandwidthGuy</EndUserName>    <AuthorizingUserName>importantAuthGuy</AuthorizingUserName>    <CustomerCode>123</CustomerCode>    <EndUserPIN>12345</EndUserPIN>    <EndUserPassword>enduserpassword123</EndUserPassword>    <AddressLine1>900 Main Campus Dr</AddressLine1>    <City>Raleigh</City>    <State>NC</State>    <ZIPCode>27612</ZIPCode>    <TypeOfService>residential</TypeOfService>    <CsrData>        <AccountNumber>123456789</AccountNumber>        <CustomerName>JOHN SMITH</CustomerName>        <ServiceAddress>            <UnparsedAddress>900 MAIN CAMPUS DR</UnparsedAddress>            <City>RALEIGH</City>            <State>NC</State>            <Zip>27616</Zip>        </ServiceAddress>        <WorkingTelephoneNumber>9196191156</WorkingTelephoneNumber>        <WorkingTelephoneNumbersOnAccount>            <TelephoneNumber>9196191156</TelephoneNumber>        </WorkingTelephoneNumbersOnAccount>    </CsrData></CsrResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "There was an error replacing the conditional data for the order.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><CsrResponse>    <Errors>        <Error>            <Code>26020</Code>            <Description>Modification of a CSR order that is in a terminal status is not allowed.</Description>        </Error>        <Error>            <Code>26021</Code>            <Description>Modification of conditional fields on CSR orders is only allowed if order is in ACTION_REQUIRED status</Description>        </Error>        <Error>            <Code>26008</Code>            <Description>AccountTelephoneNumber is invalid. Alphanumeric characters are supported with a max length of 10 characters.</Description>        </Error>        <Error>            <Code>26012</Code>            <Description>EndUserPIN is invalid. Alphanumeric characters are supported with a max length of 50 characters.</Description>        </Error>        <Error>            <Code>26013</Code>            <Description>EndUserPassword is invalid. Alphanumeric characters are supported with a max length of 100 characters.</Description>        </Error>    </Errors></CsrResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/dldas" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get DLDA orders",
        "description" : "Retrieve a list of the DLDA orders that are associated with the account. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getDldaOrder_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK <br> a 200 OK indicates that there are DLDA orders associated with the account.The 200 OK response payload provides a list of all DLDA orders that have been issued against that account.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DldaOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?> <ResponseSelectWrapper> <ListOrderIdUserIdDate> <TotalCount>3</TotalCount> <OrderIdUserIdDate> <accountId>14</accountId> <CountOfTNs>2</CountOfTNs> <userId>team_ua</userId> <lastModifiedDate>2014-07-07T10:06:43.427Z</lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-07T10:06:43.427Z</OrderDate> <orderId>37a6447c-1a0b-4be9-ba89-3f5cb0aea142</orderId> <OrderStatus>FAILED</OrderStatus> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>14</accountId> <CountOfTNs>2</CountOfTNs> <userId>team_ua</userId> <lastModifiedDate>2014-07-07T10:05:56.595Z</lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-07T10:05:56.595Z</OrderDate> <orderId>743b0e64-3350-42e4-baa6-406dac7f4a85</orderId> <OrderStatus>RECEIVED</OrderStatus> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>14</accountId> <CountOfTNs>2</CountOfTNs> <userId>team_ua</userId> <lastModifiedDate>2014-07-07T09:32:17.234Z</lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-07T09:32:17.234Z</OrderDate> <orderId>f71eb4d2-bfef-4384-957f-45cd6321185e</orderId> <OrderStatus>RECEIVED</OrderStatus> </OrderIdUserIdDate> </ListOrderIdUserIdDate> </ResponseSelectWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found <br> If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Create DLDA order to associate the street address with the telephone number.The key data elements in the submission are - <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">  <tbody>    <tr>      <td>TelephoneNumbers</td>      <td>A list of telephone numbers you need to bind information from payload.</td>    </tr>    <tr>      <td>SubscriberType</td>      <td>Can be RESIDENTIAL or BUSINESS.  The element is required.</td>    </tr>    <tr>      <td>ListingType</td>      <td>Can be LISTED, NON_LISTED or NON_PUBLISHED. The element is required</td>    </tr>    <tr>      <td>ListingName</td>      <td>This field is required. Inner fields: FirstName (this field is required in case RESIDENTIAL SubscriberType is chosen), FirstName2, LastName (this field is required), Designation, TitleOfLineage, TitleOfAddress, TitleOfAddress2, TitleOfLineageName2, TitleOfAddressName2, TitleOfAddress2Name2, and PlaceListingAs are optional<br>Please see the note below on sorting of Business Listings.</td>    </tr>    <tr>      <td>ListAddress</td>      <td>Can be true or false. The element is required.</td>    </tr>    <tr>      <td>Address</td>      <td>This field is required. Inner fields: HousePrefix, HouseNumber, HouseSuffix, PreDirectional, StreetName, StreetSuffix, PostDirectional, AddressLine2, City, StateCode, Zip, PlusFour and AddressType=DLDA.<br>City, HouseNumber, StreetName, City, State and Zipcode are required fields.</td>    </tr>    <tr>      <td>CustomerOrderId</td>      <td>The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. The element is optional. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</td>    </tr>  </tbody></table><b>Business Listings...</b> <br>Business Listings sort differently than Residential Listings, and must be submitted accordingly.  Since Business Listings sort starting at the beginning of the name, where Residential Listings sort on Last Name, the parts of the business name that will govern the sorting need to be entered in the LastName field.  For example, Joe's Pizza sorts starting with Joe, so the entire business name would be entered in the LastName field, and the Firstname could be left blank.  If there was a portion of the name that was not important from a sorting perspective (perhaps \"the best pizza in town\"), that portion could be placed in the FirstName field.<br>",
        "operationId" : "createDldaOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DldaOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created <br> A 201 response indicates that an order has been created.The <b>location</b> header points to /accounts/<account-id>/dldas/<order-id> and can be used to retrive the status of the DLDA order.<br>Errors in processing the request will be articulated in the ErrorList component of the response.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <DldaOrderResponse> <DldaOrder> <CustomerOrderId>[String]</CustomerOrderId> <OrderCreateDate>2014-07-16T07:59:08.065Z</OrderCreateDate> <AccountId>14</AccountId> <CreatedByUser>team_ua</CreatedByUser> <OrderId>f2ac3343-5bff-424a-b8ca-975f5e7b159e</OrderId> <LastModifiedDate>2014-07-16T07:59:08.065Z</LastModifiedDate> <ErrorList/> <ProcessingStatus>RECEIVED</ProcessingStatus> <DldaTnGroups> <DldaTnGroup> <TelephoneNumbers> <TelephoneNumber>5202217754</TelephoneNumber> </TelephoneNumbers> <AccountType>RESIDENCE</AccountType> <ListingType>LISTED</ListingType> <ListingName> <FirstName>John</FirstName> <FirstName2></FirstName2> <LastName>Smith</LastName> <Designation></Designation> <TitleOfLineage></TitleOfLineage> <TitleOfAddress></TitleOfAddress> <TitleOfAddress2></TitleOfAddress2> <TitleOfLineageName2></TitleOfLineageName2> <TitleOfAddressName2></TitleOfAddressName2> <TitleOfAddress2Name2></TitleOfAddress2Name2> <PlaceListingAs></PlaceListingAs> </ListingName> <ListAddress>true</ListAddress> <Address> <HousePrefix></HousePrefix> <HouseNumber>915</HouseNumber> <HouseSuffix></HouseSuffix> <PreDirectional></PreDirectional> <StreetName>Elm</StreetName> <StreetSuffix>Ave</StreetSuffix> <PostDirectional></PostDirectional> <AddressLine2></AddressLine2> <City>Carpinteria</City> <StateCode>CA</StateCode> <Zip>93013</Zip> <PlusFour></PlusFour> <County></County> <Country>United States</Country> <AddressType>Dlda</AddressType> </Address> </DldaTnGroup> </DldaTnGroups> </DldaOrder> </DldaOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request <br> A 400 response Indicates that the order could not be created.Error text and an error code will be provided in the ErrorList element.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <DldaOrderResponse> <ResponseStatus> <ErrorCode>16104</ErrorCode> <Description>No numbers for processing</Description> </ResponseStatus> <DldaOrder> <CustomerOrderId>REST Site</CustomerOrderId> <OrderCreateDate>2014-07-17T10:06:55.204Z</OrderCreateDate> <AccountId>14</AccountId> <CreatedByUser>team_ua</CreatedByUser> <LastModifiedDate>2014-07-17T10:06:55.204Z</LastModifiedDate> <ErrorList> <Error> <Code>5070</Code> <Description>Telephone number is invalid.</Description> <TelephoneNumber></TelephoneNumber> </Error> </ErrorList> <ProcessingStatus>FAILED</ProcessingStatus> <DldaTnGroups> <DldaTnGroup> <TelephoneNumbers> <TelephoneNumber></TelephoneNumber> </TelephoneNumbers> <AccountType>RESIDENCE</AccountType> <ListingType>LISTED</ListingType> <ListingName> <FirstName>John</FirstName> <FirstName2></FirstName2> <LastName>Smith</LastName> <Designation></Designation> <TitleOfLineage></TitleOfLineage> <TitleOfAddress></TitleOfAddress> <TitleOfAddress2></TitleOfAddress2> <TitleOfLineageName2></TitleOfLineageName2> <TitleOfAddressName2></TitleOfAddressName2> <TitleOfAddress2Name2></TitleOfAddress2Name2> <PlaceListingAs></PlaceListingAs> </ListingName> <ListAddress>true</ListAddress> <Address> <HousePrefix></HousePrefix> <HouseNumber>915</HouseNumber> <HouseSuffix></HouseSuffix> <PreDirectional></PreDirectional> <StreetName>Elm</StreetName> <StreetSuffix>Ave</StreetSuffix> <PostDirectional></PostDirectional> <AddressLine2></AddressLine2> <City>Carpinteria</City> <StateCode>CA</StateCode> <Zip>93013</Zip> <PlusFour></PlusFour> <County></County> <Country>United States</Country> <AddressType>DLDA</AddressType> </Address> </DldaTnGroup> </DldaTnGroups> </DldaOrder> </DldaOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/dldas/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get DLDA order",
        "description" : "Retrieve information about a DLDA Order with specified ID.",
        "operationId" : "getDldaOrder_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the Lidb Orders query provides a broad range of information about the DLDA Order identified in the URL.  Included amongst the information is:<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>various dates</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, CANCELLED) - the overall status of the order</li><li>DldaTnGroups - list of DldaTnGroup elements that contains list of TNs with Directory Listing and Directory Assistance information, AccountType(RESIDENCE or BUSINESS), ListingType(LISTED, NON_LISTED or NON_PUBLISHED)</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DldaOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?> <DldaOrderResponse> <DldaOrder> <CustomerOrderId>5a88d16d-f8a9-45c5-a5db-137d700c6a22</CustomerOrderId> <OrderCreateDate>2014-07-10T12:38:11.833Z</OrderCreateDate> <AccountId>14</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>ea9e90c2-77a4-4f82-ac47-e1c5bb1311f4</OrderId> <LastModifiedDate>2014-07-10T12:38:11.833Z</LastModifiedDate> <ErrorList> <Error> <Code>16103</Code> <Description>DL/DA information cannot be changed because the number is already being processed </Description> <TelephoneNumber>2053778335</TelephoneNumber> </Error> </ErrorList> <ProcessingStatus>RECEIVED</ProcessingStatus> <DldaTnGroups> <DldaTnGroup> <TelephoneNumbers> <TelephoneNumber>2053778335</TelephoneNumber> <TelephoneNumber>2053865784</TelephoneNumber> </TelephoneNumbers> <AccountType>BUSINESS</AccountType> <ListingType>LISTED</ListingType> <ListingName> <FirstName>Joe</FirstName> <LastName>Smith</LastName> </ListingName> <ListAddress>true</ListAddress> <Address> <HouseNumber>12</HouseNumber> <StreetName>ELM</StreetName> <City>New York</City> <StateCode>NY</StateCode> <Zip>10007</Zip> <Country>United States</Country> <AddressType>Dlda</AddressType> </Address> </DldaTnGroup> </DldaTnGroups> </DldaOrder> </DldaOrderResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?> <DldaOrderResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </DldaOrderResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Update DLDA order to associate the street address with the telephone number.The key data elements in the submission are -     <table style=\"text-align: left; width: 80%;\"     border=\"1\" cellpadding=\"2\" cellspacing=\"2\">      <tbody>        <tr>          <td>TelephoneNumbers</td>          <td>A list of telephone numbers you need to bind information from payload.</td>        </tr>        <tr>          <td>AccountType</td>          <td>Can be RESIDENTIAL or BUSINESS.  The element is required.</td>        </tr>        <tr>          <td>ListingType</td>          <td>Can be LISTED, NON_LISTED or NON_PUBLISHED. The element is required</td>        </tr>        <tr>          <td>ListingName</td>          <td>Inner fields: FirstName, FirstName2, LastName, Designation, TitleOfLineage, TitleOfAddress, TitleOfAddress2, TitleOfLineageName2, TitleOfAddressName2, TitleOfAddress2Name2, PlaceListingAs.</td>        </tr>        <tr>          <td>ListAddress</td>          <td>Can be true or false. The element is required.</td>        </tr>        <tr>          <td>Address</td>          <td>This field is required. Inner fields: HousePrefix, HouseNumber, HouseSuffix, PreDirectional, StreetName, StreetSuffix, PostDirectional, AddressLine2, City, StateCode, Zip, PlusFour, AddressType</td>        </tr>        <tr>          <td>CustomerOrderId</td>          <td>The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. The element is optional. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</td>        </tr>      </tbody>    </table>",
        "operationId" : "updateDldaOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DldaOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK <br> A 200 response indicates that an order has been updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <DldaOrderResponse> <DldaOrder> <CustomerOrderId>[String]</CustomerOrderId> <OrderCreateDate>2014-07-10T12:38:11.833Z</OrderCreateDate> <AccountId>14</AccountId> <CreatedByUser>team_ua</CreatedByUser> <OrderId>f179237b-c1cb-449d-9590-aaa9d0bf3ca4</OrderId> <LastModifiedDate>2014-07-17T12:21:02.644Z</LastModifiedDate> <ErrorList/> <ProcessingStatus>RECEIVED</ProcessingStatus> <DldaTnGroups> <DldaTnGroup> <TelephoneNumbers> <TelephoneNumber>2199347436</TelephoneNumber> </TelephoneNumbers> <AccountType>RESIDENCE</AccountType> <ListingType>NON_LISTED</ListingType> <ListingName> <FirstName>John</FirstName> <FirstName2></FirstName2> <LastName>Smith</LastName> <Designation></Designation> <TitleOfLineage></TitleOfLineage> <TitleOfAddress></TitleOfAddress> <TitleOfAddress2></TitleOfAddress2> <TitleOfLineageName2></TitleOfLineageName2> <TitleOfAddressName2></TitleOfAddressName2> <TitleOfAddress2Name2></TitleOfAddress2Name2> <PlaceListingAs></PlaceListingAs> </ListingName> <ListAddress>true</ListAddress> <Address> <HousePrefix></HousePrefix> <HouseNumber>915</HouseNumber> <HouseSuffix></HouseSuffix> <PreDirectional></PreDirectional> <StreetName>Elm</StreetName> <StreetSuffix>Ave</StreetSuffix> <PostDirectional></PostDirectional> <AddressLine2></AddressLine2> <City>Carpinteria</City> <StateCode>CA</StateCode> <Zip>93013</Zip> <PlusFour></PlusFour> <County></County> <Country>United States</Country> <AddressType>Dlda</AddressType> </Address> </DldaTnGroup> </DldaTnGroups> </DldaOrder> </DldaOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request <br> A 400 response Indicates that the order could not be modified. The payload is echoed with the Errors identified.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <DldaOrderResponse> <ResponseStatus> <ErrorCode>16105</ErrorCode> <Description>Order cannot be changed or cancelled because it is already being processed</Description> </ResponseStatus> </DldaOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/e911" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the e911 information associated with that telephone number.",
        "operationId" : "getUcTrunkingConfiguration_1",
        "parameters" : [ {
          "name" : "tn",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The e911 address have been successfully retrieved and displayed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnE911AddressResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TnE911AddressResponse> <Address> <Name>Test address</Name> <City>RALEIGH</City> <HouseNumber>900</HouseNumber> <StateCode>NC</StateCode> <StreetName>MAIN CAMPUS DR</StreetName> <Zip>27606</Zip> <PlusFour>5214</PlusFour> </Address> <EmergencyNotificationGroup> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> <Description>Building 5, 5th Floor.</Description> </EmergencyNotificationGroup> </TnE911AddressResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencyNotificationRecipients/{recipientId}" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get an Emergency Notification Recipient",
        "description" : "The GET operation is used to fetch the emergency notification recipient specified by its identifier. <br>URI parameters:<ul>  <li>  <b>accountId</b> - the account id of the account to which the emergency notification recipient belongs  </li>  <li>  <b>enrId</b> - the identifier assigned to the emergency notification recipient when it was created  </li></ul>",
        "operationId" : "getEmergencyNotificationRecipient",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "recipientId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<!--For a CALLBACK type emergency notification recipient...--> <EmergencyNotificationRecipientsResponse> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-18T21:26:47.403Z</CreatedDate> <LastModifiedDate>2020-04-01T18:32:22.316Z</LastModifiedDate> <ModifiedByUser>jgilmore</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>CALLBACK</Type> <Callback> <Url>https://foo.bar/baz</Url> <Credentials> <Username>jgilmore</Username> <!-- CallbackPassword is omitted for security --> </Credentials> </Callback> </EmergencyNotificationRecipient> </EmergencyNotificationRecipientsResponse> <!--For an EMAIL type emergency notification recipient...--> <EmergencyNotificationRecipientsResponse> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-20T14:04:28.778Z</CreatedDate> <LastModifiedDate>2020-03-20T14:04:28.778Z</LastModifiedDate> <ModifiedByUser>wchurchill</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>EMAIL</Type> <EmailAddress>fred@gmail.com</EmailAddress> </EmergencyNotificationRecipient> </EmergencyNotificationRecipientsResponse> <!--*For an SMS type emergency notification recipient...--> <EmergencyNotificationRecipientsResponse> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-28T15:45:01.371Z</CreatedDate> <LastModifiedDate>2020-03-29T18:59:42.220Z</LastModifiedDate> <ModifiedByUser>deisenhower</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>SMS</Type> <Sms> <TelephoneNumber>12015551212</TelephoneNumber> </Sms> </EmergencyNotificationRecipient> </EmergencyNotificationRecipientsResponse> <!--*For a TTS type emergency notification recipient...--> <EmergencyNotificationRecipientsResponse> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-30T22:14:30.443Z</CreatedDate> <LastModifiedDate>2020-03-30T22:14:30.443Z</LastModifiedDate> <ModifiedByUser>frooseveldt</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>TTS</Type> <Tts> <TelephoneNumber>12015551212</TelephoneNumber> </Tts> </EmergencyNotificationRecipient> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b> User does not have permission to view emergency notification recipients, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>Access Denied </Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The resource does not exist <br> <p><b>Condition:</b> The emergency notification recipient identifier does not exist, or does not exist for the specified account id. <br> <b>Error Description:</b> The resource does not exist </p> <br>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>The resource does not exist</Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencynotificationrecipients" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "<p> Retrieve a list of emergency notification recipients configured for this account. <br> Results can be paginated and filtered using the following query parameters. </p><p> <b>Query parameters: </b></p><p> The GET operation has no request payload, but the accountId must be specified in the URI parameter.Results are returned by default in the order of newest to oldest modification date of the Emergency Notification Recipient.  This default order is reversed from oldest to newest when the ModifiedAfterDate query parameter is included in the query.</p><p>Query parameters act as filters on the data. If more than one query parameter is provided, the results will be the intersection of the results from each query parameter. In other words, the query parameters are logically ANDed.Query parameters are appended to the end of the endpoint, separated by a '?' and in the format parameter=value.  If you wish to specify more than one query parameter, separate them using an '&' character.  The order of query parameters does not matter.  For example:GET /accounts/{accountId}/emergencyNotificationRecipients?EnrDescription=front desk&EnrNotificationType=TTS...will return all Emergency Notification Recipients having a description field including the string \"front desk\", and having a notification type of TTS.The following query parameters are supported.  All query parameters are optional. </p> <table>         <tr>           <th>Parameter Name</th>           <th>Example</th>           <th>Default</th>           <th>Usage</th>         </tr>         <tr>             <td valign=\"top\">                 <p>                     ModifiedAfterDate                 </p>             </td>             <td  valign=\"top\">                 <p>                     ModifiedAfterDate=                     2020-03-23T17:34:00Z                     </p>             </td>             <td valign=\"top\">                 <p>                     No filter                 </p>             </td>             <td valign=\"top\">                 <p>                     Include results only for orders having order last modified date and time after the date and time specified in this parameter. Note that inclusion of this parameter reverses the default sort order of the results to ascending in date/time (i.e. from oldest to newest). If you are looking for the ModifiedBeforeDate query parameter, please see the Page parameter.                 </p>             </td>         </tr>         <tr>             <td valign=\"top\">                 <p>                     ModifiedByUser                 </p>             </td>             <td valign=\"top\">                 <p>                     ModifiedByUser=jgilmore                 </p>             </td>             <td  valign=\"top\">                 <p>                     No filter                 </p>             </td>             <td valign=\"top\">                 <p>                     Include results only for orders last modified by the user specified in this parameter.                 </p>             </td>         </tr>         <tr>             <td valign=\"top\">                 <p>                     EnrDescription                 </p>             </td>             <td  valign=\"top\">                 <p>                     EnrDescription=front desk                 </p>             </td>             <td  valign=\"top\">                 <p>                     No filter                 </p>             </td>             <td  valign=\"top\">                 <p>                     A substring that will exist in all Emergency Notification Recipient Descriptions returned.                 </p>             </td>         </tr>         <tr>             <td valign=\"top\">                 <p>                     EnrNotificationType                 </p>             </td>             <td valign=\"top\">                 <p>                     EnrNotificationType=SMS                 </p>             </td>             <td  valign=\"top\">                 <p>                     No filter                 </p>             </td>             <td  valign=\"top\">                 <p>                     The type of notification (EMAIL, SMS, TTS, or CALLBACK) specified for Emergency Notification Recipients returned.                 </p>             </td>         </tr>         <tr>             <td valign=\"top\">                 <p>                     EnrSmsTn                 </p>             </td>             <td valign=\"top\">                 <p>                     EnrSmsTn=9195551212                 </p>             </td>             <td valign=\"top\">                 <p>                     No filter                 </p>             </td>             <td  valign=\"top\">                 <p>                     The Short Message Service telephone number in all SMS type Emergency Notification Recipients returned.                 </p>             </td>         </tr>         <tr>             <td valign=\"top\">                 <p>                     EnrTtsTn                 </p>             </td>             <td valign=\"top\">                 <p>                     EnrTtsTn=7045553777                 </p>             </td>             <td valign=\"top\">                 <p>                     No filter                 </p>             </td>             <td valign=\"top\">                 <p>                     The Text To Speech telephone number in all TTS type Emergency Notification Recipients returned.                 </p>             </td>         </tr>         <tr>             <td valign=\"top\">                 <p>                     EnrEmailAddress                 </p>             </td>             <td valign=\"top\">                 <p>                     EnrEmailAddress=                     fred9982@gmail.com                 </p>             </td>             <td valign=\"top\">                 <p>                     No filter                 </p>             </td>             <td  valign=\"top\">                 <p>                     The email address in all EMAIL type Emergency Notification Recipients returned.                 </p>             </td>         </tr>         <tr>             <td valign=\"top\">                 <p>                     EnrCallbackUrl                 </p>             </td>             <td  valign=\"top\">                 <p>                     EnrCallbackUrl=                     https://not.company.com                 </p>             </td>             <td valign=\"top\">                 <p>                     No filter                 </p>             </td>             <td  valign=\"top\">                 <p>                     The callback URL in all CALLBACK type Emergency Notification Recipients returned.                 </p>             </td>         </tr>         <tr>             <td valign=\"top\">                 <p>                     EnrCallbackUsername                 </p>             </td>             <td valign=\"top\">                 <p>                     EnrCallbackUsername=                     jgilmore                 </p>             </td>             <td valign=\"top\">                 <p>                     No filter                 </p>             </td>             <td valign=\"top\">                 <p>                     The callback username in all CALLBACK type Emergency Notification Recipients returned.                 </p>             </td>         </tr>         <tr>             <td valign=\"top\">                 <p>                     Page                 </p>             </td>             <td valign=\"top\">                 <p>                     Page=                     2020-03-15T14:00:00.000-04:00                 </p>             </td>             <td valign=\"top\">                 <p>                     Now                 </p>             </td>             <td valign=\"top\">                 <p>                     This represents the position in the data set from which you want your output to begin.  If this parameter is omitted, results will include Emergency Notification Recipients last modified on or before the current date and time.  If a date and time is provided, results will include Emergency Notification Recipients last modified on or before that date and time.  Date/time format is YYYY-MM-DDTHH:MM:SS.mmmZ, where the Z indicate UTC time, or YYYY-MM-DDTHH:MM:SS.mmm-hh:mm, where \"-hh:mm\" represents the local time offset, plus or minus, from UTC time.                 </p>             </td>         </tr>         <tr>             <td  valign=\"top\">                 <p>                     Size                 </p>             </td>             <td  valign=\"top\">                 <p>                     Size=20                 </p>             </td>             <td  valign=\"top\">                 <p>                     100                 </p>             </td>             <td  valign=\"top\">                 <p>                     The maximum number of Emergency Notification Recipient results to include in the response payload.  This value may be between 1 and 500.                 </p>             </td>         </tr> </table>",
        "operationId" : "getAllEmergencyNotificationRecipientForAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "ModifiedAfterDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ModifiedByUser",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrDescription",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrNotificationType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrSmsTn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrTtsTn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrEmailAddress",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrCallbackUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrCallbackUsername",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response <br> The \"Links\" element includes two links.  The link called \"first\" is the link to the first set of results for the query that was submitted.  If there are more than \"Size\" results, a link called \"next\" is included to help you retrieve the next set of results up to \"Size\" elements. If the results of the query, filtered by the query parameters, do not return any results, the payload will contain empty tag \"EmergencyNotificationRecipients\"",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <Links> <!-- The 'first' link always gets the most recent results. --> <first> -- link to first page of results -- </first> <!-- If the 'next' link is present, there are more than 'size' results. --> <!-- Use the 'next' link to fetch the next set of results. --> <next> -- link to next page of results -- </next> </Links> <EmergencyNotificationRecipients> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-18T21:26:47.403Z</CreatedDate> <LastModifiedDate>2020-03-18T21:26:47.403Z</LastModifiedDate> <ModifiedByUser>jgilmore</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>CALLBACK</Type> <Callback> <Url>https://foo.bar/baz</Url> <Credentials> <Username>jgilmore</Username> <!-- CallbackPassword is omitted for security --> </Credentials> </Callback> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-22T12:13:25.782Z</CreatedDate> <LastModifiedDate>2020-03-22T12:13:25.782Z</LastModifiedDate> <ModifiedByUser>gfranklin</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>EMAIL</Type> <EmailAddress>fred@gmail.com</EmailAddress> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-25T17:04:53.042Z</CreatedDate> <LastModifiedDate>2020-03-25T17:04:53.042Z</LastModifiedDate> <ModifiedByUser>msimpson</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>SMS</Type> <Sms> <TelephoneNumber>12015551212</TelephoneNumber> </Sms> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-29T20:14:01.736Z</CreatedDate> <LastModifiedDate>2020-03-29T20:17:53.294Z</LastModifiedDate> <ModifiedByUser>lsimpson</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>TTS</Type> <Tts> <TelephoneNumber>12015551212</TelephoneNumber> </Tts> </EmergencyNotificationRecipient> </EmergencyNotificationRecipients> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request <br> <p><b>Condition:</b> Unrecognized query parameter <br> <b>Error Description:</b>Query parameter xxx is not recognized. </p> <br> <p><b>Condition:</b>Unsupported value for query parameter <br> <b>Error Description:</b>Invalid value xxx for query parameter yyy. Supported values are aaa, bbb, etc. </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b>User does not have permission to view emergency notification recipients, either due to Role/Permission or because the account is not configured for Emergency Notification Config.<br> <b>Error Description:</b>Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied </Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "<p> Create a new emergency notification recipient.  <br>URI Parameters: <b>accountId</b> - the bandwidth Dashboard account that this emergency notification recipient is to belong to </p><p><b>Emergency notification recipient request elements</b></p><table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\">        <tbody>            <tr>                <td valign=\"top\">                    <p>                        <strong>Parameter</strong>                    </p>                </td>                <td width=\"351\" valign=\"top\">                    <p>                        <strong>Description</strong>                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        Description                    </p>                </td>                <td width=\"351\" valign=\"top\">                    <p>                        A mandatory 200 character description of the Emergency Notification Recipient.  The contents of this field are freeform, but ideally should describe who is being notified and by what means.  E.g. Voice notification to building 5 front desk.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        Type                    </p>                </td>                <td width=\"351\" valign=\"top\">                    <p>                        A mandatory field indicating the means by which the emergency call notification will be made.  The choices are\":\" EMAIL, SMS, TTS, and CALLBACK.  EMAIL sends an email to the specified email address.  SMS sends a text message to the specified telephone number.  TTS sends a voice call with a text-to-speech announcement to the specified telephone number.  CALLBACK causes invocation of a specified HTTPS URL.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        EmailAddress                    </p>                </td>                <td width=\"351\" valign=\"top\">                    <p>                        An email address that must be specified when the Type is set to EMAIL.  The value must be formatted like a valid email address.  E.g. FredJones@gmail.com.  An email address can be up to 254 characters long.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        Sms TelephoneNumber                    </p>                </td>                <td width=\"351\" valign=\"top\">                    <p>                        A telephone number capable of receiving text messages that must be specified when Type is set to SMS.  Format is 11 digits\":\" 1NPANXXXXXX.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        Tts TelephoneNumber                    </p>                </td>                <td width=\"351\" valign=\"top\">                    <p>                        A telephone number capable of receiving voice calls that must be specified when Type is set to TTS.  Format is 11 digits\":\" 1NPANXXXXXX.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        Callback Url                    </p>                </td>                <td width=\"351\" valign=\"top\">                    <p>                        An https URL that must be provided when Type is set to CALLBACK.                        The URL may optionally include one or mory query parameters.  E.g. https://foo.com/bar?param=value.  The URL may be up to 256 characters.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        Callback Username                    </p>                </td>                <td width=\"351\" valign=\"top\">                    <p>                        A username to be used in Basic Authentication of the callback that must be specified when Type is CALLBACK.  The username may be up to 32 characters.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        Callback Password                    </p>                </td>                <td width=\"351\" valign=\"top\">                    <p>                        A password to be used in Basic Authentication of the callback that must be specified when Type is CALLBACK.  Passwords may be up to 256 characters.  Passwords are not included in GET responses.                    </p>                </td>            </tr>        </tbody>    </table>",
        "operationId" : "createEmergencyNotificationRecipient",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmergencyNotificationRecipientPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfull response <br> <p> <b>Emergency notification recipient response elements</b> <br> The following fields are present only in the success response.  For request fields, please see the request tab. </p> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Parameter</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Identifier </p> </td> <td width=\"351\" valign=\"top\"> <p> a system-assigned unique identifier for the Emergency Notification Recipient. This field is not present in the request, but mandatory in the success response.  This identifier can be used as a key to fetch the emergency notification recipient instance later.  This value will be used as the EVS Notification ID. </p> </td> </tr> <tr> <td valign=\"top\"> <p> CreatedDate </p> </td> <td width=\"351\" valign=\"top\"> <p> the date and time in UTC when the emergency notification recipient was created. </p> </td> </tr> <tr> <td valign=\"top\"> <p> LastModifiedDate </p> </td> <td width=\"351\" valign=\"top\"> <p> the date and time in UTC when the emergency notification recipient was last modified.  If this date and time is the same as the CreatedDate, the recipient has never been modified. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ModifiedByUser </p> </td> <td width=\"351\" valign=\"top\"> <p> the Bandwidth Dashboard username of the last person to create or modify this emergency notification recipient. </p> </td> </tr> </tbody> </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-18T21:26:47.403Z</CreatedDate> <LastModifiedDate>2020-03-18T21:26:47.403Z</LastModifiedDate> <ModifiedByUser>jgilmore</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>CALLBACK</Type> <Callback> <Url>https://foo.bar/baz</Url> <Credentials> <Username>jgilmore</Username> <!-- CallbackPassword is omitted for security --> </Credentials> </Callback> </EmergencyNotificationRecipient> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing or empty description </p> </td> <td width=\"351\" valign=\"top\"> <p> Description must be present and non-empty. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing type </p> </td> <td width=\"351\" valign=\"top\"> <p> Type is a mandatory element. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Unrecognized type value </p> </td> <td width=\"351\" valign=\"top\"> <p> Type value must be one of 'EMAIL', 'SMS', 'TTS', or 'CALLBACK'. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing data required for type - for example, type is EMAIL, but no EmailAddress element is present. </p> </td> <td width=\"351\" valign=\"top\"> <p> When Type xxx is specified, yyy must be included., where xxx is one of the type values and yyy is the element that is missing. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed email </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid EmailAddress.  Format should be foo@bar.com.  Max length is 254 characters. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed telephone number </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid TelephoneNumber.  Telephone number must be 11 digits in format 1NPANXXXXXX. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed url </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Url.  Format should be https://foo.bar[?param=val]. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed username </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Username.  Username must be between 1 and 32 characters. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed password </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Password.  Password must be between 1 and 256 characters. </p> </td> </tr> </tbody> </table>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure emergency notification recipients, either due to Role/Permission or because the account is not enabled for Emergency Notifications. <br> <b>Error Description:</b> Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied </Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict <br> <p> <b>Condition:</b> Duplicate entry <br> <b>Error Description:</b> An entry with an identical recipient already exists. Identifier xxx., where xxx is replaced with the emergency notification recipient Identifier of the existing entry.</p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>An entry with an identical recipient already exists. Identifier xxx., where xxx is replaced with the emergency notification recipient Identifier of the existing entry.</Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencynotificationrecipients/{enrId}" : {
      "put" : {
        "tags" : [ "external" ],
        "description" : "<p>The PUT operation is used to replace an emergency notification recipient without changing its identifier value.  All emergency notification recipient fields must be specified, even if they are not changing.URI parameters: The account id of the account to which the emergency notification recipient belongs.  The identifier assigned to the emergency notification recipient when it was created. </p><p>Emergency notification recipient request elements:</p><b>Description</b> - A mandatory 200 character description of the Emergency Notification Recipient.  The contents of this field are freeform, but ideally should describe who is being notified and by what means.  E.g. Voice notification to building 5 front desk.<br><br><b>Type</b> - A mandatory field indicating the means by which the emergency call notification will be made.  The choices are: EMAIL, SMS, TTS, and CALLBACK.  EMAIL sends an email to the specified email address.  SMS sends a text message to the specified telephone number.  TTS sends a voice call with a text-to-speech announcement to the specified telephone number.  CALLBACK causes invocation of a specified HTTPS URL.<br><br><b>EmailAddress</b> - An email address that must be specified when the Type is set to EMAIL.  The value must be formatted like a valid email address.  E.g. FredJones@gmail.com.  An email address can be up to 254 characters long.<br><br><b>Sms TelephoneNumber</b> - A telephone number capable of receiving text messages that must be specified when Type is set to SMS.  Format is 11 digits: 1NPANXXXXXX.<br><br><b>Tts TelephoneNumber</b> - A telephone number capable of receiving voice calls that must be specified when Type is set to TTS.  Format is 11 digits: 1NPANXXXXXX.<br><br><b>Callback Url</b> - An https URL that must be provided when Type is set to CALLBACK.  The URL may optionally include one or mory query parameters.  E.g. https://foo.com/bar?param=value.  The URL may be up to 256 characters.<br><br><b>Callback Username</b> - A username to be used in Basic Authentication of the callback that must be specified when Type is CALLBACK.  The username may be up to 32 characters.<br><br><b>Callback Password</b> - A password to be used in Basic Authentication of the callback that must be specified when Type is CALLBACK.  Passwords may be up to 256 characters.  Passwords are not included in GET responses.<br><br>",
        "operationId" : "updateEmergencyNotificationRecipient",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "enrId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmergencyNotificationRecipientPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <EmergencyNotificationRecipient> <Identifier> 63865500-0904-46b1-9b4f-7bd237a26363 </Identifier> <CreatedDate>2020-03-18T21:26:47.403Z</CreatedDate> <LastModifiedDate>2020-04-01T18:32:22.316Z</LastModifiedDate> <ModifiedByUser>jgilmore</ModifiedByUser> <Description> This is a description of the emergency notification recipient. </Description> <Type>CALLBACK</Type> <Callback> <Url>https://foo.bar/baz</Url> <Credentials> <Username>jgilmore</Username> <!-- CallbackPassword is omitted for security --> </Credentials> </Callback> </EmergencyNotificationRecipient> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing or empty description </p> </td> <td width=\"351\" valign=\"top\"> <p> Description must be present and non-empty. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing type </p> </td> <td width=\"351\" valign=\"top\"> <p> Type is a mandatory element. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Unrecognized type value </p> </td> <td width=\"351\" valign=\"top\"> <p> Type value must be one of 'EMAIL', 'SMS', 'TTS', or 'CALLBACK'. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing data required for type - for example, type is EMAIL, but no EmailAddress element is present. </p> </td> <td width=\"351\" valign=\"top\"> <p> When Type xxx is specified, yyy must be included., where xxx is one of the type values and yyy is the element that is missing. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed email </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid EmailAddress.  Format should be foo@bar.com.  Max length is 254 characters. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed telephone number </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid TelephoneNumber.  Telephone number must be 11 digits in format 1NPANXXXXXX. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed url </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Url.  Format should be https://foo.bar[?param=val]. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed username </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Username.  Username must be between 1 and 32 characters. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed password </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Password.  Password must be between 1 and 256 characters. </p> </td> </tr> </tbody> </table>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure emergency notification recipients, either due to Role/Permission or because the account is not enabled for Emergency Notifications. <br> <b>Error Description:</b> Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>Access Denied </Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The resource does not exist <br> <p> <b>Condition:</b> Specified emergency notification recipient ID does not exist for this account <br> <b>Error Description:</b> The resource does not exist </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>The resource does not exist</Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "<p> <b>Condition:</b> Duplicate entry <br> <b>Error Description:</b> An entry with an identical recipient already exists. Identifier xxx., where xxx is replaced with the emergency notification recipient Identifier of the existing entry. </p> <br>",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "The DELETE operation is used to remove the emergency notification recipient specified by its identifier. <br><br>An emergency notification recipient cannot be removed if it is still used by an emergency notification group. If you wish to remove an emergency notification recipient that is associated with an emergency notificaiton group, use the /account/{accountId}/emergencyNotificationGroupOrders endpoint to remove the group or modify the group to no longer use this emergency notification recipient.URI parameters:    <ul>      <li>      <b>accountId</b> - the account id of the account to which the emergency notification recipient belongs      </li>      <li>      <b>enrId</b> - the identifier assigned to the emergency notification recipient when it was created      </li>    </ul>",
        "operationId" : "deleteEmergencyNotificationRecipient",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "enrId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Sussessful response <br> The DELETE request has no payload. The 200 response also has no payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure emergency notification recipients, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied </Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The resource does not exist <br> <p><b>Condition:</b> The emergency notification recipient identifier does not exist, or does not exist for the specified account id. <br> <b>Error Description:</b> The resource does not exist </p> <br>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>The resource does not exist</Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict <br> <p> <b>Condition:</b> Attempt to delete an emergency notification recipient that is referenced by an emergency notification group. <br> <b>Error Description:</b> Emergency notification recipient with identifier xxx is being used by emergency notification group with identifier yyy. Please remove the recipient reference from the group prior to removing the recipient., where xxx is replaced by the emergency notification recipient ID and yyy is replaced by the emergency notification group ID. </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationRecipientsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>Emergency notification recipient with identifier xxx is being used by emergency notification group with identifier yyy. Please remove the recipient reference from the group prior to removing the recipient., where xxx is replaced by the emergency notification recipient ID and yyy is replaced by the emergency notification group ID. </Description> </ResponseStatus> </EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencynotificationgrouporders" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "<p> The GET operation provides a means of fetching all of the emergency notification group order history for an account. <br>A number of query parameters are provided to filter the results. <br>URI Parameters: <b>accountId</b> - the account id of the account to which the emergency notification recipient belongs </p><p>The GET operation has no payload, although the accountId URI parameter is mandatory and a number of optional query parameters may be added.Results are returned by default in the order of newest to oldest creation date of the Emergency Notification Group Order. This default order is reversed from oldest to newest when the CreatedAfterDate query parameter is included in the query.Query parameters are appended to the end of the endpoint, separated by a '?' and in the format parameter=value. If you wish to specify more than one query parameter, separate them using an '&' character. The order of query parameters does not matter. For example: <br>GET /accounts/{accountId}/emergencyNotificationGroupOrders?EnrDescription=front desk&EnrType=SMS <br>...will return all Emergency Notification Group Orders associated with Emergency Notification Recipients having a description field including the string \"front desk\" and a notification type of SMS. The results will be sorted from newest order to oldest order. <br>This endpoint supports the following query parameters. All query parameters are optional.<table>        <tr>          <th>Parameter Name</th>          <th>Example</th>          <th>Default</th>          <th>Usage</th>        </tr>        <tr>            <td valign=\"top\">                <p>                    CreatedAfterDate                </p>            </td>            <td  valign=\"top\">                <p>                    CreatedAfterDate=                    2020-04-03T00:00:00.000-04:00                </p>            </td>            <td valign=\"top\">                <p>                    Results are returned in order from newest to oldest order creation date                </p>            </td>            <td valign=\"top\">                <p>                  Include results only for orders having order creation date and time after the date and time specified in this parameter.  Note that inclusion of this parameter reverses the default sort order of the results to ascending in date/time (i.e. from oldest to newest).  If you are looking for the CreatedBeforeDate query parameter, please see the Page parameter.  Date/time format is YYYY-MM-DDTHH:MM:SS.mmmZ, where the Z indicate UTC time, or YYYY-MM-DDTHH:MM:SS.mmm-hh:mm, where \"-hh:mm\" represents the local time offset, plus or minus, from UTC time.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    CreatedByUser                </p>            </td>            <td valign=\"top\">                <p>                     CreatedByUser=catlee                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                    Include results only for orders created by the user specified in this parameter.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EnrOperation                </p>            </td>            <td  valign=\"top\">                <p>                    EnrOperation=AddedEnr                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    Include results only for orders requesting one of the following emergency notification recipient operations: AddedEnr or DeletedEnr.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    ProcessingStatus                </p>            </td>            <td valign=\"top\">                <p>                    ProcessingStatus=FAILED                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    Include results only for orders having one of the following processing status values: FAILED or COMPLETED.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    CustomerOrderId                </p>            </td>            <td valign=\"top\">                <p>                    CustomerOrderId=j3jljkd8                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    Include results only for orders having the specified customer order id value.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EngId                </p>            </td>            <td valign=\"top\">                <p>                    EngId=                    63865500-0904-46b1-9b4f-7bd237a26363                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                    The Identifier of an Emergency Notification Group that was altered by an order.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EngDescription                </p>            </td>            <td valign=\"top\">                <p>                    EngDesription=3rd floor                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    A substring that will exist in the emergency notification group Description for all returned Emergency Notification Group Orders.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EnrId                </p>            </td>            <td  valign=\"top\">                <p>                    EnrId=                    63865500-0904-46b1-9b4f-7bd237a26363                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The Identifier of an Emergency Notification Recipient that is associated with the Emergency Notification Groups in all orders returned.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EnrDescription                </p>            </td>            <td valign=\"top\">                <p>                    EnrDescription=front desk                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                    A substring that will exist in all Emergency Notification Recipient Descriptions associated with the Emergency Notification Groups in all orders returned.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EnrNotificationType                </p>            </td>            <td valign=\"top\">                <p>                    EnrNotificationType=TTS                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                    The type of notification (EMAIL, SMS, TTS, or CALLBACK) specified for Emergency Notification Recipients associated with the Emergency Notification Groups in all orders returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrSmsTn                </p>            </td>            <td  valign=\"top\">                <p>                    EnrSmsTn=3037458827                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The Short Message Service telephone number in all SMS type Emergency Notification Recipients associated with the Emergency Notification Groups in all orders returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrTtsTn                </p>            </td>            <td  valign=\"top\">                <p>                    EnrTtsTn=402288875                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The Text To Speech telephone number in all TTS type Emergency Notification Recipients associated with the Emergency Notification Groups in all orders returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrEmailAddress                </p>            </td>            <td  valign=\"top\">                <p>                    EnrEmailAddress=fred@aol.com                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The email address in all EMAIL type Emergency Notification Recipients associated with the Emergency Notification Groups in all orders returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrCallbackUrl                </p>            </td>            <td  valign=\"top\">                <p>                    EnrCallbackUrl=                    https://e911.callback.mycompany.com                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The callback URL in all CALLBACK type Emergency Notification Recipients associated with the Emergency Notification Groups in all orders returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrCallbackUsername                </p>            </td>            <td  valign=\"top\">                <p>                    EnrCallbackUsername=ljames                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The callback username in all CALLBACK type Emergency Notification Recipients associated with the Emergency Notification Groups in all orders returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    Page                </p>            </td>            <td  valign=\"top\">                <p>                    Page=2019-08-01Z                </p>            </td>            <td  valign=\"top\">                <p>                    Now                </p>            </td>            <td  valign=\"top\">                <p>                  This represents the position in the data set from which you want your output to begin.  If this parameter is omitted, results will include Emergency Notification Group Orders created on or before the current date and time.  If a date and time is provided, results will include Emergency Notification Group Orders created on or before that date and time.  Date/time format is YYYY-MM-DDTHH:MM:SS.mmmZ, where the Z indicate UTC time, or YYYY-MM-DDTHH:MM:SS.mmm-hh:mm, where \"-hh:mm\" represents the local time offset, plus or minus, from UTC time.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    Size                </p>            </td>            <td  valign=\"top\">                <p>                    Size=200                </p>            </td>            <td  valign=\"top\">                <p>                    100                </p>            </td>            <td  valign=\"top\">                <p>                  The maximum number of Emergency Notification Group Order results to include in the response payload.  This value may be between 1 and 500.                </p>            </td>        </tr></table>",
        "operationId" : "getGroupOrders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "CreatedAfterDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "CreatedByUser",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EngOperation",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrOperation",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ProcessingStatus",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "CustomerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EngId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EngDescription",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrDescription",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrNotificationType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrSmsTn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrTtsTn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrEmailAddress",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrCallbackUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrCallbackUsername",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ExpandErrors",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        }, {
          "name" : "EnrDetails",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response <br> The \"Links\" element includes two links.  The link called \"first\" is the link to the first set of results for the query that was submitted. If there are more than \"Size\" results, a link called \"next\" is included to help you retrieve the next set of results up to \"Size\" elements. <br> If the results of the query, filtered by the query parameters, do not return any results, the payload will contain empty tag \"EmergencyNotificationGroupOrders\"",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmergencyNotificationGroupRecipientOrderResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <Links> <first>Link=&lt;http://localhost:8080/v1.0/accounts/12346371/emergencyNotificationGroupOrders&gt;;rel=\"first\";</first> </Links> <EmergencyNotificationGroupOrders> <EmergencyNotificationGroupOrder> <OrderId>092815dc-9ced-4d67-a070-a80eb243b914</OrderId> <OrderCreatedDate>2020-04-29T15:40:01.449Z</OrderCreatedDate> <CreatedBy>systemUser</CreatedBy> <ProcessingStatus>COMPLETED</ProcessingStatus> <CustomerOrderId>QTWeKMys</CustomerOrderId> <AddedEmergencyNotificationGroup> <Identifier>6daa55e1-e499-4cf0-9f3d-9524215f1bee</Identifier> <Description>enr test description 3</Description> <AddedEmergencyNotificationRecipients> <EmergencyNotificationRecipient> <Identifier>44f203915ca249b7b69bbc084af09a</Identifier> <Description>TestDesc SEHsbDMM</Description> <Type>SMS</Type> <Sms> <TelephoneNumber>15638765448</TelephoneNumber> </Sms> </EmergencyNotificationRecipient> </AddedEmergencyNotificationRecipients> </AddedEmergencyNotificationGroup> </EmergencyNotificationGroupOrder> <EmergencyNotificationGroupOrder> <OrderId>89b4e0a1-2789-43fb-b948-38d368159142</OrderId> <OrderCreatedDate>2020-04-29T15:39:59.325Z</OrderCreatedDate> <CreatedBy>systemUser</CreatedBy> <ProcessingStatus>COMPLETED</ProcessingStatus> <CustomerOrderId>SDWupQpf</CustomerOrderId> <AddedEmergencyNotificationGroup> <Identifier>b49fa543-5bb3-4b9d-9213-96c8b63e77f5</Identifier> <Description>enr test description 2</Description> <AddedEmergencyNotificationRecipients> <EmergencyNotificationRecipient> <Identifier>c719e060a6ba4212a2c0642b87a784</Identifier> <Description>TestDesc zscxcAGG</Description> <Type>SMS</Type> <Sms> <TelephoneNumber>15678765448</TelephoneNumber> </Sms> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier>93ad72dfe59c4992be6f8aa625466d</Identifier> <Description>TestDesc RTflsKBz</Description> <Type>TTS</Type> <Tts> <TelephoneNumber>17678765449</TelephoneNumber> </Tts> </EmergencyNotificationRecipient> </AddedEmergencyNotificationRecipients> </AddedEmergencyNotificationGroup> </EmergencyNotificationGroupOrder> <EmergencyNotificationGroupOrder> <OrderId>247d1425-4247-4b27-99d8-83ce30038b14</OrderId> <OrderCreatedDate>2020-04-29T15:39:57.058Z</OrderCreatedDate> <CreatedBy>systemUser</CreatedBy> <ProcessingStatus>COMPLETED</ProcessingStatus> <CustomerOrderId>vgshuNMB</CustomerOrderId> <AddedEmergencyNotificationGroup> <Identifier>69a3d588-f314-42ca-8726-faa824bdf4be</Identifier> <Description>eng test description</Description> <AddedEmergencyNotificationRecipients> <EmergencyNotificationRecipient> <Identifier>aab78f87074940f1aaaf1c9658be4b</Identifier> <Description>enr test description</Description> <Type>EMAIL</Type> <EmailAddress>testEmail@gmail.com</EmailAddress> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier>852e9eee161b4da6823c91173b05c4</Identifier> <Description>TestDesc WkHqpnNH</Description> <Type>TTS</Type> <Tts> <TelephoneNumber>15678765449</TelephoneNumber> </Tts> </EmergencyNotificationRecipient> </AddedEmergencyNotificationRecipients> </AddedEmergencyNotificationGroup> </EmergencyNotificationGroupOrder> </EmergencyNotificationGroupOrders> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request <br> <p><b>Condition:</b> Unrecognized query parameter <br> <b>Error Description:</b>Query parameter xxx is not recognized. </p> <br> <p><b>Condition:</b>Unsupported value for query parameter <br> <b>Error Description:</b>Invalid value xxx for query parameter yyy. Supported values are aaa, bbb, etc. </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b>User does not have permission to view emergency notification group orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config.<br> <b>Error Description:</b>Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied</Description> </ResponseStatus> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "<p> The POST operation is used to create an order to create, update, or delete an emergency notification group. <br>URI Parameters: <b>accountId</b> - the account id of the account to which the emergency notification recipient belongs </p><p><b>Emergency notification group order request elements</b></p><table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\">        <tbody>            <tr>                <td valign=\"top\">                    <p>                        <strong>Parameter</strong>                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        <strong>Description</strong>                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        CustomerOrderId                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        An optional customer-defined order identifier that is stored with the Bandwidth order.  This value is opaque to Bandwidth.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        (emergency notification group) Identifier                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        A mandatory identifier of the Emergency Notification Group to be deleted or updated.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        AddedEmergencyNotificationGroup                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        Indicates that the order is to add an emergency notification group.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        DeletedEmergencyNotificationGroup                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        Indicates that the order is to delete an emergency notification group.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        UpdatedEmergencyNotificationGroup                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        Indicates that the order is to modify an emergency notification group.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        Description                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        A mandatory 200 character description of the Emergency Notification Group.                        The contents of this field are freeform, but ideally should describe the set of endpoints                        that are being grouped together for the purpose of having the same emergency notification recipients.  E.g. Occupants of building 5 main campus.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        AddedEmergencyNotificationRecipients                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        Indicates that emergency notification recipients are being added to the emergency notification group.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        DeletedEmergencyNotificationRecipients                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        Indicates that emergency notification recipients are being removed from the emergency notification group.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        EmergencyNotificationRecipients                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        A list of one to three emergency notification recipients being associated with this emergency notification group.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        EmergencyNotificationRecipient                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        One of up to three emergency notification recipients belonging to this emergency notification group.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        (emergency notification recipient) Identifier                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        The identifier that uniquely identifies an emergency notification recipient.  This identifier was assigned when the emergency notification recipient was created.  A given emergency notification recipient may be associated with only one emergency notification group.                    </p>                </td>            </tr>        </tbody>    </table><br><br>    <p><b>Creating a new emergency notification group</b> <br>    An emergency notification group must have one to three emergency notification recipients.  This means that the emergency notification recipients must be created before the emergency notification group.    </p>    <p><b>Deleting an emergency notification group</b> <br>    An emergency notification group may be deleted if there are no emergency endpoints associated with the group.  Deleting an emergency notification group that is configured with emergency notification recipients will successfully delete the group, but will not delete the emergency notification recipients.    </p>    <p><b>Updating an emergency notification group</b> <br>    You may remove emergency notification recipients from the emergency notification group, provided the total number remaining is at least one.    </p>",
        "operationId" : "createGroupOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmergencyNotificationGroupRecipientOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfull response <br> <p> <b>Emergency notification group order response elements:</b> <br> </p> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Parameter</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> OrderId </p> </td> <td width=\"351\" valign=\"top\"> <p> A system-assigned unique identifier assigned to this order.  Use this order id to fetch the status of the order. </p> </td> </tr> <tr> <td valign=\"top\"> <p> OrderCreatedDate </p> </td> <td width=\"351\" valign=\"top\"> <p> The UTC date and time at which this order was created. </p> </td> </tr> <tr> <td valign=\"top\"> <p> CreatedBy </p> </td> <td width=\"351\" valign=\"top\"> <p> The username of the user that created this order. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ProcessingStatus </p> </td> <td width=\"351\" valign=\"top\"> <p>The processing status of this order. Values may be:<b></b> PROCESSING, COMPLETED, FAILED.  PROCESSING means that the system is still processing the order.  COMPLETED means that the order has been successfully completed.  FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Identifier </p> </td> <td width=\"351\" valign=\"top\"> <p>A system-assigned unique identifier for the Emergency Notification Group.  This field is not present in the request, but mandatory in the success response.  This identifier can be used as a key to fetch the emergency notification group instance later. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ErrorList </p> </td> <td width=\"351\" valign=\"top\"> <p>A list, possibly empty, of errors affecting emergency notification group updates.  The ErrorList will be empty for orders that are COMPLETED.  It will be non-empty for orders that FAILED. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ErrorList Description </p> </td> <td width=\"351\" valign=\"top\"> <p> If an emergency notification group operation failed for some reason, this text describes the reason for the failure. </p> </td> </tr> </tbody> </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmergencyNotificationGroupRecipientOrderResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <OrderId>900b3646-18df-4626-b237-3a8de648ebf6</OrderId> <OrderCreatedDate>2020-04-29T15:27:16.151</OrderCreatedDate> <CreatedBy>systemUser</CreatedBy> <ProcessingStatus>PROCESSING</ProcessingStatus> <CustomerOrderId>UbOxhMnp</CustomerOrderId> <AddedEmergencyNotificationGroup> <Identifier>52897b97-3592-43fe-aa3f-857cf96671ee</Identifier> <Description>JgHzUzIchD</Description> <AddedEmergencyNotificationRecipients> <EmergencyNotificationRecipient> <Identifier>c7f74671edd8410d9a4c0f8e985e0a</Identifier> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier>74ac30535b414d29bc36d50572f553</Identifier> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier>b910df3245ce4192aee052f583259f</Identifier> </EmergencyNotificationRecipient> </AddedEmergencyNotificationRecipients> </AddedEmergencyNotificationGroup> </EmergencyNotificationGroupOrderResponse> <!--A sample 201 response to an order payload for deleting an emergency notification group looks like the following:--> <EmergencyNotificationGroupOrderResponse> <OrderId>7d424c13-f9b1-4fb5-b7c1-f9a9de5847ed</OrderId> <OrderCreatedDate>2020-04-29T15:27:16.358</OrderCreatedDate> <CreatedBy>systemUser</CreatedBy> <ProcessingStatus>PROCESSING</ProcessingStatus> <CustomerOrderId>JvvEOKOP</CustomerOrderId> <DeletedEmergencyNotificationGroup> <Identifier>52897b97-3592-43fe-aa3f-857cf96671ee</Identifier> </DeletedEmergencyNotificationGroup> </EmergencyNotificationGroupOrderResponse> <!--A sample 201 response to an order payload for updating an emergency notification group description looks like the following:--> <EmergencyNotificationGroupOrderResponse> <OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId> <OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate> <CreatedBy>jgilmore</CreatedBy> <ProcessingStatus>PROCESSING</ProcessingStatus> <CustomerOrderId>ALG-31233884</CustomerOrderId> <UpdatedEmergencyNotificationGroup> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> <Description> This is an updated description of the emergency notification Group. </Description> </UpdatedEmergencyNotificationGroup> </EmergencyNotificationGroupOrderResponse> <!--A sample 201 response to an order payload for updating an emergency notification group by adding emergency notification recipients looks like the following:--> <EmergencyNotificationGroupOrderResponse> <OrderId>31e4be80-e816-432e-a554-1219ed4fc5e9</OrderId> <OrderCreatedDate>2020-04-29T15:34:32.799</OrderCreatedDate> <CreatedBy>systemUser</CreatedBy> <ProcessingStatus>PROCESSING</ProcessingStatus> <ModifiedEmergencyNotificationGroup> <Identifier>5da0859b-2af8-42a3-85dd-dad4ba5f7503</Identifier> <Description>oXHGGVKwmd</Description> <AddedEmergencyNotificationRecipients> <EmergencyNotificationRecipient> <Identifier>f2eaa7be771241af9b031584875a60</Identifier>> </EmergencyNotificationRecipient> </AddedEmergencyNotificationRecipients> </ModifiedEmergencyNotificationGroup> </EmergencyNotificationGroupOrderResponse> <!--A sample 201 response to an order payload for updating an emergency notification group by removing emergency notification recipients looks like the following:--> <EmergencyNotificationGroupOrderResponse> <OrderId>31e4be80-e816-432e-a554-1219ed4fc5e9</OrderId> <OrderCreatedDate>2020-04-29T15:34:32.799</OrderCreatedDate> <CreatedBy>systemUser</CreatedBy> <ProcessingStatus>PROCESSING</ProcessingStatus> <ModifiedEmergencyNotificationGroup> <Identifier>5da0859b-2af8-42a3-85dd-dad4ba5f7503</Identifier> <Description>oXHGGVKwmd</Description> <DeletedEmergencyNotificationRecipients> <EmergencyNotificationRecipient> <Identifier>f2eaa7be771241af9b031584875a60</Identifier>> </EmergencyNotificationRecipient> </DeletedEmergencyNotificationRecipients> </ModifiedEmergencyNotificationGroup> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"451\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order payload does not indicate whether the emergency notification group is being created, modified, or deleted </p> </td> <td width=\"451\" valign=\"top\"> <p> Order payload must include one of \"AddedEmergencyNotificationGroup\", \"DeletedEmergencyNotificationGroup\", or \"ModifiedEmergencyNotificationGroup\". </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order is creating a new emergency notification group, but does not indicate that emergency notification recipients are being added </p> </td> <td width=\"451\" valign=\"top\"> <p> When creating an emergency notification group, \"AddedEmergencyNotificationRecipients\" must be included to indicate that emergency notification recipients are being added. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing or empty emergency notification group description </p> </td> <td width=\"451\" valign=\"top\"> <p> Emergency Notification Group Description must be present and non-empty. </p> </td> </tr> <tr> <td valign=\"top\"> <p> No emergency notification recipients listed </p> </td> <td width=\"451\" valign=\"top\"> <p> An Emergency Notification Group must have 1, 2, or 3 Emergency Notification Recipients.  Note:<b></b> This can be used for missing list or empty list. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Too many emergency notification recipients listed </p> </td> <td width=\"451\" valign=\"top\"> <p> An Emergency Notification Group must have 1, 2, or 3 Emergency Notification Recipients. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order does not include an emergency notification group </p> </td> <td width=\"451\" valign=\"top\"> <p> </p> </td> </tr> <tr> <td valign=\"top\"> <p> The specified emergency notification group does not exist </p> </td> <td width=\"451\" valign=\"top\"> <p> ENG Identifier xxx does not exist., where xxx is replaced by the emergency notification group identifier supplied in the request. </p> </td> </tr> <tr> <td valign=\"top\"> <p> The specified emergency notification recipient identifier does not exist </p> </td> <td width=\"451\" valign=\"top\"> <p> ENR Identifier xxx does not exist., where xxx is replaced by the emergency notification recipient identifier supplied in the request. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to update an emergency notification group, but none of \"Description\", \"AddedEmergencyNotificationRecipients\", or \"DeletedEmergencyNotificationRecipients\" included </p> </td> <td width=\"451\" valign=\"top\"> <p> Update of ENG did not specify any of:<b></b> new description, added ENRs, or deleted ENRs. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to update an emergency notification group with both \"AddedEmergencyNotificationRecipients\" and \"DeletedEmergencyNotificationRecipients\" included </p> </td> <td width=\"451\" valign=\"top\"> <p> Update of ENG supports added ENRs or deleted ENRs, but not both. </p> </td> </tr> </tbody> </table>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure emergency notification group orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied</Description> </ResponseStatus> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"451\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Invalid emergency notification recipient identifier </p> </td> <td width=\"451\" valign=\"top\"> <p> Emergency Notification Recipient Identifier xxx does not exist., where xxx is replaced by the emergency notification recipient identifier supplied in the request.  Note:<b></b> This error can be used also for the case where the emergency notification recipient ID exists, but not for this Iris account. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Specified emergency notification recipient is already associated with another emergency notification group </p> </td> <td width=\"451\" valign=\"top\"> <p> The Emergency Notification Recipient with identifier xxx is already associated with Emergency Notification Group with identifier yyy., where xxx is replaced with the emergency notification recipient ID supplied in the request, and yyy is replaced by the emergency notification group ID of the emergency notification group that the supplied emergency notification recipient ID is associated with.  Note:<b></b> The emergency notification group must also belong to this account. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to remove an emergency notification group that has emergency endpoints associated with it </p> </td> <td width=\"451\" valign=\"top\"> <p> ENG xxx cannot be removed until emergency endpoint associations are removed., where xxx is replaced by the emergency notification group identifier supplied in the request. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Removal of ENRs would leave the emergency notification group with no emergency notification recipient associations </p> </td> <td width=\"451\" valign=\"top\"> <p> An Emergency Notification Group must have 1, 2, or 3 Emergency Notification Recipients. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Addition of emergency notification recipients would leave the emergency notification group with too many emergency notification recipient associations </p> </td> <td width=\"451\" valign=\"top\"> <p> An Emergency Notification Group must have 1, 2, or 3 Emergency Notification Recipients. </p> </td> </tr> </tbody> </table>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencynotificationgrouporders/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "This endpoint is used to query the status of a specified emergency notification group order, using the order-id that was assigned in the 201 response to the order creation. <br>When you query an order-id, look for the \"ProcessingStatus\" element in the 200 response.  Values may be: PROCESSING, COMPLETED, or FAILED.  PROCESSING means that the system is still processing the order.  Please wait a couple of minutes and fetch the order results again.  COMPLETED means that the order has been successfully completed.  FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system.  Look for the \"ErrorList\" element to see what type of error occurred. <br>URI parameters:<ul>  <li>  <b>accountId</b> - the account id of the account to which the emergency notification group order belongs.  </li>  <li>  <b>orderId</b> - the order identifier assigned to the emergency notification group order when it was created.  </li></ul>",
        "operationId" : "getGroupOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmergencyNotificationGroupRecipientOrderResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <EmergencyNotificationGroup> <OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId> <OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate> <CreatedBy>jgilmore</CreatedBy> <ProcessingStatus>COMPLETED</ProcessingStatus> <CustomerOrderId>ALG-31233884</CustomerOrderId> <AddedEmergencyNotificationGroup> <EmergencyNotificationGroup> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> <Description>Building 5, 5th Floor.</Description> <AddedEmergencyNotificationRecipients> <EmergencyNotificationRecipients> <EmergencyNotificationRecipient> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> <Description>Building 5 front desk email</Description> <Type>EMAIL</Type> <EmailAddress>Bldg5Reception@company.com</EmailAddress> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier>ef47eb61-e3b1-449d-834b-0fbc5a11da30</Identifier> <Description>Building 5 5th floor responder text</Description> <Type>SMS</Type> <Sms> <TelephoneNumber>12124487782</TelephoneNumber> </Sms> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier>c9a2f068-e1b0-4454-9c0b-74c4113f6141</Identifier> <Description>Callback for MyCompany</Description> <Type>CALLBACK</Type> <Url>https://foo.bar/baz</Url> <Credentials> <Username>jgilmore</Username> </Credentials> </EmergencyNotificationRecipient> </EmergencyNotificationRecipients> <AddedEmergencyNotificationRecipients> <ErrorList /> <EmergencyNotificationGroup> </AddedEmergencyNotificationGroup> </EmergencyNotificationGroup> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b> User does not have permission to view emergency notification group orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied</Description> </ResponseStatus> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The resource does not exist <br> <p><b>Condition:</b> Specified emergency notification group order-id does not exist for this account. <br> <b>Error Description:</b> The resource does not exist </p> <br>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencynotificationendpointorders" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "<p> The GET operation provides a means to query any Emergency Notification Endpoint Order associated with the account. This endpoint is for querying \"orders\", not the emergency endpoint to emergency notification group associations themselves. <br>URI Parameters: <b>accountId</b> - the account id of the account to which the emergency notification recipient belongs. </p><p>The GET operation has no payload, although the accountId URI parameter is mandatory and a number of optional query parameters may be added. The query parameters are described in this section.   Results are returned by default in the order of newest to oldest creation date of the Emergency Notification Endpoint Order. This default order is reversed from oldest to newest when the CreatedAfterDate query parameter is included in the query.   Query parameters act as filters on the data. If more than one query parameter is provided, the results will be the intersection of the results from each query parameter. In other words, the query parameters are logically ANDed.   Query parameters are appended to the end of the endpoint, separated by a '?' and in the format parameter=value. If you wish to specify more than one query parameter, separate them using an '&' character. The order of query parameters does not matter. For example:<br>   GET /accounts/{accountId}/emergencyNotificationEndpointOrders?EngDescription=3rd Floor&EndpointOperation=Dissociated <br>   ...will return all Emergency Notification Endpoint Orders associated with Emergency Notification Groups having a description field including the string \"3rd Floor\" and where endpoints were dissociated from emergency notification groups. The results will be sorted from newest order to oldest order.<br>    This endpoint supports the following query parameters. All query parameters are optional.</p><table>        <tr>          <th>Parameter Name</th>          <th>Example</th>          <th>Default</th>          <th>Usage</th>        </tr>        <tr>            <td valign=\"top\">                <p>                    CreatedAfterDate                </p>            </td>            <td  valign=\"top\">                <p>                    CreatedAfterDate=                    2020-03-30T14:00:00Z                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                  Include results only for orders having order creation date and time after the date and time specified in this parameter.  Note that inclusion of this parameter reverses the default sort order of the results to ascending in date/time (i.e. from oldest to newest).  If you are looking for the CreatedBeforeDate query parameter, please see the Page parameter.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    CreatedByUser                </p>            </td>            <td valign=\"top\">                <p>                     CreatedByUser=catlee                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                    Include results only for orders created by the user specified in this parameter.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    ProcessingStatus                </p>            </td>            <td valign=\"top\">                <p>                    ProcessingStatus=FAILED                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    Include results only for orders having one of the following processing status values: FAILED or COMPLETED.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    CustomerOrderId                </p>            </td>            <td valign=\"top\">                <p>                    CustomerOrderId=j3jljkd8                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    Include results only for orders having the specified customer order id value.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EngId                </p>            </td>            <td valign=\"top\">                <p>                    EngId=                    63865500-0904-46b1-9b4f-7bd237a26363                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                    The Identifier of an Emergency Notification Group that was altered by an order.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EngDescription                </p>            </td>            <td valign=\"top\">                <p>                    EngDesription=3rd floor                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    A substring that will exist in the emergency notification group Description for all returned Emergency Notification Endpoint Orders.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EepTns                </p>            </td>            <td  valign=\"top\">                <p>                    EepTns=404                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    Include results only for orders having EepTns that start with the specified digit string.  The digit string may be from 1 to 11 digits.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EepAeuiIds                </p>            </td>            <td valign=\"top\">                <p>                    EepAeuiIds=Joe                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                    Include results only for orders having EepAeuiIds that start with the specified character string.  The string may be from 1 to 30 characters.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    Page                </p>            </td>            <td  valign=\"top\">                <p>                    Page=2019-08-01Z                </p>            </td>            <td  valign=\"top\">                <p>                    Now                </p>            </td>            <td  valign=\"top\">                <p>                  This represents the position in the data set from which you want your output to begin.  If this parameter is omitted, results will include Emergency Notification Endpoint Orders created on or before the current date and time.  If a date and time is provided, results will include Emergency Notification Endpoint Orders created on or before that date and time.  Date/time format is YYYY-MM-DDTHH:MM:SS.mmmZ, where the Z indicate UTC time, or YYYY-MM-DDTHH:MM:SS.mmm-hh:mm, where \"-hh:mm\" represents the local time offset, plus or minus, from UTC time.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    Size                </p>            </td>            <td  valign=\"top\">                <p>                    Size=5                </p>            </td>            <td  valign=\"top\">                <p>                    100                </p>            </td>            <td  valign=\"top\">                <p>                  The maximum number of Emergency Notification Endpoint Order results to include in the response payload.  This value may be between 1 and 500.                </p>            </td>        </tr></table>",
        "operationId" : "retrieveGroupsAssociationOrder",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "CreatedAfterDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "CreatedByUser",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EndpointOperation",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ProcessingStatus",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "CustomerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EngId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EngDescription",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EepTns",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EepAeuiIds",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ExpandErrors",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        }, {
          "name" : "EnrDetails",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response <br> If no order matching the query exists, GET responds with a 200 and an empty array of orders",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmergencyNotificationGroupsEndpointAssociationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationEndpointOrderResponse> <Links> <!-- The 'first' link always gets the first set of matching results. --> <first> -- link to first page of results -- </first> <!-- If the 'next' link is present, there are more than 'size' results. --> <!-- Use the 'next' link to fetch the next set of results. --> <next> -- link to next page of results -- </next> </Links> <EmergencyNotificationEndpointOrders> <EmergencyNotificationEndpointOrder> <OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId> <OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate> <CreatedBy>jgilmore</CreatedBy> <ProcessingStatus>COMPLETED</ProcessingStatus> <CustomerOrderId>ALG-31233884</CustomerOrderId> <EmergencyNotificationEndpointAssociations> <EmergencyNotificationGroup> <Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier> </EmergencyNotificationGroup> <!-- If the order created emergency endpoint to emergency notification group associations --> <AddedAssociations> <EepToEngAssociations> <EepTns> <TelephoneNumber>2248838829</TelephoneNumber> <TelephoneNumber>4052397735</TelephoneNumber> </EepTns> <EepAeuiIds> <Identifier>Fred992834</Identifier> <Identifier>Bob00359</Identifier> </EepAeuiIds> </EepToEngAssociations> <ErrorList /> </AddedAssociations> </EmergencyNotificationEndpointAssociations> </EmergencyNotificationEndpointOrder> <EmergencyNotificationEndpointOrder> <!-- Snip --> </EmergencyNotificationEndpointOrder> <EmergencyNotificationEndpointOrder> <!-- Snip --> </EmergencyNotificationEndpointOrder> </EmergencyNotificationEndpointOrders> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request <br> <p><b>Condition:</b> Unrecognized query parameter <br> <b>Error Description:</b>Query parameter xxx is not recognized. </p> <br> <p><b>Condition:</b>Unsupported value for query parameter <br> <b>Error Description:</b>Invalid value xxx for query parameter yyy. Supported values are aaa, bbb, etc. </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationEndpointOrderResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b>User does not have permission to view Endpoint orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config.<br> <b>Error Description:</b>Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationEndpointOrderResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied</Description> </ResponseStatus> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "<p> The POST operation creates a new order to request that an emergency endpoint be added to or removed from an emergency notification group.  A given order may either add or remove associations, not both in one order.<br>    If the order is successfully created, a 201 response is returned, including an order-id that is used to query for completion of the order. <br>    The order's ProcessingStatus is set to PROCESSING when the request is successfully created.  When processing of all emergency endpoint to emergency notification group associations has been attempted, the software    will update the order's processing status to either COMPLETED or FAILED. <br>URI Parameters: <b>accountId</b> - the account id of the account to which the emergency endpoints and emergency notification groups are configured. </p><p><b>The emergency notification endpoint order includes the following payload elements:</b></p><table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\">        <tbody>            <tr>                <td valign=\"top\">                    <p>                        <strong>Parameter</strong>                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        <strong>Description</strong>                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        CustomerOrderId                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        An optional customer-defined order identifier that is stored with the Bandwidth order.  This value is opaque to Bandwidth.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        EmergencyNotificationGroup Identifier                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        The mandatory identifier that uniquely identifies the emergency notification group to which emergency endpoints are being associated.  This value is assigned by the system when the emergency notification group is created.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        AddedAssociations                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        Included when emergency endpoint to emergency notification group associations are to be created.  Only AddedAssociations or Deleted Associations may be included in a given order.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        DeletedAssociations                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        Included when emergency endpoint to emergency notification group associations are to be removed.  Only AddedAssociations or Deleted Associations may be included in a given order.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        EepToEngAssociations                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        Mandatory container for the list of TNs and AEUI identifiers to be associated or dissociated with the emergency notification group.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        EepTns                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        A container of emergency endpoints that are of type TN.  This element may be omitted if none of the emergency endpoints to be associated or dissociated are telephone numbers.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        TelephoneNumber                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        A 10-digit telephone number representing an emergency endpoint in the ListOfEepTns.  The list may consist of a single TN if desired.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        EepAeuiIds                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        A container of emergency endpoints that are of type AEUI.  This element may be omitted if none of the emergency endpoints to be associated or dissociated are Alternate End User Identities.                    </p>                </td>            </tr>            <tr>                <td valign=\"top\">                    <p>                        Identifier                    </p>                </td>                <td width=\"451\" valign=\"top\">                    <p>                        A unique identifier for the AEUI representing an emergency endpoint in the ListOfEepAeuiIds.  The list may consist of a single AEUI ID if desired.                    </p>                </td>            </tr>        </tbody>    </table>",
        "operationId" : "createGroupOrder_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmergencyNotificationGroupEndpointAssociationPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfull response <br> <p> <b>The response payload may include the following payload elements in addition to information added in the request payload:</b> <br> </p> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Parameter</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> OrderId </p> </td> <td width=\"351\" valign=\"top\"> <p> A system-assigned unique identifier assigned to this order.  Use this order id to fetch the status of the order. </p> </td> </tr> <tr> <td valign=\"top\"> <p> OrderCreatedDate </p> </td> <td width=\"351\" valign=\"top\"> <p> The UTC date and time at which this order was created. </p> </td> </tr> <tr> <td valign=\"top\"> <p> CreatedBy </p> </td> <td width=\"351\" valign=\"top\"> <p> The username of the user that created this order. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ProcessingStatus </p> </td> <td width=\"351\" valign=\"top\"> <p>The processing status of this order. Values may be:<b></b> PROCESSING, COMPLETED, FAILED.  PROCESSING means that the system is still processing the order.  COMPLETED means that the order has been successfully completed.  FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ErrorList </p> </td> <td width=\"351\" valign=\"top\"> <p>A list, possibly empty, of errors affecting emergency notification group updates.  The ErrorList will be empty for orders that are COMPLETED.  It will be non-empty for orders that FAILED. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ErrorList Description </p> </td> <td width=\"351\" valign=\"top\"> <p> If an emergency notification group operation failed for some reason, this text describes the reason for the failure. </p> </td> </tr> </tbody> </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmergencyNotificationGroupEndpointAssociationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<!--The 201 response payload for creating an order to add emergency endpoint associations to an emergency notification group--> <EmergencyNotificationEndpointOrderResponse> <EmergencyNotificationEndpointOrder> <OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId> <OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate> <CreatedBy>jgilmore</CreatedBy> <ProcessingStatus>COMPLETED</ProcessingStatus> <CustomerOrderId>ALG-31233884</CustomerOrderId> <EmergencyNotificationEndpointAssociations> <EmergencyNotificationGroup> <Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier> </EmergencyNotificationGroup> <!-- If the order created emergency endpoint to emergency notification group associations --> <AddedAssociations> <EepToEngAssociations> <EepTns> <TelephoneNumber>2248838829</TelephoneNumber> <TelephoneNumber>4052397735</TelephoneNumber> </EepTns> <EepAeuiIds> <Identifier>Fred992834</Identifier> <Identifier>Bob00359</Identifier> </EepAeuiIds> </EepToEngAssociations> <ErrorList /> </AddedAssociations> </EmergencyNotificationEndpointAssociations> </EmergencyNotificationEndpointOrder> </EmergencyNotificationEndpointOrderResponse> <!--The 201 response payload for creating an order to remove emergency endpoint associations from an emergency notification group--> <EmergencyNotificationEndpointOrderResponse> <EmergencyNotificationEndpointAssociation> <OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId> <OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate> <CreatedBy>jgilmore</CreatedBy> <ProcessingStatus>PROCESSING</ProcessingStatus> <CustomerOrderId>ALG-31233884</CustomerOrderId> <EmergencyNotificationGroup> <Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier> </EmergencyNotificationGroup> <!-- If the order removed emergency endpoint to emergency notification group associations --> <DeletedAssociations> <EepToEngAssociations> <EepTns> <TelephoneNumber>9152877649</TelephoneNumber> </EepTns> <EepAeuiIds> <Identifier>Sally88744</Identifier> </EepAeuiIds> </EepToEngAssociations> <ErrorList /> </DeletedAssociations> </EmergencyNotificationEndpointAssociation> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"451\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order payload does not indicate whether the endpoints are being added or deleted </p> </td> <td width=\"451\" valign=\"top\"> <p> Order payload must include one of \"AddedAssociations\" or \"DeletedAssociations\". </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to both add and delete endpoint associations in one request </p> </td> <td width=\"451\" valign=\"top\"> <p> Order payload must include one of \"AddedAssociations\" or \"DeletedAssociations\", but not both in one request. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order payload does not specify any endpoints to be added </p> </td> <td width=\"451\" valign=\"top\"> <p> Order payload must include at least one Emergency Enpoint value. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Too many emergency endpoints listed </p> </td> <td width=\"451\" valign=\"top\"> <p> Please limit the total number of emergency endpoints to 5000 per request. </p> </td> </tr> </tbody> </table>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationEndpointOrderResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure associations between emergency endpoints and an emergency notification group, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationEndpointOrderResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied</Description> </ResponseStatus> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"451\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Invalid emergency notification group identifier </p> </td> <td width=\"451\" valign=\"top\"> <p> Emergency Notification Group Identifier xxx does not exist., where xxx is replaced by the emergency notification group identifier supplied in the request.  Note:<b></b> This error can be used also for the case where the emergency notification group ID exists, but not for this Iris account. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to add invalid emergency endpoint identifier </p> </td> <td width=\"451\" valign=\"top\"> <p> Emergency Endpoint Identifier being added does not exist.  Note:<b></b> This error can also be used for the case where the emergency endpoint ID exists, but not for this Iris account. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to remove invalid emergency endpoint identifier, for the case where the emergency endpoint does not exist for the specified Iris account </p> </td> <td width=\"451\" valign=\"top\"> <p>Warning:<b></b> Emergency Endpoint Identifier specified for removal does not exist. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to remove a valid emergency endpoint identifier that is associated with an emergency notification group other than the one specified in the request </p> </td> <td width=\"451\" valign=\"top\"> <p> Error:<b></b> Emergency Endpoint Identifier specified for removal is not associated with Emergency Notification Group xxx., where xxx is replaced by the emergency notification group identifier. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to add an endpoint, but specified emergency endpoint is already associated with another emergency notification group                                </p> </td> <td width=\"451\" valign=\"top\"> <p> The Emergency Endpoint with identifier xxx is already associated with Emergency Notification Group with identifier yyy., where xxx is replaced with the TN or AEUI supplied in the request, and yyy is replaced by the emergency notification group ID of the emergency notification group that the supplied endpoint ID is associated with. </p> </td> </tr> </tbody> </table>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationEndpointOrderResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencynotificationendpointorders/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "This endpoint is used to fetch the status of an emergency notification endpoint order, using the order-id assigned when the order was created. <br>If the order is still being processed, the ProcessingStatus will be PROCESSING.  If the order has completed successfully, the ProcessingStatus will be COMPLETED.  Otherwise the ProcessingStatus will be FAILED.  If the ProcessingStatus is FAILED, look for the ErrorList in the payload to see reasons for the failure.URI parameters:<ul>  <li>  <b>accountId</b> - the account id of the account to which the emergency notification endpoint order belongs.  </li>  <li>  <b>orderId</b> - the order-id assigned to the emergency notification endpoint order when it was created.  </li></ul>",
        "operationId" : "retrieveGroupAssociationOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmergencyNotificationGroupEndpointAssociationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationEndpointOrderResponse> <EmergencyNotificationEndpointOrder> <OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId> <OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate> <CreatedBy>jgilmore</CreatedBy> <ProcessingStatus>COMPLETED</ProcessingStatus> <CustomerOrderId>ALG-31233884</CustomerOrderId> <EmergencyNotificationEndpointAssociations> <EmergencyNotificationGroup> <Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier> </EmergencyNotificationGroup> <AddedAssociations> <EepToEngAssociations> <EepTns> <TelephoneNumber>2248838829</TelephoneNumber> <TelephoneNumber>4052397735</TelephoneNumber> </EepTns> <EepAeuiIds> <Identifier>Fred992834</Identifier> <Identifier>Bob00359</Identifier> </EepAeuiIds> </EepToEngAssociations> <ErrorList /> </AddedAssociations> </EmergencyNotificationEndpointAssociations> </EmergencyNotificationEndpointOrder> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b> User does not have permission to view emergency notification endpoint orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationEndpointOrderResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied </Description> </ResponseStatus> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The resource does not exist <br> <p><b>Condition:</b> Specified emergency notification endpoint order id does not exist for this account <br> <b>Error Description:</b> The resource does not exist </p> <br>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationEndpointOrderResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>The resource does not exist</Description> </ResponseStatus> </EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencynotificationgroups/{engId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "This endpoint allows you to fetch the configuration of a current emergency notification group by identifier.URI parameters:<ul>  <li>  <b>accountId</b> - the account id of the account to which the emergency notification recipient belongs.  </li>  <li>  <b>engId</b> - the emergency notification group identifier assigned to the emergency notification group when it was created.  </li></ul>Query parameters:            <table>                    <tr>                      <th>Parameter Name</th>                      <th>Example</th>                      <th>Default</th>                      <th>Usage</th>                    </tr>                    <tr>                        <td valign=\"top\">                            <p>                                IncludeEepTns                            </p>                        </td>                        <td  valign=\"top\">                            <p>                                IncludeEepTns=true                            </p>                        </td>                        <td valign=\"top\">                            <p>                                false                            </p>                        </td>                        <td valign=\"top\">                            <p>                                  Set this optional parameter to true if you wish to include a list                                  of all Emergency Endpoint TNs associated with this Emergency Notification Group.                            </p>                        </td>                    </tr>                    <tr>                        <td valign=\"top\">                            <p>                                IncludeEepAeuis                            </p>                        </td>                        <td  valign=\"top\">                            <p>                                IncludeEepAeuis=true                            </p>                        </td>                        <td valign=\"top\">                            <p>                                false                            </p>                        </td>                        <td  valign=\"top\">                            <p>                                Set this optional parameter to true if you wish to include a list                                of all Emergency Endpoint AEUIs associated with this Emergency Notification Group.                            </p>                        </td>                    </tr>                    <tr>                        <td valign=\"top\">                            <p>                                StartWithEepTn                            </p>                        </td>                        <td valign=\"top\">                            <p>                                StartWithEepTn=203208110                            </p>                        </td>                        <td valign=\"top\">                            <p>                                No filter                            </p>                        </td>                        <td valign=\"top\">                            <p>                                This parameter, which may only be specified if the IncludeEepTns parameter is set to true,                                indicates the starting digits of the emergency endpoint TN that you wish to begin with in the                                list of emergency endpoints associated with the emergency notification group. At least 3 digits                                must be supplied, and up to 10 digits may be included.                            </p>                        </td>                    </tr>                    <tr>                        <td valign=\"top\">                            <p>                                EepTnSize                            </p>                        </td>                        <td valign=\"top\">                            <p>                                EepTnSize=200                            </p>                        </td>                        <td valign=\"top\">                            <p>                                20                            </p>                        </td>                        <td valign=\"top\">                            <p>                                This parameter, which may only be specified if the IncludeEepTns parameter is set to true,                                 indicates the maximum number of associated emergency endpoint TNs you wish to include for                                 each emergency notification group that is returned in the query results. The value may range from 1 to 5000                            </p>                        </td>                    </tr>                    <tr>                        <td  valign=\"top\">                            <p>                                StartWithEepAeui                            </p>                        </td>                        <td  valign=\"top\">                            <p>                                StartWithEepAeui=Frank                            </p>                        </td>                        <td  valign=\"top\">                            <p>                                No filter                            </p>                        </td>                        <td  valign=\"top\">                            <p>                                This parameter, which may only be specified if the IncludeEepAeuis parameter is set to true,                                 indicates the starting characters of the emergency endpoint AEUI that you wish to begin with                                  in the list of emergency endpoints associated with the emergency notification group.                                  At least 3 characters must be supplied, and up to 50 characters may be included.                            </p>                        </td>                    </tr>                    <tr>                        <td  valign=\"top\">                            <p>                                EepAeuiSize                            </p>                        </td>                        <td  valign=\"top\">                            <p>                                EepAeuiSize=50                            </p>                        </td>                        <td  valign=\"top\">                            <p>                                20                            </p>                        </td>                        <td  valign=\"top\">                            <p>                                This parameter, which may only be specified if the IncludeEepAeuis parameter is set to true,                                indicates the maximum number of associated emergency endpoint AEUIs you wish to include for                                each emergency notification group that is returned in the query results. The value may range from 1 to 5000.                            </p>                        </td>                    </tr>            </table>",
        "operationId" : "retrieveEmergencyNotificationGroup",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "engId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "IncludeEepTns",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        }, {
          "name" : "IncludeEepAeuis",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        }, {
          "name" : "StartWithEepTn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EepTnSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "name" : "StartWithEepAeui",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EepAeuiSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupsResponse> <EmergencyNotificationGroup> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> <CreatedDate>2020-01-23T18:34:17.284Z</CreatedDate> <ModifiedBy>jgilmore</ModifiedBy> <ModifiedDate>2020-01-23T18:34:17.284Z</ModifiedDate> <Description>This is a description of the emergency notification group.</Description> <EmergencyNotificationRecipients> <EmergencyNotificationRecipient> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier>ef47eb61-e3b1-449d-834b-0fbc5a11da30</Identifier> </EmergencyNotificationRecipient> </EmergencyNotificationRecipients> </EmergencyNotificationGroup> </EmergencyNotificationGroupsResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b> User does not have permission to view emergency notification groups, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupsResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied </Description> </ResponseStatus> </EmergencyNotificationGroupsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The resource does not exist <br> <p><b>Condition:</b> Specified emergency notification group id does not exist for this account <br> <b>Error Description:</b> The resource does not exist </p> <br>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupsResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>The resource does not exist</Description> </ResponseStatus> </EmergencyNotificationGroupsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencynotificationgroups" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "<p> Fetch emergency notification groups that are currently configured on the account.  Use the provided query parameters to filter the results. <br>URI Parameters: <b>accountId</b> - the account id of the account to which the emergency notification group belongs </p><p><b>Query parameters:</b><br>The GET operation has no request payload, but the accountId must be specified in the URI parameter.Results are returned by default in the order of newest to oldest modification date of the Emergency Notification Group.  This default order is reversed from oldest to newest when the ModifiedAfterDate query parameter is included in the query.Query parameters act as filters on the data. If more than one query parameter is provided, the results will be the intersection of the results from each query parameter. In other words, the query parameters are logically ANDed.Query parameters are appended to the end of the endpoint, separated by a '?' and in the format parameter=value.  If you wish to specify more than one query parameter, separate them using an '&' character.  The order of query parameters does not matter.  For example: <br>GET /accounts/{accountId}/emergencyNotificationGroups?EngDescription=Bldg 200&EnrEmailAddress=gateSecurity@mycompany.com <br>...will return all Emergency Notification Groups having a description field including the string \"Bldg 200\", and having an emergency notification recipient with the specified email address. <br>The following query parameters are supported.  All query parameters are optional.</p><table>        <tr>          <th>Parameter Name</th>          <th>Example</th>          <th>Default</th>          <th>Usage</th>        </tr>        <tr>            <td valign=\"top\">                <p>                    EngDescription                </p>            </td>            <td  valign=\"top\">                <p>                    EngDescription=Building 4                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                  A substring that will exist in the Description for all returned Emergency Notification Groups.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EnrId                </p>            </td>            <td  valign=\"top\">                <p>                    EnrId=                    63865500-0904-46b1-9b4f-7bd237a26363                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The Identifier of an Emergency Notification Recipient that is associated with the Emergency Notification Groups returned.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EnrDescription                </p>            </td>            <td valign=\"top\">                <p>                    EnrDescription=front desk                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                    A substring that will exist in all Emergency Notification Recipient Descriptions associated with the Emergency Notification Groups returned.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    EnrNotificationType                </p>            </td>            <td valign=\"top\">                <p>                    EnrNotificationType=TTS                </p>            </td>            <td valign=\"top\">                <p>                    No filter                </p>            </td>            <td valign=\"top\">                <p>                    The type of notification (EMAIL, SMS, TTS, or CALLBACK) specified for Emergency Notification Recipients associated with the Emergency Notification Groups returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrSmsTn                </p>            </td>            <td  valign=\"top\">                <p>                    EnrSmsTn=3037458827                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The Short Message Service telephone number in all SMS type Emergency Notification Recipients associated with the Emergency Notification Groups returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrTtsTn                </p>            </td>            <td  valign=\"top\">                <p>                    EnrTtsTn=402288875                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The Text To Speech telephone number in all TTS type Emergency Notification Recipients associated with the Emergency Notification Groups returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrEmailAddress                </p>            </td>            <td  valign=\"top\">                <p>                    EnrEmailAddress=fred@aol.com                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The email address in all EMAIL type Emergency Notification Recipients associated with the Emergency Notification Groups returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrCallbackUrl                </p>            </td>            <td  valign=\"top\">                <p>                    EnrCallbackUrl=                    https://e911.callback.mycompany.com                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The callback URL in all CALLBACK type Emergency Notification Recipients associated with the Emergency Notification Groups returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrCallbackUsername                </p>            </td>            <td  valign=\"top\">                <p>                    EnrCallbackUsername=ljames                </p>            </td>            <td  valign=\"top\">                <p>                    No filter                </p>            </td>            <td  valign=\"top\">                <p>                    The callback username in all CALLBACK type Emergency Notification Recipients associated with the Emergency Notification Groups returned.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    EnrDetails                </p>            </td>            <td  valign=\"top\">                <p>                    EnrDetails=true                </p>            </td>            <td  valign=\"top\">                <p>                    false                </p>            </td>            <td  valign=\"top\">                <p>                    If set to true, the results will include full details about each Emergency Notification Recipient associated with the Emergency Notification Groups satisfying the query.  Otherwise, only Emergency Notification Recipient identifiers are included.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    Page                </p>            </td>            <td  valign=\"top\">                <p>                    Page=2020-04-07T00:00:00Z                </p>            </td>            <td  valign=\"top\">                <p>                    Now                </p>            </td>            <td  valign=\"top\">                <p>                  This represents the position in the data set from which you want your output to begin.  If this parameter is omitted, results will include Emergency Notification Groups last modified on or before the current date and time.  If a date and time is provided, results will include Emergency Notification Groups last modified on or before that date and time.  Date/time format is YYYY-MM-DDTHH:MM:SS.mmmZ, where the Z indicate UTC time, or YYYY-MM-DDTHH:MM:SS.mmm-hh:mm, where \"-hh:mm\" represents the local time offset, plus or minus, from UTC time.                </p>            </td>        </tr>        <tr>            <td  valign=\"top\">                <p>                    Size                </p>            </td>            <td  valign=\"top\">                <p>                    Size=10                </p>            </td>            <td  valign=\"top\">                <p>                    100                </p>            </td>            <td  valign=\"top\">                <p>                  The maximum number of Emergency Notification Group results to include in the response payload.  This value may be between 1 and 500.                </p>            </td>        </tr></table>",
        "operationId" : "retrieveEmergencyNotificationGroups",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "EngDescription",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrDescription",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrNotificationType",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "EMAIL", "SMS", "TTS", "CALLBACK", "UNRECOGNIZED_TYPE" ]
          }
        }, {
          "name" : "EnrSmsTn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrTtsTn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrEmailAddress",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrCallbackUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrCallbackUsername",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "EnrDetails",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "false"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response <br> The \"Links\" element includes two links.  The link called \"first\" is the link to the first set of results for the query that was submitted.  If there are more than \"Size\" results, a link called \"next\" is included to help you retrieve the next set of results up to \"Size\" elements. If the results of the query, filtered by the query parameters, do not return any results, the payload will contain empty tag \"EmergencyNotificationGroups\"",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupsResponse> <Links> <!-- The 'first' link always gets the most recent results. --> <first> -- link to first page of results -- </first> <!-- If the 'next' link is present, there are more than 'size' results. --> <!-- Use the 'next' link to fetch the next set of results. --> <next> -- link to next page of results -- </next> </Links> <EmergencyNotificationGroups> <EmergencyNotificationGroup> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> <CreatedDate>2020-01-23T18:34:17.284Z</CreatedDate> <ModifiedBy>jgilmore</ModifiedBy> <ModifiedDate>2020-01-23T18:34:17.284Z</ModifiedDate> <Description>This is a description of the emergency notification group.</Description> <EmergencyNotificationRecipients> <!-- Specify the 'EnrDetails' query parameter to see full details for the emergency notification recipients --> <EmergencyNotificationRecipient> <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier> </EmergencyNotificationRecipient> <EmergencyNotificationRecipient> <Identifier>ef47eb61-e3b1-449d-834b-0fbc5a11da30</Identifier> </EmergencyNotificationRecipient> </EmergencyNotificationRecipients> </EmergencyNotificationGroup> <EmergencyNotificationGroup> <Identifier>29477382-23947-23c-2349-aa8238b22743</Identifier> <CreatedDate>2020-01-23T18:36:51.987Z</CreatedDate> <ModifiedBy>jgilmore</ModifiedBy> <ModifiedDate>2020-01-23T18:36:51.987Z</ModifiedDate> <Description>This is a description of the emergency notification group.</Description> <EmergencyNotificationRecipients> <!-- Specify the 'EnrDetails' query parameter to see full details for the emergency notification recipients --> <EmergencyNotificationRecipient> <Identifier>37742335-8722-3abc-8722-e2434f123a4d</Identifier> </EmergencyNotificationRecipient> </EmergencyNotificationRecipients> </EmergencyNotificationGroup> </EmergencyNotificationGroups> </EmergencyNotificationGroupsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request <br> <p><b>Condition:</b> Unrecognized query parameter <br> <b>Error Description:</b>Query parameter xxx is not recognized. </p> <br> <p><b>Condition:</b>Unsupported value for query parameter <br> <b>Error Description:</b>Invalid value xxx for query parameter yyy. Supported values are aaa, bbb, etc. </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <ResponseStatus> <ErrorCode>nnnn</ErrorCode> <Description>A description of what went wrong.</Description> </ResponseStatus> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access Denied <br> <p> <b>Condition:</b>User does not have permission to view emergency notification orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config.<br> <b>Error Description:</b>Access Denied </p>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<EmergencyNotificationGroupOrderResponse> <ResponseStatus> <ErrorCode>1001</ErrorCode> <Description>Access Denied</Description> </ResponseStatus> </EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/e911s" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve a list of the E911 orders that are associated with the account. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getE911Order_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "callBack",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aeui",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "callingEndpoint",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the E911 Orders query provides a broad range of information about the E911  Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/E911OrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <E911Orders> <TotalCount>2</TotalCount> <E911OrderSummary> <accountId>1</accountId> <CountOfTNs>1</CountOfTNs> <userId>admin</userId> <lastModifiedDate>2015-08-03T14:41:01.769Z</lastModifiedDate> <OrderDate>2015-08-03T14:41:00.815Z</OrderDate> <OrderType>e911</OrderType> <OrderStatus>COMPLETE</OrderStatus> <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId> </E911OrderSummary> <E911OrderSummary> <accountId>1</accountId> <CountOfTNs>1</CountOfTNs> <userId>admin</userId> <lastModifiedDate>2015-08-03T14:40:19.008Z</lastModifiedDate> <OrderDate>2015-08-03T14:40:17.864Z</OrderDate> <OrderType>e911</OrderType> <OrderStatus>ADJUSTED_COMPLETE</OrderStatus> <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId> </E911OrderSummary> </E911Orders> <!-- OR if orderDetails = true... --> <E911Orders> <TotalCount>2</TotalCount> <E911Order> <OrderCreateDate>2015-08-03T14:41:00.815Z</OrderCreateDate> <AccountId>1</AccountId> <CreatedByUser>admin</CreatedByUser> <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId> <LastModifiedDate>2015-08-03T14:41:01.769Z</LastModifiedDate> <Address> <HouseNumber>800</HouseNumber> <HouseSuffix></HouseSuffix> <PreDirectional></PreDirectional> <StreetName>PENNSYLVANIA AVE</StreetName> <StreetSuffix>NW</StreetSuffix> <AddressLine2></AddressLine2> <City>WASHINGTON</City> <StateCode>DC</StateCode> <Zip>20004</Zip> <PlusFour></PlusFour> <Country>United States</Country> </Address> <CallerName>0931180f-4</CallerName> <ErrorList/> <ProcessingStatus>COMPLETE</ProcessingStatus> <TelephoneNumbers> <TelephoneNumber>9142971000</TelephoneNumber> </TelephoneNumbers> </E911Order> <E911Order> <OrderCreateDate>2015-08-03T14:40:17.864Z</OrderCreateDate> <AccountId>1</AccountId> <CreatedByUser>admin</CreatedByUser> <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId> <LastModifiedDate>2015-08-03T14:40:19.008Z</LastModifiedDate> <Address> <HouseNumber>1600</HouseNumber> <HouseSuffix></HouseSuffix> <PreDirectional></PreDirectional> <StreetName>PENNSYLVANIA AVE</StreetName> <StreetSuffix>NW</StreetSuffix> <AddressLine2></AddressLine2> <City>WASHINGTON</City> <StateCode>DC</StateCode> <Zip>20500</Zip> <PlusFour>0003</PlusFour> <Country>United States</Country> </Address> <CallerName>0931180f-4</CallerName> <ErrorList/> <ProcessingStatus>ADJUSTED_COMPLETE</ProcessingStatus> <TelephoneNumbers> <TelephoneNumber>9142971000</TelephoneNumber> </TelephoneNumbers> </E911Order> </E911Orders>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Create E911 order to associate the address with the telephone number.The key data elements in the submission are as follows. <table style=\"text-align: left; width: 80%;\"  border=\"1\" cellpadding=\"2\" cellspacing=\"2\">  <tbody>    <tr>      <td>TelephoneNumbers</td>      <td>A list of telephone numbers you need link to the street address.</td>    </tr>    <tr>      <td>CallerName</td>      <td>CallerName that will be linked to TNs. This field is required in the case of a new address assignment.</td>    </tr>    <tr>      <td>Address</td>      <td>This field is required in the case of a new address assignment.  Inner fields: HousePrefix, HouseNumber, HouseSuffix, PreDirectional, StreetName, StreetSuffix, PostDirectional, AddressLine2, City, StateCode, Zip, PlusFour.  Streetname, City, and State are required.  House Number is currently required, although this enforcement may be relaxed in the future. Depending on the type of E911 service, the Location ID may be updated by the Bandwidth Dashboard API</td>    </tr>    <tr>      <td>DeleteTNSpecificE911Address</td>      <td>Can be true or false. If value is true then Address and CallerName should not be specified.</td>    </tr>    <tr>      <td>AlternateEndUserIdentifiers</td>      <td>A list of AEUIs acts as a replacement for the list of telephone numbers. It replaces the TelephoneNumbers and AdditionalAddress payload element. If ACID exists in external system it will be updated with given values.</td>    </tr>    <tr>      <td>AdditionalAddresses</td>      <td>A list of Address sections. This address information for all potential endpoints which will be provisioned to the Bandwidth 911 system. At call time, the customer will submit this address information within the SIP header and, if a match is determined, the call will be routed to the PSAP nearest to that address. Otherwise, the call will be routed to an ECC. These Address sections will be the same in format to the Address section in the top-level of the E911Order payload. It replaces the TelephoneNumbers and AlternateEndUserIdentifiers payload element. </td>    </tr>    <tr>      <td>CustomerOrderId</td>      <td>The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. The element is optional. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</td>    </tr>  </tbody></table><br/>Examples of POST requests:<table>  <tbody>    <tr>      <th width=\"20%\">Description</th>      <th width=\"80%\">Example</th>    </tr>    <tr>      <td>        <strong>CONVENTIONAL E911</strong><br>        TN/Address-provisioning order.<br>        <b>TelephoneNumbers</b>, <b>TelephoneNumber</b>, and <b>Address</b> are required.      </td>      <td>        <!-- We have to leave this indent as-is because the <pre> tag is stupid and uses non-relative whitespacing.-->        <pre>&lt;E911Order&gt;  &lt;TelephoneNumbers&gt;    &lt;TelephoneNumber&gt;9706542332&lt;/TelephoneNumber&gt;    &lt;TelephoneNumber&gt;9706542333&lt;/TelephoneNumber&gt;  &lt;/TelephoneNumbers&gt;  &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;  &lt;Address&gt;    &lt;HouseNumber&gt;915&lt;/HouseNumber&gt;    &lt;HouseSuffix/&gt;    &lt;PreDirectional/&gt;    &lt;StreetName&gt;Elm&lt;/StreetName&gt;    &lt;StreetSuffix&gt;Ave&lt;/StreetSuffix&gt;    &lt;PostDirectional/&gt;    &lt;AddressLine2/&gt;    &lt;City&gt;Carpinteria&lt;/City&gt;    &lt;StateCode&gt;CA&lt;/StateCode&gt;    &lt;Zip&gt;93013&lt;/Zip&gt;    &lt;PlusFour/&gt;    &lt;County/&gt;    &lt;Country&gt;United States&lt;/Country&gt;  &lt;/Address&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>    <tr>      <td>        <strong>CONVENTIONAL E911</strong><br>        TN/address-deletion order.<br>        <b>TelephoneNumbers</b> and <b>TelephoneNumber</b> are required.<br>        <b>DeleteTNSpecificE911Address</b> is required and must be set to 'true'.      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;  &lt;TelephoneNumbers&gt;    &lt;TelephoneNumber&gt;9706542332&lt;/TelephoneNumber&gt;    &lt;TelephoneNumber&gt;9706542333&lt;/TelephoneNumber&gt;  &lt;/TelephoneNumbers&gt;  &lt;DeleteTNSpecificE911Address&gt;true&lt;/DeleteTNSpecificE911Address&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>    <tr>      <td>        <strong>PIDF-LO</strong><br>        PIDF-LO AEUI endpoint-provisioning order with additional address provisioning and without pre-defined location id.<br>        <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, <b>Address</b>, and <b>Identifier</b> are required.<br>        <b>Identifier</b> can only contain alphanumeric characters and must be between 1 and 30 characters.<br>        <b>PIDFLOEnabled</b> is required and must be 'true'.<br>        Default value of <b>PreferredLanguage</b> is 'en'.      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;  &lt;Address&gt;    &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;    &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;    &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;    &lt;City&gt;RALEIGH&lt;/City&gt;    &lt;StateCode&gt;NC&lt;/StateCode&gt;    &lt;Zip&gt;27606&lt;/Zip&gt;    &lt;PlusFour&gt;5244&lt;/PlusFour&gt;    &lt;Country&gt;United States&lt;/Country&gt;    &lt;AddressType&gt;E911&lt;/AddressType&gt;  &lt;/Address&gt;  &lt;AlternateEndUserIdentifiers&gt;    &lt;AlternateEndUserIdentifier&gt;      &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;      &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;      &lt;Identifier&gt;blep123&lt;/Identifier&gt;      &lt;PIDFLOEnabled&gt;true&lt;/PIDFLOEnabled&gt;      &lt;PreferredLanguage&gt;en&lt;/PreferredLanguage&gt;    &lt;/AlternateEndUserIdentifier&gt;  &lt;/AlternateEndUserIdentifiers&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>    <tr>      <td>        <strong>PIDF-LO</strong><br>        PIDF-LO AEUI endpoint-provisioning order with additional address provisioning and with pre-defined location id.<br>        <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, <b>Address</b>, and <b>Identifier</b> are required.<br>        <b>Identifier</b> can only contain alphanumeric characters and must be between 1 and 30 characters.<br>        <b>PIDFLOEnabled</b> is required and must be 'true'.<br>        Default value of <b>PreferredLanguage</b> is 'en'.      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;  &lt;Address&gt;    &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;    &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;    &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;    &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;    &lt;City&gt;RALEIGH&lt;/City&gt;    &lt;StateCode&gt;NC&lt;/StateCode&gt;    &lt;Zip&gt;27606&lt;/Zip&gt;    &lt;PlusFour&gt;5244&lt;/PlusFour&gt;    &lt;Country&gt;United States&lt;/Country&gt;    &lt;AddressType&gt;E911&lt;/AddressType&gt;  &lt;/Address&gt;  &lt;AlternateEndUserIdentifiers&gt;    &lt;AlternateEndUserIdentifier&gt;      &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;      &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;      &lt;Identifier&gt;blep123&lt;/Identifier&gt;      &lt;PIDFLOEnabled&gt;true&lt;/PIDFLOEnabled&gt;      &lt;PreferredLanguage&gt;en&lt;/PreferredLanguage&gt;    &lt;/AlternateEndUserIdentifier&gt;  &lt;/AlternateEndUserIdentifiers&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>    <tr>      <td>        <strong>PIDF-LO</strong><br>        PIDF-LO AEUI endpoint-provisioning order with provisioned location id.<br>        <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, <b>LocationId</b>, and <b>Identifier</b> are required.<br>        <b>Identifier</b> can only contain alphanumeric characters and must be between 1 and 30 characters.<br>        <b>PIDFLOEnabled</b> is required and must be 'true'.<br>        Default value of <b>PreferredLanguage</b> is 'en'.      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;  &lt;AlternateEndUserIdentifiers&gt;    &lt;AlternateEndUserIdentifier&gt;      &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;      &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;      &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;      &lt;Identifier&gt;blep123&lt;/Identifier&gt;      &lt;PIDFLOEnabled&gt;true&lt;/PIDFLOEnabled&gt;      &lt;PreferredLanguage&gt;en&lt;/PreferredLanguage&gt;    &lt;/AlternateEndUserIdentifier&gt;  &lt;/AlternateEndUserIdentifiers&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>    <tr>      <td><strong>PIDF-LO</strong> and <strong>SIMPLE AEUI</strong><br>        Mixed PIDF-LO AEUI and Non-PIDF-LO AEUI endpoint-provisioning order.<br>        <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, <b>Address</b>, and <b>Identifier</b> are required.<br>        Default value of <b>PreferredLanguage</b> is 'en'.<br>        <strong>Non-PIDF-LO:</strong><br>        <b>CallbackNumber</b> is required.<br>        <b>Identifier</b> can only contain alphanumeric characters and must be between 6 and 30 characters.<br>        <strong>PIDF-LO:</strong><br>        <b>PIDFLOEnabled</b> is required and must be 'true'.<br>        <b>Identifier</b> can only contain alphanumeric characters and must be between 1 and 30 characters.      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;  &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;  &lt;Address&gt;    &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;    &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;    &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;    &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;    &lt;City&gt;RALEIGH&lt;/City&gt;    &lt;StateCode&gt;NC&lt;/StateCode&gt;    &lt;Zip&gt;27606&lt;/Zip&gt;    &lt;PlusFour&gt;5244&lt;/PlusFour&gt;    &lt;Country&gt;United States&lt;/Country&gt;    &lt;AddressType&gt;E911&lt;/AddressType&gt;  &lt;/Address&gt;  &lt;AlternateEndUserIdentifiers&gt;    &lt;AlternateEndUserIdentifier&gt;      &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;      &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;      &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;      &lt;Identifier&gt;blep123&lt;/Identifier&gt;      &lt;PIDFLOEnabled&gt;true&lt;/PIDFLOEnabled&gt;      &lt;PreferredLanguage&gt;en&lt;/PreferredLanguage&gt;    &lt;/AlternateEndUserIdentifier&gt;    &lt;AlternateEndUserIdentifier&gt;      &lt;CallbackNumber&gt;9706542334&lt;/CallbackNumber&gt;      &lt;Identifier&gt;blepblop&lt;/Identifier&gt;      &lt;PIDFLOEnabled&gt;false&lt;/PIDFLOEnabled&gt;    &lt;/AlternateEndUserIdentifier&gt;  &lt;/AlternateEndUserIdentifiers&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>    <tr>      <td><strong>PIDF-LO</strong> and <strong>SIMPLE AEUI</strong><br>        PIDF-LO and Non-PIDF-LO endpoint-deletion order.<br>        <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, and <b>Identifier</b> are required.<br>        <b>DeleteTNSpecificE911Address</b> is required and must be 'true'.<br>        <strong>Non-PIDF-LO:</strong><br>        <b>CallbackNumber</b> is required.<br>        <b>Identifier</b> can only contain alphanumeric characters 6 and 30 characters.<br>        <strong>PIDF-LO:</strong><br>        <b>PIDFLOEnabled</b> is required and must be 'true'.<br>        <b>Identifier</b> can only contain alphanumeric characters and must be between 1 and 30 characters.      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;  &lt;AlternateEndUserIdentifiers&gt;    &lt;AlternateEndUserIdentifier&gt;      &lt;Identifier&gt;identifier&lt;/Identifier&gt;    &lt;/AlternateEndUserIdentifier&gt;  &lt;/AlternateEndUserIdentifiers&gt;  &lt;DeleteTNSpecificE911Address&gt;true&lt;/DeleteTNSpecificE911Address&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>    <tr>      <td><strong>PIDF-LO</strong><br>        PIDF-LO address-provisioning order.<br>        <b>AdditionalAddresses</b> and <b>Address</b> are required.      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;  &lt;AdditionalAddresses&gt;    &lt;Address&gt;      &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;      &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;      &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;      &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;      &lt;City&gt;RALEIGH&lt;/City&gt;      &lt;StateCode&gt;NC&lt;/StateCode&gt;      &lt;Zip&gt;27606&lt;/Zip&gt;      &lt;PlusFour&gt;5244&lt;/PlusFour&gt;      &lt;Country&gt;United States&lt;/Country&gt;      &lt;AddressType&gt;E911&lt;/AddressType&gt;    &lt;/Address&gt;    &lt;Address&gt;      &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;      &lt;HouseNumber&gt;645&lt;/HouseNumber&gt;      &lt;PreDirectional&gt;E&lt;/PreDirectional&gt;      &lt;StreetName&gt;MANCHESTER&lt;/StreetName&gt;      &lt;StreetSuffix&gt;AVE&lt;/StreetSuffix&gt;      &lt;City&gt;LOS ANGELES&lt;/City&gt;      &lt;StateCode&gt;United States&lt;/StateCode&gt;      &lt;Zip&gt;90001&lt;/Zip&gt;      &lt;Country&gt;United States&lt;/Country&gt;    &lt;/Address&gt;  &lt;/AdditionalAddresses&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>    <tr>      <td><strong>PIDF-LO</strong> <br>        PIDF-LO address-editing order.<br>        <b>Address</b> and <b>LocationId</b> are required.<br>        Allows a user to update all address fields except <b>PlusFour</b> and <b>Country</b>.      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;AdditionalAddresses&gt;    &lt;Address&gt;      &lt;HouseNumber&gt;645&lt;/HouseNumber&gt;      &lt;PreDirectional&gt;E&lt;/PreDirectional&gt;      &lt;HouseSuffix&gt;1/2&lt;/HouseSuffix&gt;      &lt;PostDirectional&gt;S&lt;/PostDirectional&gt;      &lt;StreetName&gt;Manchester&lt;/StreetName&gt;      &lt;StreetSuffix&gt;AVE&lt;/StreetSuffix&gt;      &lt;AddressLine2&gt;test address line 2&lt;/AddressLine2&gt;      &lt;City&gt;Los Angeles&lt;/City&gt;      &lt;StateCode&gt;CA&lt;/StateCode&gt;      &lt;Zip&gt;90001&lt;/Zip&gt;      &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;    &lt;/Address&gt;  &lt;/AdditionalAddresses&gt;&lt;/E911Order&gt;          </pre>      </td>    </tr>    <tr>      <td><strong>PIDF-LO</strong><br>        PIDF-LO address-deletion order.<br>        <b>AdditionalAddresses</b>, <b>Address</b>, and <b>LocationId</b> are required.<br>        <b>DeleteTNSpecificE911Address</b> is required and must be 'true'.      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;  &lt;AdditionalAddresses&gt;    &lt;Address&gt;      &lt;LocationId&gt;Some32CharacterOrLessString1&lt;/LocationId&gt;    &lt;/Address&gt;    &lt;Address&gt;      &lt;LocationId&gt;Some32CharacterOrLessString1&lt;/LocationId&gt;    &lt;/Address&gt;  &lt;/AdditionalAddresses&gt;  &lt;DeleteTNSpecificE911Address&gt;true&lt;/DeleteTNSpecificE911Address&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>    <tr>      <td><strong>SIMPLE AEUI</strong><br>        Non-PIDF-LO endpoint-provisioning order.<br>        <b>AlternateEndUserIdentifiers</b>, <b>AlternateEndUserIdentifier</b>, <b>Address</b>, <b>CallbackNumber</b>, and <b>Identifier</b> are required<br>        <b>Identifier</b> can only contain alphanumeric characters, must contain at least one letter, and must be between 6 and 30 characters.<br>      </td>      <td>        <pre>&lt;E911Order&gt;  &lt;CustomerOrderId&gt;CustomOrderId1&lt;/CustomerOrderId&gt;  &lt;CallerName&gt;OptionalCallerName&lt;/CallerName&gt;  &lt;Address&gt;    &lt;LocationId&gt;Some32CharacterOrLessString&lt;/LocationId&gt;    &lt;HouseNumber&gt;901&lt;/HouseNumber&gt;    &lt;StreetName&gt;MAIN CAMPUS&lt;/StreetName&gt;    &lt;StreetSuffix&gt;DR&lt;/StreetSuffix&gt;    &lt;City&gt;RALEIGH&lt;/City&gt;    &lt;StateCode&gt;NC&lt;/StateCode&gt;    &lt;Zip&gt;27606&lt;/Zip&gt;    &lt;PlusFour&gt;5244&lt;/PlusFour&gt;    &lt;Country&gt;United States&lt;/Country&gt;    &lt;AddressType&gt;E911&lt;/AddressType&gt;  &lt;/Address&gt;  &lt;AlternateEndUserIdentifiers&gt;    &lt;AlternateEndUserIdentifier&gt;      &lt;CallbackNumber&gt;9706542333&lt;/CallbackNumber&gt;      &lt;Identifier&gt;abc123&lt;/Identifier&gt;      &lt;PIDFLOEnabled&gt;false&lt;/PIDFLOEnabled&gt;    &lt;/AlternateEndUserIdentifier&gt;  &lt;/AlternateEndUserIdentifiers&gt;&lt;/E911Order&gt;        </pre>      </td>    </tr>  </tbody></table><br/><b>Error Codes.</b><br/>For all possible error codes that can be returned in an E911 order, refer to section 6.4 of the Error Code Reference.",
        "operationId" : "createE911Order",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/E911OrderPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created<br>A 201 response indicates that an order has been created.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?> <E911OrderResponse> <E911Order> <CustomerOrderId>CustomOrderId1</CustomerOrderId> <orderId>1d863522-c9bf-430c-8e79-cc63cad04a1d</orderId> <ProcessingStatus>RECEIVED</ProcessingStatus> <TelephoneNumbers> <TelephoneNumber>9706542332</TelephoneNumber> <TelephoneNumber>9706542333</TelephoneNumber> </TelephoneNumbers> <CallerName>CustomCallerName</CallerName> <Address> <HouseNumber>915</HouseNumber> <HouseSuffix/> <PreDirectional/> <StreetName>Elm</StreetName> <StreetSuffix>Ave</StreetSuffix> <PostDirectional/> <AddressLine2/> <City>Carpinteria</City> <StateCode>CA</StateCode> <Zip>93013</Zip> <PlusFour/> <County/> <Country/> </Address> </E911Order> </E911OrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request<br>A 400 response indicates that the order could not be created.<br>Error text and an error code will be provided in the ErrorList element.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?> <E911OrderResponse> <ResponseStatus> <ErrorCode>5070</ErrorCode> <Description>Telephone number is invalid.</Description> </ResponseStatus> </E911OrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/externalTns" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve a list of the externalTns orders that are associated with the account. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getOrders_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the externalTns Orders query provides information about the externalTns Orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully uploaded Telephone Numbers, and decriptions of any encountered errors.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalTnsOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrders> <TotalCount>2</TotalCount> <ExternalTnsOrder> <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate> <AccountId>9900012</AccountId> <CreatedByUser>sjm</CreatedByUser> <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId> <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate> <SiteId>65487</SiteId> <TelephoneNumbers> <TelephoneNumber>2106078250</TelephoneNumber> <TelephoneNumber>2109678273</TelephoneNumber> <TelephoneNumber>2109678331</TelephoneNumber> <TelephoneNumber>2109678337</TelephoneNumber> <TelephoneNumber>2266401468</TelephoneNumber> </TelephoneNumbers> <Action>IMPORT</Action> <LoaType>SUBSCRIBER</LoaType> <ProcessingStatus>PARTIAL</ProcessingStatus> <Errors> <Error> <Code>13552</Code> <Description>Telephone numbers already exist.</Description> <TelephoneNumbers> <TelephoneNumber>2262665583</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> <SipPeerId>885544</SipPeerId> </ExternalTnsOrder> <ExternalTnsOrder> <OrderCreateDate> 2018-01-09T02:58:04.609Z</OrderCreateDate> <AccountId>9900012</AccountId> <CreatedByUser>sjm</CreatedByUser> <OrderId>b63d342b-9400-4da9-1111-ca7a3889e5ec</OrderId> <LastModifiedDate>2018-01-09T02:58:04.962Z</LastModifiedDate> <SiteId>12345</SiteId> <TelephoneNumbers> <TelephoneNumber>3068035413</TelephoneNumber> <TelephoneNumber>3068035414</TelephoneNumber> <TelephoneNumber>3437003595</TelephoneNumber> <TelephoneNumber>4387977665</TelephoneNumber> </TelephoneNumbers> <Action>IMPORT</Action> <ProcessingStatus>PARTIAL</ProcessingStatus> <Errors> <Error> <Code>13552</Code> <Description>Telephone numbers already exist.</Description> <TelephoneNumbers> <TelephoneNumber>4387977665</TelephoneNumber> <TelephoneNumber>5817036252</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> <SipPeerId>666555</SipPeerId> </ExternalTnsOrder> </ExternalTnsOrders>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No externalTns orders can be found that match the query parameters.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "summary" : "Create External Numbers Order",
        "description" : "Create a externalTns order to add or remove telephone numbers provided by the customer from the Bandwidth network.Note: the attempt to import a telephone number that is already present in the account will *not* create an error, but will reset all of the  attributes of that telephone number in the Dashboard system as if the telephone number was being imported for the first timeThe key data elements in the submission are - <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">  <tbody>    <tr>      <td>CustomerOrderId</td>      <td>An order ID created by the customer for their tracking purposes. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</td>    </tr>    <tr>      <td>SiteId</td>      <td>(Required) The ID of the Site that the Telephone Numbers are to be provisioned to.</td>    </tr>    <tr>      <td>SipPeerId</td>      <td>(Optional) The ID of the SIP Peer that the Telephone Numbers are to be provisioned to.</td>    </tr>    <tr>      <td>Action</td>      <td>(Required) Indentify the action on external TNs. Allowed values... IMPORT or REMOVE.</td>    </tr>    <tr>      <td>LoaType</td>      <td>(Optional) Indentify the LoaType on external TNs. Allowed values... CARRIER or  SUBSCRIBER. Default value is CARRIER</td>    </tr>  </tbody></table>",
        "operationId" : "createOrder_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalTnsOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created <br> A 201 response indicates that an order has been created.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrderResponse> <ExternalTnsOrder> <CustomerOrderId>SJM000001</CustomerOrderId> <OrderCreateDate>2018-01-20T02:59:54.000Z</OrderCreateDate> <AccountId>9900012</AccountId> <CreatedByUser>smckinnon</CreatedByUser> <OrderId>b05de7e6-0cab-4c83-81bb-9379cba8efd0</OrderId> <LastModifiedDate>2018-01-20T02:59:54.000Z</LastModifiedDate> <SiteId>202</SiteId> <SipPeerId>520565</SipPeerId> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> <TelephoneNumber>4158714245</TelephoneNumber> <TelephoneNumber>4352154439</TelephoneNumber> <TelephoneNumber>4352154466</TelephoneNumber> </TelephoneNumbers> <Action>IMPORT</Action> <LoaType>CARRIER</LoaType> <ProcessingStatus>RECEIVED</ProcessingStatus> <Errors/> </ExternalTnsOrder> </ExternalTnsOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request <br> A 400 response Indicates that the order could not be created.Error text and an error code will be provided in the ErrorList element.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrderResponse> <ResponseStatus> <ErrorCode>5081</ErrorCode> <Description>Action is absent or invalid. Possible values  IMPORT, REMOVE</Description> </ResponseStatus> </ExternalTnsOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/numbersAssignment/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about a TelephoneNumbersAssignment order with specified ID.",
        "operationId" : "getOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the TelephoneNumbersAssignment query provides a broad range of information about the TelephoneNumbersAssignment order identified in the URL.  Included amongst the information is...<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersAssignmentOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TelephoneNumbersAssignmentOrderResponse> <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate> <AccountId>1</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId> <ProcessingStatus>PARTIAL</ProcessingStatus> <TotalQuantity>4</TotalQuantity> <FailedQuantity>1</FailedQuantity> <TelephoneNumbersAssignmentOrder> <CustomerOrderId>ICPA123ABC</CustomerOrderId> <Action>ASSIGN</Action> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> <TelephoneNumber>4158714245</TelephoneNumber> <TelephoneNumber>4352154439</TelephoneNumber> <TelephoneNumber>4352154466</TelephoneNumber> </TelephoneNumbers> </TelephoneNumbersAssignmentOrder> <Errors> <Error> <Code>5076</Code> <Description>Number does not belong to this account.</Description> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> </TelephoneNumbersAssignmentOrderResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TelephoneNumbersAssignmentOrderResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </TelephoneNumbersAssignmentOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/numbersAssignment/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about a specific assignedTns order identified as the resource.",
        "operationId" : "getOrder_1",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the TelephoneNumbersAssignment orders query provides a broad range of information about the TelephoneNumbersAssignment order identified in the URL.  Included amongst the information is...<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersAssignmentOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TelephoneNumbersAssignmentOrderResponse> <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate> <AccountId>1</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId> <ProcessingStatus>PARTIAL</ProcessingStatus> <TotalQuantity>4</TotalQuantity> <FailedQuantity>1</FailedQuantity> <TelephoneNumbersAssignmentOrder> <CustomerOrderId>ICPA123ABC</CustomerOrderId> <Action>ASSIGN</Action> <TelephoneNumbers> <TelephoneNumber>9172000103</TelephoneNumber> <TelephoneNumber>4158714245</TelephoneNumber> <TelephoneNumber>4352154439</TelephoneNumber> <TelephoneNumber>4352154466</TelephoneNumber> </TelephoneNumbers> </TelephoneNumbersAssignmentOrder> <Errors> <Error> <Code>5076</Code> <Description>Number does not belong to this account.</Description> <TelephoneNumbers> <TelephoneNumber>9172000103</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> </TelephoneNumbersAssignmentOrderResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the identified TelephoneNumbersAssignment order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TelephoneNumbersAssignmentOrderResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </TelephoneNumbersAssignmentOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/numbersAssignment" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about one or more TelephoneNumbersAssignment orders, where the orders are chosen based on the search parameters provided in the API Call.",
        "operationId" : "getOrders_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 OK indicates that the one or more TelephoneNumbersAssignment orders have been found, and a response payload has been generated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersAssignmentOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TelephoneNumbersAssignmentOrders> <TotalCount>3</TotalCount> <TelephoneNumbersAssignmentOrderSummary> <!-- Account ID preserved for uniformity with global list --> <accountId>1</accountId> <CustomerOrderId>ICPA123ABD</CustomerOrderId> <userId>jbm</userId> <OrderDate>2016-01-15T11:36:52.727Z</OrderDate> <TotalQuantity>4</TotalQuantity> <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType> <OrderStatus>COMPLETE</OrderStatus> <Action>ASSIGN</Action> <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId> </TelephoneNumbersAssignmentOrderSummary> <TelephoneNumbersAssignmentOrderSummary> <accountId>753</accountId> <CustomerOrderId>ICPA123ABC</CustomerOrderId> <userId>systemUser</userId> <OrderDate>2016-11-02T13:00:52.824Z</OrderDate> <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType> <OrderStatus>PARTIAL</OrderStatus> <Action>ASSIGN</Action> <FailedQuantity>1</FailedQuantity> <OrderId>8f78dbc5-5c01-4b55-af15-2829fe8cf73f</OrderId> <TotalQuantity>4</TotalQuantity> </TelephoneNumbersAssignmentOrderSummary> <TelephoneNumbersAssignmentOrderSummary> <accountId>9900012</accountId> <TotalQuantity>4</TotalQuantity> <FailedQuantity>1</FailedQuantity> <userId>not_jbm</userId> <OrderDate>2016-01-15T11:36:26.633Z</OrderDate> <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType> <OrderStatus>PARTIAL</OrderStatus> <Action>UNASSIGN</Action> <OrderId>d8f5abc0-1a4c-4c36-b387-93fb5b430784</OrderId> </TelephoneNumbersAssignmentOrderSummary> </TelephoneNumbersAssignmentOrders>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request.  If any errors are found in the processing of the query string a 400 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bdrs" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "Request a collection of BDRs be aggregated and ZIPped ready for distribution.  The payload for the POST declares the date range for the request.",
        "operationId" : "createBdr",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BdrArchiveCreationDescriptor"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "A 202 Accepted means that the request has been received and will be processed.  Processing the request takes time, so this does not indicate that the information is available, it simply indicates that the request has started processing. <br>The response also includes header information in the Location Header that can be used for retrieving the state of the request.<br>An informative payload is also included in success and failure cases.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BdrArchiveResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BdrCreationResponse>     <Info>Your BDR archive is currently being constructed</Info></BdrCreationResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A 400 response indicates that there was an error in processing the payload, perhaps something like incorrectly formatted or chosen dates. ",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BdrCreationResponse>    <ResponseStatus>        <ErrorCode>15501</ErrorCode>        <Description>Invalid date range. Start date 2015-06-01 must be before end date 2015-04-30</Description>    </ResponseStatus></BdrCreationResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bdrs/{bdrId}/file" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getBdrArchiveFile",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "bdrId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BdrArchiveFileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bdrs/{bdrId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "A GET on the BDR ID will return a \"still processing\" indication if the file creation has not completed, or will redirect to the file to be downloaded.",
        "operationId" : "getBdr",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "bdrId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A 200 OK means that the request is valid, but that the file is not yet ready. The payload indicates the status.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BdrArchiveRetrievalResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BdrCreationResponse>     <Info>The requested BDR archive is still being constructed, please check back later</Info></BdrCreationResponse>"
                  }
                }
              }
            }
          },
          "303" : {
            "description" : "A 303 response indicates that the file is ready.  The 303 should redirect the request to the URL in the Location header, which will, in most cases, initiate the file download. ",
            "content" : {
              "application/xml" : { }
            }
          },
          "400" : {
            "description" : "A 400 indicates that the BDR id is malformed. ",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BdrRetrievalResponse>    <ResponseStatus>        <ErrorCode>1008</ErrorCode>        <Description>'44a90e00-a7b6asdfsdafasdfdasf-6659-9112-e7f5dfa48231' is not a valid UUID</Description>    </ResponseStatus></BdrRetrievalResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A 404 indicates that the BDR id cannot be found. ",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BdrRetrievalResponse>    <ResponseStatus>        <ErrorCode>15001</ErrorCode>        <Description>BDR archive was not found</Description>    </ResponseStatus></BdrRetrievalResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bdrs/cleanup" : {
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "cleanUpBdrArchives",
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BdrArchiveCleanUpResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billingreports" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get All Billing Reports",
        "description" : "Retrieve billing report instances within the account scope and billing type.The valid Billing Types are...<ul><li>BDR</li><li>MDR</li><li>INVOICE</li><li>STMTBDR</li><li>DIDSNAP</li><li>DIDSNAP_MSG</li><li>RECORDINGBDR</li><li>RECORDINGSTMTBDR</li><li>TRANSCRIPTIONBDR</li><li>TRANSCRIPTIONSTMTBDR</li><li>CNAMBDR</li><li>CNAMSTMTBDR</li><li>CONFBDR</li><li>CONFSTMTBDR</li></ul>",
        "operationId" : "retrieveReports",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "kind",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of all billing report instances. (Not supported for BDR, MDR, INVOICE, STMTBDR, RECORDINGBDR, RECORDINGSTMTBDR, TRANSCRIPTIONBDR, TRANSCRIPTIONSTMTBDR, CNAMBDR, CNAMSTMTBDR, CONFBDR, CONFSTMTBDR  as status history not implemented yet for these billing types)",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingReportsRetrievalResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BillingReportsRetrievalResponse>    <BillingReportList>        <BillingReport>            <BillingReportId>5f8734f0-d7c3-445c-b1e2-cdbb620e4ff7</BillingReportId>            <BillingReportKind>DIDSNAP</BillingReportKind>            <UserId>jbm</UserId>            <ReportStatus>PROCESSING</ReportStatus>            <Description>The requested report archive is still being constructed, please check back later.</Description>            <CreatedDate>2017-11-01 14:12:16</CreatedDate>            <DateRange>                <StartDate>2017-01-01</StartDate>                <EndDate>2017-09-30</EndDate>            </DateRange>        </BillingReport>        <BillingReport>            <BillingReportId>7680a54a-b1f1-4d43-8af6-bf3a701ad202</BillingReportId>            <BillingReportKind>DIDSNAP</BillingReportKind>            <UserId>jbm</UserId>            <ReportStatus>COMPLETE</ReportStatus>            <Description>The requested report archive is failed</Description>            <CreatedDate>2017-11-06 14:22:21</CreatedDate>            <DateRange>                 <StartDate>2017-05-01</StartDate>                 <EndDate>2017-10-31</EndDate>            </DateRange>        </BillingReport>    </BillingReportList></BillingReportsRetrievalResponse>"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "Billing report data for requested time frame hasn't been provided yet.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingReportsRetrievalResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "A 400 response indicates that report type is incorrect.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "summary" : "Create Billing Report",
        "description" : "The payload for the POST declares the date range and type for the desired reports. The valid Types are... <ul> <li>BDR - Billing Detail Records - per call information</li> <li>MDR - Message Detail Records - per messagin information</li> <li>INVOICE - A copy of the invoice file or files for the specified date range</li> <li>STMTBDR - BDR records that are aligned with the invoice</li> <li>DIDSNAP - a list of telephone numbers aligned as closely as we can with the billing window</li> <li>DIDSNAP_MSG - a list of telephone numbers with active messaging</li> </ul>",
        "operationId" : "createReport",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BillingReportCreationPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "A 201 response means that the response file is currently being constructed. Constructing the file takes time, so this does not indicate that the information is available.<br>The response also includes header information in the Location Header that can be used for retrieving the state of the report.<br>An informative payload is also included in success and failure cases.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingReportCreationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BillingReportCreationResponse>    <ReportStatus>RECEIVED</ReportStatus>    <Description>The report archive is currently being constructed.</Description></BillingReportCreationResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A 400 response indicates that there was an error in processing the payload, perhaps something like incorrectly formatted or chosen dates. ",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BillingReportCreationResponse>    <ResponseStatus>        <ErrorCode>15501</ErrorCode>        <Description>Invalid date range. Start date 2014-05-21 must be before end date 2013-05-29</Description>    </ResponseStatus></BillingReportCreationResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billingreports/{archiveId}/file" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Billing Report archive",
        "description" : "A GET on the /file resource subtending a report ID will cause the download of the file.  Executing this resource path within a browser will cause the download of the file.",
        "operationId" : "retrieveReportArchive",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "archiveId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A 200 OK indicates that the request for the file download was accepted and will be processed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingReportArchiveRetrievalResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "A 400 indicates that the report ID is malformed.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BillingReportArchiveRetrievalResponse>    <ResponseStatus>        <ErrorCode>1008</ErrorCode>        <Description>'9b428b4c-159b-465f-9667-' is not a valid UUID</Description>    </ResponseStatus></BillingReportArchiveRetrievalResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A 404 indicates that the requested report cannot be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BillingReportArchiveRetrievalResponse>    <ResponseStatus>        <ErrorCode>15603</ErrorCode>        <Description>The requested report was not found.</Description>    </ResponseStatus></BillingReportArchiveRetrievalResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billingreports/{archiveId}" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Billing Report",
        "operationId" : "retrieveReport",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "archiveId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A 200 indicates that the request is valid. The payload indicates the report status: <br><ul>    <li><b>PROCESSING</b> - The requested report archive is still being constructed, please check back later.</li>    <li><b>COMPLETED</b> - The report archive is constructed.</li></ul>For <b>COMPLETED</b> report, fetching the file can be done by issuing a GET request to the resource path in the Location Header.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingReportRetrievalResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BillingReportRetrievalResponse>    <ReportStatus>COMPLETED</ReportStatus>     <Description>The report archive is constructed.</Description></BillingReportRetrievalResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "A 400 indicates that the report ID is malformed.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BillingReportRetrievalResponse>    <ResponseStatus>        <ErrorCode>1008</ErrorCode>        <Description>'9b428b4c-159b-465f-9667-' is not a valid UUID</Description>    </ResponseStatus></BillingReportRetrievalResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A 404 indicates that the requested report cannot be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><BillingReportRetrievalResponse>    <ResponseStatus>        <ErrorCode>15603</ErrorCode>        <Description>The requested report was not found.</Description>    </ResponseStatus></BillingReportRetrievalResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/hosts" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about the hosts of account, as guided by optional search parameters.",
        "operationId" : "getHosts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "host",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSitesHostsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SiteHostsResponse>    <SiteHosts>        <SiteHost>            <SiteId>5</SiteId>            <SipPeerHosts>                <SipPeerHost>                    <SipPeerId>500146</SipPeerId>                    <SmsHosts/>                    <VoiceHosts>                        <Host>                            <HostName>47.16.211.63</HostName>                        </Host>                    </VoiceHosts>                    <TerminationHosts/>                </SipPeerHost>            </SipPeerHosts>        </SiteHost>    </SiteHosts></SiteHostsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/csrs/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getCsrOrderHistory",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CsrOrderHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getLineOptionOrderHistory_1",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOptionOrderHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getPortInOrderErrorHistory",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortInOrderHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dldas/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "summary" : "Get DLDA order (Admin)",
        "description" : "Retrieve information about a specific DLDA Order identified as the resource.",
        "operationId" : "getDldaOrder",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the DLDA Orders query provides a broad range of information about the DLDA Order identified in the URL.  Included amongst the information is:<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>various dates</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, CANCELLED) - the overall status of the order</li><li>DldaTnGroups - list of DldaTnGroup elements that contains list of TNs with Directory Listing and Directory Assistance information, AccountType(RESIDENCE or BUSINESS), ListingType(LISTED, NON_LISTED or NON_PUBLISHED)</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DldaOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?> <DldaOrderResponse> <DldaOrder> <CustomerOrderId>5a88d16d-f8a9-45c5-a5db-137d700c6a22</CustomerOrderId> <OrderCreateDate>2014-07-10T12:38:11.833Z</OrderCreateDate> <AccountId>14</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>ea9e90c2-77a4-4f82-ac47-e1c5bb1311f4</OrderId> <LastModifiedDate>2014-07-10T12:38:11.833Z</LastModifiedDate> <ErrorList> <Error> <Code>16103</Code> <Description>DL/DA information cannot be changed because the number is already being processed </Description> <TelephoneNumber>2053778335</TelephoneNumber> </Error> </ErrorList> <ProcessingStatus>RECEIVED</ProcessingStatus> <DldaTnGroups> <DldaTnGroup> <TelephoneNumbers> <TelephoneNumber>2053778335</TelephoneNumber> <TelephoneNumber>2053865784</TelephoneNumber> </TelephoneNumbers> <SubscriberType>BUSINESS</SubscriberType> <ListingType>LISTED</ListingType> <ListingName> <FirstName>Joe</FirstName> <LastName>Smith</LastName> </ListingName> <ListAddress>true</ListAddress> <Address> <HouseNumber>12</HouseNumber> <StreetName>ELM</StreetName> <City>New York</City> <StateCode>NY</StateCode> <Zip>10007</Zip> <Country>United States</Country> <AddressType>Dlda</AddressType> </Address> </DldaTnGroup> </DldaTnGroups> </DldaOrder> </DldaOrderResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\" ?> <DldaOrderResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </DldaOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dldas" : {
      "get" : {
        "tags" : [ "internal" ],
        "summary" : "Get DLDA orders (Admin)",
        "description" : "Retrieve information about one or more DLDA Orders (dldas), where the orders are chosen based on the search parameters provided in the API Call. Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parametrized or complex searches.  As a result:<ul>    <li>all query parameters are compatible with the exception of...</li>    <li>if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters is accountId</li></ul>",
        "operationId" : "getDldaOrders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the DLDA Orders query provides a broad range of information about the DLDA Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DldaOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ResponseSelectWrapper> <ListOrderIdUserIdDate> <TotalCount>7</TotalCount> <OrderIdUserIdDate> <accountId>14</accountId> <CountOfTNs>2</CountOfTNs> <userId>team_ua</userId> <lastModifiedDate>2014-07-07T10:06:43.427Z </lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-07T10:06:43.427Z</OrderDate> <orderId>37a6447c-1a0b-4be9-ba89-3f5cb0aea142</orderId> <OrderStatus>FAILED</OrderStatus> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>14</accountId> <CountOfTNs>2</CountOfTNs> <userId>team_ua</userId> <lastModifiedDate>2014-07-07T10:05:56.595Z </lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-07T10:05:56.595Z</OrderDate> <orderId>743b0e64-3350-42e4-baa6-406dac7f4a85</orderId> <OrderStatus>RECEIVED</OrderStatus> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>14</accountId> <CountOfTNs>2</CountOfTNs> <userId>team_ua</userId> <lastModifiedDate>2014-07-07T09:32:17.234Z </lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-07T09:32:17.234Z</OrderDate> <orderId>f71eb4d2-bfef-4384-957f-45cd6321185e</orderId> <OrderStatus>RECEIVED</OrderStatus> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>9999999</accountId> <CountOfTNs>2</CountOfTNs> <userId>jbm</userId> <lastModifiedDate>2014-07-04T10:53:47.461Z </lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-04T10:53:47.434Z</OrderDate> <orderId>2e8e2e08-f6c7-4787-9e58-96e4e75d5615</orderId> <OrderStatus>FAILED</OrderStatus> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>9999999</accountId> <CountOfTNs>2</CountOfTNs> <userId>jbm</userId> <lastModifiedDate>2014-07-04T09:53:16.631Z </lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-04T09:53:16.608Z</OrderDate> <orderId>377dd74e-b5fe-4687-89f1-059c8c1f5c43</orderId> <OrderStatus>FAILED</OrderStatus> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>9999999</accountId> <CountOfTNs>1</CountOfTNs> <userId>jbm</userId> <lastModifiedDate>2014-07-02T16:21:17.996Z </lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-02T16:21:17.996Z</OrderDate> <orderId>05f2303f-92b8-4982-8ee8-73a62a274fa9</orderId> <OrderStatus>FAILED</OrderStatus> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>9999999</accountId> <CountOfTNs>1</CountOfTNs> <userId>jbm</userId> <lastModifiedDate>2014-07-02T16:20:56.866Z </lastModifiedDate> <OrderType>dlda</OrderType> <OrderDate>2014-07-02T16:20:56.865Z</OrderDate> <orderId>291b924a-1ce5-434a-a48c-7f0d649d834b</orderId> <OrderStatus>RECEIVED</OrderStatus> </OrderIdUserIdDate> </ListOrderIdUserIdDate> </ResponseSelectWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/dldas/{orderId}/history" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get DLDA order history",
        "description" : "Retrieve the history information associated with a named DLDA order.  This indicates the various states that the order has passed through, as well as the current state of the order as the last entry.",
        "operationId" : "getDldaOrderHistory",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">        <tbody>            <tr>                <td>OrderDate</td>                <td>The date that the order history event happened</td>            </tr>            <tr>                <td>Status</td>                <td>The new state of the DLDA order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED</td>            </tr>            <tr>                <td>Note</td>                <td>A Note or additional information included with the state change </td>           </tr>           <tr>                <td>Author</td>                <td>The user id that implemented the state change</td>            </tr>        </tbody>    </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DldaOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2014-09-04T16:28:11.320Z</OrderDate>        <Note>The DL/DA request has been received</Note>        <Author>jbm</Author>        <Status>RECEIVED</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-09-04T16:28:18.742Z</OrderDate>        <Note>            The DL/DA request is being processed by our 3rd party supplier        </Note>        <Author>jbm</Author>        <Status>PROCESSING</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-09-05T19:00:17.968Z</OrderDate>        <Note>The DL/DA request is complete for all TNs</Note>        <Author>jbm</Author>        <Status>COMPLETE</Status>    </OrderHistory></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<DldaOrderReportResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></DldaOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dldas/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "summary" : "Get DLDA order history (Admin)",
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getDldaOrderHistory_1",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">        <tbody>            <tr>                <td>OrderDate</td>                <td>The date that the order history event happened</td>            </tr>            <tr>                <td>Note</td>                <td>A Note or additional information included with the state change</td>            </tr>            <tr>                <td>Author</td>                <td>The user id that implemented the state change</td>            </tr>            <tr>                <td>Status</td>                <td>The new state of the DLDA order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, CANCELLED</td>            </tr>            <tr>                <td>Difference</td>                <td>The difference between this state and previous</td>            </tr>        </tbody>    </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DldaOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>        <Note>The DL/DA request has been received</Note>        <Author>jbm</Author>        <Status>RECEIVED</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>        <Note>The DL/DA request has been received</Note>        <Author>jbm</Author>        <Status>RECEIVED</Status>        <Difference>CustomerOrderId : 1111 --&gt; 4444, TN : 6234329572 --&gt; was removed, TN : 7402039089 SubscriberType : RESIDENTIAL --&gt; BUSINESS, TN : 2053529728 SubscriberType : RESIDENTIAL --&gt; BUSINESS</Difference>    </OrderHistory></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<DldaOrderReportResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></DldaOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/e911s/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about a E911 Order with specified ID.",
        "operationId" : "getE911Order",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the E911 Orders query provides a broad range of information about the E911 Order identified in the URL.  Included amongst the information is:<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/E911OrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <E911Order> <OrderCreateDate>2015-06-16T14:03:10.199Z</OrderCreateDate> <AccountId>111</AccountId> <CreatedByUser>admin</CreatedByUser> <OrderId>8578086b-f73d-4a0f-bba6-d20399c7de31</OrderId> <LastModifiedDate>2015-06-16T14:03:10.789Z</LastModifiedDate> <Address> <HouseNumber>901</HouseNumber> <StreetName>Main Campus Drive</StreetName> <City>Raleigh</City> <StateCode>NC</StateCode> <Zip>27606</Zip> <Country>United States</Country> </Address> <CallerName>testName111111</CallerName> <CustomerOrderId>test</CustomerOrderId> <ProcessingStatus>PARTIAL</ProcessingStatus> <TelephoneNumbers> <TelephoneNumber>3172000218</TelephoneNumber> <TelephoneNumber>3172000000</TelephoneNumber> </TelephoneNumbers> <ErrorList> <Error> <Code>8003</Code> <Description>Telephone numbers does not belong to this account.</Description> <TelephoneNumbers> <TelephoneNumber>3172000000</TelephoneNumber> </TelephoneNumbers> </Error> <Error> <Code>8009</Code> <Description>Telephone numbers not in 'Inservice'</Description> <TelephoneNumbers> <TelephoneNumber>3172000000</TelephoneNumber> </TelephoneNumbers> </Error> </ErrorList> <!-- or, instead of TelephoneNumbers, a list of Alternative identifiers can be returned --> <AlternateEndUserIdentifiers> <AlternateEndUserIdentifier> <PIDFLOEnabled>true</PIDFLOEnabled> <Identifier>alphanumeric characters only, 1 character minimum, 30 characters maximum </Identifier> <CallbackNumber>9706542332</CallbackNumber> <CallerName>Eli</CallerName> <PreferredLanguage>en</PreferredLanguage> <LocationId>Some32CharacterOrLessString</LocationId> <Address> <LocationId>Some32CharacterOrLessString</LocationId> <HouseNumber>915</HouseNumber> <HouseSuffix/> <PreDirectional/> <StreetName>Elm</StreetName> <StreetSuffix>Ave</StreetSuffix> <PostDirectional/> <AddressLine2/> <City>Carpinteria</City> <StateCode>CA</StateCode> <Zip>93013</Zip> <PlusFour/> <County/> <Country>United States</Country> </Address> </AlternateEndUserIdentifier> <AlternateEndUserIdentifier> <PIDFLOEnabled>true</PIDFLOEnabled> <Identifier>alphanumeric characters only, 1 character minimum, 30 characters maximum </Identifier> <CallbackNumber>9706542333</CallbackNumber> <CallerName>Ethan</CallerName> <PreferredLanguage>en</PreferredLanguage> </AlternateEndUserIdentifier> </AlternateEndUserIdentifiers> <!-- or, instead of the TelephoneNumbers and Alternative identifiers, a list of Additional Addresses can be returned --> <AdditionalAddresses> <Address> <LocationId>Some32CharacterOrLessString</LocationId> <HouseNumber>915</HouseNumber> <HouseSuffix/> <PreDirectional/> <StreetName>Elm</StreetName> <StreetSuffix>Ave</StreetSuffix> <PostDirectional/> <AddressLine2/> <City>Carpinteria</City> <StateCode>CA</StateCode> <Zip>93013</Zip> <PlusFour/> <County/> <Country>United States</Country> </Address> </AdditionalAddresses> <OrderType>e911</OrderType> </E911Order>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <E911OrderReportResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </E911OrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/e911s/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about a specific E911 Order identified as the resource.",
        "operationId" : "getE911Order_1",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the E911 Orders query provides a broad range of information about the E911 Order identified in the URL.  Included amongst the information is:<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/E911OrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<E911Order> <OrderCreateDate>2015-06-16T14:03:10.199Z</OrderCreateDate> <AccountId>111</AccountId> <CreatedByUser>admin</CreatedByUser> <OrderId>8578086b-f73d-4a0f-bba6-d20399c7de31</OrderId> <LastModifiedDate>2015-06-16T14:03:10.789Z</LastModifiedDate> <Address> <HouseNumber>901</HouseNumber> <StreetName>Main Campus Drive</StreetName> <City>Raleigh</City> <StateCode>NC</StateCode> <Zip>27606</Zip> <Country>United States</Country> </Address> <CallerName>testName111111</CallerName> <CustomerOrderId>test</CustomerOrderId> <ProcessingStatus>PARTIAL</ProcessingStatus> <TelephoneNumbers> <TelephoneNumber>3172000218</TelephoneNumber> <TelephoneNumber>3172000000</TelephoneNumber> </TelephoneNumbers> <ErrorList> <Error> <Code>8003</Code> <Description>Telephone numbers does not belong to this account.</Description> <TelephoneNumbers> <TelephoneNumber>3172000000</TelephoneNumber> </TelephoneNumbers> </Error> <Error> <Code>8009</Code> <Description>Telephone numbers not in 'Inservice'</Description> <TelephoneNumbers> <TelephoneNumber>3172000000</TelephoneNumber> </TelephoneNumbers> </Error> </ErrorList> <!-- or, instead of TelephoneNumbers, a list of Alternative identifiers can be returned --> <AlternateEndUserIdentifiers> <AlternateEndUserIdentifier> <PIDFLOEnabled>true</PIDFLOEnabled> <Identifier>alphanumeric characters only, 1 character minimum, 30 characters maximum </Identifier> <CallbackNumber>9706542332</CallbackNumber> <CallerName>Eli</CallerName> <PreferredLanguage>en</PreferredLanguage> <LocationId>Some32CharacterOrLessString</LocationId> <Address> <LocationId>Some32CharacterOrLessString</LocationId> <HouseNumber>915</HouseNumber> <HouseSuffix/> <PreDirectional/> <StreetName>Elm</StreetName> <StreetSuffix>Ave</StreetSuffix> <PostDirectional/> <AddressLine2/> <City>Carpinteria</City> <StateCode>CA</StateCode> <Zip>93013</Zip> <PlusFour/> <County/> <Country>United States</Country> </Address> </AlternateEndUserIdentifier> <AlternateEndUserIdentifier> <PIDFLOEnabled>true</PIDFLOEnabled> <Identifier>alphanumeric characters only, 1 character minimum, 30 characters maximum </Identifier> <CallbackNumber>9706542333</CallbackNumber> <CallerName>Ethan</CallerName> <PreferredLanguage>en</PreferredLanguage> </AlternateEndUserIdentifier> </AlternateEndUserIdentifiers> <!-- or, instead of the TelephoneNumbers and Alternative identifiers, a list of Additional Addresses can be returned --> <AdditionalAddresses> <Address> <LocationId>Some32CharacterOrLessString</LocationId> <HouseNumber>915</HouseNumber> <HouseSuffix/> <PreDirectional/> <StreetName>Elm</StreetName> <StreetSuffix>Ave</StreetSuffix> <PostDirectional/> <AddressLine2/> <City>Carpinteria</City> <StateCode>CA</StateCode> <Zip>93013</Zip> <PlusFour/> <County/> <Country>United States</Country> </Address> </AdditionalAddresses> </E911Order>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <E911OrderReportResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </E911OrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/e911s/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getE911OrderHistory",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">        <tbody>            <tr>                <td>OrderModifiedDate</td>                <td>The date that the order history event happened</td>            </tr>            <tr>                <td>Status</td>                <td>The new state of the E911 order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>            </tr>            <tr>                <td>Note</td>                <td>A Note or additional information included with the state change </td>           </tr>           <tr>                <td>Author</td>                <td>The user id that implemented the state change</td>            </tr>        </tbody>    </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/E911OrderHistoryResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/e911s/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getE911OrderHistory_1",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">        <tbody>            <tr>                <td>OrderDate</td>                <td>The date that the order history event happened</td>            </tr>            <tr>                <td>Note</td>                <td>A Note or additional information included with the state change</td>            </tr>            <tr>                <td>Author</td>                <td>The user id that implemented the state change</td>            </tr>            <tr>                <td>Status</td>                <td>The new state of the E911order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED</td>            </tr>        </tbody>    </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/E911OrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <OrderHistoryWrapper> <OrderHistory> <OrderDate>2015-06-16T13:30:08.623Z</OrderDate> <Author>admin</Author> <Status>RECEIVED</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T13:30:09.041Z</OrderDate> <Author>admin</Author> <Status>FAILED</Status> </OrderHistory> </OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <E911OrderReportResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </E911OrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/e911s" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about one or more E911 Orders (e911s), where the orders are chosen based on the search parameters provided in the API Call.Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parameterized or complex searches.  As a result:<ul>            <li>all query parameters are compatible with the exception of...</li>            <li>if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId</li></ul>",
        "operationId" : "getE911Orders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "callBack",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "aeui",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "callingEndpoint",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the E911 Orders query provides a broad range of information about the E911  Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/E911OrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <E911Orders> <TotalCount>2</TotalCount> <E911OrderSummary> <accountId>1</accountId> <CountOfTNs>1</CountOfTNs> <userId>admin</userId> <lastModifiedDate>2015-08-03T14:41:01.769Z</lastModifiedDate> <OrderDate>2015-08-03T14:41:00.815Z</OrderDate> <OrderType>e911</OrderType> <OrderStatus>COMPLETE</OrderStatus> <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId> </E911OrderSummary> <E911OrderSummary> <accountId>1</accountId> <CountOfTNs>1</CountOfTNs> <userId>admin</userId> <lastModifiedDate>2015-08-03T14:40:19.008Z</lastModifiedDate> <OrderDate>2015-08-03T14:40:17.864Z</OrderDate> <OrderType>e911</OrderType> <OrderStatus>ADJUSTED_COMPLETE</OrderStatus> <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId> </E911OrderSummary> </E911Orders> <!-- OR if orderDetails = true... --> <E911Orders> <TotalCount>2</TotalCount> <E911Order> <OrderCreateDate>2015-08-03T14:41:00.815Z</OrderCreateDate> <AccountId>1</AccountId> <CreatedByUser>admin</CreatedByUser> <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId> <LastModifiedDate>2015-08-03T14:41:01.769Z</LastModifiedDate> <Address> <HouseNumber>800</HouseNumber> <HouseSuffix></HouseSuffix> <PreDirectional></PreDirectional> <StreetName>PENNSYLVANIA AVE</StreetName> <StreetSuffix>NW</StreetSuffix> <AddressLine2></AddressLine2> <City>WASHINGTON</City> <StateCode>DC</StateCode> <Zip>20004</Zip> <PlusFour></PlusFour> <Country>United States</Country> </Address> <CallerName>0931180f-4</CallerName> <ErrorList/> <ProcessingStatus>COMPLETE</ProcessingStatus> <TelephoneNumbers> <TelephoneNumber>9142971000</TelephoneNumber> </TelephoneNumbers> </E911Order> <E911Order> <OrderCreateDate>2015-08-03T14:40:17.864Z</OrderCreateDate> <AccountId>1</AccountId> <CreatedByUser>admin</CreatedByUser> <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId> <LastModifiedDate>2015-08-03T14:40:19.008Z</LastModifiedDate> <Address> <HouseNumber>1600</HouseNumber> <HouseSuffix></HouseSuffix> <PreDirectional></PreDirectional> <StreetName>PENNSYLVANIA AVE</StreetName> <StreetSuffix>NW</StreetSuffix> <AddressLine2></AddressLine2> <City>WASHINGTON</City> <StateCode>DC</StateCode> <Zip>20500</Zip> <PlusFour>0003</PlusFour> <Country>United States</Country> </Address> <CallerName>0931180f-4</CallerName> <ErrorList/> <ProcessingStatus>ADJUSTED_COMPLETE</ProcessingStatus> <TelephoneNumbers> <TelephoneNumber>9142971000</TelephoneNumber> </TelephoneNumbers> </E911Order> </E911Orders>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/externalTns/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about a externalTns order with specified ID.",
        "operationId" : "getOrder_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the externalTns query provides a broad range of information about the externalTns order identified in the URL.  Included amongst the information is...<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalTnsOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrder> <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate> <AccountId>1</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId> <LastModifiedDate>2018-01-10T05:20:47.661Z</LastModifiedDate> <ProcessingStatus>PARTIAL</ProcessingStatus> <CustomerOrderId>ICPA123ABC</CustomerOrderId> <SiteId>743</SiteId> <SipPeerId>303716</SipPeerId> <Action>[ IMPORT | REMOVE ]</Action> <LoaType>[ CARRIER | SUBSCRIBER ]</LoaType> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> <TelephoneNumber>4158714245</TelephoneNumber> <TelephoneNumber>4352154439</TelephoneNumber> <TelephoneNumber>4352154466</TelephoneNumber> </TelephoneNumbers> <Errors> <Error> <Code>[int]</Code> <Description>[string]</Description> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> </ExternalTnsOrder>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrderResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </ExternalTnsOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/externalTns/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about a specific externalTns order identified as the resource.",
        "operationId" : "getOrder_3",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the externalTns orders query provides a broad range of information about the externalTns order identified in the URL.  Included amongst the information is...<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalTnsOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrder> <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate> <AccountId>1</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId> <ProcessingStatus>PARTIAL</ProcessingStatus> <Order> <CustomerOrderId>ICPA123ABC</CustomerOrderId> <SiteId>743</SiteId> <SipPeerId>303716</SipPeerId> <Action>[ IMPORT | REMOVE ]</Action> <LoaType>[ CARRIER | SUBSCRIBER ]</LoaType> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> <TelephoneNumber>4158714245</TelephoneNumber> <TelephoneNumber>4352154439</TelephoneNumber> <TelephoneNumber>4352154466</TelephoneNumber> </TelephoneNumbers> </Order> <Errors> <Error> <Code>[int]</Code> <Description>[string]</Description> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> </ExternalTnsOrder>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the identified externalTns order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrderResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </ExternalTnsOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/externalTns" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about one or more externalTns orders, where the orders are chosen based on the search parameters provided in the API Call.",
        "operationId" : "getOrders_3",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 OK indicates that the one or more externalTns orders have been found, and a response payload has been generated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalTnsOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrders> <TotalCount>2</TotalCount> <ExternalTnsOrderSummary> <!-- Account ID preserved for uniformity with global list --> <accountId>1</accountId> <CompletedQuantity>3</CompletedQuantity> <userId>jbm</userId> <OrderDate>2016-01-15T11:36:52.727Z</OrderDate> <OrderType>ExternalTnsOrder</OrderType> <OrderStatus>COMPLETE</OrderStatus> <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId> </ExternalTnsOrderSummary> <ExternalTnsOrderSummary> <accountId>9900012</accountId> <CompletedQuantity>5</CompletedQuantity> <userId>jbm</userId> <OrderDate>2016-01-15T11:36:26.633Z</OrderDate> <OrderType>ExternalTnsOrder</OrderType> <OrderStatus>PARTIAL</OrderStatus> <OrderId>d8f5abc0-1a4c-4c36-b387-93fb5b430784</OrderId> </ExternalTnsOrderSummary> </ExternalTnsOrders>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/externalTns/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getOrderHistory",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">        <tbody>            <tr>                <td>OrderDate</td>                <td>The date that the order history event happened</td>            </tr>            <tr>                <td>Note</td>                <td>A Note or additional information included with the state change</td>            </tr>            <tr>                <td>Author</td>                <td>The user id that implemented the state change</td>            </tr>            <tr>                <td>Status</td>                <td>The new state of the E911order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED</td>            </tr>        </tbody>    </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalTnsOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <OrderHistoryWrapper> <OrderHistory> <OrderDate>2015-06-16T13:30:08.623Z</OrderDate> <Author>admin</Author> <Status>RECEIVED</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T13:30:09.041Z</OrderDate> <Author>admin</Author> <Status>FAILED</Status> </OrderHistory> </OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrderResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </ExternalTnsOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/externalTns/{orderId}/history" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getOrderHistory_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">        <tbody>            <tr>                <td>OrderModifiedDate</td>                <td>The date that the order history event happened</td>            </tr>            <tr>                <td>Status</td>                <td>The new state of the E911 order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>            </tr>            <tr>                <td>Note</td>                <td>A Note or additional information included with the state change </td>           </tr>           <tr>                <td>Author</td>                <td>The user id that implemented the state change</td>            </tr>        </tbody>    </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalTnsOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <OrderHistoryWrapper> <OrderHistory> <OrderDate>2015-06-16T14:03:10.225Z</OrderDate> <Author>admin</Author> <Status>RECEIVED</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.330Z</OrderDate> <Author>admin</Author> <Status>PROCESSING</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.789Z</OrderDate> <Author>admin</Author> <Status>PARTIAL</Status> </OrderHistory> </OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ExternalTnsOrderReportResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </ExternalTnsOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importtnorders/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about a importTnOrder with specified ID.",
        "operationId" : "getOrder_4",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ImportTnOrder> <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate> <AccountId>9900012</AccountId> <CreatedByUser>sjm</CreatedByUser> <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId> <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate> <SiteId>65487</SiteId> <SipPeerId>885544</SipPeerId> <Subscriber> <Name>First</Name> <ServiceAddress> <HouseNumber>11235</HouseNumber> <StreetName>Back</StreetName> <City>Denver</City> <StateCode>CO</StateCode> <Zip>27541</Zip> <County>Canyon</County> </ServiceAddress> </Subscriber> <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson> <LoaType>CARRIER</LoaType> <TelephoneNumbers> <TelephoneNumber>2106078250</TelephoneNumber> <TelephoneNumber>2109678273</TelephoneNumber> <TelephoneNumber>2109678331</TelephoneNumber> <TelephoneNumber>2109678337</TelephoneNumber> <TelephoneNumber>2266401468</TelephoneNumber> </TelephoneNumbers> <ProcessingStatus>PARTIAL</ProcessingStatus> <Errors> <Error> <Code>7518</Code> <Description>Telephone Number Not Active.</Description> <TelephoneNumbers> <TelephoneNumber>2262665583</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> </ImportTnOrder>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/importtnorders/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about a importTnOrder with specified ID.",
        "operationId" : "getOrder_5",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ImportTnOrder> <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate> <AccountId>9900012</AccountId> <CreatedByUser>sjm</CreatedByUser> <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId> <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate> <SiteId>65487</SiteId> <SipPeerId>885544</SipPeerId> <Subscriber> <Name>First</Name> <ServiceAddress> <HouseNumber>11235</HouseNumber> <StreetName>Back</StreetName> <City>Denver</City> <StateCode>CO</StateCode> <Zip>27541</Zip> <County>Canyon</County> </ServiceAddress> </Subscriber> <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson> <TelephoneNumbers> <TelephoneNumber>2106078250</TelephoneNumber> <TelephoneNumber>2109678273</TelephoneNumber> <TelephoneNumber>2109678331</TelephoneNumber> <TelephoneNumber>2109678337</TelephoneNumber> <TelephoneNumber>2266401468</TelephoneNumber> </TelephoneNumbers> <ProcessingStatus>PARTIAL</ProcessingStatus> <Errors> <Error> <Code>7518</Code> <Description>Telephone Number Not Active.</Description> <TelephoneNumbers> <TelephoneNumber>2262665583</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> </ImportTnOrder>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importtnorders" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the importtnorders requests for the given account ID. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getOrders_4",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        },{
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sippeerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the importTnOrders query provides information about the orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully imported Telephone Numbers, and decriptions of any encountered errors.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ImportTnOrders> <TotalCount>2</TotalCount> <ImportTnOrderSummary> <ImportTnOrderSummary> <accountId>14</accountId> <CountOfTNs>1</CountOfTNs> <CustomerOrderId>CustomerOrderId</CustomerOrderId> <userId>systemUser</userId> <lastModifiedDate>2019-01-24T11:08:09.770Z</lastModifiedDate> <OrderDate>2019-01-24T11:08:09.770Z</OrderDate> <OrderType>import_tn_orders</OrderType> <OrderStatus>COMPLETE</OrderStatus> <OrderId>211a103c-5f9c-4117-8833-c574bdc390fd</OrderId> </ImportTnOrderSummary> </ImportTnOrderSummary> <ImportTnOrderSummary> <ImportTnOrderSummary> <accountId>14</accountId> <CountOfTNs>2</CountOfTNs> <CustomerOrderId>CustomerOrderId</CustomerOrderId> <userId>systemUser</userId> <lastModifiedDate>2019-01-24T10:43:16.934Z</lastModifiedDate> <OrderDate>2019-01-24T10:43:16.934Z</OrderDate> <OrderType>import_tn_orders</OrderType> <OrderStatus>PARTIAL</OrderStatus> <OrderId>8dc32f09-2329-4c73-b702-526f46b02712</OrderId> </ImportTnOrderSummary> </ImportTnOrderSummary> </ImportTnOrders>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Creates an importTnOrders request to add numbers under the given site ID and sippeer ID as specified in the body.A successfully submitted order will have a status of \"RECEIVED\". A successfully completed order will have a status of \"COMPLETE\" if all of the telephone numbers were successfully imported and  \"PARTIAL\" if some of the telephone numbers were imported. A failed order with will have a staus of \"FAILED\" and no telephone numbers would have been imported.The elements supplied in the payloads are described in the following table:<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\">    <tbody>        <tr>            <td valign=\"top\">                <p>                    <strong>Parameter</strong>                </p>            </td>            <td valign=\"top\">                <p>                    <strong>Required</strong>                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    <strong>Description</strong>                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    accountId (URL Parameter)                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    The account ID for porting the numbers.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    CustomerOrderId                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    No                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    Internal customer order id for tracking the order.  Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    Name                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    Subscriber business / customer name.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    HouseNumber                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    Street address number.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    StreetName                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    Street name.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    City                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    City.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    StateCode                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    Two letter state code.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    Zip                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    Zip code.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    LoaAuthorizingPerson                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    First and last name of person who authorized LOA.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    LoaType                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    (Optional) Indentify the LoaType on TNs. Allowed values... CARRIER or  SUBSCRIBER. Default value is SUBSCRIBER.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    TelephoneNumber                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    Ten digit phone number with no dots or dashes. One or more is required. Use a PhoneNumber tag for each phone number in the list.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    SiteId                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    See section on Sites                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    SipPeerId                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    No                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    See section on SIP Peers                </p>            </td>        </tr>    </tbody></table>",
        "operationId" : "createOrder_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportTnOrdersPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The order has been created and an order ID will be specified in the payload and in the header.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ImportTnOrderResponse> <ImportTnOrder> <CustomerOrderId>SJM000001</CustomerOrderId> <OrderCreateDate>2018-01-20T02:59:54.000Z</OrderCreateDate> <AccountId>9900012</AccountId> <CreatedByUser>smckinnon</CreatedByUser> <OrderId>b05de7e6-0cab-4c83-81bb-9379cba8efd0</OrderId> <LastModifiedDate>2018-01-20T02:59:54.000Z</LastModifiedDate> <SiteId>202</SiteId> <SipPeerId>520565</SipPeerId> <Subscriber> <Name>ABC Inc.</Name> <ServiceAddress> <HouseNumber>11235</HouseNumber> <StreetName>Back</StreetName> <City>Denver</City> <StateCode>CO</StateCode> <Zip>27541</Zip> <County>Canyon</County> </ServiceAddress> </Subscriber> <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson> <LoaType>CARRIER</LoaType> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> <TelephoneNumber>4158714245</TelephoneNumber> <TelephoneNumber>4352154439</TelephoneNumber> <TelephoneNumber>4352154466</TelephoneNumber> </TelephoneNumbers> <ProcessingStatus>PROCESSING</ProcessingStatus> <Errors/> </ImportTnOrder> </ImportTnOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The order failed; one of the input parameters is invalid. The error text and an error code will be provided in the ErrorList element.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ImportTnOrderResponse> <ProcessingStatus>FAILED</ProcessingStatus> <Errors> <Code>7309</Code> <Description>The site id was not supplied or is invalid.</Description> </Errors> <Errors> <Code>7312</Code> <Description>The sippeer id is invalid.</Description> </Errors> </ImportTnOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/importtnorders" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the importtnorders requests for the given account ID.",
        "operationId" : "getOrders_5",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sippeerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the importTnOrders query provides information about the orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully imported Telephone Numbers, and decriptions of any encountered errors.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ImportTnOrders> <TotalCount>2</TotalCount> <ImportTnOrderSummary> <ImportTnOrderSummary> <accountId>14</accountId> <CountOfTNs>1</CountOfTNs> <CustomerOrderId>CustomerOrderId</CustomerOrderId> <userId>systemUser</userId> <lastModifiedDate>2019-01-24T11:08:09.770Z</lastModifiedDate> <OrderDate>2019-01-24T11:08:09.770Z</OrderDate> <OrderType>import_tn_orders</OrderType> <OrderStatus>COMPLETE</OrderStatus> <OrderId>211a103c-5f9c-4117-8833-c574bdc390fd</OrderId> </ImportTnOrderSummary> </ImportTnOrderSummary> <ImportTnOrderSummary> <ImportTnOrderSummary> <accountId>14</accountId> <CountOfTNs>2</CountOfTNs> <CustomerOrderId>CustomerOrderId</CustomerOrderId> <userId>systemUser</userId> <lastModifiedDate>2019-01-24T10:43:16.934Z</lastModifiedDate> <OrderDate>2019-01-24T10:43:16.934Z</OrderDate> <OrderType>import_tn_orders</OrderType> <OrderStatus>PARTIAL</OrderStatus> <OrderId>8dc32f09-2329-4c73-b702-526f46b02712</OrderId> </ImportTnOrderSummary> </ImportTnOrderSummary> </ImportTnOrders>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/importtnorders/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the history of the specified importTnOrder.",
        "operationId" : "getOrderHistory_2",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <OrderHistoryWrapper> <OrderHistory> <OrderDate>2015-06-16T14:03:10.225Z</OrderDate> <Note>Import TN order is received.</Note> <Author>admin</Author> <Status>RECEIVED</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.330Z</OrderDate> <Note>Import TN order is processing.</Note> <Author>admin</Author> <Status>PROCESSING</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.789Z</OrderDate> <Note>Import TN order is partial.</Note> <Author>admin</Author> <Status>PARTIAL</Status> </OrderHistory> </OrderHistoryWrapper>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importtnorders/{orderId}/history" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the history of the specified importTnOrder.",
        "operationId" : "getOrderHistory_3",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <OrderHistoryWrapper> <OrderHistory> <OrderDate>2015-06-16T14:03:10.225Z</OrderDate> <Note>Import TN order is received.</Note> <Author>admin</Author> <Status>RECEIVED</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.330Z</OrderDate> <Note>Import TN order is processing.</Note> <Author>admin</Author> <Status>PROCESSING</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.789Z</OrderDate> <Note>Import TN order is partial.</Note> <Author>admin</Author> <Status>PARTIAL</Status> </OrderHistory> </OrderHistoryWrapper>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lidbs/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getLidbOrderHistory",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">        <tbody>            <tr>                <td>OrderModifiedDate</td>                <td>The date that the order history event happened</td>            </tr>            <tr>                <td>Status</td>                <td>The new state of the LIDB order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>            </tr>            <tr>                <td>Note</td>                <td>A Note or additional information included with the state change </td>           </tr>           <tr>                <td>Author</td>                <td>The user id that implemented the state change</td>            </tr>        </tbody>    </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LidbOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>        <Note>The Calling Name database update request has been received</Note>        <Author>jbm</Author>        <Status>RECEIVED</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>        <Note>            The Calling Name database update request is being processed by our 3rd party supplier        </Note>        <Author>jbm</Author>        <Status>PROCESSING</Status>    </OrderHistory></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LidbOrderReportResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></LidbOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lidbs/{orderId}/history" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getLidbOrderHistory_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">        <tbody>            <tr>                <td>OrderModifiedDate</td>                <td>The date that the order history event happened</td>            </tr>            <tr>                <td>Status</td>                <td>The new state of the LIDB order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>            </tr>            <tr>                <td>Note</td>                <td>A Note or additional information included with the state change </td>           </tr>           <tr>                <td>Author</td>                <td>The user id that implemented the state change</td>            </tr>        </tbody>    </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LidbOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>        <Note>The Calling Name database update request has been received</Note>        <Author>jbm</Author>        <Status>RECEIVED</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>        <Note>            The Calling Name database update request is being processed by our 3rd party supplier        </Note>        <Author>jbm</Author>        <Status>PROCESSING</Status>    </OrderHistory></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LidbOrderReportResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></LidbOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lidbs" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about one or more Lidb Orders (lidbs), where the orders are chosen based on the search parameters provided in the API Call. Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parameterize or complex searches.  As a result:<ul>     <li>all query parameters are compatible with the exception of...</li>     <li>if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId</li>     <li>sippeerId and siteId are only compatible with searches that have a date range parameter.</li></ul>",
        "operationId" : "getLidbOrders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sippeerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the E911 Orders query provides a broad range of information about the Lidb  Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LidbOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?> <ResponseSelectWrapper> <ListOrderIdUserIdDate> <TotalCount>2122</TotalCount> <OrderIdUserIdDate> <accountId>9999999</accountId> <CountOfTNs>0</CountOfTNs> <lastModifiedDate>2014-02-25T16:02:43.195Z</lastModifiedDate> <OrderType>lidb</OrderType> <OrderDate>2014-02-25T16:02:43.195Z</OrderDate> <orderId>abe36738-6929-4c6f-926c-88e534e2d46f</orderId> <OrderStatus>FAILED</OrderStatus> <TelephoneNumberDetails/> <userId>team_ua</userId> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>9999999</accountId> <CountOfTNs>0</CountOfTNs> <lastModifiedDate>2014-02-25T16:02:40.628Z</lastModifiedDate> <OrderType>lidb</OrderType> <OrderDate>2014-02-25T16:02:40.628Z</OrderDate> <orderId>18427880-33a9-4282-a196-f740c720bb9e</orderId> <OrderStatus>COMPLETE</OrderStatus> <userId>team_ua</userId> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>9999999</accountId> <CountOfTNs>0</CountOfTNs> <lastModifiedDate>2014-02-25T16:02:39.345Z</lastModifiedDate> <OrderType>lidb</OrderType> <OrderDate>2014-02-25T16:02:39.345Z</OrderDate> <orderId>d7eff0d8-303c-4f11-86f8-44740bbd4535</orderId> <OrderStatus>FAILED</OrderStatus> <userId>team_ua</userId> </OrderIdUserIdDate> <OrderIdUserIdDate> <accountId>9999999</accountId> <CountOfTNs>0</CountOfTNs> <lastModifiedDate>2014-02-25T16:02:39.021Z</lastModifiedDate> <OrderType>lidb</OrderType> <OrderDate>2014-02-25T16:02:39.021Z</OrderDate> <orderId>ba5b6297-139b-4430-aab0-9ff02c4362f4</orderId> <OrderStatus>FAILED</OrderStatus> <userId>team_ua</userId> </OrderIdUserIdDate> </ListOrderIdUserIdDate> </ResponseSelectWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lidbs/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about a specific Lidb Order identified as the resource.",
        "operationId" : "getLidbOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the Lidb Orders query provides a broad range of information about the Lidb Order identified in the URL.  Included amongst the information is:<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>various dates</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li><li>LidbTnGroups - list of LidbTnGroup elements that contains list of TNs with SubscriberInformation, UseType(RESIDENTIAL or BUSINESS) and Visibility (PUBLIC or PRIVATE)</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LidbOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LidbOrder>    <CustomerOrderId>testCustomerOrderId</CustomerOrderId>    <orderId>255bda29-fc57-44e8-a6c2-59b45388c6d0</orderId>    <OrderCreateDate>2014-05-28T14:46:21.724Z</OrderCreateDate>    <ProcessingStatus>RECEIVED</ProcessingStatus>    <CreatedByUser>jbm</CreatedByUser>    <LastModifiedDate>2014-02-20T19:33:17.600Z</LastModifiedDate>    <OrderCompleteDate>2014-02-20T19:33:17.600Z</OrderCompleteDate>    <ErrorList/>    <LidbTnGroups>        <LidbTnGroup>            <TelephoneNumbers>                <TelephoneNumber>4082213311</TelephoneNumber>            </TelephoneNumbers>            <FullNumber>8042105618</FullNumber>            <SubscriberInformation>Fred</SubscriberInformation>            <UseType>BUSINESS</UseType>            <Visibility>PRIVATE</Visibility>        </LidbTnGroup>        <LidbTnGroup>            <TelephoneNumbers>                <TelephoneNumber>4082212850</TelephoneNumber>                <TelephoneNumber>4082213310</TelephoneNumber>            </TelephoneNumbers>            <FullNumber>8042105760</FullNumber>            <SubscriberInformation>Fred</SubscriberInformation>            <UseType>RESIDENTIAL</UseType>            <Visibility>PUBLIC</Visibility>        </LidbTnGroup>    </LidbTnGroups></LidbOrder>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LidbOrderReportResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></LidbOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lidbs/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about a specific Lidb Order identified as the resource.",
        "operationId" : "getLidbOrder_1",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the Lidb Orders query provides a broad range of information about the Lidb Order identified in the URL.  Included amongst the information is:<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>various dates</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li><li>LidbTnGroups - list of LidbTnGroup elements that contains list of TNs with SubscriberInformation, UseType(RESIDENTIAL or BUSINESS) and Visibility (PUBLIC or PRIVATE)</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LidbOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LidbOrder>    <CustomerOrderId>testCustomerOrderId</CustomerOrderId>    <orderId>255bda29-fc57-44e8-a6c2-59b45388c6d0</orderId>    <OrderCreateDate>2014-05-28T14:46:21.724Z</OrderCreateDate>    <ProcessingStatus>RECEIVED</ProcessingStatus>    <CreatedByUser>jbm</CreatedByUser>    <LastModifiedDate>2014-02-20T19:33:17.600Z</LastModifiedDate>    <OrderCompleteDate>2014-02-20T19:33:17.600Z</OrderCompleteDate>    <ErrorList/>    <LidbTnGroups>        <LidbTnGroup>            <TelephoneNumbers>                <TelephoneNumber>4082213311</TelephoneNumber>            </TelephoneNumbers>            <FullNumber>8042105618</FullNumber>            <SubscriberInformation>Fred</SubscriberInformation>            <UseType>BUSINESS</UseType>            <Visibility>PRIVATE</Visibility>        </LidbTnGroup>        <LidbTnGroup>            <TelephoneNumbers>                <TelephoneNumber>4082212850</TelephoneNumber>                <TelephoneNumber>4082213310</TelephoneNumber>            </TelephoneNumbers>            <FullNumber>8042105760</FullNumber>            <SubscriberInformation>Fred</SubscriberInformation>            <UseType>RESIDENTIAL</UseType>            <Visibility>PUBLIC</Visibility>        </LidbTnGroup>    </LidbTnGroups></LidbOrder>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LidbOrderReportResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></LidbOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lidbs" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve a list of the LIDB orders that are associated with the account. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getLidbOrder_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK <br> a 200 OK indicates that there are LIDB orders associated with the account.The 200 OK response payload provides a list of all LIDB orders that have been issued against that account.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LidbOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?> <ResponseSelectWrapper>    <ListOrderIdUserIdDate>        <TotalCount>2122</TotalCount>        <OrderIdUserIdDate>            <accountId>9999999</accountId>            <CountOfTNs>0</CountOfTNs>            <lastModifiedDate>2014-02-25T16:02:43.195Z</lastModifiedDate>            <OrderType>lidb</OrderType>            <OrderDate>2014-02-25T16:02:43.195Z</OrderDate>            <orderId>abe36738-6929-4c6f-926c-88e534e2d46f</orderId>            <OrderStatus>FAILED</OrderStatus>            <TelephoneNumberDetails/>            <userId>team_ua</userId>        </OrderIdUserIdDate>        <!-- ...SNIP... -->        <OrderIdUserIdDate>            <accountId>9999999</accountId>            <CountOfTNs>0</CountOfTNs>            <lastModifiedDate>2014-02-25T16:02:39.021Z</lastModifiedDate>            <OrderType>lidb</OrderType>            <OrderDate>2014-02-25T16:02:39.021Z</OrderDate>            <orderId>ba5b6297-139b-4430-aab0-9ff02c4362f4</orderId>            <OrderStatus>FAILED</OrderStatus>            <userId>team_ua</userId>        </OrderIdUserIdDate>    </ListOrderIdUserIdDate></ResponseSelectWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUNDIf any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create a LIDB order to associate Calling Name Information with a TN or list of CountOfTNsThe key data elements in the submission are -    <table style=\"text-align: left; width: 80%;\"     border=\"1\" cellpadding=\"2\" cellspacing=\"2\">      <tbody>        <tr>          <td>TelephoneNumbers</td>          <td>A list of telephone numbers that will all assume the SubscriberInformation that is listed in the payload. In an enterprise context it is not uncommon for all of the served telephone numbers to use the same string for the Subscriber Information.</td>        </tr>        <tr>          <td>SubscriberInformation</td>          <td>This is the field that is displayed to the user receiving the phone call from the Telephone numbers in the TelephoneNumberList</td>        </tr>        <tr>          <td>UseType</td>          <td>Can be RESIDENTIAL or BUSINESS. The element is required.</td>        </tr>        <tr>          <td>Visibility</td>          <td>Can be PRIVATE or PUBLIC. If it is tagged as PRIVATE then the data will be provided, but the display will not be provided on a standard phone call.  The element is required</td>        </tr>        <tr>          <td>CustomerOrderId</td>          <td>The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. The element is optional. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</td>        </tr>      </tbody>    </table>",
        "operationId" : "createLidbOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LidbOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The 201 response indicates that an order has been created to monitor and manage the request to establish a LIDB CNAME record registered with the network.The <b>location</b> header in the response contains a URL that refers to the created order, including an echo of the order as requested.Errors in processing the request will be articulated in the ErrorList component of the response.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LidbOrderResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LidbOrderResponse>    <LidbOrder>        <orderId>1d863522-c9bf-430c-8e79-cc63cad04a1d</orderId>        <CustomerOrderId>[String]</CustomerOrderId>        <ProcessingStatus>RECEIVED</ProcessingStatus>        <ErrorList>          <Error>            <TelephoneNumber>8888595935</TelephoneNumber>            <Code>11020</Code>            <Description>Cannot add LIDB to a telephone number that already has LIDB or is in process</Description>          </Error>        </ErrorList>        <LidbTnGroups>          <LidbTnGroup>            <TelephoneNumbers>              <TelephoneNumber>8045030097</TelephoneNumber>              <TelephoneNumber>8045030098</TelephoneNumber>            </TelephoneNumbers>            <SubscriberInformation>Joes Garage</SubscriberInformation>            <UseType>RESIDENTIAL</UseType>            <Visibility>PUBLIC</Visibility>          </LidbTnGroup>          <LidbTnGroup>            <TelephoneNumbers>              <TelephoneNumber>8888595935</TelephoneNumber>            </TelephoneNumbers>            <SubscriberInformation>Joes Storage</SubscriberInformation>            <UseType>RESIDENTIAL</UseType>            <Visibility>PRIVATE</Visibility>          </LidbTnGroup>        </LidbTnGroups>    </LidbOrder></LidbOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad RequestA 400 Bad Request indicates that the processing of the request payload has detected a syntactic error that prevents further processing.  No order is created under these conditions, and the request must be corrected and re-submitted before an order can be created.Error text and an error code will be provided in the ErrorList element.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LidbOrderResponse>    <Status>        <Code>400</Code>        <Description>Validation Failed. Please check your input parameters.</Description>    </Status>    <ErrorList>        <Error>            <Code>11007</Code>            <Description>No visibility supplied. Visibility must be one of the following - PUBLIC, PRIVATE</Description>        </Error>    </ErrorList>    <LidbOrder>        <LidbTnGroups>          <LidbTnGroup>            <TelephoneNumbers>              <TelephoneNumber>9199998830</TelephoneNumber>            </TelephoneNumbers>            <SubscriberInformation>Joes Garage</SubscriberInformation>            <UseType>RESIDENTIAL</UseType>          </LidbTnGroup>        </LidbTnGroups>    </LidbOrder></LidbOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnoptions/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about a TN Option Order with specified ID.",
        "operationId" : "getLineOptionOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the TN Option Orders query provides a broad range of information about the TN Option Order identified in the URL.  Included amongst the information is:<ul><li>ErrorList - the errors discovered with codes and explanations</li><li>Warnings - the warnings discovered with explanations</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOptionOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TnOptionOrder> <OrderCreateDate>2016-01-15T11:22:58.789Z</OrderCreateDate> <AccountId>14</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>409033ee-88ec-43e3-85f3-538f30733963</OrderId> <LastModifiedDate>2016-01-15T11:22:58.969Z</LastModifiedDate> <ProcessingStatus>COMPLETE</ProcessingStatus> <TnOptionGroups> <TnOptionGroup> <CallingNameDisplay>on</CallingNameDisplay> <Sms>on</Sms> <TelephoneNumbers> <TelephoneNumber>2174101601</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> <TnOptionGroup> <CallingNameDisplay>off</CallingNameDisplay> <TelephoneNumbers> <TelephoneNumber>2174101602</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> <TnOptionGroup> <CallingNameDisplay>systemdefault</CallingNameDisplay> <FinalDestinationURI>sip:+12345678901@1.2.3.4:5060</FinalDestinationURI> <TelephoneNumbers> <TelephoneNumber>2174101603</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> </TnOptionGroups> <ErrorList/> <Warnings> <Warning> <TelephoneNumber>2174101601</TelephoneNumber> <Description>SMS is already Enabled or number is in processing.</Description> </Warning> </Warnings> </TnOptionOrder>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TnOptionOrderReportResponse> <ResponseStatus> <Description>The resource does not exist</Description> </ResponseStatus> </TnOptionOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnoptions" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve a list of the TN Option orders that are associated with the account. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getLineOptionOrder_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the TN Option Orders query provides a broad range of information about the TN Option Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOptionOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TnOptionOrders> <TotalCount>2</TotalCount> <TnOptionOrderSummary> <accountId>14</accountId> <CountOfTNs>2</CountOfTNs> <userId>jbm</userId> <lastModifiedDate>2016-01-15T12:01:14.363Z</lastModifiedDate> <OrderDate>2016-01-15T12:01:14.324Z</OrderDate> <OrderType>tn_option</OrderType> <OrderStatus>FAILED</OrderStatus> <OrderId>ddbdc72e-dc27-490c-904e-d0c11291b095</OrderId> </TnOptionOrderSummary> <TnOptionOrderSummary> <accountId>14</accountId> <CountOfTNs>3</CountOfTNs> <userId>jbm</userId> <lastModifiedDate>2016-01-15T11:22:58.969Z</lastModifiedDate> <OrderDate>2016-01-15T11:22:58.789Z</OrderDate> <OrderType>tn_option</OrderType> <OrderStatus>COMPLETE</OrderStatus> <OrderId>409033ee-88ec-43e3-85f3-538f30733963</OrderId> </TnOptionOrderSummary> </TnOptionOrders> <!-- OR --> <TnOptionOrders> <TotalCount>2</TotalCount> <TnOptionOrder> <OrderCreateDate>2016-01-15T12:01:14.324Z</OrderCreateDate> <AccountId>14</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>ddbdc72e-dc27-490c-904e-d0c11291b095</OrderId> <LastModifiedDate>2016-01-15T12:01:14.363Z</LastModifiedDate> <ProcessingStatus>FAILED</ProcessingStatus> <TnOptionGroups> <TnOptionGroup> <NumberFormat>10digit</NumberFormat> <RPIDFormat>10digit</RPIDFormat> <RewriteUser>testUser1</RewriteUser> <CallForward>6042661720</CallForward> <CallingNameDisplay>on</CallingNameDisplay> <Protected>true</Protected> <Sms>on</Sms> <FinalDestinationURI>sip:+12345678901@1.2.3.4:5060</FinalDestinationURI> <TelephoneNumbers> <TelephoneNumber>2018551020</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> <TnOptionGroup> <CallingNameDisplay>off</CallingNameDisplay> <Protected>false</Protected> <Sms>off</Sms> <TelephoneNumbers> <TelephoneNumber>2018551025</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> </TnOptionGroups> <ErrorList> <Error> <Code>5076</Code> <Description>Telephone number is not available.</Description> <TelephoneNumber>2018551025</TelephoneNumber> </Error> <Error> <Code>5076</Code> <Description>Telephone number is not available.</Description> <TelephoneNumber>2018551020</TelephoneNumber> </Error> </ErrorList> </TnOptionOrder> <TnOptionOrder> <OrderCreateDate>2016-01-15T11:22:58.789Z</OrderCreateDate> <AccountId>14</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>409033ee-88ec-43e3-85f3-538f30733963</OrderId> <LastModifiedDate>2016-01-15T11:22:58.969Z</LastModifiedDate> <ProcessingStatus>COMPLETE</ProcessingStatus> <TnOptionGroups> <TnOptionGroup> <CallingNameDisplay>on</CallingNameDisplay> <TelephoneNumbers> <TelephoneNumber>2174101601</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> <TnOptionGroup> <CallingNameDisplay>off</CallingNameDisplay> <TelephoneNumbers> <TelephoneNumber>2174101602</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> <TnOptionGroup> <CallingNameDisplay>systemdefault</CallingNameDisplay> <TelephoneNumbers> <TelephoneNumber>2174101603</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> </TnOptionGroups> <ErrorList/> </TnOptionOrder> </TnOptionOrders>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Create TN Option order to assign line features to the telephone number.The key data elements in the submission are - <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">  <tbody>    <tr>      <td>TnOptionGroups</td>      <td>A list of TnOptionGroups.</td>    </tr>    <tr>      <td>TnOptionGroup</td>      <td>Contains list of telephone numbers and set of TN options you want to assign to all TNs in the list.</td>    </tr>    <tr>        <td>CustomerOrderId</td>        <td>Optional value for Id set by customer. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</td>    </tr>  </tbody></table>There are TN Option values:<ul><li> TelephoneNumber - [ 10digit ] </li><li> CallingNameDisplay - [ on | off | <i>unchanged</i> | <i>systemDefault</i> ] </li><li> PortOutPasscode - [ alphanumeric string 4-10 characters | unchanged | systemDefault ] </li><li> NumberFormat - [ 10digit | 11digit | e164 | <i>unchanged</i> | <i>systemDefault</i> ] </li><li> RPIDFormat - [ 10digit | 11digit | e164 | <i>unchanged</i> | <i>systemDefault</i> ] </li><li> RewriteUser - [ string | <i>unchanged</i> | <i>systemDefault</i>] </li><li> CallForward - [ 10digit | <i>unchanged</i> | <i>systemDefault</i>] </li><li> Protected - [ true | false | <i>unchanged</i> | <i>systemDefault</i>] </li><li> Sms - [ on | off | <i>unchanged</i>] </li><li> FinalDestinationURI - [ string | <i>unchanged</i> | <i>systemDefault</i>] </li><ul>  <li>a 10 digit telephone number, or</li>  <li>a SIP URI ( without the sip: prefix )    <ul>      <li>in the form address-string@host IP:port, where </li>      <li>the host IP is an IPv4 address in the standard numerical n.n.n.n. form, and </li>      <li>the port is numeric, and optional</li>      <li>containing [a-z,A-Z,0-9], with ':', '.' and '@' to delimit the components of the overall string, and</li>      <li>less than 60 characters long.</li>    </ul>  </li></ul><li> NNID [ integer | <i>unchanged</i> | <i>systemDefault</i> ] </li><li> ESPID [ string | <i>unchanged</i> | <i>systemDefault</i> ] </li><li> A2pSettings </li><ul>  <li>MessageClass - [ string {1,64} ] </li>  <li>CampaignId - [ string {1,64} ] </li>  <li>Action - [ <i>asSpecified</i> | <i>off</i> | <i>unchanged</i> | <i>systemDefault</i> ] </li></ul><li> Origination Route Plan </li><ul>  <li>Route List</li>    <ul>    <li>Endpoint</li>      <ul>        <li>a NANP telephone number, or</li>        <li>a SIP URI, or</li>        <li>a IPv4 address, or </li>        <li>a Fully Qualified Domain name(FQDN) </li>      </ul>    <li>Priority</li>    <li>Weight</li>    </ul>  <li>Action - [ <i>asSpecified</i> | <i>off</i> | <i>unchanged</i>] </li></ul></ul>Where:  <ul>    <li>for A2pSettings attribute</li>    <table style=\"text-align: left; width: 80%;\"           border=\"1\" cellpadding=\"2\" cellspacing=\"0\">        <tbody>        <tr>          <th>Number attribute</th>          <th>Action value</th>          <th>Describe of action</th>        </tr>        <tr>          <td>LongCode</td>          <td><i>systemDefault</i></td>          <td>Removes the per-TN A2P attributes, and it reverts to the Location/SIP Peer characteristics. Any values for Class or Campaign ID are not valid</td>        </tr>        <tr>          <td>LongCode</td>          <td><i>asSpecified</i></td>          <td>Sets the message class and campaign ID - this is the default if unspecified</td>        </tr>        <tr>          <td>LongCode</td>          <td><i>off</i></td>          <td>Will set the TN as a 'P' TN. Any values for Class or Campaign ID are not valid</td>        </tr>        <tr>          <td>LongCode</td>          <td><i>unchanged</i></td>          <td>Do nothing with respect to A2P</td>        </tr>        <tr>          <td>TollFree</td>          <td><i>systemDefault</i></td>          <td>Removes the per-TN A2P attributes, and it reverts to the Location/SIP Peer characteristics. Any values for Class or Campaign ID are not valid</td>        </tr>        <tr>          <td>TollFree</td>          <td><i>asSpecified</i></td>          <td>Sets the message class and campaign ID - this is the default if unspecified</td>        </tr>        <tr>          <td>TollFree</td>          <td><i>off</i></td>          <td>If the Togglz value is set to 'on' this is invalid for Toll Free telephone numbers. Any values for Class or Campaign ID in the payload are invalid. If the Togglz value is set to off this behaves like and A2P TN, where the characteristics of the TNs is set to 'P'</td>        </tr>        <tr>          <td>TollFree</td>          <td><i>unchanged</i></td>          <td>Do nothing with respect to A2P</td>        </tr>        </tbody>    </table>    <li>for Origination Route plan attribute</li>    <table style=\"text-align: left; width: 80%;\"           border=\"1\" cellpadding=\"2\" cellspacing=\"0\">        <tbody>        <tr>          <th>Action value</th>          <th>Describe of action</th>        </tr>        <tr>          <td>asSpecified</td>          <td>Creates/updates the origination route plan for the TN with route plan details provided in the request </td>        </tr>        <tr>          <td>off</td>          <td>Removes the origination route plan for the TN. Route list is the request must be empty</td>        </tr>        <tr>          <td>unchanged</td>          <td>Doesn't update/create the origination route plan, even when route plan details exist in the request</td>        </tr>        </tbody>    </table>    <ul>      <li> Origination route plan is validated against CallForward and RewriteUser</li>        <ul>          <li type=\"square\">Route plan and CallForward cannot co-exist. Order is accepted but will respond with error messages on GET.</li>          <li type=\"square\">Route plan and RewriteUser cannot co-exist. Order is accepted but will respond with error messages on GET.</li>        </ul>    </ul>    <li>for other attribute</li>    <ul>      <li type=\"square\"> <i>systemDefault</i> - implies that the element profile value should be removed so that the TN changes back to the default system behavior;</li>      <li type=\"square\"> <i>unchanged</i> - the value should remain unchanged - implies a read before write model.</li>      <li type=\"square\"><u>Leaving the element out of the payload is equivalent to <i>unchanged</i>.</u></li>    </ul>  </ul>",
        "operationId" : "createOrder_5",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TnOptionOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created <br> A 201 response indicates that an order has been created.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TnOptionOrderResponse> <TnOptionOrder> <OrderCreateDate>2016-01-15T12:01:14.324Z</OrderCreateDate> <AccountId>14</AccountId> <CreatedByUser>jbm</CreatedByUser> <OrderId>ddbdc72e-dc27-490c-904e-d0c11291b095</OrderId> <LastModifiedDate>2016-01-15T12:01:14.324Z</LastModifiedDate> <ProcessingStatus>RECEIVED</ProcessingStatus> <TnOptionGroups> <TnOptionGroup> <NumberFormat>10digit</NumberFormat> <RPIDFormat>10digit</RPIDFormat> <RewriteUser>testUser1</RewriteUser> <CallForward>6042661720</CallForward> <CallingNameDisplay>on</CallingNameDisplay> <Protected>true</Protected> <Sms>on</Sms> <TelephoneNumbers> <TelephoneNumber>2018551020</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> <TnOptionGroup> <CallingNameDisplay>off</CallingNameDisplay> <Protected>false</Protected> <Sms>off</Sms> <TelephoneNumbers> <TelephoneNumber>2018551025</TelephoneNumber> </TelephoneNumbers> </TnOptionGroup> </TnOptionGroups> <ErrorList/> </TnOptionOrder> </TnOptionOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request <br> A 400 response Indicates that the order could not be created.Error text and an error code will be provided in the ErrorList element.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TnOptionOrderResponse> <ResponseStatus> <ErrorCode>5081</ErrorCode> <Description>Number Format 'wrong' is invalid.</Description> </ResponseStatus> </TnOptionOrderResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict <br> A 409 response indicates that order could not be created.Error text and an error code will be provided in the ErrorList element.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TnOptionOrderResponse> <ResponseStatus> <ErrorCode>5200</ErrorCode> <Description>Origination route plan is not enabled for the account.</Description> </ResponseStatus> </TnOptionOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnoptions/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getLineOptionOrderHistory",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">        <tbody>            <tr>                <td>OrderModifiedDate</td>                <td>The date that the order history event happened</td>            </tr>            <tr>                <td>Status</td>                <td>The new state of the TN Option order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>            </tr>            <tr>                <td>Note</td>                <td>A Note or additional information included with the state change </td>           </tr>           <tr>                <td>Author</td>                <td>The user id that implemented the state change</td>            </tr>        </tbody>    </table>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOptionOrderHistoryResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/lsrorders/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the information associated with the specified lsr ID number.",
        "operationId" : "getOrder_6",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LsrOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>    <LsrOrder>        <CustomerOrderId>MyId5</CustomerOrderId>        <LastModifiedBy>System</LastModifiedBy>        <OrderCreateDate>2015-03-03T13:54:00.450Z</OrderCreateDate>        <AccountId>9999999</AccountId>        <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>        <LastModifiedDate>2015-03-03T14:07:19.926Z</LastModifiedDate>        <OrderStatus>FAILED</OrderStatus>        <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>        <Pon>testpon1002</Pon>        <PonVersion>0</PonVersion>        <RequestedFocDate>2015-11-15</RequestedFocDate>        <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>        <Subscriber>            <SubscriberType>BUSINESS</SubscriberType>            <BusinessName>BusinessName</BusinessName>            <AccountNumber>123463</AccountNumber>            <PinNumber>1231</PinNumber>            <ServiceAddress>                <HouseNumber>11</HouseNumber>                <StreetName>Park</StreetName>                <StreetSuffix>Ave</StreetSuffix>                <City>New York</City>                <StateCode>NY</StateCode>                <Zip>90025</Zip>            </ServiceAddress>        </Subscriber>        <ListOfTelephoneNumbers>            <TelephoneNumber>9192381467</TelephoneNumber>            <TelephoneNumber>9192381468</TelephoneNumber>        </ListOfTelephoneNumbers>        <LsrOrderErrors>            <LsrOrderError>                <Code>17008</Code>                <Description>                    FOC date cannot fall on a holiday                </Description>            </LsrOrderError>        </LsrOrderErrors>        <CountOfTNs>2</CountOfTNs>    </LsrOrder>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves a list of lsrorders.  Various query parameters can be used to filter the list of LSR Orders as documented below. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getOrder_7",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pon",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "the lsrorders have been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LsrOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LsrOrders>    <TotalCount>5</TotalCount>    <LsrOrderSummary>        <accountId>9999999</accountId>        <CountOfTNs>2</CountOfTNs>        <CustomerOrderId>FineCustomerid</CustomerOrderId>        <userId>team_ua</userId>        <lastModifiedDate>2015-03-02T09:10:16.193Z</lastModifiedDate>        <OrderType>lsr</OrderType>        <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>        <OrderStatus>PENDING</OrderStatus>        <ActualFocDate>2015-03-25</ActualFocDate>        <BillingTelephoneNumber>2526795000</BillingTelephoneNumber>        <CreatedByUser>lsrOnlyUser</CreatedByUser>        <OrderId>7d644c88-ef23-4307-96ab-20253666d0c7</OrderId>        <Pon>ATT-011515-324234</Pon>        <PonVersion>0</PonVersion>        <RequestedFocDate>2015-11-15</RequestedFocDate>    </LsrOrderSummary>    <!-- SNIP -->    <LsrOrderSummary>        <accountId>9999999</accountId>        <CountOfTNs>2</CountOfTNs>        <CustomerOrderId>MyId5</CustomerOrderId>        <lastModifiedDate>2015-03-03T14:07:19.926Z</lastModifiedDate>        <OrderType>lsr</OrderType>        <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>        <OrderStatus>FAILED</OrderStatus>        <Errors>            <Error>                <Code>17008</Code>                <Description>                    FOC date cannot fall on a holiday                </Description>            </Error>        </Errors>        <ActualFocDate>2015-03-25</ActualFocDate>        <BillingTelephoneNumber>2526795000</BillingTelephoneNumber>        <CreatedByUser>lsrOnlyUser</CreatedByUser>        <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>        <Pon>testpon1002</Pon>        <PonVersion>0</PonVersion>        <RequestedFocDate>2015-11-15</RequestedFocDate>    </LsrOrderSummary></LsrOrders>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "A POST creates a lsrorder request to initiate a port-out action.<br>The payload fields are described below...<br><table style=\"text-align: left; width: 80%;\"     border=\"1\" cellpadding=\"2\" cellspacing=\"2\">      <tbody>        <tr>          <td>Pon</td>          <td>The Pon is customer specified order indentifier field. Allowed alphanumeric and \"#\",\"-\",\"_\". Up to 25 characters long. (required).</td>        </tr>        <tr>          <td>CustomerOrderId</td>          <td>The CustomerOrderId is customer specified order indentifier field. Allowed alphanumeric, spaces and dashes. Up to 40 characters long. (optional).</td>        </tr>        <tr>          <td>SPID</td>          <td>Identifier used in porting process. If account is no multi-SPID option - default with account value, otherwise value is required. Up to 4 characters long. (required)</td>        </tr>        <tr>          <td>BillingTelephoneNumber</td>          <td>Non-tollfree 10 digit phone number (optional).</td>        </tr>        <tr>          <td>RequestedFocDate</td>          <td>optional (next day if not specified).</td>        </tr>        <tr>          <td>SubscriberType</td>          <td>Subscriber type. BUSINESS | RESEDENTIAL (optional) (RESEDENTIAL if not specified).</td>        </tr>        <tr>          <td>BusinessName</td>          <td>Subscriber business name for BUSINESS SubscriberType. Up to 25 characters long. (required BusinessName or LastName).</td>        </tr>        <tr>          <td>LastName</td>          <td>Subscriber last name for RESEDENTIAL SubscriberType. Up to 25 characters long. (required BusinessName or LastName).</td>        </tr>        <tr>          <td>FirstName</td>          <td>Subscriber first name for RESEDENTIAL SubscriberType. Up to 25 characters long. (optional).</td>        </tr>        <tr>          <td>MiddleInitial</td>          <td>Subscriber middle initial for RESEDENTIAL SubscriberType. 1 character (optional).</td>        </tr>                        <tr>          <td>AccountNumber</td>          <td>AccountNumber.  Alphanumeric, up to 32 characters. (optional).</td>        </tr>                        <tr>          <td>PinNumber</td>          <td>PinNumber. Alphanumeric, up to 10 characters. (optional).</td>        </tr>        <tr>          <td>AuthorizingPerson</td>          <td>AuthorizingPerson. Alphanumeric, up to 100 characters (required).</td>        </tr>        <tr>          <td>HousePrefix</td>          <td>HousePrefix. Alphanumeric, up to 6 characters.</td>        </tr>        <tr>          <td>HouseNumber</td>          <td>HouseNumber. Alphanumeric, up to 45 characters  (required).</td>        </tr>        <tr>          <td>HouseSuffix</td>          <td>HouseSuffix. Alphanumeric, up to 45 characters.</td>        </tr>        <tr>          <td>PreDirectional</td>          <td>PreDirectional. Alphanumeric, up to 2 characters.</td>        </tr>        <tr>          <td>StreetName</td>          <td>StreetName. Alphanumeric, up to 200 characters  (required).</td>        </tr>        <tr>          <td>StreetSuffix</td>          <td>StreetSuffix. Alphanumeric, up to 45 characters.</td>        </tr>        <tr>          <td>PostDirectional</td>          <td>PostDirectional. Alphanumeric, up to 2 characters.</td>        </tr>        <tr>          <td>AddressLine2</td>          <td>AddressLine2. Alphanumeric, up to 200 characters.</td>        </tr>        <tr>          <td>County</td>          <td>County. Alphanumeric, up to 45 characters.</td>        </tr>        <tr>          <td>City</td>          <td>City. Alphanumeric, up to 100 characters  (required).</td>        </tr>        <tr>          <td>StateCode</td>          <td>StateCode. Alphanumeric, 2 characters  (required).</td>        </tr>        <tr>          <td>Zip</td>          <td>Zip code. Allowed formats: 5 numbers, 5+4 or Canadian  (required).</td>        </tr>        <tr>          <td>ListOfTelephoneNumbers</td>          <td>List of tns to be processed  (required).</td>        </tr>        </tbody>    </table>",
        "operationId" : "createLsrOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LsrOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The 201 response indicates that lsrorder request has been successfully created.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LsrOrderResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LsrOrderResponse>    <LsrOrder>        <OrderId>afce454a-4e89-4753-9f58-a442ebc7b142</OrderId>        <CustomerOrderId>FineCustomerid</CustomerOrderId>        <LastModifiedBy>team_ua</LastModifiedBy>        <OrderCreateDate>2015-02-06T12:57:45.607Z</OrderCreateDate>        <PeerId>0</PeerId>        <AccountId>9999999</AccountId>        <SPID>123C</SPID>        <LastModifiedDate>2015-02-09T13:07:57.286Z</LastModifiedDate>        <SiteId>0</SiteId>        <CreatedByUser>team_ua</CreatedByUser>        <OrderStatus>PENDING</OrderStatus>        <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>        <Pon>ATT-011515-324234</Pon>        <PonVersion>8</PonVersion>        <RequestedFocDate>2015-02-25 00:00:00</RequestedFocDate>        <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>        <Subscriber>            <SubscriberType>BUSINESS</SubscriberType>            <BusinessName>BusinessName</BusinessName>            <AccountNumber>123463</AccountNumber>            <PinNumber>1231</PinNumber>            <ServiceAddress>                <HouseNumber>11</HouseNumber>                <StreetName>Park</StreetName>                <StreetSuffix>Ave</StreetSuffix>                <City>New York</City>                <StateCode>NY</StateCode>                <Zip>90025</Zip>                <Country>United States</Country>            </ServiceAddress>        </Subscriber>        <ListOfTelephoneNumbers>            <TelephoneNumber>9192381468</TelephoneNumber>            <TelephoneNumber>9192381467</TelephoneNumber>            <TelephoneNumber>9192381469</TelephoneNumber>        </ListOfTelephoneNumbers>    </LsrOrder></LsrOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request shows that lsrorder request does not pass validation. Fror more info see LsrOrderErrors section in response.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LsrOrderResponse>  <ResponseStatus>      <ErrorCode>400</ErrorCode>      <Description>Lsr order doesn't pass validation. Please check your input parameters.</Description>  </ResponseStatus>  <LsrOrderErrors>      <LsrOrderError>          <Code>7324</Code>          <Description>The business name is too long. The business name should not be longer than 25 characters.</Description>      </LsrOrderError>      <LsrOrderError>          <Code>7318</Code>          <Description>Customer order ID is invalid. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</Description>      </LsrOrderError>      <LsrOrderError>          <Code>7203</Code>          <Description>The billing telephone number (BTN) is invalid</Description>      </LsrOrderError>      <LsrOrderError>          <Code>16005</Code>          <Description>Toll-free telephone numbers can be present in the lsr order.</Description>      </LsrOrderError>      <LsrOrderError>          <Code>16009</Code>          <Description>Lsr order contain duplicate telephone numbers: [9192381468, 9192381468]</Description>      </LsrOrderError>      <LsrOrderError>          <Code>16002</Code>          <Description>Order contains invalid tns: [8882381468].</Description>      </LsrOrderError>  </LsrOrderErrors>  <LsrOrder>      <CustomerOrderId>WrongCustomerOrderIdLogerThan40AndContains$%SpecSimbols</CustomerOrderId>      <LastModifiedBy>team_ua</LastModifiedBy>      <OrderCreateDate>2015-02-06T12:57:45.607Z</OrderCreateDate>      <AccountId>0</AccountId>      <CreatedByUser>team_ua</CreatedByUser>      <OrderStatus>FAILED</OrderStatus>      <BillingTelephoneNumber>919238466</BillingTelephoneNumber>      <Pon>ATT-011515-324234%$</Pon>      <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>      <Subscriber>          <SubscriberType>BUSINESS</SubscriberType>          <BusinessName>LongerThan25CharacterBusinessName</BusinessName>          <AccountNumber>123463</AccountNumber>          <PinNumber>1231</PinNumber>          <ServiceAddress>              <HouseNumber>11</HouseNumber>              <StreetName>Park</StreetName>              <StreetSuffix>Ave</StreetSuffix>              <City>New York</City>              <StateCode>NY</StateCode>              <Zip>90025</Zip>              <Country>United States</Country>          </ServiceAddress>      </Subscriber>      <ListOfTelephoneNumbers>          <TelephoneNumber>9192381468</TelephoneNumber>          <TelephoneNumber>9192381468</TelephoneNumber>          <TelephoneNumber>9192381468</TelephoneNumber>      </ListOfTelephoneNumbers>  </LsrOrder></LsrOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information associated with the specified lsr ID number.",
        "operationId" : "getOrder_8",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LsrOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LsrOrder>    <CustomerOrderId>MyId5</CustomerOrderId>    <LastModifiedBy>System</LastModifiedBy>    <OrderCreateDate>2015-03-03T13:54:00.450Z</OrderCreateDate>    <AccountId>9999999</AccountId>    <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>    <LastModifiedDate>2015-03-03T14:07:19.926Z</LastModifiedDate>    <OrderStatus>FAILED</OrderStatus>    <SPID>123C</SPID>    <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>    <Pon>testpon1002</Pon>    <PonVersion>0</PonVersion>    <RequestedFocDate>2015-11-15</RequestedFocDate>    <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>    <Subscriber>        <SubscriberType>BUSINESS</SubscriberType>        <BusinessName>BusinessName</BusinessName>        <AccountNumber>123463</AccountNumber>        <PinNumber>1231</PinNumber>        <ServiceAddress>            <HouseNumber>11</HouseNumber>            <StreetName>Park</StreetName>            <StreetSuffix>Ave</StreetSuffix>            <City>New York</City>            <StateCode>NY</StateCode>            <Zip>90025</Zip>        </ServiceAddress>    </Subscriber>    <ListOfTelephoneNumbers>        <TelephoneNumber>9192381467</TelephoneNumber>        <TelephoneNumber>9192381468</TelephoneNumber>    </ListOfTelephoneNumbers>    <LsrOrderErrors>        <LsrOrderError>            <Code>17008</Code>            <Description>                FOC date cannot fall on a holiday            </Description>        </LsrOrderError>    </LsrOrderErrors>    <CountOfTNs>2</CountOfTNs></LsrOrder>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lsrorders" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about one or more Lsr orders, where the orders are chosen based on the search parameters provided in the API Call.",
        "operationId" : "getOrders_6",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pon",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "btn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requestedFocDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actualFocDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the Lsr Orders query provides a broad range of information about the Lsr Orders found by the query, including the data associated with the order, the state of the order, and information about any error conditions encountered in processing of the order",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LsrOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LsrOrders>    <TotalCount>5</TotalCount>    <LsrOrderSummary>        <accountId>9999999</accountId>        <CountOfTNs>2</CountOfTNs>        <CustomerOrderId>FineCustomerid</CustomerOrderId>        <userId>team_ua</userId>        <lastModifiedDate>2015-03-02T09:10:16.193Z</lastModifiedDate>        <OrderType>lsr</OrderType>        <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>        <OrderStatus>PENDING</OrderStatus>        <ActualFocDate>2015-03-25</ActualFocDate>        <BillingTelephoneNumber>2526795000</BillingTelephoneNumber>        <CreatedByUser>lsrOnlyUser</CreatedByUser>        <OrderId>7d644c88-ef23-4307-96ab-20253666d0c7</OrderId>        <Pon>ATT-011515-324234</Pon>        <PonVersion>0</PonVersion>        <RequestedFocDate>2015-11-15</RequestedFocDate>    </LsrOrderSummary>    <!-- SNIP -->    <LsrOrderSummary>        <accountId>9999999</accountId>        <CountOfTNs>2</CountOfTNs>        <CustomerOrderId>MyId5</CustomerOrderId>        <lastModifiedDate>2015-03-03T14:07:19.926Z</lastModifiedDate>        <OrderType>lsr</OrderType>        <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>        <OrderStatus>FAILED</OrderStatus>        <Errors>            <Error>                <Code>17008</Code>                <Description>                    FOC date cannot fall on a holiday                </Description>            </Error>        </Errors>        <CreatedByUser>lsrOnlyUser</CreatedByUser>        <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>        <Pon>testpon1002</Pon>        <PonVersion>0</PonVersion>        <RequestedFocDate>2015-11-15</RequestedFocDate>    </LsrOrderSummary></LsrOrders>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/lsrorders/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the history of the specified lsr order.",
        "operationId" : "getOrderHistory_4",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LsrOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2015-03-02T15:36:31.835Z</OrderDate>        <Note>LSR has been received by the system and is being processed</Note>        <Author>lsrOnly</Author>        <Status>PENDING</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2015-03-02T15:37:33.457Z</OrderDate>        <Note>Port-out date has been set</Note>        <Status>FOC</Status>        <Difference>ActualFocDate : \"\" --&gt; 2015-06-27</Difference>    </OrderHistory></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LsrOrderReportResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></LsrOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders/{orderId}/history" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the history of the specified lsr order.",
        "operationId" : "getOrderHistory_5",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LsrOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2015-03-02T15:36:31.835Z</OrderDate>        <Note>LSR has been received by the system and is being processed</Note>        <Author>lsrOnly</Author>        <Status>PENDING</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2015-03-02T15:37:33.457Z</OrderDate>        <Note>Port-out date has been set</Note>        <Status>FOC</Status>        <Difference>ActualFocDate : \"\" --&gt; 2015-06-27</Difference>    </OrderHistory></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LsrOrderReportResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></LsrOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders/totals" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getTotalOrdersByStatus",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LongXMLWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/portins" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about one or more Port-in Orders (portins), where the orders are chosen based on the search parameters provided in the API Call. ",
        "operationId" : "getPortInOrders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sippeerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pon",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "btn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requestedFocDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actualFocDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bulkportinorderid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the Port-in Orders query provides a broad range of information about the Port-in Orders found by the query, including the data associated with the order, the state of the order, and information about any error conditions encountered in processing of the order",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortInOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><LNPResponseWrapper>    <TotalCount>20</TotalCount>    <lnpPortInfoForGivenStatus>        <accountId>2</accountId>        <CountOfTNs>1</CountOfTNs>        <lastModifiedDate>2014-02-10T12-52-27.021Z</lastModifiedDate>        <LNPLosingCarrierId>1537</LNPLosingCarrierId>        <LNPLosingCarrierName>Test Losing Carrier L3</LNPLosingCarrierName>        <OrderDate>2013-11-19T22-29-01.336Z</OrderDate>        <OrderId>7b08cec0-390b-4a27-a30f-3bcb8876cb8e</OrderId>        <!-- Is only visible if a port-in belongs to a bulk port-in -->        <BulkPortinOrderId>b5555555-c003-42a6-897c-a1de2ab01162</BulkPortinOrderId>        <ProcessingStatus>CANCELLED</ProcessingStatus>        <RequestedFOCDate>2013-11-25T13-00-00.000Z</RequestedFOCDate>        <userId>jbm</userId>        <VendorId>49</VendorId>        <VendorName>Bandwidth CLEC</VendorName>    </lnpPortInfoForGivenStatus>    <lnpPortInfoForGivenStatus>        <accountId>1</accountId>        <BillingTelephoneNumber>3125462291</BillingTelephoneNumber>        <CountOfTNs>1</CountOfTNs>        <lastModifiedDate>2014-02-04T19-41-15.313Z</lastModifiedDate>        <Errors>            <Error>                <Code>7300</Code>                <Description>                    The order cannot be modified because the order is awaiting a response from the losing carrier                </Description>            </Error>        </Errors>        <LNPLosingCarrierId>1536</LNPLosingCarrierId>        <LNPLosingCarrierName>Neustar Test Carrier</LNPLosingCarrierName>        <OrderId>792f12d4-2367-4282-9cec-7b4f92b75eeb</OrderId>        <!-- Is only visible if a port-in belongs to a bulk port-in -->        <BulkPortinOrderId>b5555555-c003-42a6-897c-a1de2ab01162</BulkPortinOrderId>        <ProcessingStatus>REQUESTED_SUPP</ProcessingStatus>        <RequestedFOCDate>2014-02-05T19-36-13.000Z</RequestedFOCDate>        <userId>jbm</userId>        <VendorId>49</VendorId>        <VendorName>Bandwidth CLEC</VendorName>        <PON>979E0122150001D5</PON>    </lnpPortInfoForGivenStatus>    <lnpPortInfoForGivenStatus> ... </lnpPortInfoForGivenStatus>    ... snip ...    <lnpPortInfoForGivenStatus>        <accountId>1</accountId>        <BillingTelephoneNumber>6882011401</BillingTelephoneNumber>        <CountOfTNs>1</CountOfTNs>        <lastModifiedDate>2014-02-16T13-51-06.417Z</lastModifiedDate>        <Errors>            <Error>                <Code>7205</Code>                <Description>                    Telephone number is already being processed on another order                </Description>            </Error>        </Errors>        <LNPLosingCarrierId>1536</LNPLosingCarrierId>        <LNPLosingCarrierName>Neustar Test Carrier</LNPLosingCarrierName>        <OrderDate>2014-02-16T13-51-05.697Z</OrderDate>        <OrderId>af1df8a9-4d6f-4d23-a7c5-ef7d1561af26</OrderId>        <ProcessingStatus>CANCELLED</ProcessingStatus>        <RequestedFOCDate>2014-02-17T13-51-06.056Z</RequestedFOCDate>        <userId>jbm</userId>        <VendorId>49</VendorId>        <VendorName>Bandwidth CLEC</VendorName>    </lnpPortInfoForGivenStatus></LNPResponseWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/portins/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the information associated with the specified port-in ID number.",
        "operationId" : "getPortInOrder",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortInOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <Errors>        <Code>7205</Code>        <Description>Telephone number is already being processed on another order</Description>    </Errors>    <ProcessingStatus>CANCELLED</ProcessingStatus>    <BulkPortinOrderId>b4e227b3-2caf-4546-9af7-849c60dce942</BulkPortinOrderId>    <EarliestEstimate>2016-03-25T21:15:00.000Z</EarliestEstimate>    <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>    <Subscriber>        <SubscriberType>BUSINESS</SubscriberType>        <FirstName>First</FirstName>        <LastName>Last</LastName>        <ServiceAddress>            <HouseNumber>11235</HouseNumber>            <StreetName>Back</StreetName>            <City>Denver</City>            <StateCode>CO</StateCode>            <Zip>27541</Zip>            <County>Canyon</County>            <Country>United States</Country>            <AddressType>Service</AddressType>        </ServiceAddress>    </Subscriber>    <WirelessInfo>        <AccountNumber>771297665AABC</AccountNumber>        <PinNumber>1234</PinNumber>    </WirelessInfo>    <TnAttributes>        <TnAttribute>Protected</TnAttribute>        <TnAttribute>External</TnAttribute>        <TnAttribute>Imported</TnAttribute>    </TnAttributes>    <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>    <ListOfPhoneNumbers>        <PhoneNumber>9194809871</PhoneNumber>    </ListOfPhoneNumbers>    <AccountId>20</AccountId>    <SiteId>2857</SiteId>    <PeerId>317771</PeerId>    <LosingCarrierSPID>9998</LosingCarrierSPID>    <LosingCarrierName>Mock Carrier</LosingCarrierName>    <LosingCarrierIsWireless>true</LosingCarrierIsWireless>    <VendorName>Bandwidth CLEC</VendorName>    <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>    <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>    <userId>jbm</userId>    <LastModifiedBy>jbm</LastModifiedBy>    <PartialPort>false</PartialPort>    <Immediately>false</Immediately>    <BillingType>PORTIN</BillingType></LnpOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/portins/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the history of the specified port-in order.",
        "operationId" : "getPortInOrderHistory",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortInOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2014-07-29T17:12:29.495Z</OrderDate>        <Note>LOA required</Note>        <Author>jbm</Author>        <Status>PENDING_DOCUMENTS</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-07-29T17:12:32.121Z</OrderDate>        <Note>Order has been created</Note>        <Author>System</Author>        <Status>SUBMITTED</Status>        <Difference>LoaDate : \"\" --&gt; Tue Jul 29 17:12:29 UTC 2014</Difference>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-07-29T17:15:31.241Z</OrderDate>        <Note>7999: E37 TN not found in PPS (PPS)</Note>        <Author>System</Author>        <Status>EXCEPTION</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-07-29T17:15:40.836Z</OrderDate>        <Note>Order waiting for activation</Note>        <Author>System</Author>        <Status>FOC</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-07-29T17:16:20.347Z</OrderDate>        <Note>Order is complete</Note>        <Author>System</Author>        <Status>COMPLETE</Status>    </OrderHistory></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/portouts" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about one or more Port-Out Orders (portins), where the orders are chosen based on the search parameters provided in the API Call. Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parameterized or complex searches.  As a result:* all query parameters are compatible with the exception of...** if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId** sippeerId and siteId are only compatible with searches that have a date range parameter.",
        "operationId" : "getPortOutOrders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requestedFocDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actualFocDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive response payload for the Port-out Orders query provides a broad range of information about the Port-out Orders found by the query, including the data associated with the order, the status of the order, and information about any error conditions encountered in processing of the order",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortOutOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><LNPResponseWrapper>    <TotalCount>1520</TotalCount>    <lnpPortInfoForGivenStatus>        <accountId>14</accountId>        <CompanyName>CWI Hosting</CompanyName>        <CountOfTNs>1</CountOfTNs>        <lastModifiedDate>2014-02-07T21-11-10.278Z</lastModifiedDate>        <ErrorCode>200</ErrorCode>        <ErrorMessage>Cancel pre foc port in successful.</ErrorMessage>        <FullNumber>3232017829</FullNumber>        <OrderId>7ff2652e-8ef3-4120-9df9-96f80b5bdcda</OrderId>        <ProcessingStatus>cancelled</ProcessingStatus>        <RequestedFOCDate>2114-02-07T00-00-00.000Z</RequestedFOCDate>        <userId>jbm</userId>        <VendorId>512E</VendorId>    </lnpPortInfoForGivenStatus>    <lnpPortInfoForGivenStatus>        <accountId>14</accountId>        <CompanyName>CWI Hosting</CompanyName>        <CountOfTNs>1</CountOfTNs>        <lastModifiedDate>2014-01-10T17-50-10.148Z</lastModifiedDate>        <ErrorCode>200</ErrorCode>        <ErrorMessage>Cancel pre foc port in successful.</ErrorMessage>        <FullNumber>2012001665</FullNumber>        <OrderId>7fd0682c-6cba-47fd-9cb1-1e4e60f3467c</OrderId>        <ProcessingStatus>cancelled</ProcessingStatus>        <RequestedFOCDate>2014-01-30T00-00-00.000Z</RequestedFOCDate>        <userId>jbm</userId>        <VendorId>512E</VendorId>    </lnpPortInfoForGivenStatus>    ... SNIP ...    <lnpPortInfoForGivenStatus>        <accountId>14</accountId>        <CompanyName>CWI Hosting</CompanyName>        <CountOfTNs>1</CountOfTNs>        <lastModifiedDate>2014-01-29T11-21-00.525Z</lastModifiedDate>        <ErrorCode>200</ErrorCode>        <ErrorMessage>Port out successful.</ErrorMessage>        <FullNumber>2052870789</FullNumber>        <OrderId>7fc7950b-8b36-4db6-8a5c-8c1280635048</OrderId>        <ProcessingStatus>complete</ProcessingStatus>        <RequestedFOCDate>2014-01-31T00-00-00.000Z</RequestedFOCDate>        <userId>Neustar</userId>        <VendorId>979E</VendorId>        <PON>14214124</PON>    </lnpPortInfoForGivenStatus></LNPResponseWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/portouts/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the information associated with the specified port-out ID number.",
        "operationId" : "getPortOutOrder",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed out to the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortOutOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <RequestedFocDate>2014-08-11T00:00:00Z</RequestedFocDate>    <ActualFocDate>2014-08-11T00:00:00Z</ActualFocDate>    <ListOfPhoneNumbers>        <PhoneNumber>2014087001</PhoneNumber>    </ListOfPhoneNumbers>    <AccountId>20</AccountId>    <SiteId>0</SiteId>    <OrderCreateDate>2014-08-05T19:55:04.954Z</OrderCreateDate>    <LastModifiedDate>2014-08-06T12:57:51.510Z</LastModifiedDate>    <userId>System</userId>    <PortOutStatus>CANCELLED</PortOutStatus>    <SPID>2857</SPID></LnpOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/removeImportedTnOrders/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about a removeImportedTnOrder with specified ID.",
        "operationId" : "getOrder_9",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveImportedTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <RemoveImportedTnOrder> <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate> <AccountId>9900012</AccountId> <CreatedByUser>sjm</CreatedByUser> <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId> <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate> <TelephoneNumbers> <TelephoneNumber>2106078250</TelephoneNumber> <TelephoneNumber>2109678273</TelephoneNumber> <TelephoneNumber>2109678331</TelephoneNumber> <TelephoneNumber>2109678337</TelephoneNumber> <TelephoneNumber>2266401468</TelephoneNumber> </TelephoneNumbers> <ProcessingStatus>PARTIAL</ProcessingStatus> <Errors> <Error> <Code>7518</Code> <Description>Telephone Number Not Active.</Description> <TelephoneNumbers> <TelephoneNumber>2262665583</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> </RemoveImportedTnOrder>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/removeImportedTnOrders/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about a removeImportedTnOrder with specified ID.",
        "operationId" : "getOrder_10",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveImportedTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <RemoveImportedTnOrder> <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate> <AccountId>9900012</AccountId> <CreatedByUser>sjm</CreatedByUser> <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId> <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate> <TelephoneNumbers> <TelephoneNumber>2106078250</TelephoneNumber> <TelephoneNumber>2109678273</TelephoneNumber> <TelephoneNumber>2109678331</TelephoneNumber> <TelephoneNumber>2109678337</TelephoneNumber> <TelephoneNumber>2266401468</TelephoneNumber> </TelephoneNumbers> <ProcessingStatus>PARTIAL</ProcessingStatus> <Errors> <Error> <Code>7518</Code> <Description>Telephone Number Not Active.</Description> <TelephoneNumbers> <TelephoneNumber>2262665583</TelephoneNumber> </TelephoneNumbers> </Error> </Errors> </RemoveImportedTnOrder>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/removeImportedTnOrders" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the removeImportedTnOrders requests for the given account ID. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getOrders_7",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sippeerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the removeImportedTnOrders query provides information about the orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully removed Telephone Numbers, and decriptions of any encountered errors.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveImportedTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <RemoveImportedTnOrders> <TotalCount>2</TotalCount> <RemoveImportedTnOrderSummary> <accountId>14</accountId> <CountOfTNs>1</CountOfTNs> <CustomerOrderId>DemoOrder</CustomerOrderId> <userId>systemUser</userId> <lastModifiedDate>2019-01-24T10:40:12.908Z</lastModifiedDate> <OrderDate>2019-01-24T10:40:12.907Z</OrderDate> <OrderType>remove_imported_tn_orders</OrderType> <OrderStatus>COMPLETE</OrderStatus> <OrderId>4f2d090b-ece7-49ab-9c40-06d1425c39c3</OrderId> </RemoveImportedTnOrderSummary> <RemoveImportedTnOrderSummary> <accountId>14</accountId> <CountOfTNs>1</CountOfTNs> <CustomerOrderId>DemoOrder</CustomerOrderId> <userId>systemUser</userId> <lastModifiedDate>2019-01-24T09:38:24.028Z</lastModifiedDate> <OrderDate>2019-01-24T09:38:24.028Z</OrderDate> <OrderType>remove_imported_tn_orders</OrderType> <OrderStatus>PARTIAL</OrderStatus> <OrderId>ca30ea6a-018a-4cae-9d49-3d419fefdbe3</OrderId> </RemoveImportedTnOrderSummary> </RemoveImportedTnOrders>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Creates a removeImportedTnOrders request to remove imported telephone numbers from the given site ID and sippeer ID as specified in the body. A successfully submitted order will have a status of \"PROCESSING\". A successfully completed order will have a status of \"COMPLETE\" if all of the telephone numbers were successfully removed and  \"PARTIAL\" if some of the telephone numbers were removed. A failed order with will have a staus of \"FAILED\" and no telephone numbers would have been removed.The elements supplied in the payloads are described in the following table:<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\">    <tbody>        <tr>            <td valign=\"top\">                <p>                    <strong>Parameter</strong>                </p>            </td>            <td valign=\"top\">                <p>                    <strong>Required</strong>                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    <strong>Description</strong>                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    accountId (URL Parameter)                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    The account ID for porting the numbers.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    CustomerOrderId                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    No                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    Internal customer order id for tracking the order.  Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.                </p>            </td>        </tr>        <tr>            <td valign=\"top\">                <p>                    TelephoneNumber                </p>            </td>            <td valign=\"top\">                <p align=\"center\">                    Yes                </p>            </td>            <td width=\"351\" valign=\"top\">                <p>                    Ten digit phone number with no dots or dashes. One or more is required. Use a PhoneNumber tag for each phone number in the list.                </p>            </td>        </tr>    </tbody></table>",
        "operationId" : "createOrder_4",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoveImportedTnOrdersPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The order has been created and an order ID will be specified in the payload and in the header.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <RemoveImportedTnOrderResponse> <RemoveImportedTnOrder> <CustomerOrderId>SJM000001</CustomerOrderId> <OrderCreateDate>2018-01-20T02:59:54.000Z</OrderCreateDate> <AccountId>9900012</AccountId> <CreatedByUser>smckinnon</CreatedByUser> <OrderId>b05de7e6-0cab-4c83-81bb-9379cba8efd0</OrderId> <LastModifiedDate>2018-01-20T02:59:54.000Z</LastModifiedDate> <TelephoneNumbers> <TelephoneNumber>9199918388</TelephoneNumber> <TelephoneNumber>4158714245</TelephoneNumber> <TelephoneNumber>4352154439</TelephoneNumber> <TelephoneNumber>4352154466</TelephoneNumber> </TelephoneNumbers> <ProcessingStatus>PROCESSING</ProcessingStatus> <Errors/> </RemoveImportedTnOrder> </RemoveImportedTnOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The order failed; one of the input parameters is invalid. The error text and an error code will be provided in the ErrorList element.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <RemoveImportedTnOrderResponse> <ProcessingStatus>FAILED</ProcessingStatus> <Errors> <Code>1234</Code> <Description>The customer order id is invalid.</Description> </Errors> </RemoveImportedTnOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/removeImportedTnOrders" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the removeImportedTnOrders requests for the given account ID.",
        "operationId" : "getOrders_8",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sippeerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the removeImportedTnOrders query provides information about the orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully removed Telephone Numbers, and decriptions of any encountered errors.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveImportedTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <RemoveImportedTnOrders> <TotalCount>2</TotalCount> <RemoveImportedTnOrderSummary> <accountId>14</accountId> <CountOfTNs>1</CountOfTNs> <CustomerOrderId>DemoOrder</CustomerOrderId> <userId>systemUser</userId> <lastModifiedDate>2019-01-24T10:40:12.908Z</lastModifiedDate> <OrderDate>2019-01-24T10:40:12.907Z</OrderDate> <OrderType>remove_imported_tn_orders</OrderType> <OrderStatus>COMPLETE</OrderStatus> <OrderId>4f2d090b-ece7-49ab-9c40-06d1425c39c3</OrderId> </RemoveImportedTnOrderSummary> <RemoveImportedTnOrderSummary> <accountId>14</accountId> <CountOfTNs>1</CountOfTNs> <CustomerOrderId>DemoOrder</CustomerOrderId> <userId>systemUser</userId> <lastModifiedDate>2019-01-24T09:38:24.028Z</lastModifiedDate> <OrderDate>2019-01-24T09:38:24.028Z</OrderDate> <OrderType>remove_imported_tn_orders</OrderType> <OrderStatus>COMPLETE</OrderStatus> <OrderId>ca30ea6a-018a-4cae-9d49-3d419fefdbe3</OrderId> </RemoveImportedTnOrderSummary> </RemoveImportedTnOrders>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/removeImportedTnOrders/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the history of the specified removeImportedTnOrder.",
        "operationId" : "getOrderHistory_6",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveImportedTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <OrderHistoryWrapper> <OrderHistory> <OrderDate>2015-06-16T14:03:10.225Z</OrderDate> <Note>Remove Imported TN order is received.</Note> <Author>admin</Author> <Status>RECEIVED</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.330Z</OrderDate> <Note>Remove Imported TN order is processing.</Note> <Author>admin</Author> <Status>PROCESSING</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.789Z</OrderDate> <Note>Remove Imported TN order is partial.</Note> <Author>admin</Author> <Status>PARTIAL</Status> </OrderHistory> </OrderHistoryWrapper>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/removeImportedTnOrders/{orderId}/history" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the history of the specified removeImportedTnOrder.",
        "operationId" : "getOrderHistory_7",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoveImportedTnOrdersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <OrderHistoryWrapper> <OrderHistory> <OrderDate>2015-06-16T14:03:10.225Z</OrderDate> <Note>Remove Imported TN order is received.</Note> <Author>admin</Author> <Status>RECEIVED</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.330Z</OrderDate> <Note>Remove Imported TN order is processing.</Note> <Author>admin</Author> <Status>PROCESSING</Status> </OrderHistory> <OrderHistory> <OrderDate>2015-06-16T14:03:10.789Z</OrderDate> <Note>Remove Imported TN order is partial.</Note> <Author>admin</Author> <Status>PARTIAL</Status> </OrderHistory> </OrderHistoryWrapper>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}/history" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getTnOrderHistory",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:<ul><li>the event date and time</li><li>a message describing the event</li><li>the user causing the event</li><li>the order status at the time of the event</li></ul>In the case of an order with no events other than creation, the payload will be empty.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>        <Note>Order backordered - awaiting additional numbers</Note>        <Author>System</Author>        <Status>BACKORDERED</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>        <Note>Order backordered - awaiting additional numbers</Note>        <Author>System</Author>        <Status>BACKORDERED</Status>        <Difference>CustomerOrderId : \"\" --&gt; hello</Difference>    </OrderHistory></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ErrorResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></ErrorResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about one or more New Number Orders (orders), where the orders are chosen based on the search parameters provided in the API Call. Not all search parameters are compatible with all other search parameters, due to the complexity of searching for historical records using highly parameterized or complex searches.  As a result:* all query parameters are compatible with the exception of...** if modifiedFromDate or modifiedToDate are specified, then the only other valid search parameters are accountId, sippeerId or siteId** sippeerId and siteId are only compatible with searches that have a date range parameter.",
        "operationId" : "getTnOrders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "invertAccountIdSearch",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sippeerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "orderIdFragment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityState",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "bandwidthPrime",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lastModifiedAfter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInResponse",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the New number Orders query provides a broad range of information about the New number Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.If the order successfully completes the TelephoneNumberDetails element will provide classification information on the Telephone Numbers that were included as part of the order.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><ResponseSelectWrapper>    <ListOrderIdUserIdDate>        <TotalCount>2122</TotalCount>        <OrderIdUserIdDate>            <accountId>9999999</accountId>            <CountOfTNs>0</CountOfTNs>            <lastModifiedDate>2014-02-25T16:02:43.195Z</lastModifiedDate>            <OrderDate>2014-02-25T16:02:43.195Z</OrderDate>            <orderId>abe36738-6929-4c6f-926c-88e534e2d46f</orderId>            <OrderStatus>FAILED</OrderStatus>            <TelephoneNumberDetails/>            <userId>team_ua</userId>        </OrderIdUserIdDate>        <OrderIdUserIdDate>            <accountId>9999999</accountId>            <CountOfTNs>0</CountOfTNs>            <lastModifiedDate>2014-02-25T16:02:40.628Z</lastModifiedDate>            <OrderDate>2014-02-25T16:02:40.628Z</OrderDate>            <orderId>18427880-33a9-4282-a196-f740c720bb9e</orderId>            <OrderStatus>COMPLETE</OrderStatus>            <TelephoneNumberDetails>                <States>                    <StateWithCount>                        <State>VA</State>                        <Count>1</Count>                    </StateWithCount>                </States>                <RateCenters>                    <RateCenterWithCount>                        <Count>1</Count>                        <RateCenter>GLOUCESTER</RateCenter>                    </RateCenterWithCount>                </RateCenters>                <Cities>                    <CityWithCount>                        <City>GLOUCESTER</City>                        <Count>1</Count>                    </CityWithCount>                </Cities>                <Tiers>                    <TierWithCount>                        <Tier>0</Tier>                        <Count>1</Count>                    </TierWithCount>                </Tiers>                <Vendors>                    <VendorWithCount>                        <VendorId>49</VendorId>                        <VendorName>Bandwidth CLEC</VendorName>                        <Count>1</Count>                    </VendorWithCount>                </Vendors>            </TelephoneNumberDetails>            <userId>team_ua</userId>        </OrderIdUserIdDate>        ...SNIP...        <OrderIdUserIdDate>            <accountId>9999999</accountId>            <CountOfTNs>0</CountOfTNs>            <lastModifiedDate>2014-02-25T16:02:39.345Z</lastModifiedDate>            <OrderDate>2014-02-25T16:02:39.345Z</OrderDate>            <orderId>d7eff0d8-303c-4f11-86f8-44740bbd4535</orderId>            <OrderStatus>FAILED</OrderStatus>            <userId>team_ua</userId>        </OrderIdUserIdDate>        <OrderIdUserIdDate>            <accountId>9999999</accountId>            <CountOfTNs>0</CountOfTNs>            <lastModifiedDate>2014-02-25T16:02:39.021Z</lastModifiedDate>            <OrderDate>2014-02-25T16:02:39.021Z</OrderDate>            <orderId>ba5b6297-139b-4430-aab0-9ff02c4362f4</orderId>            <OrderStatus>FAILED</OrderStatus>            <userId>team_ua</userId>        </OrderIdUserIdDate>    </ListOrderIdUserIdDate></ResponseSelectWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/orders/{orderId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve information about a specific New Number Order identified as the resource.",
        "operationId" : "getTnOrder",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload for the New number Orders query provides a broad range of information about the New number Order identified in the URL.  Included amongst the information is:<ul>    <li>CompletedQuantity - the number of TNs returned by the Order</li>    <li>ErrorList - the errors discovered with codes and explanations</li>    <li>FailedNumbers - a list of numbers that were not orderable</li>    <li>various dates</li>    <li>Order - the order payload to record the request</li>    <li>OrderStatus - the overall status of the order</li>    <li>CompletedNumbers - details on each number returned as part of the order, containing geographic and telecom information about that number</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderResponse>    <CompletedQuantity>2</CompletedQuantity>    <CreatedByUser>jbm</CreatedByUser>    <ErrorList>        <Error>            <Code>5005</Code>            <Description> The telephone number is unavailable for ordering : 8042100000</Description>            <TelephoneNumber>8042100000</TelephoneNumber>        </Error>    </ErrorList>    <FailedNumbers>        <FullNumber>8042100000</FullNumber>    </FailedNumbers>    <LastModifiedDate>2014-02-20T19:33:17.600Z</LastModifiedDate>    <OrderCompleteDate>2014-02-20T19:33:17.600Z</OrderCompleteDate>    <Order>        <OrderCreateDate>2014-02-20T19:33:17.504Z</OrderCreateDate>        <PeerId>303661</PeerId>        <BackOrderRequested>false</BackOrderRequested>        <ExistingTelephoneNumberOrderType>            <TelephoneNumberList>                <TelephoneNumber>8042105618</TelephoneNumber>                <TelephoneNumber>8042105760</TelephoneNumber>                <TelephoneNumber>8042100000</TelephoneNumber>            </TelephoneNumberList>        </ExistingTelephoneNumberOrderType>        <TnAttributes>                <TnAttribute>Protected</TnAttribute>                <TnAttribute>External</TnAttribute>                <TnAttribute>Imported</TnAttribute>        </TnAttributes>        <PartialAllowed>true</PartialAllowed>        <SiteId>743</SiteId>    </Order>    <OrderStatus>PARTIAL</OrderStatus>    <CompletedNumbers>        <TelephoneNumber>            <City>GLOUCESTER</City>            <LATA>248</LATA>            <RateCenter>GLOUCESTER</RateCenter>            <State>VA</State>            <FullNumber>8042105618</FullNumber>            <Tier>0</Tier>            <VendorId>49</VendorId>            <VendorName>Bandwidth CLEC</VendorName>        </TelephoneNumber>        <TelephoneNumber>            <City>GLOUCESTER</City>            <LATA>248</LATA>            <RateCenter>GLOUCESTER</RateCenter>            <State>VA</State>            <FullNumber>8042105760</FullNumber>            <Tier>0</Tier>            <VendorId>49</VendorId>            <VendorName>Bandwidth CLEC</VendorName>        </TelephoneNumber>    </CompletedNumbers>    <FailedQuantity>1</FailedQuantity></OrderResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TnOrderReportResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></TnOrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderId}/history" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve the history information associated with an order",
        "operationId" : "getOrderHistory_8",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history payload is a set of history records, each of which contains:<ul><li>the event date and time</li><li>a message describing the event</li><li>the user causing the event</li><li>the order status at the time of the event</li></ul>In the case of an order with no events other than creation, the payload will be empty.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>        <Note>Order backordered - awaiting additional numbers</Note>        <Author>System</Author>        <Status>BACKORDERED</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>        <Note>Order backordered - awaiting additional numbers</Note>        <Author>System</Author>        <Status>BACKORDERED</Status>        <Difference>CustomerOrderId : \"\" --&gt; hello</Difference>    </OrderHistory></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ErrorResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></ErrorResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/totals" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get New Number Order TN Count Totals",
        "description" : "TODO",
        "operationId" : "getTotalOrdersByStatus_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderId}/tns" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "returns a list of phone numbers associated with the ID of a given account.",
        "operationId" : "getTNsByOrderId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneNumbers>    <Count>1</Count>    <TelephoneNumber>8042105666</TelephoneNumber></TelephoneNumbers>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderId}/areaCodes" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the area codes of the phone numbers from the specified order.",
        "operationId" : "getReportByNPA",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneDetailsReports>    <TelephoneDetailsReport>        <AreaCode>888</AreaCode>        <Count>1</Count>    </TelephoneDetailsReport></TelephoneDetailsReports>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get New Number Orders",
        "description" : "GET is used to retrieve order ids and order details for previously attempted Telephone Number orders. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getTnOrders_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "userid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The Order retrieval request will return a list of the orders that match the criteria imposed by the provided query parameters.  The orders list contains a detailed description of the order.  Notice that the first elements of the payload provide link information that can be used to page through a paginated list of orders.  Pagination can be controlled by use of the size and page query parameters.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><ResponseSelectWrapper>    <ListOrderIdUserIdDate>        <TotalCount>122</TotalCount>        <Links>        <first>            <!-- Link=<https //api.inetwork.com 443/v1.0/accounts/9900012/orders?page=1&size=3>;rel=\"first\"; -->        </first>        <next>            <!-- Link=<https //api.inetwork.com 443/v1.0/accounts/9900012/orders?page=cbdcfc94-81b1-4ce9-8b6d-f8d6b85381ba&size=3>;rel=\"next\"; -->        </next>        </Links>        <OrderIdUserIdDate>            <CountOfTNs>1</CountOfTNs>            <lastModifiedDate>2013-12-20T06</lastModifiedDate>            <OrderDate>2013-12-20T06</OrderDate>            <orderId>c5d8d076-345c-45d7-87b3-803a35cca89b</orderId>            <OrderStatus>COMPLETE</OrderStatus>            <TelephoneNumberDetails>                <States>                    <StateWithCount>                        <State>VA</State>                        <Count>1</Count>                    </StateWithCount>                </States>                <RateCenters>                    <RateCenterWithCount>                        <Count>1</Count>                        <RateCenter>LADYSMITH</RateCenter>                    </RateCenterWithCount>                </RateCenters>                <Cities>                    <CityWithCount>                        <City>LADYSMITH</City>                        <Count>1</Count>                    </CityWithCount>                </Cities>                <Tiers>                    <TierWithCount>                        <Tier>0</Tier>                        <Count>1</Count>                    </TierWithCount>                </Tiers>                <Vendors>                    <VendorWithCount>                        <VendorId>49</VendorId>                        <VendorName>Bandwidth CLEC</VendorName>                        <Count>1</Count>                    </VendorWithCount>                </Vendors>            </TelephoneNumberDetails>            <userId>bwc_user</userId>        </OrderIdUserIdDate>        <OrderIdUserIdDate>            <CountOfTNs>0</CountOfTNs>            <lastModifiedDate>2013-11-05T17</lastModifiedDate>            <OrderDate>2013-11-05T17</OrderDate>            <orderId>27da9f39-81f3-44ed-80ce-05ddf2db612d</orderId>            <OrderStatus>FAILED</OrderStatus>            <userId>wandedemo_user</userId>        </OrderIdUserIdDate>        <OrderIdUserIdDate>            <CountOfTNs>1</CountOfTNs>            <lastModifiedDate>2013-12-11T20</lastModifiedDate>            <OrderDate>2013-12-11T20</OrderDate>            <orderId>2bab589e-2cda-453b-9999-8f35441d4a1a</orderId>            <OrderStatus>COMPLETE</OrderStatus>            <TelephoneNumberDetails>                <! ---- SNIP ---->            </TelephoneNumberDetails>            <userId>bwc_user</userId>        </OrderIdUserIdDate>    </ListOrderIdUserIdDate></ResponseSelectWrapper>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - malformed Query Parameters can result in a 400 Bad request.",
            "content" : {
              "application/xml" : { }
            }
          },
          "404" : {
            "description" : "Not Found - returned if the retrieval request cannot be satisfied, either because the order id cannot be found or the order id is not recognized.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/orders/{orderId}/tns" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the Telephone Numbers associated by the given order ID",
        "operationId" : "getTnsByOrderId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneNumbers>    <Count>1</Count>    <TelephoneNumber>8042105666</TelephoneNumber></TelephoneNumbers>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "GET all of the details associated with an identified order",
        "operationId" : "getTnOrder_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tndetail",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<OrderResponse>    <CompletedQuantity>1</CompletedQuantity>    <CreatedByUser>jbm</CreatedByUser>    <LastModifiedDate>2014-01-06T19:09:44.027Z</LastModifiedDate>    <OrderCompleteDate>2014-01-06T19:09:44.041Z</OrderCompleteDate>    <Order>        <CustomerOrderId>123456789</CustomerOrderId>        <Name>Area Code Order</Name>        <OrderCreateDate>2014-01-06T19:09:43.695Z</OrderCreateDate>        <PeerId>303716</PeerId>        <BackOrderRequested>false</BackOrderRequested>        <AreaCodeSearchAndOrderType>            <AreaCode>804</AreaCode>            <Quantity>1</Quantity>        </AreaCodeSearchAndOrderType>        <TnAttributes>                <TnAttribute>Protected</TnAttribute>                <TnAttribute>External</TnAttribute>                <TnAttribute>Imported</TnAttribute>        </TnAttributes>        <PartialAllowed>true</PartialAllowed>        <SiteId>743</SiteId>    </Order>    <OrderStatus>COMPLETE</OrderStatus>    <CompletedNumbers>        <TelephoneNumber>            <FullNumber>8042105666</FullNumber>        </TelephoneNumber>    </CompletedNumbers>    <FailedQuantity>0</FailedQuantity></OrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/orders" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get TN Orders by Site",
        "description" : "The GET method retrieves all the orders associated with the given site.",
        "operationId" : "getTnOrdersBySite",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "userid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ResponseSelectWrapper>    <ListOrderIdUserIdDate>        <TotalCount>47</TotalCount>        <Links>            <first>                Link=<http://api.qa.inetwork.com/iris/accounts/12346099/sites/743/orders?page=1&size=30>;rel=\"first\";            </first>            <next>                Link=<http://api.qa.inetwork.com/iris/accounts/12346099/sites/743/orders?page=fa7bc01a-cb4d-4eae-9621-560020f45105&size=30>;rel=\"next\";            </next>        </Links>        <OrderIdUserIdDate>            <CountOfTNs>1</CountOfTNs>            <userId>jbm</userId>            <lastModifiedDate>2014-01-06T19:09:44.027Z</lastModifiedDate>            <OrderType>new_number</OrderType>            <OrderDate>2014-01-06T19:09:43.695Z</OrderDate>            <orderId>13c97416-9eee-4da3-aff8-ba85d1297ef2</orderId>            <OrderStatus>COMPLETE</OrderStatus>            <TelephoneNumberDetails>                <States>                    <StateWithCount>                        <State>VA</State>                        <Count>1</Count>                    </StateWithCount>                </States>                <RateCenters>                    <RateCenterWithCount>                        <Count>1</Count>                        <RateCenter>GLOUCESTER</RateCenter>                    </RateCenterWithCount>                </RateCenters>                <Cities>                    <CityWithCount>                        <City>GLOUCESTER</City>                        <Count>1</Count>                    </CityWithCount>                </Cities>                <Tiers>                    <TierWithCount>                        <Tier>0</Tier>                        <Count>1</Count>                    </TierWithCount>                </Tiers>                <Vendors>                    <VendorWithCount>                        <VendorId>49</VendorId>                        <VendorName>Bandwidth CLEC</VendorName>                        <Count>1</Count>                    </VendorWithCount>                </Vendors>            </TelephoneNumberDetails>        </OrderIdUserIdDate>    </ListOrderIdUserIdDate></ResponseSelectWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Orders cannot be found for that site. Possible explanations:<ul>    <li>There are no orders associated with that site.</li>    <li>The given parameters are invalid.</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<Links> <first> Link=<http://api.qa.inetwork.com/iris/accounts/12346099/sites/3013/orders?page=1&size=300>;rel=\"first\"; </first> </Links>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/orders/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getTnOrderForSiteId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tndetail",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<OrderResponse> <CompletedQuantity>1</CompletedQuantity> <CreatedByUser>jbm</CreatedByUser> <LastModifiedDate>2014-01-06T19:09:44.027Z</LastModifiedDate> <OrderCompleteDate>2014-01-06T19:09:44.041Z</OrderCompleteDate> <Order> <CustomerOrderId>123456789</CustomerOrderId> <Name>Area Code Order</Name> <OrderCreateDate>2014-01-06T19:09:43.695Z</OrderCreateDate> <PeerId>303716</PeerId> <siteId>743</siteId> <BackOrderRequested>false</BackOrderRequested> <AreaCodeSearchAndOrderType> <AreaCode>804</AreaCode> <Quantity>1</Quantity> </AreaCodeSearchAndOrderType> <PartialAllowed>true</PartialAllowed> <SiteId>743</SiteId> </Order> <OrderStatus>COMPLETE</OrderStatus> <CompletedNumbers> <TelephoneNumber> <FullNumber>8042105666</FullNumber> </TelephoneNumber> </CompletedNumbers> <FailedQuantity>0</FailedQuantity> </OrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderId}/totals" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the total quantity of phone numbers from the specified order.",
        "operationId" : "getCountTNsByOrderId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneDetailsReports>    <TelephoneDetailsReport>        <NPA-NXX>888424</NPA-NXX>        <Count>1</Count>    </TelephoneDetailsReport></TelephoneDetailsReports>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderId}/npaNxx" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the Npa-Nxx of the phone numbers from the specified order.",
        "operationId" : "getReportByNPANXX",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnOrderHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneDetailsReports>    <TelephoneDetailsReport>        <NPA-NXX>888424</NPA-NXX>        <Count>1</Count>    </TelephoneDetailsReport></TelephoneDetailsReports>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/{productName}/tntotals" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getProductTnHistory",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductTnHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/totaltns" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve count of Telephone numbers for Sip Peer",
        "operationId" : "getSipPeerTelephoneNumbersCount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "feature",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTelephoneNumbersCountResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerTelephoneNumbersCountResponse>    <SipPeerTelephoneNumbersCount>        <SipPeerTelephoneNumbersCount>4</SipPeerTelephoneNumbersCount>        <CnamCount>4</CnamCount>        <LidbCount>0</LidbCount>    </SipPeerTelephoneNumbersCount></SipPeerTelephoneNumbersCountResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/totaltns" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve count of Telephone numbers for the indicated site",
        "operationId" : "getTotalTns",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The total count of Telephone Numbers associated with the site.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteTnTotalResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SiteTNsResponse>    <SiteTNs>        <TotalCount>26</TotalCount>    </SiteTNs></SiteTNsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tns" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "searchAccountTelephoneNumbers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sippeerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "fullnumber",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rateCenter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lata",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tier",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "npa",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxxX",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "host",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protected",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersHistoryResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getTelephoneNumbersDetailsByTelephoneNumbers",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TelephoneNumbersPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{fullnumber}/tndetails" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves detailed information about the phone number.TnAttributes - Does this telephone number is protected or not.",
        "operationId" : "getTelephoneNumberDetails",
        "parameters" : [ {
          "name" : "fullnumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - the detailed information about the phone number has been successfully retrieved and displayed.<br>TnAttributes is not required in the response.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumberDetailHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneNumberResponse> <TelephoneNumberDetails> <City>JERSEY CITY</City> <Lata>224</Lata> <State>NJ</State> <FullNumber>2018981023</FullNumber> <Tier>0</Tier> <VendorId>49</VendorId> <VendorName>Bandwidth CLEC</VendorName> <OnNetVendor>true</OnNetVendor> <RateCenter>JERSEYCITY</RateCenter> <Status>Inservice</Status> <AccountId>14</AccountId> <Site> <Id>479</Id> <Name>site_9b08f</Name> </Site> <SipPeer> <PeerId>500014</PeerId> <PeerName>a2750fad-3</PeerName> </SipPeer> <ServiceTypes> <ServiceType>Voice</ServiceType> <ServiceType>Messaging</ServiceType> </ServiceTypes> <LastModified>2014-07-30T11:29:37.000Z</LastModified> <InServiceDate>2014-07-30T11:29:37.000Z</InServiceDate> <Features> <E911> <LastE911OrderOutcome>SUCCESS</LastE911OrderOutcome> <SipPeerAddress>false</SipPeerAddress> <CallerName>Test CallerName</CallerName> <Address> <HouseNumber>901</HouseNumber> <StreetName>MAIN CAMPUS</StreetName> <StreetSuffix>DR</StreetSuffix> <City>RALEIGH</City> <StateCode>NC</StateCode> <Zip>27606</Zip> <PlusFour>5244</PlusFour> <Country>United States</Country> </Address> <EmergencyNotificationGroup> <Identifier>625e3ad9-c95e-4148-b2f7-d47a8dbdd0d9</Identifier> <Description>Building A</Description> </EmergencyNotificationGroup> </E911> <Lidb> <Status>Pending</Status> <SubscriberInformation>Fred</SubscriberInformation> <UseType>BUSINESS</UseType> <Visibility>PUBLIC</Visibility> </Lidb> <Dlda> <Status>Success</Status> <SubscriberType>BUSINESS</SubscriberType> <ListingType>LISTED</ListingType> <ListingName> <FirstName>Joe</FirstName> <LastName>Smith</LastName> </ListingName> <ListAddress>true</ListAddress> <Address> <HouseNumber>12</HouseNumber> <StreetName>ELM</StreetName> <City>New York</City> <StateCode>NY</StateCode> <Zip>10007</Zip> <Country>United States</Country> <AddressType>Dlda</AddressType> </Address> </Dlda> </Features> <OriginationRoutePlan> <Id>cfa6ef74-4944-47c2-b112-0cf4360b1fa5</Id> <Route> <Endpoint>6107622689</Endpoint> <Priority>1</Priority> <Weight>100</Weight> <EndpointType>TN</EndpointType> </Route> <Route> <Endpoint>sip:abcd@domain.com</Endpoint> <Priority>2</Priority> <Weight>100</Weight> <EndpointType>SIP</EndpointType> </Route> </OriginationRoutePlan> <MessagingSettings> <SmsEnabled>true</SmsEnabled> <AssignedNNRoute> <Nnid>101601</Nnid>> <Name>USA Mobility</Name> </AssignedNNRoute> </MessagingSettings> <TnAttributes> <TnAttribute>Protected</TnAttribute> <TnAttribute>External</TnAttribute> </TnAttributes> </TelephoneNumberDetails> </TelephoneNumberResponse> <!--Shared tn details--> <TelephoneNumberResponse> <TelephoneNumberDetails> <City>JERSEY CITY</City> <Lata>224</Lata> <State>NJ</State> <FullNumber>2018981023</FullNumber> <Tier>0</Tier> <VendorId>49</VendorId> <VendorName>Bandwidth CLEC</VendorName> <RateCenter>JERSEYCITY</RateCenter> <Status>Inservice</Status> <AccountId>14</AccountId> <Site> <Id>479</Id> <Name>site_9b08f</Name> </Site> <SipPeer> <PeerId>500014</PeerId> <PeerName>a2750fad-3</PeerName> </SipPeer> <ServiceTypes> <ServiceType>Voice</ServiceType> </ServiceTypes> <LastModified>2014-07-30T11:29:37.000Z</LastModified> <InServiceDate>2014-07-30T11:29:37.000Z</InServiceDate> <Features> <E911> <LastE911OrderOutcome>SUCCESS</LastE911OrderOutcome> <SipPeerAddress>false</SipPeerAddress> <CallerName>Test CallerName</CallerName> <Address> <HouseNumber>901</HouseNumber> <StreetName>MAIN CAMPUS</StreetName> <StreetSuffix>DR</StreetSuffix> <City>RALEIGH</City> <StateCode>NC</StateCode> <Zip>27606</Zip> <PlusFour>5244</PlusFour> <Country>United States</Country> </Address> <EmergencyNotificationGroup> <Identifier>625e3ad9-c95e-4148-b2f7-d47a8dbdd0d9</Identifier> <Description>Building A</Description> </EmergencyNotificationGroup> </E911> <Lidb> <Status>Pending</Status> <SubscriberInformation>Fred</SubscriberInformation> <UseType>BUSINESS</UseType> <Visibility>PUBLIC</Visibility> </Lidb> <Dlda> <Status>Success</Status> <SubscriberType>BUSINESS</SubscriberType> <ListingType>LISTED</ListingType> <ListingName> <FirstName>Joe</FirstName> <LastName>Smith</LastName> </ListingName> <ListAddress>true</ListAddress> <Address> <HouseNumber>12</HouseNumber> <StreetName>ELM</StreetName> <City>New York</City> <StateCode>NY</StateCode> <Zip>10007</Zip> <Country>United States</Country> <AddressType>Dlda</AddressType> </Address> </Dlda> </Features> <TnAttributes> <TnAttribute>Hosted</TnAttribute> </TnAttributes> <HostedTelephoneNumberDetails> <HostedTelephoneNumberDetail> <AccountId>12346160</AccountId> <Site> <Id>487</Id> <Name>site_Mw4FX</Name> </Site> <SipPeer> <PeerId>500026</PeerId> <PeerName>sippeeremhlO</PeerName> <IsDefaultPeer>true</IsDefaultPeer> </SipPeer> <ServiceTypes> <ServiceType>Hosted Messaging</ServiceType> </ServiceTypes> <MessagingSettings> <SmsEnabled>true</SmsEnabled> <CampaignId>fYtaiwCESO7Z7sgnc3smfMOg1JgMZ16FCQ1FtFosjHRUSkJVNWYW5p70gdVWGTGe</CampaignId> <MessageClass>V4578Qab0yppj6E4xumcMbmE5d6IPY9FWT37xI9gHt6AGoiEihurpYLNuV5EfbTn </MessageClass> <A2pState>overridden</A2pState> <AssignedNnRoute> <Nnid>2183991</Nnid> <Name>7ae5LXMn</Name> </AssignedNnRoute> </MessagingSettings> <TnAttributes> <TnAttribute>Hosted</TnAttribute> </TnAttributes> </HostedTelephoneNumberDetail> </HostedTelephoneNumberDetails> </TelephoneNumberDetails> </TelephoneNumberResponse> <!-- Non-NANP details --> <TelephoneNumberResponse> <TelephoneNumberDetails> <FullNumber>+33140289562</FullNumber> <Country>FR</Country> <TnType>geographic</TnType> <VendorId>49</VendorId> <VendorName>Bandwidth CLEC</VendorName> <OnNetVendor>true</OnNetVendor> <Status>Inservice</Status> <AccountId>12345678</AccountId> <Site> <Id>123</Id> <Name>site</Name> </Site> <SipPeer> <PeerId>500001</PeerId> <PeerName>sippeer</PeerName> <IsDefaultPeer>false</IsDefaultPeer> </SipPeer> <ServiceTypes> <ServiceType>Voice</ServiceType> </ServiceTypes> <LastModified>2020-03-03T15:30:07.000Z</LastModified> <InServiceDate>2020-03-03T15:30:07.518Z</InServiceDate> </TelephoneNumberDetails> </TelephoneNumberResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - failed to get detailed information about the current phone number.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneNumberResponse> <ResponseStatus> <ErrorCode>12512</ErrorCode> <Description>Telephone number '123456789' is not valid</Description> </ResponseStatus> </TelephoneNumberResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "tns/{fullnumber}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the telephone number's information.",
        "operationId" : "getTelephoneNumber",
        "parameters" : [ {
          "name" : "fullnumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - The information has been successfully retrieved and displayed.<br><h3>TN Attributes</h3><h4>status</h4><ul>    <li>Inservice: The TN is currently in use by the customer that owns the TN.</li>    <li>Available: The TN is available to be ordered. If the TN is \"protected\" only the account owning the TN can order it, otherwise it should be generally available.</li>    <li>Aging: The TN is disconnected by the customer owning the TN. At this time, the TN will go into aging for some period of time (typically 30 days) and the customer owning the TN can order it again. If the allotted time has passed and the TN is not ordered by the owning customer, the TN will go back to Available.</li>    <li>PortInPendingFoc: TN is in FOC and waiting for the FOC date.</li>    <li>Reserved: A TN is reserved by a customer to order at a later time.</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumberStatusWrapper"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneNumberResponse> <TelephoneNumber>2012035013</TelephoneNumber> <Status>Inservice</Status> <LastModifiedDate>2014-03-25 12:55:11.0</LastModifiedDate> <OrderCreateDate>2014-03-25T12:55:11.810Z</OrderCreateDate> <OrderId>cf79d3c3-21b7-4db7-9867-273a1867f934</OrderId> <OrderType>NEW_NUMBER_ORDER</OrderType> <InServiceDate>2014-03-25T12:55:11.810Z</InServiceDate> <SiteId>2409</SiteId> <AccountId>8000273</AccountId> </TelephoneNumberResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tns/{fullnumber}/ratecenter" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the rate centers associated with that telephone number.",
        "operationId" : "getTelephoneNumberRateCenter",
        "parameters" : [ {
          "name" : "fullnumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The rate centers have been successfully retrieved and displayed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumberDetailHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneNumberResponse> <TelephoneNumberDetails> <State>NJ</State> <RateCenter>HACKENSACK</RateCenter> </TelephoneNumberDetails> </TelephoneNumberResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tns/{fullnumber}/lata" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the lata associated with that telephone number.",
        "operationId" : "getTelephoneNumberLata",
        "parameters" : [ {
          "name" : "fullnumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The lata have been successfully retrieved.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumberDetailHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TelephoneNumberResponse> <TelephoneNumberDetails> <Lata>224</Lata> </TelephoneNumberDetails> </TelephoneNumberResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tns/{fullnumber}/availableNnRoutes" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves information about available NnRoutes for the phone number.",
        "operationId" : "getTelephoneNumberAvailableRoutes",
        "parameters" : [ {
          "name" : "fullnumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - the detailed information about available NnRoutes has been successfully retrieved and displayed.<br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumberAvailableNnRoutesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AvailableNNRoutes> <NNRoute> <Nnid>101601</Nnid>> <Name>USA Mobility</Name> </NNRoute> <NNRoute> <Nnid>102787</Nnid> <Name>Globe Wireless - Bandwidth.com - SVR</Name> </NNRoute> </AvailableNNRoutes>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - failed to get available NnRoutes information for the current phone number.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AvailableNNRoutes> <ResponseStatus> <ErrorCode>12512</ErrorCode> <Description>Telephone number '123456789' is not valid</Description> </ResponseStatus> </AvailableNNRoutes>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/inservicenumbers/totals" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Returns the total number of in-service numbers for the given account.",
        "operationId" : "getInserviceTelephoneNumbers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tier",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "lata",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "rateCenter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "areaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumberTotalsHistory"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<Quantity>    <Count>62</Count></Quantity>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/inservicenumbers" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves all the telephone numbers currently in service for the given site.<br>There are multiple parameters to search and sort the in-service numbers:<ul>    <li>LATA</li>    <li>Tier</li>    <li>Rate center</li>    <li>Area code</li>    <li>Npa-Nxx</li>    <li>State</li>    <li>City</li>    <li>Start Date</li>    <li>End date</li></ul>",
        "operationId" : "getInserviceTelephoneNumbers_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tier",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "lata",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "rateCenter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "areaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "the numbers have been successfully retrieved",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountTelephoneNumbersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TNs>    <TotalCount>54</TotalCount>    <Links>        <first>            <!---- SNIP ---->        </first>        <next>            <!---- SNIP ---->        </next>    </Links>    <TelephoneNumbers>        <Count>3</Count>        <TelephoneNumber>4352154855</TelephoneNumber>                    <!---- SNIP ---->        <TelephoneNumber>4352161523</TelephoneNumber>    </TelephoneNumbers></TNs>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/inservicenumbers" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves a list of in-service phone numbers associated with the account ID. There are multiple search parameters for searching for in-service numbers:<ul>    <li>size and page for pagination</li>    <li>area code</li>    <li>Npa-Nxx</li>    <li>LATA</li>    <li>state</li>    <li>rate center</li></ul>",
        "operationId" : "getInserviceTelephoneNumbers_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tier",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "lata",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "rateCenter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "areaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountTelephoneNumbersHistoryResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><TNs>    <TotalCount>59</TotalCount>    <Links>        <first> ( a link goes here ) </first>    </Links>    <TelephoneNumbers>        <Count>59</Count>        <TelephoneNumber>8043024183</TelephoneNumber>        <TelephoneNumber>8042121778</TelephoneNumber>        <TelephoneNumber>8042146066</TelephoneNumber>        <TelephoneNumber>8043814903</TelephoneNumber>        <TelephoneNumber>8043814905</TelephoneNumber>        <TelephoneNumber>8043814864</TelephoneNumber>        <TelephoneNumber>8043326094</TelephoneNumber>        <TelephoneNumber>8042121771</TelephoneNumber>        <TelephoneNumber>8043024182</TelephoneNumber>        <!-- SNIP -->                <TelephoneNumber>8043814900</TelephoneNumber>        <TelephoneNumber>8047672642</TelephoneNumber>        <TelephoneNumber>8043024368</TelephoneNumber>        <TelephoneNumber>8042147950</TelephoneNumber>        <TelephoneNumber>8043169931</TelephoneNumber>        <TelephoneNumber>8043325302</TelephoneNumber>    </TelephoneNumbers></TNs>"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Content - there are no numbers found using the search parameters",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountTelephoneNumbersHistoryResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found - The search parameters are invalid and prevent finding any content",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/inservicenumbers/{telephoneNumber}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "A GET on the number desired will return a 200 OK if the number is in service on the account, or a 404 not found.",
        "operationId" : "getInserviceTelephoneNumbers_3",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "telephoneNumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The telephone number is currently in service. NOTE that there is no payload; a 200 status simply means that the phone is indeed an inservice number.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InserviceNumberCheckResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "The telephone number is not currently in service.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/availableNumbers" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get a count of the available numbers on the system - structured in a variety of ways.",
        "operationId" : "getTelephoneNumbersDetailsHistory_1",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersDetailsHistory"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><TNs>    <TNs>        <State>AL</State>        <Tier>0</Tier>        <Count>5220</Count>    </TNs>    <TNs>        <State>AR</State>        <Tier>0</Tier>        <Count>655</Count>    </TNs>    <TNs>        <State>AZ</State>        <Tier>0</Tier>        <Count>8993</Count>    </TNs>    <TNs>...</TNs>    <TNs>...</TNs>    <!-- SNIP -->    <TNs>        <State>WV</State>        <Tier>0</Tier>        <Count>324</Count>    </TNs>    <TNs>        <State>WY</State>        <Tier>0</Tier>        <Count>454</Count>    </TNs></TNs>"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Content - there are no numbers found using the search parameters",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersDetailsHistory"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found - The search parameters are invalid and prevent finding any content",
            "content" : {
              "application/xml" : { }
            }
          },
          "500" : {
            "description" : "Internal Server Error - System error",
            "content" : {
              "application/xml" : { }
            }
          },
          "504" : {
            "description" : "Timeout - The system was not able to process your request in time",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/discnumbers" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves a list of disconnected numbers associated with the account. There are optional search parameters to limit the discNumbers payload",
        "operationId" : "getDisconnectedTelephones",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The disconnected numbers have been retrieved successfully.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountDisconnectedNumbersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TNs> <TotalCount>4</TotalCount> <Links> <first>Link=<http://api.qa.inetwork.com/iris/accounts/12346099/discNumbers?size=500&page=1>;rel=\"first\";</first> </Links> <TelephoneNumbers> <Count>2</Count> <TelephoneNumber>4158714245</TelephoneNumber> <TelephoneNumber>4352154439</TelephoneNumber> </TelephoneNumbers> </TNs>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/discnumbers/totals" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves a total number of disconnects.",
        "operationId" : "getDisconnectedTelephoneNumberTotals",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumberTotalsHistory"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<Quantity>    <Count>4</Count></Quantity>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/availableNumbers/totals" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get the total number of available TNs filtered by the search parameters.",
        "operationId" : "getAvailableTelephoneNumberTotals",
        "parameters" : [ {
          "name" : "tier",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "lata",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "rateCenter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "areaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the number of available TNs after the filter is applied.  Parameters that are not understood are ignored, and invalid search terms yield a payload with a count of 0",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumberTotalsHistory"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<Quantity>   <Count>2002</Count></Quantity>     "
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnportoutpasscodes" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about one or more Telephone Numbers (TNs) with port out passcode.",
        "operationId" : "getTnsPasscode",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sippeerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "fullnumber",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rateCenter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lata",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tier",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "npa",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxxX",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "host",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastModifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protected",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The descriptive payload provides information about the TN(s) and their Passcode.Links to assist in pagination are also provided.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnPortOutPasscodesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><TelephoneNumbersResponse>    <Links>        <first>Link=&lt;https://dashboard.bandwidth.com:443/v1.0/accounts/9500012/tnPortoutPasscodes?page=1&amp;size=500&gt;;rel=\"first\";</first>        <next>Link=&lt;https://dashboard.bandwidth.com:443/v1.0//accounts/9500012/tnPortoutPasscodes?page=2012082912&amp;size=500&gt;;rel=\"next\";</next>    </Links>    <TelephoneNumbers>         <TelephoneNumber>              <FullNumber>2018391000</FullNumber>              <Passcode>1234</Passcode>         </TelephoneNumber>         <TelephoneNumber>              <FullNumber>2024551000</FullNumber>              <Passcode>1234</Passcode>         </TelephoneNumber>    </TelephoneNumbers></TelephoneNumbersResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - any syntax error in the parameters will cause a 400 error with a payload similar to the payload in the example, with an error code and text description.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TelephoneNumbersResponse>    <ResponseStatus>        <ErrorCode>15610</ErrorCode>        <Description>Telephone Numbers cannot be found on account(s) 2002013</Description>            <TelephoneNumbers>                 <TelephoneNumber>2012035088</TelephoneNumber>            </TelephoneNumbers>    </ResponseStatus></TelephoneNumbersResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about one or more Telephone Numbers (TNs), where the TNs are specified in POST body.",
        "operationId" : "getTnsPortOutPasscodesByTelephoneNumbers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TelephoneNumbersPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The descriptive payload provides information about the TN(s) and their Passcode.The Payload also can contain <ErrorList> where invalid or non-existing  on account(s) TNs are specified.Pagination doesn't work in this case.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnPortOutPasscodesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TelephoneNumbersResponse>    <TelephoneNumberCount>4</TelephoneNumberCount>    <Links>        <first>Link=&lt;http://localhost:8080/v1.0/tns&gt;;rel=\"first\";</first>    </Links>    <TelephoneNumbers>         <TelephoneNumber>              <FullNumber>3172000285</FullNumber>              <Passcode>1234</Passcode>         </TelephoneNumber>         <TelephoneNumber>              <FullNumber>3172000207</FullNumber>              <Passcode>1234</Passcode>         </TelephoneNumber>    </TelephoneNumbers>    <ErrorList>        <Error>            <Code>15619</Code>            <Description>Passcode was not found on tn(s)</Description>            <TelephoneNumbers>                <TelephoneNumber>3172000000</TelephoneNumber>            </TelephoneNumbers>        </Error>        <Error>            <Code>15610</Code>            <Description>Telephone Numbers cannot be found on accounts</Description>            <TelephoneNumbers>                <TelephoneNumber>3172110285</TelephoneNumber>                <TelephoneNumber>3172100285</TelephoneNumber>            </TelephoneNumbers>        </Error>    </ErrorList></TelephoneNumbersResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - when in the POST body specified more then {pagination.maxsize} TNs.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TelephoneNumbersResponse>    <ResponseStatus>        <ErrorCode>15607</ErrorCode>        <Description>The count of Telephone numbers in POST body exceeds the maximum size of 2500</Description>    </ResponseStatus></TelephoneNumbersResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/inserviceNumbers" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves a list of in-service phone numbers associated with the account ID. There are multiple search parameters for searching for in-service numbers:<ul>    <li>size and page for pagination</li>    <li>area code</li>    <li>Npa-Nxx</li>    <li>LATA</li>    <li>state</li>    <li>rate center</li></ul>",
        "operationId" : "getTelephoneNumbersDetailsHistory",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersDetailsHistory"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><TNs>    <TotalCount>59</TotalCount>    <Links>        <first> ( a link goes here ) </first>    </Links>    <TelephoneNumbers>        <Count>59</Count>        <TelephoneNumber>8043024183</TelephoneNumber>        <TelephoneNumber>8042121778</TelephoneNumber>        <TelephoneNumber>8042146066</TelephoneNumber>        <TelephoneNumber>8043814903</TelephoneNumber>        <TelephoneNumber>8043814905</TelephoneNumber>        <TelephoneNumber>8043814864</TelephoneNumber>        <TelephoneNumber>8043326094</TelephoneNumber>        <TelephoneNumber>8042121771</TelephoneNumber>        <TelephoneNumber>8043024182</TelephoneNumber>        <!-- SNIP -->                <TelephoneNumber>8043814900</TelephoneNumber>        <TelephoneNumber>8047672642</TelephoneNumber>        <TelephoneNumber>8043024368</TelephoneNumber>        <TelephoneNumber>8042147950</TelephoneNumber>        <TelephoneNumber>8043169931</TelephoneNumber>        <TelephoneNumber>8043325302</TelephoneNumber>    </TelephoneNumbers></TNs>"
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Content - there are no numbers found using the search parameters",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumbersDetailsHistory"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found - The search parameters are invalid and prevent finding any content",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/uctrunks" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAccountTollFreeTotals",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UcTrunkingPremiseTrunksResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tftotals" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getAccountTollFreeTotals_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountTollFreeTotalsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/tftotals" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the total count of Toll-Free Telephone Numbers for the given site.",
        "operationId" : "getSiteTollFreeTotals",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteTollFreeTotalsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SipPeerTollFreeTotalsResponse>    <TollFreeTotals>        <TotalCount>0</TotalCount>    </TollFreeTotals></SipPeerTollFreeTotalsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/tftotals" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the total count of Toll-Free Telephone Numbers for the given SIP peer.",
        "operationId" : "getSipPeerTollFreeTotals",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTollFreeTotalsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SipPeerTollFreeTotalsResponse>    <TollFreeTotals>        <TotalCount>0</TotalCount>    </TollFreeTotals></SipPeerTollFreeTotalsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/totalSeats" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the total number of seats.",
        "operationId" : "getProductTnHistory_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The total number of seats has been successfully retrieved.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteTnTotalResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AccountTotalSeatsResponse>    <UcTrunkingSeats>        <TotalCount>2</TotalCount>    </UcTrunkingSeats></AccountTotalSeatsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The account ID given does not have UC Trunking associated with it.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AccountTotalSeatsResponse>    <ResponseStatus>        <ErrorCode>12017</ErrorCode>        <Description>Account '12346099' does not have product 'UcTrunking'</Description>    </ResponseStatus></AccountTotalSeatsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/totalSeats" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getProductTnHistory_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteTnTotalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/totalSeats" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the total number of seats.",
        "operationId" : "getProductTnHistory_3",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The total number of seats has been successfully retrieved.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteTnTotalResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AccountTotalSeatsResponse>    <UcTrunkingSeats>        <TotalCount>16</TotalCount>    </UcTrunkingSeats></AccountTotalSeatsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The account ID given does not have UC Trunking associated with it.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<AccountTotalSeatsResponse>    <ResponseStatus>        <ErrorCode>12017</ErrorCode>        <Description>Account '12346099' does not have product 'UcTrunking'</Description>    </ResponseStatus></AccountTotalSeatsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importTnChecker" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "Request portability information on a set of TNs",
        "operationId" : "checkImportTnAvailability",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportTnCheckerPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A successful check has been performed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ImportTnCheckerResponse>    <ImportTnCheckerPayload>        <TelephoneNumbers>            <TelephoneNumber>3032281000</TelephoneNumber>        </TelephoneNumbers>        <ImportTnErrors>            <ImportTnError>                <Code>19006</Code>                <Description>Bandwidth numbers cannot be imported by this account at this time.</Description>                <TelephoneNumbers>                    <TelephoneNumber>4109235436</TelephoneNumber>                    <TelephoneNumber>4104685864</TelephoneNumber>                </TelephoneNumbers>            </ImportTnError>        </ImportTnErrors>    </ImportTnCheckerPayload></ImportTnCheckerResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Response - there were errors in evaluating the body of the requestPotential errors include:<ul>  <li> List of TNs is empty.  <li> List of TNs is more than 5000 TNs.  <li> The account does not have the necessary (IMPORT_TNS) flag.  <li> TNs are invalid (they are not actual TNs, and there are duplicates).</ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ImportTnCheckerResponse>    <Errors>        <Code>7201</Code>        <Description>61746052083 is not a valid NANPA telephone number.</Description>    </Errors>    <Errors>        <Code>7201</Code>        <Description>61746052082 is not a valid NANPA telephone number.</Description>    </Errors></ImportTnCheckerResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importToAccount/{orderid}" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Import To Account Order",
        "description" : "Gets a single Import To Account order by its ID",
        "operationId" : "getAllTNsForImportOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tndetail",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportToAccountNumberOrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/tns" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Port In Order TNs",
        "description" : "Gets all telephone numbers associated with a Port In order",
        "operationId" : "getTNsByOrderId_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TelephoneNumberListWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/totals" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Port In Order TN Count",
        "description" : "Gets the quantity of telephone numbers in a single Port In order",
        "operationId" : "getCountTNsByOrderId_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LongXMLWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Search Port In Orders",
        "description" : "Gets a list of Port In orders which match the included criteria",
        "operationId" : "getPortins",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "customerOrderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pon",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "bulkportinorderid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LnpResponseListWrapper"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Creates a port-in request for the accountId, SiteId, and PeerId. If PeerId is omitted, the default PeerId (Location) for the Site (Sub-Account) will be used.  Once the payload is successfully submitted, the order will temporarily have a status of  \"PENDING_DOCUMENTS\", then \"SUBMITTED\".<br><br>",
        "operationId" : "createLnpOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LnpOrder"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The order has been created and an order ID will be specified in the payload and in the header.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LnpOrderResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <OrderId>03f194d5-3932-4e9f-8ba1-03ef767985e5</OrderId>    <Status>        <Code>201</Code>        <Description>Order request received. Please use the order id to check the status of your order later.</Description>    </Status>    <ProcessingStatus>PENDING_DOCUMENTS</ProcessingStatus>    <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>    <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>    <Subscriber>        <SubscriberType>BUSINESS</SubscriberType>        <FirstName>First</FirstName>        <LastName>Last</LastName>        <ServiceAddress>            <HouseNumber>11235</HouseNumber>            <StreetName>Back</StreetName>            <City>Denver</City>            <StateCode>CO</StateCode>            <Zip>27541</Zip>            <County>Canyon</County>            <Country>United States</Country>        </ServiceAddress>    </Subscriber>    <WirelessInfo>        <AccountNumber>771297665AABC</AccountNumber>        <PinNumber>1234</PinNumber>    </WirelessInfo>    <TnAttributes>            <TnAttribute>Protected</TnAttribute>            <TnAttribute>External</TnAttribute>            <TnAttribute>Imported</TnAttribute>    </TnAttributes>    <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>    <NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>    <ListOfPhoneNumbers>        <PhoneNumber>9194809871</PhoneNumber>    </ListOfPhoneNumbers>    <Triggered>true</Triggered></LnpOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The order failed; one of the input parameters is invalid.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <Status>        <Code>400</Code>        <Description>Validation Failed. Please check your input parameters.</Description>    </Status>    <Errors>        <Code>7309</Code>        <Description>The site id was not supplied or is invalid.</Description>    </Errors>    <Errors>        <Code>7312</Code>        <Description>The sippeer id is invalid.</Description>    </Errors>    <Errors>        <Code>7398</Code>        <Description>Protected status is not available for numbers in off-net rate centers.</Description>    </Errors>    <ProcessingStatus>EXCEPTION</ProcessingStatus>    <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>    <Subscriber>        <SubscriberType>BUSINESS</SubscriberType>        <FirstName>First</FirstName>        <LastName>Last</LastName>        <ServiceAddress>            <HouseNumber>11235</HouseNumber>            <StreetName>Back</StreetName>            <City>Denver</City>            <StateCode>CO</StateCode>            <Zip>27541</Zip>            <County>Canyon</County>            <Country>United States</Country>        </ServiceAddress>    </Subscriber>    <WirelessInfo>        <AccountNumber>771297665AABC</AccountNumber>        <PinNumber>1234</PinNumber>    </WirelessInfo>    <TnAttributes>            <TnAttribute>Protected</TnAttribute>            <TnAttribute>External</TnAttribute>            <TnAttribute>Imported</TnAttribute>    </TnAttributes>    <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>    <NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>    <ListOfPhoneNumbers>        <PhoneNumber>9194809871</PhoneNumber>    </ListOfPhoneNumbers>    <Triggered>true</Triggered></LnpOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Port In Order Details",
        "description" : "Gets detailed information about a single Port In order",
        "operationId" : "getLnpObjectById",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LnpOrderResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "It is possible to change (\"SUPP\" in LNP terms) an existing LNP order.  This is done via a PUT on the existing order-id.Since many of the entries in an LNP Order cannot be changed after the initial order is placed the PUT on a porting order-id does *not* require that the full order payload is included.<br/>If SUPP is done to <strong>draft</strong> portin no validations will be applied except validation of tn list if at least 1 tn is provided.Items that can be included in a SUPP request include:<ul><li>CustomerOrderId</li><li>RequestedFocDate</li><li>BillingTelephoneNumber</li><li>NewBillingTelephoneNumber</li><li>AccountNumber</li><li>PinNumber</li><li>TnAttributes elements</li><li>Subscriber elements, including the subscriber type, the name elements, and the street address elements.  See the discussion below on ResetAddressFields</li><li>SiteId</li><li>PeerId</li><li>PartialPort, and</li><li>LoaAuthorizingPerson</li><li>ListOfPhoneNumbers</li><li>Triggered</li><li>Immediately</li></ul>Note: If the order ProcessingStatus is DRAFT, the rules about what can be changed are much more relaxed. Validation is performed when the ProcessingStatus is changed from DRAFT to SUBMITTED.<p>The AltSpid element can be modified if it is not configured at the system level.<p>List of phone numbers can be modified only for Automated on-net port type.<p><b>ProcessingStatus</b> - you can only provide this field with a value of SUBMITTED and only if the current ProcessingStatus of the port-in is DRAFT.<p><b>ResetAddressFields -</b> As stated above the general approach to handling <i>this</i> API call is to replace the elements included in the request body, and leave other preexisting elements in an unmodified condition.  This is typical of a PATCH method, but because of our commitment to backwards compatibility we have elected not to \"Fix\" this behavior.As a result, providing only a few fields in the street address will result in an update to just those fields. This prevents removal of an element of the address.  The ResetAddressFields element is provided to resolve this issue.  The default setting of 'false' is to consistency with the initial implementation.The recommendation is to replace the entire street address.  This ensures that you are enforcing the street address content of the port-in order.  As part of this recommendation the ResetAddressFields element should be set to true, which will force the street address to be exactly what you specified in the payload.<br> <br> When a port-in is being processed by off-net partner Level 3 (you can tell this because /lnpchecker indicates a Port Type of AUTOMATEDOFFNET), the rules for what can be changed in a SUPP operation are more restrictive. If the order has NOT yet received FOC, you may change the following:<ul>  <li>RequestedFocDate</li>  <li>BillingTelephoneNumber</li>  <li>SubscriberType</li>  <li>Subscriber name elements or BusinessName, provided that SubscriberType is provided</li></ul>After FOC has been received, only RequestedFocDate may be changed.",
        "operationId" : "suppLnpOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "LocalOrderUpdate",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LnpOrderSupp"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LnpOrderResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <OrderId>b6080e4c-7ddf-4faa-bbd8-328a72de9297</OrderId>    <Status>        <Code>200</Code>        <Description>Supp request received. Please use the order id to check the status of your order later.</Description>    </Status>    <ProcessingStatus>REQUESTED_SUPP</ProcessingStatus>    <RequestedFocDate>2014-12-04T13:00:00Z</RequestedFocDate>    <BillingTelephoneNumber>8045030092</BillingTelephoneNumber>    <NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>    <Triggered>false</Triggered></LnpOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "List of telephone numbers cannot be changed due to validation errors.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <OrderId>c58fed09-a3fc-49b8-b461-2286146b73c1</OrderId>    <Status>        <Code>400</Code>        <Description>Validation Failed. Please check your input parameters.</Description>    </Status>    <Errors>        <Code>7331</Code>        <Description>Rate Center Not Present in Bandwidth Dashboard</Description>        <TelephoneNumbers>            <Tn>7138391156</Tn>        </TelephoneNumbers>    </Errors>    <Errors>        <Code>7495</Code>        <Description>Unable to change the TNs on this port. Please ensure that the new TNs are from the same losing carrier as the current TNs.</Description>        <TelephoneNumbers>            <Tn>2024551000</Tn>            <Tn>2018391156</Tn>            <Tn>2018391157</Tn>        </TelephoneNumbers>    </Errors>    <ProcessingStatus>EXCEPTION</ProcessingStatus>    <BillingTelephoneNumber>4352154438</BillingTelephoneNumber></LnpOrderResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "If portin is in DRAFT state the order will be deleted. Otherwise the call simply places the existing order in a cancelled state.Note that only a pending port-in order can be cancelled; if the order was previously cancelled or completed, then a DELETE will not be possible. ",
        "operationId" : "cancelLnpOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The port-in order has been successfully deleted/cancelled.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Order id is invalid, order does not exist or the port-in order is already processed, and therefore cannot be deleted.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <OrderId>2ffd0af4-7c54-40dc-9bfe-40f08b57e63a</OrderId>    <Status>        <Code>400</Code>        <Description>Validation Failed. Please check your input parameters.</Description>    </Status>    <Errors>        <Code>7304</Code>        <Description>The order is already complete and cannot be modified or cancelled</Description>    </Errors>    <ProcessingStatus>EXCEPTION</ProcessingStatus></LnpOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/totals" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Port Count Per Vendor",
        "description" : "Gets the number of Port In orders with the specified vendor and status",
        "operationId" : "getPortCountPerVendor",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "vendor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LongXMLWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/status" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Port Range",
        "description" : "Gets Port In orders which were last modified in the specified date range",
        "operationId" : "getAllPortsByAccountIdAndRange",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "startdate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enddate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LnpResponseListWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/history" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Port In Order History",
        "description" : "Gets history of changes to a Port In order",
        "operationId" : "getHistoryByOrderId",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/portins" : {
      "get" : {
        "tags" : [ "external" ],
        "summary" : "Get Site Port In Orders",
        "description" : "Gets a list of Port In orders for the specified site (sub-account)",
        "operationId" : "getSitePortInOrders",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LnpResponseListWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lnpchecker" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "Request portability information on a set of TNs ",
        "operationId" : "checkLnpAvailability",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "fullCheck",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NumberPortabilityRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A successful check has been performed. Note: For users of Enterprise Telephony accounts SupportedLosingCarriersand UnsupportedLosingCarriers will be omitted from the success output even when query parameterfullCheck has values of true, onnetportability, or offnetportability.<table>    <tr>        <th>Tag</th>        <th>Values</th>    </tr>    <tr>        <td>PortType</td>        <td> AUTOMATED, AUTOMATEDOFFNET, INTERNAL, MANUAL_ON_NET, MANUALOFFNET, MANUAL_TOLLFREE, MIXED</td>    </tr></table><br><ul>  <li><B>AUTOMATED</B> - A properly formatted /portins request with these TNs will be processed by Bandwidth and our porting vendor without requiring human intervention.</li>  <li><B>AUTOMATEDOFFNET</B> - A properly formatted /portins request with these TNs will be processed by Bandwidth and our off-net porting vendor without requiring human intervention.</li>  <li><B>INTERNAL</B> - The TNs will be moved from one Bandwidth account to another Bandwidth account. Internal ports are handled automatically, without human intervention.</li>  <li><B>MANUAL_ON_NET</B> - Some on-net ports, if they include too many TNs, must be handled manually. The limits vary based on a number of factors, but generally it is at least 50 TNs.</li>  <li><B>MANUALOFFNET</B> - For off-net vendors that do not support a porting API, or have a porting API that Bandwidth does not support, these port-ins will be handled manually.</li>  <li><B>MANUAL_TOLLFREE</B> - All toll-free port-ins are handled manually.</li>  <li><B>MIXED</B> - If the list of TNs supplied to /lnpchecker includes TNs that are categorized as more than one of the above Port Types, the resulting Port Type will be MIXED. If you plan to use /portins to port the TNs, you must break the TN list into separate /portins requests for each Port Type.</li></ul>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NumberPortabilityResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><NumberPortabilityResponse>    <PortType>AUTOMATED</PortType>    <SupportedRateCenters />    <UnsupportedRateCenters>        <RateCenterGroup>            <RateCenter>BALTIMORE</RateCenter>            <City>BALTIMORE</City>            <State>MD</State>            <LATA>238</LATA>            <TnList>                <Tn>4109255199</Tn>                <Tn>4104685864</Tn>            </TnList>        </RateCenterGroup>        <RateCenterGroup>            <RateCenter>SPARKSGLNC</RateCenter>            <City>SPARKS GLENCOE</City>            <State>MD</State>            <LATA>238</LATA>            <TnList>                <Tn>4103431313</Tn>                <Tn>4103431561</Tn>            </TnList>        </RateCenterGroup>    </UnsupportedRateCenters>    <PartnerSupportedRateCenters>                <!-- Only available for fullCheck=offnetportability -->        <RateCenterGroup>            <RateCenter>FT COLLINS</RateCenter>            <City>FORT COLLINS</City>            <State>CO</State>            <LATA>656</LATA>            <Tiers>                <Tier>1</Tier>            </Tiers>            <TnList>                <Tn>4109235436</Tn>            </TnList>        </RateCenterGroup>        <RateCenterGroup>            <Vendor>Level 3</Vendor>            <AutomatedPort>true</AutomatedPort> <!-- Only available when 'Automated Level 3 port-ins' is enabled -->            <RateCenter>BEASON</RateCenter>            <City>BEASON</City>            <State>IL</State>            <LATA>366</LATA>            <Tiers>                <Tier>3</Tier>            </Tiers>            <TnList>                <Tn>2174101103</Tn>            </TnList>        </RateCenterGroup>    </PartnerSupportedRateCenters>    <SupportedLosingCarriers>        <LosingCarrierTnList>            <LosingCarrierSPID>9998</LosingCarrierSPID>            <LosingCarrierName>Test Losing Carrier L3</LosingCarrierName>            <LosingCarrierIsWireless>false</LosingCarrierIsWireless>            <LosingCarrierAccountNumberRequired>false</LosingCarrierAccountNumberRequired>            <LosingCarrierMinimumPortingInterval>5</LosingCarrierMinimumPortingInterval>            <TnList>                <Tn>4109255199</Tn>                <Tn>4104685864</Tn>                <Tn>4103431313</Tn>                <Tn>4103431561</Tn>            </TnList>        </LosingCarrierTnList>        <LosingCarrierTnList>            <LosingCarrierSPID>7482</LosingCarrierSPID>            <LosingCarrierName>IntegraTelecom</LosingCarrierName>            <LosingCarrierIsWireless>false</LosingCarrierIsWireless>            <LosingCarrierAccountNumberRequired>false</LosingCarrierAccountNumberRequired>            <LosingCarrierMinimumPortingInterval>1</LosingCarrierMinimumPortingInterval>            <TnList>                <Tn>2174101103</Tn>            </TnList>        </LosingCarrierTnList>    </SupportedLosingCarriers>    <UnsupportedLosingCarriers /></NumberPortabilityResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Response - there were errors in evaluating the body of the requestPotential errors include: <ul><li> Telephone number is already being processed on another order.<li> Rate Center Not Present in Bandwidth Dashboard API.<li> Account not enabled for LNP </ul> ",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><NumberPortabilityResponse>    <Errors>        <Code>7201</Code>        <Description>61746052083 is not a valid NANPA telephone number.</Description>    </Errors>    <Errors>        <Code>7201</Code>        <Description>61746052082 is not a valid NANPA telephone number.</Description>    </Errors></NumberPortabilityResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/availabilityCheck/{telephonenumber}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "checkLnpAvailability_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "telephonenumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LnpAvailabilityCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portouts/{orderId}" : {
      "put" : {
        "tags" : [ "external" ],
        "description" : "Updates or cancels a port-out ID. THe payload to this method is similar to the GET on /accounts/{accountid}/portouts.<br>In the payload, CallbackUrl and InternalPort are optional additives.<br>There are also multiple options for the following:<table>    <tr>        <th>Option</th>        <th>Choices</th>    </tr>    <tr>        <td>Supplemental</td><td>NONE<br>CANCEL<br>UPDATE<br>OTHER<br></td>    </tr>    <tr>        <td>PortOutAction</td><td>NEW<br>SUPP<br>MODIFY<br>CANCEL<br></td>    </tr></table>",
        "operationId" : "updatePortOut",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManualPortOutRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "the update or cancellation was successful.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManualPortOutResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<PortOutResponse>    <Status>        <Code>200</Code>        <Description>Request is complete and results returned.</Description>    </Status></PortOutResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portouts" : {
      "put" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "suppPortOut",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManualPortOutRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManualPortOutResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Creates a port-out request.<br>In the payload, CallbackUrl and InternalPort are optional.<br>There are also multiple options for the following:<table>    <tr>        <th>Option</th>        <th>Choices</th>    </tr>    <tr>        <td>Supplemental</td><td>NONE<br>CANCEL<br>UPDATE<br>OTHER<br></td>    </tr>    <tr>        <td>PortOutAction</td><td>NEW<br>SUPP<br>MODIFY<br>CANCEL<br></td>    </tr>    <tr>        <td>InternalPort</td><td>true or false<br></td>    </tr></table>",
        "operationId" : "createPortOut",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManualPortOutRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The port-out request has been successfully received.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManualPortOutResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<PortOutResponse>    <Status>        <Code>200</Code>        <Description>Request is complete and results returned.</Description>    </Status></PortOutResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "cancelPortOut",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManualPortOutRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManualPortOutResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkportins/{orderId}/history" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the history of the specified bulk port-in order. Obtaining history for a draft bulk port-in is not supported.",
        "operationId" : "getPortInOrderHistory_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The history has been successfully retrieved and displayed in the payload. History is not supported for bulk port-ins in draft status.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<OrderHistoryWrapper>    <OrderHistory>        <OrderDate>2018-06-12T13:44:47.604Z</OrderDate>        <Note>Draft order has been created/updated</Note>        <Author>systemUser</Author>        <Status>DRAFT</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2018-06-12T13:49:02.328Z</OrderDate>        <Note>Draft order has been created/updated</Note>        <Author>systemUser</Author>        <Status>DRAFT</Status>        <Difference>SiteId : 0 --&gt; 743</Difference>    </OrderHistory>    <OrderHistory>        <OrderDate>2018-06-12T13:49:46.350Z</OrderDate>        <Note>Order has been submitted/updated</Note>        <Author>systemUser</Author>        <Status>IN_PROGRESS</Status>    </OrderHistory>    <OrderHistory>        <OrderDate>2018-06-12T13:51:13.855Z</OrderDate>        <Note>Order has been submitted/updated</Note>        <Author>systemUser</Author>        <Status>IN_PROGRESS</Status>        <Difference>SubscriberType : \"\" --&gt; residential</Difference>    </OrderHistory></OrderHistoryWrapper><!--The following response will be returned when the bulk port-in is in DRAFT state--><OrderHistoryWrapper>    <IrisStatus>        <Code>7710</Code>        <Description>History is not supported for bulk port-ins or individual port-ins in draft status.</Description>    </IrisStatus></OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the order id does not exist in the system",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortInHistoryResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></BulkPortInHistoryResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkportins/" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the Bulk Port-in requests for the given account ID. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId" : "getBulkPortins",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderDetails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "modifiedDateFrom",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modifiedDateTo",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of Bulk Port-ins have been successfully retrieved.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortinResponses> <TotalCount>3</TotalCount> <Links> <first>Link=&lt;http://admin.localhost:8080/iris/accounts/1/bulkPortins?page=1&amp;size=3&amp;shortPayload=true&gt;;rel=\"first\";</first> </Links> <BulkPortinResponse> <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate> <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate> <CreatedByUser>jbm</CreatedByUser> <LastModifiedBy>jbm</LastModifiedBy> <ProcessingStatus>[DRAFT|IN_PROGRESS|NEEDS_ATTENTION|CANCELLED|PARTIAL|COMPLETE]</ProcessingStatus> <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate> <CustomerOrderId>SJM00002</CustomerOrderId> <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson> <PortinList> <PortinOrderId>10f48fec-9db0-4f68-8bcb-c8a6a230a2d9</PortinOrderId> <PortinOrderId>059cf2d9-a004-4a88-866c-082c97fb7d5f</PortinOrderId> </PortinList> <Subscriber> <SubscriberType>[RESIDENTIAL|BUSINESS]</SubscriberType> <FirstName>First</FirstName> <LastName>Last</LastName> <!-- or 'BusinessName' --> <ServiceAddress> <HouseNumber>11235</HouseNumber> <StreetName>Back</StreetName> <City>Denver</City> <StateCode>CO</StateCode> <Zip>27541</Zip> <County>Canyon</County> <Country>United States</Country> <AddressType>Service</AddressType> </ServiceAddress> </Subscriber> <AccountNumber>771297665AABC</AccountNumber> <PinNumber>1234</PinNumber> <TnAttributes> <TnAttribute>Protected</TnAttribute> <TnAttribute>External</TnAttribute> <TnAttribute>Imported</TnAttribute> </TnAttributes> <BillingTelephoneNumber>9195551234</BillingTelephoneNumber> <SiteId>2857</SiteId> <PeerId>317771</PeerId> </BulkPortinResponse> <BulkPortinResponse> <!-- SNIP --> </BulkPortinResponse> <BulkPortinResponse> <!-- SNIP --> </BulkPortinResponse> <!-- SNIP --> </BulkPortinResponses>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Creates a Bulk Port-in request to be used as a template for a collections of individual port-in orders. This will be applied to port-ins that result from decomposing a collection of Telephone Numbers that span carriers, or have attributes that drive the decomposition into a number of individual port-in orders.<p>Upon a successfully-submitted payload, the order will have a status of \"DRAFT\", denoting that further modification to the template is expected.<p>Releated sub-resources are used to decompose the collection of Telephone Numbers into individual port-in orders.<p>The only valid value for the <ProcessingStatus> element in a POST is 'DRAFT', which is the default value.",
        "operationId" : "createBulkPortinsOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPortin"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The order has been created and an order ID will be specified in the payload and in the Location header.Note that it is possible to create an order that has errors in it.  Very little screening is done, because all fields are optional and very litle validation is done other than simple syntax checking.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortinResponse>    <BulkPortin>        <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>        <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>        <CreatedByUser>jbm</CreatedByUser>        <LastModifiedBy>jbm</LastModifiedBy>        <ProcessingStatus>DRAFT</ProcessingStatus>        <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>        <CustomerOrderId>SJM00002</CustomerOrderId>        <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>        <Subscriber>            <SubscriberType>[RESIDENTIAL|BUSINESS]</SubscriberType>            <FirstName>First</FirstName>            <LastName>Last</LastName>            <!-- or 'BusinessName' -->            <ServiceAddress>                <HouseNumber>11235</HouseNumber>                <StreetName>Back</StreetName>                <City>Denver</City>                <StateCode>CO</StateCode>                <Zip>27541</Zip>                <County>Canyon</County>                <Country>United States</Country>                <AddressType>Service</AddressType>            </ServiceAddress>        </Subscriber>        <AccountNumber>771297665AABC</AccountNumber>        <PinNumber>1234</PinNumber>        <TnAttributes>            <TnAttribute>Protected</TnAttribute>            <TnAttribute>External</TnAttribute>            <TnAttribute>Imported</TnAttribute>        </TnAttributes>        <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>        <SiteId>2857</SiteId>        <PeerId>317771</PeerId>    </BulkPortin></BulkPortinResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Order could not be processed and no order ID was created.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortinResponse>    <ResponseStatus>        <ErrorCode>7333</ErrorCode>        <Description>Porting is not enabled on the account.</Description>    </ResponseStatus></BulkPortinResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkportins/{orderid}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information associated with the specified port-in ID number.",
        "operationId" : "getById",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortinResponse>    <BulkPortin>        <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>        <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>        <CreatedByUser>jbm</CreatedByUser>        <LastModifiedBy>jbm</LastModifiedBy>        <ProcessingStatus>DRAFT</ProcessingStatus>        <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>        <CustomerOrderId>SJM00002</CustomerOrderId>        <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>        <Subscriber>            <SubscriberType>[RESIDENTIAL|BUSINESS]</SubscriberType>            <FirstName>First</FirstName>            <LastName>Last</LastName>            <!-- or 'BusinessName' -->            <ServiceAddress>                <HouseNumber>11235</HouseNumber>                <StreetName>Back</StreetName>                <City>Denver</City>                <StateCode>CO</StateCode>                <Zip>27541</Zip>                <County>Canyon</County>                <Country>United States</Country>                <AddressType>Service</AddressType>            </ServiceAddress>        </Subscriber>        <AccountNumber>771297665AABC</AccountNumber>        <PinNumber>1234</PinNumber>        <TnAttributes>            <TnAttribute>Protected</TnAttribute>            <TnAttribute>External</TnAttribute>            <TnAttribute>Imported</TnAttribute>        </TnAttributes>        <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>        <SiteId>2857</SiteId>        <PeerId>317771</PeerId>    </BulkPortin></BulkPortinResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The indicated Bulk Port-in order could not be found.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "It is possible to change (\"SUPP\" in LNP terms) an existing Bulk Port-in order.  This is done via a PUT or PATCH on the existing order-id.Since the Bulk Portin order resource acts as a template for portin orders in DRAFT status, any record can be changed at any time.The PUT will completely replace the existing Bulk Portin order with the payload of the PUT.The only valid value for the <ProcessingStatus> element in a PUT is 'DRAFT' where 'DRAFT' is the default value.If the portin orders contained within the Bulk Port are in DRAFT state, any field can be modified.  If any portin order in the Bulk Port is in any other state, normal SUPP rules apply, and the list of appropriate fields is smaller.",
        "operationId" : "updateBulkPortinsOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPortin"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortinResponse>    <BulkPortin>        <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>        <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>        <CreatedByUser>jbm</CreatedByUser>        <LastModifiedBy>jbm</LastModifiedBy>        <ProcessingStatus>DRAFT</ProcessingStatus>        <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>        <CustomerOrderId>SJM00002</CustomerOrderId>        <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>        <Subscriber>            <SubscriberType>[RESIDENTIAL|BUSINESS]</SubscriberType>            <FirstName>First</FirstName>            <LastName>Last</LastName>            <!-- or 'BusinessName' -->            <ServiceAddress>                <HouseNumber>11235</HouseNumber>                <StreetName>Back</StreetName>                <City>Denver</City>                <StateCode>CO</StateCode>                <Zip>27541</Zip>                <County>Canyon</County>                <Country>United States</Country>                <AddressType>Service</AddressType>            </ServiceAddress>        </Subscriber>        <AccountNumber>771297665AABC</AccountNumber>        <PinNumber>1234</PinNumber>        <TnAttributes>            <TnAttribute>Protected</TnAttribute>            <TnAttribute>External</TnAttribute>            <TnAttribute>Imported</TnAttribute>        </TnAttributes>        <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>        <SiteId>2857</SiteId>        <PeerId>317771</PeerId>    </BulkPortin></BulkPortinResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request. Invalid input.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortinResponse>    <ResponseStatus>        <Description>Please check your input parameters.</Description>    </ResponseStatus>    <PortinListErrors>        <PortinErrors>            <PortinOrderId>c358cb90-f1e6-4d72-92be-435411d50609</PortinOrderId>            <Errors>                <Error>                    <Description>The order cannot be modified because the order is awaiting a response from the losing carrier</Description>                    <ErrorCode>7300</ErrorCode>                </Error>            </Errors>        </PortinErrors>        <PortinErrors>            <PortinOrderId>cb57e5a0-c70d-4f24-a450-bab62e908cc6</PortinOrderId>            <Errors>                <Error>                    <Description>Unable to modify processing status for AUTOMATED port type</Description>                    <ErrorCode>7367</ErrorCode>                </Error>            </Errors>        </PortinErrors>    </PortinListErrors></BulkPortinResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The indicated Bulk Port-in order could not be found.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "Delete Bulk Port-in order with subdending port-ins. Deleting a bulk port-in allowed for 'DRAFT' state only.Deleting a bulk port-in will delete all DRAFT port-ins associated with it.If a bulk port-in contains a CANCELLED port-in (due to port decomposition finding non-portable TNs),that port-in will be disassociated with the bulk port-in, but not deleted.",
        "operationId" : "deleteBulkPortinsOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Bulk Port-in order has been successfully deleted.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request. Bulk Port-in order not in DRAFT state.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortinResponse>    <BulkPortin>        <Status>            <Code>7709</Code>            <Description>Bulk port-in with id d88763f4-8914-4301-bdca-6f409e4cd811 cannot be deleted since it is not in                draft status.            </Description>        </Status>    </BulkPortin></BulkPortinResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The indicated Bulk Port-in order could not be found.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "external" ],
        "description" : "It is possible to change (\"SUPP\" in LNP terms) an existing Bulk Port-in order.  This is done via a PUT or PATCH on the existing order-id.Since the Bulk Portin order resource acts as a template for portin orders in DRAFT status, any record can be changed at any time.The PATCH will replace elements of the referenced Bulk Portin order, but it will replace *only* the records included in the request payload.  Other elements will remain untouched.User may include delete attribute to whatever element which causes deletion of that element.For example: <CustomerOrderId delete=\"true\"/> will cause CustomerOrderId to be removed.The only valid values for the <ProcessingStatus> element in a PUT or PATCH are 'DRAFT' or 'IN&lowbar;PROGRESS' where 'DRAFT' is the default value.<b>Changing the &lt;ProcessingStatus&gt; to 'IN&lowbar;PROGRESS' will force all subtending portins to to begin processing</b>. This is only valid if there are subtending portins.Changing the fields in a Bulk Portin order will cause the system to reapply all changed values to the ports contained in the list of subtending portin orders.Note that if the portin orders contained within the Bulk Port are in DRAFT state, any field can be modified.  If any portin order in the Bulk Port is in any other state, normal SUPP rules apply, and the list of appropriate fields is smaller.",
        "operationId" : "patchBulkPortinsOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPortinPatch"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortinResponse>    <BulkPortin>        <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>        <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>        <CreatedByUser>jbm</CreatedByUser>        <LastModifiedBy>jbm</LastModifiedBy>        <ProcessingStatus>DRAFT</ProcessingStatus>        <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>        <CustomerOrderId>SJM00002</CustomerOrderId>        <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>        <Subscriber>            <SubscriberType>[RESIDENTIAL|BUSINESS]</SubscriberType>            <FirstName>First</FirstName>            <LastName>Last</LastName>            <!-- or 'BusinessName' -->            <ServiceAddress>                <HouseNumber>11235</HouseNumber>                <StreetName>Back</StreetName>                <City>Denver</City>                <StateCode>CO</StateCode>                <Zip>27541</Zip>                <County>Canyon</County>                <Country>United States</Country>                <AddressType>Service</AddressType>            </ServiceAddress>        </Subscriber>        <AccountNumber>771297665AABC</AccountNumber>        <PinNumber>1234</PinNumber>        <TnAttributes>            <TnAttribute>Protected</TnAttribute>            <TnAttribute>External</TnAttribute>            <TnAttribute>Imported</TnAttribute>        </TnAttributes>        <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>        <SiteId>2857</SiteId>        <PeerId>317771</PeerId>    </BulkPortin></BulkPortinResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request. Invalid input.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<BulkPortinResponse>    <ResponseStatus>        <Description>Please check your input parameters.</Description>    </ResponseStatus>    <PortinListErrors>        <PortinErrors>            <PortinOrderId>c358cb90-f1e6-4d72-92be-435411d50609</PortinOrderId>            <Errors>                <Error>                    <Description>The order cannot be modified because the order is awaiting a response from the losing carrier</Description>                    <ErrorCode>7300</ErrorCode>                </Error>            </Errors>        </PortinErrors>        <PortinErrors>            <PortinOrderId>cb57e5a0-c70d-4f24-a450-bab62e908cc6</PortinOrderId>            <Errors>                <Error>                    <Description>Unable to modify processing status for AUTOMATED port type</Description>                    <ErrorCode>7367</ErrorCode>                </Error>            </Errors>        </PortinErrors>    </PortinListErrors></BulkPortinResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The indicated Bulk Port-in order could not be found.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkportins/{orderid}/portinlist" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves a list of Port-in Orders that are all associated with the identified Bulk Port-in.   This response is not paginated due to its inherently limited size",
        "operationId" : "getPortinList",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.  It will be possible to return an empty payload if there are no Port-in orders associated with the Bulk Port-in",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<PortinListResponse>    <PortinList>        <PortinOrderId>[portin order id]</PortinOrderId>        <PortinOrderId>[portin order id]</PortinOrderId>        <!-- SNIP -->        <PortinOrderId>[portin order id]</PortinOrderId>        <PortinOrderId>[portin order id]</PortinOrderId>    </PortinList>    <Errors>        <Error>            <ErrorCode>nnnnn</ErrorCode>            <portinOrderId>[portin order id]</portinOrderId>            <Description>string</Description>        </Error>        <Error>            <ErrorCode>nnnnn</ErrorCode>            <portinOrderId>[portin order id]</portinOrderId>            <Description>string</Description>        </Error>    </Errors></PortinListResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "A PUT on a PortinList resource will cause replacement of the list of Port-in orders associated with a Bulk Port-in.    This PUT will *completely replace* the existing list of port-in orders associated with the Bulk Port-in.  If all port-in orders in the list are not valid the PUT request will fail, due to the potential for losing the port-in to Bulk Port-in relationships for a range of port-in orders. ",
        "operationId" : "updatePortinList",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPortinList"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The list was replaced successfully and no errors were detected.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<PortinListResponse>    <PortinList>        <PortinOrderId>[portin order id]</PortinOrderId>        <PortinOrderId>[portin order id]</PortinOrderId>        <!-- SNIP -->        <PortinOrderId>[portin order id]</PortinOrderId>        <PortinOrderId>[portin order id]</PortinOrderId>    </PortinList>    <Errors>        <Error>            <ErrorCode>nnnnn</ErrorCode>            <portinOrderId>[portin order id]</portinOrderId>            <Description>string</Description>        </Error>        <Error>            <ErrorCode>nnnnn</ErrorCode>            <portinOrderId>[portin order id]</portinOrderId>            <Description>string</Description>        </Error>    </Errors></PortinListResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "There was an error - one or more of the port-in orders was invalid.  The response payload will indicate the errors that were detected, and no changes will be made to the list of portin orders associated with the bulk order.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkportins/{orderid}/tnlist" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves a list of all telephone numbers associated with a Bulk Portin.   This response is not paginated due to its inherently limited size",
        "operationId" : "getBulkTnList",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.  An empty payload is returned if there are no TNs.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TnListResponse>    <ValidTnList>        <TN>[telephone number]</TN>        <TN>[telephone number]</TN>        <!-- SNIP -->        <TN>[telephone number]</TN>        <TN>[telephone number]</TN>    </ValidTnList>    <NonPortableTnList>        <TN>[telephone number]</TN>        <!-- SNIP -->        <TN>[telephone number]</TN>    </NonPortableTnList>    <InvalidTnList>        <TN>[not a telephone number]</TN>        <!-- SNIP -->        <TN>[not a telephone number]</TN>    </InvalidTnList></TnListResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "A PUT on a TnList resource causes the decomposition of that list of TNs into individual port-in orders that comply with the rules for atomic ports.  The result is the creation of a set of port-in orders, with TNs associated with each order.  The response payload indicates the TNs that were successfully decomposed, and the TNs that could not be ported. The response payload contains three optional elements:<ul><li>the 'ValidTnList' - a collection of telephone numbers that can be ported</li><li>the 'NonPortableTnList' - a collection of telephone numbers that cannot be ported, and </li><li>the 'InvalidTnList' - a collection of any strings that were submitted as telephone numbers, but that are not syntactically valid</li></ul>",
        "operationId" : "populateBulkOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkTnList"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The result of the decomposition - a list of TNs that makes the distinction between TNs that were successfully ported, and those that were not.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TnListResponse>    <ValidTnList>        <TN>[telephone number]</TN>        <TN>[telephone number]</TN>        <!-- SNIP -->        <TN>[telephone number]</TN>        <TN>[telephone number]</TN>    </ValidTnList>    <NonPortableTnList>        <TN>[telephone number]</TN>        <!-- SNIP -->        <TN>[telephone number]</TN>    </NonPortableTnList>    <InvalidTnList>        <TN>[not a telephone number]</TN>        <!-- SNIP -->        <TN>[not a telephone number]</TN>    </InvalidTnList></TnListResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The TN List payload was malformed, and the list could not be processed.  No response payload is returned.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information associated with the specified port-in ID number. Note: For users of Enterprise Telephony accounts, AlternateSpid, LosingCarrierSPID, LosingCarrierName, and LosingCarrierIsWireless, are omitted from the success output.",
        "operationId" : "updateTnActivationStatus",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortinLosingCarrierResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <Errors>        <Code>7205</Code>        <Description>Telephone number is already being processed on another order</Description>    </Errors>    <ProcessingStatus>CANCELLED</ProcessingStatus>    <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>    <CustomerOrderId>SJM00002</CustomerOrderId>    <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>    <Subscriber>        <SubscriberType>BUSINESS</SubscriberType>        <FirstName>First</FirstName>        <LastName>Last</LastName>        <ServiceAddress>            <HouseNumber>11235</HouseNumber>            <StreetName>Back</StreetName>            <City>Denver</City>            <StateCode>CO</StateCode>            <Zip>27541</Zip>            <County>Canyon</County>            <Country>United States</Country>            <AddressType>Service</AddressType>        </ServiceAddress>    </Subscriber>    <WirelessInfo>        <AccountNumber>771297665AABC</AccountNumber>        <PinNumber>1234</PinNumber>    </WirelessInfo>    <TnAttributes>        <TnAttribute>Protected</TnAttribute>        <TnAttribute>External</TnAttribute>        <TnAttribute>Imported</TnAttribute>    </TnAttributes>    <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>    <NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>    <ListOfPhoneNumbers>        <PhoneNumber>9194809871</PhoneNumber>    </ListOfPhoneNumbers>    <AlternateSpid>Foo</AlternateSpid>    <AccountId>20</AccountId>    <SiteId>2857</SiteId>    <PeerId>317771</PeerId>    <LosingCarrierName>Mock Carrier</LosingCarrierName>    <VendorName>Bandwidth CLEC</VendorName>    <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>    <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>    <userId>jbm</userId>    <LastModifiedBy>jbm</LastModifiedBy>    <PartialPort>false</PartialPort>    <Triggered>false</Triggered>    <PortType>AUTOMATED</PortType></LnpOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders/{orderid}" : {
      "put" : {
        "tags" : [ "external" ],
        "description" : "Updates the information associated with the specified LSR.  This is also used to cancel an order, by changing the order status field to cancelled.  This is the only case where the status can be changed, and when this is done, all other fields are left as they were prior to the cancellation.  Please see the example below.",
        "operationId" : "updateLsrOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LsrOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Lsr has been successfully updated.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LsrOrderResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LsrOrderResponse>    <LsrOrder>        <CustomerOrderId>FineCustomerid</CustomerOrderId>        <LastModifiedBy>team_ua</LastModifiedBy>        <OrderCreateDate>2015-03-11T10:08:23.961Z</OrderCreateDate>        <AccountId>9999999</AccountId>        <OrderId>63fb728d-421b-46ce-8c32-da30b909934d</OrderId>        <LastModifiedDate>2015-03-11T10:08:59.832Z</LastModifiedDate>        <OrderStatus>PENDING</OrderStatus>        <SPID>123C</SPID>        <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>        <Pon>ATT-011515-324234</Pon>        <PonVersion>8</PonVersion>        <RequestedFocDate>2015-11-15</RequestedFocDate>        <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>        <Subscriber>            <SubscriberType>BUSINESS</SubscriberType>            <BusinessName>BusinessName</BusinessName>            <AccountNumber>123463</AccountNumber>            <PinNumber>1231</PinNumber>            <ServiceAddress>                <HouseNumber>11</HouseNumber>                <StreetName>Park</StreetName>                <StreetSuffix>Ave</StreetSuffix>                <City>New York</City>                <StateCode>NY</StateCode>                <Zip>90025</Zip>            </ServiceAddress>        </Subscriber>        <ListOfTelephoneNumbers>            <TelephoneNumber>9192381468</TelephoneNumber>        </ListOfTelephoneNumbers>        <LsrOrderErrors/>        <CountOfTNs>1</CountOfTNs>    </LsrOrder></LsrOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Validation error occurred.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LsrOrderResponse>    <ResponseStatus>        <ErrorCode>400</ErrorCode>        <Description>Lsr order doesn't pass validation. Please check your input parameters.</Description>    </ResponseStatus>    <LsrOrderErrors>        <LsrOrderError>            <Code>17023</Code>            <Description>The authorizing person contact is required for lsr orders.</Description>        </LsrOrderError>        <LsrOrderError>            <Code>17020</Code>            <Description>Account SPID [1234] does not match with SPID specified in the Lsr order [123C].</Description>        </LsrOrderError>    </LsrOrderErrors>    <LsrOrder>        <CountOfTNs>1</CountOfTNs>        <OrderId>63fb728d-421b-46ce-8c32-da30b909934d</OrderId>        <OrderStatus>FAILED</OrderStatus>        <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>        <SPID>123C</SPID>        <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>        <Pon>ATT-011515-324234</Pon>        <PonVersion>8</PonVersion>        <RequestedFocDate>2015-11-15</RequestedFocDate>        <Subscriber>            <SubscriberType>BUSINESS</SubscriberType>            <BusinessName>BusinessName</BusinessName>            <AccountNumber>123463</AccountNumber>            <PinNumber>1231</PinNumber>            <ServiceAddress>                <HouseNumber>11</HouseNumber>                <StreetName>Park</StreetName>                <StreetSuffix>Ave</StreetSuffix>                <City>New York</City>                <StateCode>NY</StateCode>                <Zip>90025</Zip>                <Country>United States</Country>                <AddressType>Service</AddressType>            </ServiceAddress>        </Subscriber>        <ListOfTelephoneNumbers>            <TelephoneNumber>9192381468</TelephoneNumber>        </ListOfTelephoneNumbers>        <LastModifiedBy>team_ua</LastModifiedBy>        <OrderCreateDate>2015-03-11T10:08:23.961Z</OrderCreateDate>        <AccountId>9999999</AccountId>        <CreatedByUser>team_ua</CreatedByUser>        <CustomerOrderId>FineCustomerid</CustomerOrderId>        <LastModifiedDate>2015-03-11T10:08:59.832Z</LastModifiedDate>    </LsrOrder></LsrOrderResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Requested lsr not found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><LsrOrderResponse>    <ResponseStatus>        <ErrorCode>5035</ErrorCode>        <Description>lsr order 63fb728d-421b-46ce-8c32-da30b909934s not found.</Description>    </ResponseStatus></LsrOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderId}/activationStatus" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve the status (activated or not activated) of TNs associated with the customer activated (triggered) order. <br><br>At this time all phone numbers associated with a PON will be activated at the same time.",
        "operationId" : "retrieveTnActivationStatus",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Activation Status information is available for this order.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnActivationStatusResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ActivationStatusResponse>    <ActivationStatus>        <AutoActivationDate>2014-08-29T18:30:00+03:00</AutoActivationDate>        <ActivatedTelephoneNumbersList>            <TelephoneNumber>6052609021</TelephoneNumber>        </ActivatedTelephoneNumbersList>        <NotYetActivatedTelephoneNumbersList/>    </ActivationStatus></ActivationStatusResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Return a 400 error if the port-in Order is not in FOC status, or if not executed on the day of FOC or within the delay interval.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ActivationStatusResponse>    <ResponseStatus>        <ErrorCode>7342</ErrorCode>        <Description>On demand port-in activation not yet allowed.</Description>    </ResponseStatus></ActivationStatusResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Return a 404 if the Port-in Order is missing, or if the activation is complete, and thus the ActivationStatus resource has been erased.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ActivationStatusResponse> <ResponseStatus> <ErrorCode>7348</ErrorCode> <Description>The order is already complete</Description> </ResponseStatus> </ActivationStatusResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Sets the activation time for the port-in order.  <br> <br>This API call is used to set the Activation time of the customer activated (triggered) port.<ul><li>If the time is in the past all of the TNs in the port-in request will be activated 'immediately'.</li><li>For automated on-net port-ins, if the time is within three days after the approved FoC date, the auto-activation time for the port will be set to that time.</li><li>For automated off-net port-ins, if the date matches the actual FOC date and the time is between 6:00 AM ET and 10:00 PM ET, the auto-activation time for the port will be set to that time.</li></ul>",
        "operationId" : "updateTnActivationStatus_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TnActivationStatus"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnActivationStatusResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ActivationStatusResponse>    <ActivationStatus>        <AutoActivationDate>2014-08-30T18:30:00+03:00</AutoActivationDate>    </ActivationStatus></ActivationStatusResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ActivationStatusResponse>    <ResponseStatus>        <ErrorCode>7342</ErrorCode>        <Description>On demand port-in activation not yet allowed.</Description>    </ResponseStatus></ActivationStatusResponse>      "
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ActivationStatusResponse>    <ResponseStatus>        <ErrorCode>7348</ErrorCode>        <Description>The order is already complete</Description>    </ResponseStatus></ActivationStatusResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/{orderType}/{orderid}/statusupdate" : {
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/InternalPortEvent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PotCallbackResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/{orderType}/{orderId}/loas/{fileName}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the file associated with the order",
        "operationId" : "getFile",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The 200 OK  indicates a successful download request.<br>The response to the get on a filename will result in the file being prepared and delivered in a manner consistent with browser download.  The Response headers include the content-disposition header describing the file download.<br>Headers:<code>Content-Type → application/octet-stream<br>Date → Mon, 20 Apr 2015 17:19:26 GMT<br>Server → Apache-Coyote/1.1<br>Transfer-Encoding → <br>content-disposition → attachment; filename=63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf<br></code>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "a 404 indicates that the indicated file was not found in conjunction with the order id.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "A PUT on the filename will update / replace the identified file id.  The format of the PUT is identical to that of the POST.<br>Header settings typical of a valid upload are...<br><code>Host: api.inetwork.com <br>Authorization: Basic xxxxxxxxxxxxxxxxxxxx== <br>Content-Type: application/pdf <br>Accept: */* <br>Accept-Encoding: gzip, deflate <br>Accept-Language: en-US,en;q=0.8 <br>Cache-Control: no-cache <br>    <br>----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>Content-Disposition: form-data; name=\"george\"; filename=\"Bandwidth Dashboard.pdf\" <br>Content-Type: application/pdf <br>    <br>    <br>----WebKitFormBoundaryE19zNvXGzXaLvS5C <br></code>",
        "operationId" : "updateFileDirect",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The 200 response indicates the successful replacement of a file resource containing the uploaded content.The response header will include a link to the created file as a GET on the identified resource.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><fileUploadResponse>    <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>    <resultCode>0</resultCode>    <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage></fileUploadResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "A 400 indicates that the requested upload failed.",
            "content" : {
              "application/xml" : { }
            }
          },
          "404" : {
            "description" : "A 404 indicates that the file was not available for replacement.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "Deletes the file associated with the order",
        "operationId" : "deleteFile",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The 200 OK  indicates a successful deletion of the identified file.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "a 404 indicates that the indicated file was not found in conjunction with the order id.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/{orderType}/{orderId}/loas" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves the list of the loa (and other) files associated with the order",
        "operationId" : "getFilesForOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "metadata",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of all files is being returned.  This response includes the case where the list is empty.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileListResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<fileListResponse>    <fileCount>2</fileCount>    <fileNames>803f3cc5-beae-469e-bd65-e9891ccdffb9-1092874634747.pdf</fileNames>    <fileNames>803f3cc5-beae-469e-bd65-e9891ccdffb9-1430814967669.pdf</fileNames>    <resultCode>0</resultCode>    <resultMessage>LOA file list successfully returned</resultMessage></fileListResponse><!-- OR --, for the case where there are no files... --><fileListResponse>    <fileCount>0</fileCount>    <resultCode>0</resultCode>    <resultMessage>No LOA files found for order</resultMessage></fileListResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "POSTing to the /loas resource will enable the upload of the file.  The key attribute to the POST is ensuring that the headers are correctly set to support the file upload.<br>    <br>Header settings typical of a valid upload are...<br>    <br><code>Host: api.inetwork.com <br>Authorization: Basic xxxxxxxxxxxxxxxxxxxx== <br>Content-Type: application/pdf <br>Accept: */* <br>Accept-Encoding: gzip, deflate <br>Accept-Language: en-US,en;q=0.8 <br>Cache-Control: no-cache <br>    <br>----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>Content-Disposition: form-data; name=\"george\"; filename=\"Bandwidth Dashboard.pdf\" <br>Content-Type: application/pdf <br>    <br>    <br>----WebKitFormBoundaryE19zNvXGzXaLvS5C <br></code>",
        "operationId" : "uploadFileDirect",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The 201 response indicates the successful creation of a file resource containing the uploaded content.The response header will include a link to the created file as a GET on the identified resource.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><fileUploadResponse>    <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>    <resultCode>0</resultCode>    <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage></fileUploadResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "A 400 indicates that the requested upload failed.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/{accountId}/{orderType}/{orderId}/{fileName}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getFileMetaData",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileMetaDataPayload"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "updateFileMetaData",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/FileMetaDataPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileMetaDataPayload"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "removeFileMetaData",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileMetaDataPayload"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/subscriptions" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "GET is used to retrieve all subscriptions for the account (including email and callback subscriptions).The returned information reflects the subscription as it has been defined, and for callback subscriptions will reflect the status of the latest attempt to place the callback.  The <Status> element will indicate if an error is being encountered when the Bandwidth Dashboard API attempts to place the callback.",
        "operationId" : "getSubscriptions",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The subscriptions retrieval request will return a list of the subscriptions that are created on this account.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>    <SubscriptionsResponse>        <Subscriptions>            <Subscription>                <SubscriptionId>0b3aa54d-0ce5-4f5b-bd75-1c30967b197f</SubscriptionId>                <OrderType>orders</OrderType>                <EmailSubscription>                    <Email>bwtest@gmail.com</Email>                    <DigestRequested>NONE</DigestRequested>                </EmailSubscription>            </Subscription>            <Subscription>                <SubscriptionId>ddf05927-780f-4f8f-89ab-e581f52f5f20</SubscriptionId>                <CallbackSubscription>                    <URL>\"https://company.com/iriscallback\"</URL>                    <Expiry>30000</Expiry>                    <Status>some message containing status code and response body of last callback</Status>                    <CallbackCredentials>                        <BasicAuthentication>                            <Username>iris</Username>                        </BasicAuthentication>                    </CallbackCredentials>                </CallbackSubscription>            </Subscription>            <Subscription>                <SubscriptionId>1b2av54d-0ce5-4f5b-bd75-1c30967b197f</SubscriptionId>                <EventType>MESSAGING_LOST</EventType>                <EmailSubscription>                    <Email>bwtest@gmail.com</Email>                    <DigestRequested>DAILY</DigestRequested>                </EmailSubscription>            </Subscription>            <Subscription>                <SubscriptionId>1cf05927-780f-4f8f-89ab-e581f52f5e12</SubscriptionId>                <EventType>MESSAGING_LOST</EventType>                <CallbackSubscription>                    <URL>\"https://company.com/iriscallback\"</URL>                    <Expiry>30000</Expiry>                    <Status>some message containing status code and response body of last callback</Status>                    <CallbackCredentials>                        <BasicAuthentication>                            <Username>iris</Username>                        </BasicAuthentication>                    </CallbackCredentials>                </CallbackSubscription>            </Subscription>        </Subscriptions>    </SubscriptionsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "if the account specified does not exist or is locked it will result in a bad request",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "A POST on the /subscriptions resource is used to request a new subscription for an account.<br>The POST creates a new e-mail or callback subscription. A well-formed POST will create a subscription resource, and return asubscription ID as part of the location header. The ID is used to uniquely identify the subscription.The user should submit the desired e-mail address for notifications and the frequency with which he wants to get the updates:DAILY (for daily digests) or NONE (immediately after events). OrderId is optional. If OrderId is specified only notifications willbe sent for events related to that order. If OrderId is omitted, notifications will be sent related to events of all orders of the specified type.<br>For email subscriptions on order status notification use a body like this:<br>```<Subscription>    <OrderType> [ portins | portouts | orders | disconnects | dldas | lsrorders | e911s | tnoptions | externalTns | lidb | bulkPortins| importtnorders | removeImportedTnOrders | emergencyNotificationGroup | emergencyEndpointGroup] </OrderType> <!-- required -->    <OrderId> [ UUID ] </OrderId> <!-- optional, if provided notifications will only be sent for events regarding this specific order, if omitted notifications regarding events for all orders of the specified type will be sent -->    <EmailSubscription>        <Email> [ email address] </Email>        <DigestRequested> [ NONE | DAILY ] </DigestRequested> <!-- required -->    </EmailSubscription></Subscription>```For email subscriptions on event notification use a body like this:<br>```<Subscription>    <EventType> [ MESSAGING_LOST ] </EventType> <!-- required -->    <EmailSubscription>        <Email> [ email address] </Email>        <DigestRequested> [ NONE | DAILY ] </DigestRequested> <!-- required -->    </EmailSubscription></Subscription>```For callback subscriptions on order status notification use a body like this:<br>```<Subscription>    <OrderType> [portins | portouts | orders | disconnects | dldas | lsrorders | e911s | tnoptions | externalTns | lidb | importtnorders | removeImportedTnOrders| emergencyNotificationGroup | emergencyEndpointGroup] </OrderType> <!-- same rules and values as above -->    <OrderId> [UUID]</OrderId> <!-- same rules and value as above -->    <CallbackSubscription>        <URL> [valid publically addressable URL] </URL> <!-- the URL that notifications should get POSTed to, HTTPS is highly recommended -->        <Expiry> [time in seconds] </Expiry> <!-- the number of seconds after which to expire this subscription -->        <CallbackCredentials> <!-- optional, but recommended; these credentials will be used to when authenticating with the notification receiving server -->            <BasicAuthentication> <!-- optional, the endpoint may be secured with BASIC auth -->                <Username> [username] </Username> <!-- max 100 characters -->                <Password> [password] </Password> <!-- the password will be stored encrypted and never returned via the API -->            </BasicAuthentication>            <!-- optional, a BASE64 encoded public key matching the notification receiving server -->            <PublicKey>LS0tLS1CRUdJTiBDRVJUSUZJ [...] kQgQ0VSVElGSUNBVEUtLS0tLQ0K</PublicKey>        </CallbackCredentials>    </CallbackSubscription></Subscription>```For callback subscriptions on event notification use a body like this:<br>```<Subscription>    <EventType> [ MESSAGING_LOST ] </EventType> <!-- required -->    <CallbackSubscription>        <URL> [valid publically addressable URL] </URL> <!-- the URL that notifications should get POSTed to, HTTPS is highly recommended -->        <Expiry> [time in seconds] </Expiry> <!-- the number of seconds after which to expire this subscription -->        <CallbackCredentials> <!-- optional, but recommended; these credentials will be used to when authenticating with the notification receiving server -->            <BasicAuthentication> <!-- optional, the endpoint may be secured with BASIC auth -->                <Username> [username] </Username> <!-- max 100 characters -->                <Password> [password] </Password> <!-- the password will be stored encrypted and never returned via the API -->            </BasicAuthentication>            <!-- optional, a BASE64 encoded public key matching the notification receiving server -->            <PublicKey>LS0tLS1CRUdJTiBDRVJUSUZJ [...] kQgQ0VSVElGSUNBVEUtLS0tLQ0K</PublicKey>        </CallbackCredentials>    </CallbackSubscription></Subscription>```The credentials used to impose security on the callbacks are defined in the <CallbackCredentials> element.  The Basic authentication is straightforward, but the <PublicKey> requires a little more explanation.  Please see the document to the left on Mutual Authentication for CallBacks.<p>When status changes on an order that had been subscribed to with a callback subscription (order update, note added to order), the following payloadwill be POSTed to the URL of the callback subscription.<br>More detail can be found in the API documentation for the fictitious endpoint /callbacks```xml<Notification>    <SubscriptionId>...</SubscriptionId>    <OrderType>portins | portouts | orders | disconnects | dldas | lsrorders | e911s| tnoptions | externalTns | lidb | importtnorders | removeImportedTnOrders </OrderType>    <OrderId>...</OrderId>    <!-- for order update events -->    <Status>COMPLETE | FAILED | PARTIAL | EXCEPTION ... </Status>    <!-- for order update events -->    <Message>...</Message>    <!-- for note events -->    <Note>...</Note>    <!-- for portins/portouts/orders/disconnects OrderTypes -->    <CompletedTelephoneNumbers>        <TelephoneNumber> ... </TelephoneNumber>        <!-- ... -->    </CompletedTelephoneNumbers></Notification>```When a event happens that had been subscribed to with a callback subscription (messaging lost, messaging gained etc.), the following payloadwill be POSTed to the URL of the callback subscription.<br>More detail can be found in the API documentation for the fictitious endpoint /callbacks```xml<Notification>    <SubscriptionId>...</SubscriptionId>    <EventType>MESSAGING_LOST</EventType>    <CompletedTelephoneNumbers>        <TelephoneNumber>9192345678</TelephoneNumber>        <TelephoneNumber>9192345679</TelephoneNumber>    </CompletedTelephoneNumbers></Notification>```",
        "operationId" : "createSubscription",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Subscription"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "if the subscription is successfully created a CREATED response code will be returned",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "if the account specified does not exist or is locked it will result in a bad request",
            "content" : {
              "application/xml" : { }
            }
          },
          "404" : {
            "description" : "if the subscription validation failed (e.g. invalid URL, invalid expiration date, invalid public key)",
            "content" : {
              "application/xml" : { }
            }
          },
          "409" : {
            "description" : "if the subscription for this subscription target already exits it will result in a CONFLICT response",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/subscriptions/{subscriptionId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information associated with the subscription ID.The returned information reflects the subscription as it has been defined, and for callback subscriptions will reflect the status of the latest attempt to place the callback.  The <status> element will indicate if an error is being encountered when the Bandwidth Dashboard API attempts to place the callback.",
        "operationId" : "getSubscription",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A subscrption as been retrieved. The information is returned.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SubscriptionsResponse>    <Subscriptions>        <Subscription>            <SubscriptionId>257f9be6-2e81-47bb-afd9-b8c184e9e246</SubscriptionId>            <OrderType>portouts</OrderType>            <EmailSubscription>                <Email>newtest@gmail.com</Email>                <DigestRequested>DAILY</DigestRequested>            </EmailSubscription>        </Subscription>    </Subscriptions></SubscriptionsResponse><!-- *** or *** --><SubscriptionsResponse>    <Subscriptions>        <Subscription>            <SubscriptionId>957f9be6-2e81-47bb-afd9-b8c184e9e247</SubscriptionId>            <EventType>MESSAGING_LOST</EventType>            <EmailSubscription>                <Email>newtest@gmail.com</Email>                <DigestRequested>DAILY</DigestRequested>            </EmailSubscription>        </Subscription>    </Subscriptions></SubscriptionsResponse><!-- *** or *** --><Subscription>    <SubscriptionId>991a60d7-a612-48a5-a86e-326b51997cac</SubscriptionId>    <OrderType>portins</OrderType>    <CallbackSubscription>        <URL>http://customer.com:8087/path/BandwidthHandler</URL>        <Expiry>4283455101</Expiry>        <Status>200 OK</Status>    </CallbackSubscription></Subscription><!-- *** or *** --><Subscription>    <SubscriptionId>091a60d7-a612-48a5-a86e-326b51997cad</SubscriptionId>    <EventType>MESSAGING_LOST</EventType>    <CallbackSubscription>        <URL>http://customer.com:8087/path/BandwidthHandler</URL>        <Expiry>4283455101</Expiry>        <Status>200 OK</Status>    </CallbackSubscription></Subscription>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Updates the subscription. This can be be used to update various values (expiry, email address, url, credentials...).Note that the initial state changes for an order may happen very quickly, so subscribing to anorder once the system creates it needs to account for the fact that the initial state may bedifferent based on timing factors. It is recommended that the application creating thesubscription check the order status after the subscription is created to ensure the correct initialcondition. <br>The same rules around valid or possible values as for POSTs apply.",
        "operationId" : "updateSubscription",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Subscription"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Subscription was successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Subscription values failed validation",
            "content" : {
              "application/xml" : { }
            }
          },
          "404" : {
            "description" : "Subscription does not exist",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "Deletes the specified subscription. Note that deleting subscriptions is only supported on a one-by-one basis.Deleting all subscriptions associated with an order requires GETting all of those subscriptions, then deleting them one by one.",
        "operationId" : "deleteSubscription",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "subscription has been successfully deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "subscription does not exist",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/availableNumbers/orders" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "A POST to the available orders API will add the listed TNs to the overall inventory, and create a work-order that can be used to track the status of that attempt.Key data elements in the payload include...* The account and gateway profile, that control the routing of calls that are placed to these numbers.  The typical values are *UnallocatedNonTF* and *UnallocatedTF*.* The Vendor name that will be associated with these numbers.  There must be allignment with the NPANXX of the numbers that are being imported, and the Vendor that supplies the rate center in which the numbers will land.* The list of telephone numbers themselves.",
        "operationId" : "createImportAvailableOrder",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportAvailableNumberOrder"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created.This response describes the creation of the import to available work-order that describes the attempt to import numbers into the Bandwidth Dashboard API available inventory.  The response includes an XML payload that describes the order, and also includes a Location header value that will access the created order resource.Payload items include...* the ID of the work order that was created* the details provided in the POST that created the order.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>    <ImportAvailableNumberOrderResponse>        <orderRequest>            <id>6b811ff6-3e48-4513-a3b3-8f41cce1bfd5</id>            <ImportAvailableNumberOrderType>                <AccountProfile>UnallocatedNonTF</AccountProfile>                <GatewayProfile>UnallocatedNonTF</GatewayProfile>                <TelephoneNumberList>                    <TelephoneNumber>9702122349</TelephoneNumber>                    <TelephoneNumber>9702122350</TelephoneNumber>                    <TelephoneNumber>9702122351</TelephoneNumber>                    <TelephoneNumber>9702122352</TelephoneNumber>                </TelephoneNumberList>                <VendorName>Bandwidth.com powered by Level 3</VendorName>            </ImportAvailableNumberOrderType>        </orderRequest>    </ImportAvailableNumberOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountid}/importToAccount" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "Import a large number of previously ported or otherwise acquired numbers into the accountThe various parameters in the importToAccount payload are...        <table style=\"text-align: left; width: 80%;\"         border=\"1\" cellpadding=\"2\" cellspacing=\"2\">          <thead>            <tr>              <th>Parameter</th><th>Description</th>            </tr>          </thead>          <tbody>            <tr>              <td>accountid</td>              <td>The numerical Account ID assigned to the Account.</td>            </tr>            <tr>              <td>SiteId</td>              <td>The ID of the Site that the set of TNs is to be associated with. </td>            </tr>            <tr>              <td>PeerId</td>              <td>The ID of the SIP Peer that the set of TNs is to be associated with. (optional) </td>            </tr>            <tr>              <td>BatchId</td>              <td>A user-chosen id for the batch of phone numbers.  This Batch ID can span multiple number submissions.  Up to 10 alphanumeric characters.  If  the submission is not intended to be grouped into a batch of submissions then the Batch ID must be globally unique.  <b>It is recommended that the batch ids be globally unique, and that imports not be grouped together in batches by use of a common batch id.</b></td>            </tr>            <tr>              <td>BatchSize</td>              <td>The number of TNs in the batch, aggregated across all of the orders in the batch. This total spans API Calls, so if 3 calls are necessary to import 15000 numbers, this value would be 15000.  It is recommended to use a batch size equal to the number of telephone numbers in the API call, and use a different batch name for each API call - essentially limiting a batch to a single API call.</td>            </tr>            <tr>              <td>VendorName</td>              <td>The vendor that owns the number that is being ported in.  If the number is manually ported to a partner’s network then this would reflect that partner</td>            </tr>            <tr>                <td>BillingType</td>                <td>Type of billing rules to be applied. Possible values... NOCHARGE, PORTIN, NEWNUMBER, PROJECTPORT.</td>            </tr>            <tr>                <td>NumberFormat</td>                <td>Format of TNs to import. Optional parameter. Possible values... 10D, E164, USMOBILESC.</td>            </tr>            <tr>              <td>TelehoneNumberList</td>              <td>List of TNs to import - limited to 5000 Telephone Numbers.</td>            </tr>            <tr>              <td>TnAttributes</td>              <td>List of phone number attributes to be assigned. Optional parameter. Possible values: \"Protected\".</td>            </tr>            <tr>             <td>InitialStatus</td>             <td>TN status that be assigned to imported telephone numbers. Required existence of \"Protected\" TnAttribute. Possible values: \"Available\". </td>            </tr>          </tbody>        </table>",
        "operationId" : "createImportToAccountOrder",
        "parameters" : [ {
          "name" : "accountid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportToAccountNumberOrder"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The POST returns a payload that directly reflects the submission, along with a location header value that points the user to the order resource that is created by the POST request.The Location header value is in the form: GET ../accounts/{accountId}/importToAccount/{orderId}",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ImportToAccountNumberOrderResponse>    <orderRequest>        <id>c5986599-3a7c-4eed-a5c4-9121c17d54ab</id>        <OrderCreateDate>2014-04-01T21:54:18.796Z</OrderCreateDate>        <ImportToAccountNumberOrderType>            <BatchId>SJM00001</BatchId>            <BatchSize>2</BatchSize>            <BillingType>NOCHARGE</BillingType>            <NumberFormat>10D</NumberFormat>            <InitialStatus>Available</InitialStatus>            <TnAttributes>                <TnAttribute>Protected</TnAttribute>                <TnAttribute>External</TnAttribute>                <TnAttribute>Imported</TnAttribute>            </TnAttributes>            <TelephoneNumberList>                <TelephoneNumber>4158714245</TelephoneNumber>                <TelephoneNumber>6105330710</TelephoneNumber>            </TelephoneNumberList>            <VendorName>Level 3</VendorName>        </ImportToAccountNumberOrderType>        <SiteId>743</SiteId>        <PeerId>12345</PeerId>    </orderRequest></ImportToAccountNumberOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/disconnects" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "Create a Disconnect order, and disconnect the numbers listed in the disconnect order.",
        "operationId" : "createDisconnectNumberOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/DisconnectTelephoneNumberOrder"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The order has been created as described in the payload <br>The Location header contains the url of the disconnect order that has been created.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><DisconnectTelephoneNumberOrderResponse>    <orderRequest>        <CustomerOrderId></CustomerOrderId>        <id>ba05e04b-192a-47cb-b182-b1bf6cfef0d7</id>        <OrderCreateDate>2014-07-03T14-12-57.840Z</OrderCreateDate>        <DisconnectTelephoneNumberOrderType>            <TelephoneNumberList>                <TelephoneNumber>4158714245</TelephoneNumber>                <TelephoneNumber>4352154439</TelephoneNumber>                <TelephoneNumber>4352154466</TelephoneNumber>            </TelephoneNumberList>            <DisconnectMode>normal</DisconnectMode>            <Protected>UNCHANGED</Protected>        </DisconnectTelephoneNumberOrderType>    </orderRequest></DisconnectTelephoneNumberOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Response - there were errors in evaluating the body of the request.Potential errors include: <ul>  <li> Protected attribute is invalid. Valid values: TRUE, FALSE, UNCHANGED.</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><DisconnectTelephoneNumberOrderResponse>    <ErrorList>        <Error>            <Code>54321</Code>            <Description>Some error description</Description>        </Error>    </ErrorList>    <orderRequest>        <OrderCreateDate>2019-11-19T14:06:57.254Z</OrderCreateDate>        <DisconnectTelephoneNumberOrderType>            <TelephoneNumberList>                <TelephoneNumber>4158714245</TelephoneNumber>            </TelephoneNumberList>        </DisconnectTelephoneNumberOrderType>    </orderRequest></DisconnectTelephoneNumberOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/{orderType}/{orderId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the information associated with the specified port-in ID number. Note: For users of Enterprise Telephony accounts, AlternateSpid, LosingCarrierSPID, LosingCarrierName, and LosingCarrierIsWireless, are omitted from the success output.",
        "operationId" : "getAdminParameters",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminParametersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <Errors>        <Code>7205</Code>        <Description>Telephone number is already being processed on another order</Description>    </Errors>    <ProcessingStatus>CANCELLED</ProcessingStatus>    <RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>    <CustomerOrderId>SJM00002</CustomerOrderId>    <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>    <Subscriber>        <SubscriberType>BUSINESS</SubscriberType>        <FirstName>First</FirstName>        <LastName>Last</LastName>        <ServiceAddress>            <HouseNumber>11235</HouseNumber>            <StreetName>Back</StreetName>            <City>Denver</City>            <StateCode>CO</StateCode>            <Zip>27541</Zip>            <County>Canyon</County>            <Country>United States</Country>            <AddressType>Service</AddressType>        </ServiceAddress>    </Subscriber>    <WirelessInfo>        <AccountNumber>771297665AABC</AccountNumber>        <PinNumber>1234</PinNumber>    </WirelessInfo>    <TnAttributes>        <TnAttribute>Protected</TnAttribute>        <TnAttribute>External</TnAttribute>        <TnAttribute>Imported</TnAttribute>    </TnAttributes>    <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>    <NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>    <ListOfPhoneNumbers>        <PhoneNumber>9194809871</PhoneNumber>    </ListOfPhoneNumbers>    <AlternateSpid>Foo</AlternateSpid>    <AccountId>20</AccountId>    <SiteId>2857</SiteId>    <PeerId>317771</PeerId>    <LosingCarrierName>Mock Carrier</LosingCarrierName>    <VendorName>Bandwidth CLEC</VendorName>    <OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>    <LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>    <userId>jbm</userId>    <LastModifiedBy>jbm</LastModifiedBy>    <PartialPort>false</PartialPort>    <Triggered>false</Triggered>    <PortType>AUTOMATED</PortType></LnpOrderResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "It is possible to change (\"SUPP\" in LNP terms) an existing LNP order.  This is done via a PUT on the existing order-id.Since many of the entries in an LNP Order cannot be changed after the initial order is placed the PUT on a porting order-id does *not* require that the full order payload is included.<br/>If SUPP is done to <strong>draft</strong> portin no validations will be applied except validation of tn list if at least 1 tn is provided.Items that can be included in a SUPP request include:<ul><li>CustomerOrderId</li><li>RequestedFocDate</li><li>BillingTelephoneNumber</li><li>NewBillingTelephoneNumber</li><li>AccountNumber</li><li>PinNumber</li><li>TnAttributes elements</li><li>Subscriber elements, including the subscriber type, the name elements, and the street address elements.  See the discussion below on ResetAddressFields</li><li>SiteId</li><li>PeerId</li><li>PartialPort, and</li><li>LoaAuthorizingPerson</li><li>ListOfPhoneNumbers</li><li>Triggered</li><li>Immediately</li></ul>Note: If the order ProcessingStatus is DRAFT, the rules about what can be changed are much more relaxed. Validation is performed when the ProcessingStatus is changed from DRAFT to SUBMITTED.<p>The AltSpid element can be modified if it is not configured at the system level.<p>List of phone numbers can be modified only for Automated on-net port type.<p><b>ProcessingStatus</b> - you can only provide this field with a value of SUBMITTED and only if the current ProcessingStatus of the port-in is DRAFT.<p><b>ResetAddressFields -</b> As stated above the general approach to handling <i>this</i> API call is to replace the elements included in the request body, and leave other preexisting elements in an unmodified condition.  This is typical of a PATCH method, but because of our commitment to backwards compatibility we have elected not to \"Fix\" this behavior.As a result, providing only a few fields in the street address will result in an update to just those fields. This prevents removal of an element of the address.  The ResetAddressFields element is provided to resolve this issue.  The default setting of 'false' is to consistency with the initial implementation.The recommendation is to replace the entire street address.  This ensures that you are enforcing the street address content of the port-in order.  As part of this recommendation the ResetAddressFields element should be set to true, which will force the street address to be exactly what you specified in the payload.<br> <br> When a port-in is being processed by off-net partner Level 3 (you can tell this because /lnpchecker indicates a Port Type of AUTOMATEDOFFNET), the rules for what can be changed in a SUPP operation are more restrictive. If the order has NOT yet received FOC, you may change the following:<ul>  <li>RequestedFocDate</li>  <li>BillingTelephoneNumber</li>  <li>SubscriberType</li>  <li>Subscriber name elements or BusinessName, provided that SubscriberType is provided</li></ul>After FOC has been received, only RequestedFocDate may be changed.",
        "operationId" : "updateAdminParameters",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminParametersPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The information has been successfully retrieved and displayed in the payload.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminParametersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <OrderId>b6080e4c-7ddf-4faa-bbd8-328a72de9297</OrderId>    <Status>        <Code>200</Code>        <Description>Supp request received. Please use the order id to check the status of your order later.</Description>    </Status>    <ProcessingStatus>REQUESTED_SUPP</ProcessingStatus>    <RequestedFocDate>2014-12-04T13:00:00Z</RequestedFocDate>    <BillingTelephoneNumber>8045030092</BillingTelephoneNumber>    <NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>    <Triggered>false</Triggered></LnpOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "List of telephone numbers cannot be changed due to validation errors.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <OrderId>c58fed09-a3fc-49b8-b461-2286146b73c1</OrderId>    <Status>        <Code>400</Code>        <Description>Validation Failed. Please check your input parameters.</Description>    </Status>    <Errors>        <Code>7331</Code>        <Description>Rate Center Not Present in Bandwidth Dashboard</Description>        <TelephoneNumbers>            <Tn>7138391156</Tn>        </TelephoneNumbers>    </Errors>    <Errors>        <Code>7495</Code>        <Description>Unable to change the TNs on this port. Please ensure that the new TNs are from the same losing carrier as the current TNs.</Description>        <TelephoneNumbers>            <Tn>2024551000</Tn>            <Tn>2018391156</Tn>            <Tn>2018391157</Tn>        </TelephoneNumbers>    </Errors>    <ProcessingStatus>EXCEPTION</ProcessingStatus>    <BillingTelephoneNumber>4352154438</BillingTelephoneNumber></LnpOrderResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "If portin is in DRAFT state the order will be deleted. Otherwise the call simply places the existing order in a cancelled state.Note that only a pending port-in order can be cancelled; if the order was previously cancelled or completed, then a DELETE will not be possible. ",
        "operationId" : "removeAdminParameters",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The port-in order has been successfully deleted/cancelled.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdminParametersResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Order id is invalid, order does not exist or the port-in order is already processed, and therefore cannot be deleted.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<LnpOrderResponse>    <OrderId>2ffd0af4-7c54-40dc-9bfe-40f08b57e63a</OrderId>    <Status>        <Code>400</Code>        <Description>Validation Failed. Please check your input parameters.</Description>    </Status>    <Errors>        <Code>7304</Code>        <Description>The order is already complete and cannot be modified or cancelled</Description>    </Errors>    <ProcessingStatus>EXCEPTION</ProcessingStatus></LnpOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lineoptionorders" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "This link is used for configuring multiple telephone numbers with specific attributes:<br/>CNAM, NumberFormat, RPIDFormat, RewriteUser, CallForward, Protected and Sms.<br/>There are some possible attribute values:<ul><li> TelephoneNumber - [ 10digit ] </li><li> CallingNameDisplay - [ on | off | <i>unchanged</i> | <i>systemdefault</i> ] </li><li> NumberFormat - [ 10digit | 11digit | e164 | <i>unchanged</i> | <i>systemdefault</i> ] </li><li> RPIDFormat - [ 10digit | 11digit | e164 | <i>unchanged</i> | <i>systemdefault</i> ] </li><li> RewriteUser - [ string | <i>unchanged</i> | <i>systemdefault</i>] </li><li> CallForward - [ 10digit | <i>unchanged</i> | <i>systemdefault</i>] </li><li> Protected - [ true | false | <i>unchanged</i> | <i>systemdefault</i>] </li><li> Sms - [ on | off | <i>unchanged</i>] </li></ul>Where:<ul><li type=\"square\"> <i>systemdefault</i> - implies that the element profile value should be removed so that the TN changes back to the default system behavior;</li><li type=\"square\"> <i>unchanged</i> - the value should remain unchanged - implies a read before write model.</li><li type=\"square\"><u>Leaving the element out of the payload is equivalent to <i>unchanged</i>.</u></li></ul>",
        "operationId" : "createLineOptionOrder",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/LineOptionOrderPayload"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "There can be only CompletedNumbers in the returned body of response. It means that all telephone numbers have been successfully provisioned.Also Errors can be present if telephone numbers didn't pass a validation.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LineOptionOrderResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>    <LineOptionOrderResponse>        <LineOptions>            <AccountId>14</AccountId>            <CompletedNumbers>                <TelephoneNumber>5209072451</TelephoneNumber>            </CompletedNumbers>            <Errors>                <Error>                    <TelephoneNumber>2033018394</TelephoneNumber>                    <ErrorCode>5005</ErrorCode>                    <Description>Telephone Number Unavailable</Description>                </Error>            </Errors>            <Warnings>                <Warning>                    <TelephoneNumber>2033018394</TelephoneNumber>                    <Description>SMS is already Enabled or number is in processing.</Description>                </Warning>            </Warnings>        </LineOptions>    </LineOptionOrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Possible errors in response: <li> <li> 50xx \"Telephone number is invalid.\"  </li><li> 50xx \"Telephone number is not available on the system.\"    </li><li> 50xx \"Duplicate telephone number.\"    </li><li> 50xx \"Telephone number is required.\"       </li><li> 50xx \"Telephone number is not available.\"    </li><li> 50xx \"There is an issue with telephone number. Please contact Customer Service.\"    </li><li> 50xx \"There are no valid telephone numbers.\"     </li><li> 50xx \"Account has no 'CNAM'/ 'CallForward' product feature.\"      </li><li> 50xx \"CallingNameDisplay '--' is invalid. Valid values are: on, off, unchanged, systemdefault.\" </li><li> 50xx \"Call Forwarding number '--' is not a valid 10-digit telephone number.\"     </li><li> 50xx \"Number Format '--' is invalid.\"     </li><li> 50xx \"Rewrite User '--' is invalid.\"     </li><li> 50xx \"RPID Format '--' is invalid.\"      </li><li> 13xxx \"Protected attribute '--' is invalid. Valid values are: true,  false,unchanged, systemdefault.\" </li><li> 13xxx \"Toll free numbers are not candidates for Protected status.\" </li><li> 13xxx \"Non-Tier-0 numbers are not candidates for Protected status.\" </li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>    <LineOptionOrderResponse>        <ResponseStatus>            <Description>Validation Failed. Please check your input parameters.</Description>        </ResponseStatus>        <LineOptions>            <AccountId>14</AccountId>            <Errors>                <Error>                    <TelephoneNumber>5209072451</TelephoneNumber>                    <ErrorCode>5072</ErrorCode>                    <Description>Duplicate telephone number</Description>                </Error>                <Error>                    <TelephoneNumber>2033018394</TelephoneNumber>                    <ErrorCode>5005</ErrorCode>                    <Description>Telephone Number Unavailable</Description>                </Error>            </Errors>        </LineOptions>    </LineOptionOrderResponse>"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "If customer doesn't have a permissions for this link (required role: ROLE_API_CNAMLIDB), this error can appear                    ",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountid}/orders" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "<span>A POST creates a request for Telephone Numbers</span><br>A POST on the /orders resource is used to request that the system provide one or more TNs for use by the account.  The post creates a new number order record to preserve the request, as well as the response of the Bandwidth Dashboard API to the request.  A well-formed POST on the /orders resource will create an order record, and return an order-id string that can be used to uniquely identify the new number order request.  The details of success and failure of the request for TNs will be preserved and linked to the returned order id.<br><br>The order-id is returned in the Location Header, allowing the API user immediate access to the order.<br><br>There are multiple ways that new telephone numbers can be requested.  The various request payloads are documented below. <br><br>Common values in <b>all</b> request payloads include: <br><table>    <tr>        <th>Parameter</th>        <th>Description</th>    </tr>    <tr>        <td>Quantity</td>        <td>The desired quantity of requested numbers. values range from 1-5000. If no quantity is specified, the default of 5000 is returned.</td>    </tr>    <tr>        <td>name</td>        <td>The name of the order. Max length restricted to 50 characters.</td>    </tr>    <tr>        <td>CustomerOrderId</td>        <td>Optional value for Id set by customer. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</td>    </tr>    <tr>        <td>SiteId</td>        <td>The ID of the Site that the SIP Peer is to be associated with.</td>    </tr>    <tr>        <td>PeerId</td><td>The ID of the SIP Peer that the telephone numbers are to be assigned to.</td>    </tr>    <tr>        <td>PartialAllowed</td>        <td>By default all order submissions are fulfilled partially. Setting the PartialAllowed to false would trigger the entire order to be fulfilled (any error ecnountered such as 1 TN not being available would fail all TNs in the order)<br>            By default, this value is set to false</td>    </tr>    <tr>        <td>BackOrderRequested</td>        <td>BackOrderRequested will indicate to the system that if the entire quantity of numbers is not available on the first attempt to fill the new number order, the request will be repeated periodically until the request is successful or cancelled. Setting the parameter to true indeicated a desire to backorder numbers if the entire quantity is not available</td>    </tr></table><p>The following POST payload elements are not common to all orders.  They are specific to one or more types of orders:<br><table>    <tr>        <th>Parameter</th><th>Description</th>    </tr>    <tr>        <td>TelephoneNumberList</td><td>A list of telephone numbers to order</td>    </tr>    <tr>        <td>AreaCode</td><td>Allowed ranged: [2-9] for the first digit and [0, 9] for both the second and third digits.</td>    </tr>    <tr>        <td>RateCenter</td><td>A text Rate Center name.  Must be combined with State information</td>    </tr>    <tr>        <td>State</td><td>The two-letter abbreviation of the state</td>    </tr>    <tr>        <td>City</td><td>The name of the city that the Ordered telephone numbers should apply to</td>    </tr>    <tr>        <td>Zip</td><td>A five-digit (XXXXX) or nine-digit (XXXXX-XXXX) format value.</td>    </tr>    <tr>        <td>Lata</td><td>A maximum five-digit (XXXXX) numeric format.</td>    </tr>    <tr>        <td>EnableLCA</td><td>If set to true, local calling access numbers will be returned for Rate Center, NPA-NXX and NPANXXX orders if numbers are not available for the given criteria. Default is true.</td>    </tr>    <tr>        <td>Npa-Nxx or Npa-Nxxxx with EnableLCA</td><td>NpaNxx combination to be searched.<br>Valid Npa values:  [2-9] for the first digit, and [0-9] for both the second and third digits.<br>Valid Nxx values: [2-9] for the first digit, and [0-9] for both the second and third digits.<br>Valid Xxvalues [0-9].<br><br>if set to true, enables the ability to get local calling access numbers if numbers are not available for the given criteria.</td>    </tr>    <tr>        <td>LocalVanity</td><td>A text string used to request a regular vanity number. Valid range is between 4 and 7 alphanumeric characters.</td>    </tr>    <tr>        <td>EndsIn</td><td>Intended to use with LocalVanity only. The parameter value is true or false. If set to true, the search will look for only numbers which end in specified LocalVanity, otherwise LocalVanity sequence can be met anywhere in last 7 number digits. The default is false.</td>    </tr>    <tr>        <td>TollFreeVanity</td><td>A text string used to request a toll free vanity number. Valid range is between 4 and 7 alphanumeric characters.</td>    </tr>    <tr>        <td>TollFreeWildCardPattern</td><td>A 3-digit wild card pattern for specifying toll free prefixes, comprised of 8 followed by two stars, a digit and a star or two digits</td>    </tr>    <tr>        <td>ReservationIdList</td><td>If a telephone number or numbers have been previously reserved, the ReservationIdList provides the IDs necessary to release the numbers.  This only applies to reserved numbers - if no reservation has been placed on the numbers this list is not required.</td>    </tr>    <tr>        <td>TnAttributes</td>        <td>Attributes to be assigned to the telephone number. Optional parameter. Possible values: \"Protected\"</td>    </tr></table><br><br><b>Putting it all together</b><br><br>The request to order numbers is performed via a POST to the /orders resource.  As indicated above, the payload of this POST varies depending on the type of search that is to be performed for the numbers, with a unique payload element used to indicate each different order type. <br><br>The unique components of the payload are described in the table below.  These are combined with the common payload components in the first table above to create a full order payload.  Some complete payloads are captured in the examples. <br><br>The generic response payload is also captured below: <br><table style=\"text-align: left; width: 100%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"0\">    <tbody>        <tr><th>The 'wrapper' Request Payload'</th></tr>        <tr>            <td>                <pre>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;Order&gt;    &lt;CustomerOrderId&gt;SJM00001&lt;/CustomerOrderId&gt;    &lt;!--        There are various types of orders, all of which are submitted in the 'xxxOrderType'        element of the Order Request payload.  The 'Payload Segment' elements described in        the table below, which describe the encoding for the various order types, replace        this comment to create a complete payload that includes the order type and the        common elements.        Take a look at the example payloads as well.    --&gt;    &lt;SiteId&gt;202&lt;/SiteId&gt;    &lt;PeerId&gt;518824&lt;/PeerId&gt;    &lt;TnAttributes/&gt;&lt;/Order&gt;                </pre>            </td>        </tr>    </tbody></table><table style=\"text-align: left; width: 100%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"0\">  <tbody>    <col width=\"60%\">    <col width=\"40%\">    <tr>      <th>Payload segment</th>      <th>Description</th>    </tr>    <tr>      <td>      <pre>&lt;ExistingTelephoneNumberOrderType&gt;    &lt;TelephoneNumberList&gt;        &lt;TelephoneNumber&gt;9193752369&lt;/TelephoneNumber&gt;        &lt;TelephoneNumber&gt;9193752720&lt;/TelephoneNumber&gt;        &lt;TelephoneNumber&gt;9193752648&lt;/TelephoneNumber&gt;    &lt;/TelephoneNumberList&gt;    &lt;ReservationIdList&gt;        &lt;ReservationId&gt;[GUID]&lt;/ReservationId&gt;        &lt;ReservationId&gt;[GUID]&lt;/ReservationId&gt;    &lt;/ReservationIdList&gt;&lt;/ExistingTelephoneNumberOrderType&gt;</pre>      </td>      <td>Order a set of numbers known to be available. <br>      This often results if the numbers have been<br>      found using a separate <b>availableNumbers</b> search<br>        If the numbers have previously been reserved, <br>        a reservation id must be included</td>    </tr>    <tr>      <td>      <pre>&lt;AreaCodeSearchAndOrderType&gt;    &lt;AreaCode&gt;617&lt;/AreaCode&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;&lt;/AreaCodeSearchAndOrderType&gt;</pre>      </td>      <td>Allowed ranges ~ <br>      [2-9] for the first digit and <br>      [0, 9] for both the second and <br>      third digits.</td>    </tr>    <tr>      <td>      <pre>&lt;RateCenterSearchAndOrderType&gt;    &lt;RateCenter&gt;RALEIGH&lt;/RateCenter&gt;    &lt;State&gt;NC&lt;/State&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;&lt;/RateCenterSearchAndOrderType&gt;</pre>      </td>      <td>Specify the Rate Center and <br> the State</td>    </tr>    <tr>      <td>      <pre>&lt;NPANXXSearchAndOrderType&gt;    &lt;NpaNxx&gt;919439&lt;/NpaNxx&gt;    &lt;EnableTNDetail&gt;true&lt;/EnableTNDetail&gt;    &lt;EnableLCA&gt;false&lt;/EnableLCA&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;&lt;/NPANXXSearchAndOrderType&gt;</pre>      </td>      <td>Specify the NpaNxx combination to be ordered.<br>      Valid Npa values ~ [2-9] for the first digit,<br>      and [0-9] for both the second and third digits.<br>      Valid Nxx values ~ [2-9] for the first digit, <br>      and [0-9] for both the second and third digits.<br>      A similar approach is viable for NPANXXXX.<br>      The EnableLCA flag turns LCA search on or off.      </td>    </tr>    <tr>      <td>      <pre>&lt;TollFreeVanitySearchAndOrderType&gt;   &lt;Quantity&gt;1&lt;/Quantity&gt;       &lt;TollFreeVanity&gt;newcars&lt;/TollFreeVanity&gt;&lt;/TollFreeVanitySearchAndOrderType&gt;</pre>      </td>      <td>      Specify a Toll Free Vanity search, where the <br>      numbers ordered match a specific alphanumeric <br>      pattern between 4 and 7 characters long</td>    </tr>    <tr>      <td>      <pre>&lt;TollFreeWildCharSearchAndOrderType&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;    &lt;TollFreeWildCardPattern&gt;8**&lt;/TollFreeWildCardPattern&gt;&lt;/TollFreeWildCharSearchAndOrderType&gt;</pre>      </td>      <td>Specify the Toll Free wild card pattern.<br>      to be ordered, comprised of 3 digits beginning with '8'.<br>      Examples are 8**, 87*, etc.</td>    </tr>    <tr>      <td>      <pre>&lt;StateSearchAndOrderType&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;    &lt;State&gt;NC&lt;/State&gt;&lt;/StateSearchAndOrderType&gt;</pre>      </td>      <td>Specify the State to be searched<br>for telephone numbers</td>    </tr>    <tr>      <td>      <pre>&lt;CitySearchAndOrderType&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;    &lt;City&gt;RALEIGH&lt;/City&gt;    &lt;State&gt;NC&lt;/State&gt;&lt;/CitySearchAndOrderType&gt;</pre>      </td>      <td>Specify the City and State to be ordered from.</td>    </tr>    <tr>      <td>      <pre>&lt;ZIPSearchAndOrderType&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;    &lt;Zip&gt;27606&lt;/Zip&gt;&lt;/ZIPSearchAndOrderType&gt;</pre>      </td>      <td>Specify the Zip Code to be ordered from.</td>    </tr>    <tr>      <td>      <pre>&lt;LATASearchAndOrderType&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;       &lt;Lata&gt;224&lt;/Lata&gt;&lt;/LATASearchAndOrderType&gt;</pre>      </td>      <td>Specify the LATA to order <br> telephone numbers from.</td>    </tr>    <tr>      <td>      <pre>&lt;CombinedSearchAndOrderType&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;    &lt;AreaCode&gt;617&lt;/AreaCode&gt;    &lt;RateCenter&gt;RALEIGH&lt;/RateCenter&gt;    &lt;State&gt;NC&lt;/State&gt;    &lt;NpaNxx&gt;919439&lt;/NpaNxx&gt;    &lt;NpaNxxX&gt;9194391&lt;/NpaNxxX&gt;    &lt;Lata&gt;224&lt;/Lata&gt;    &lt;City&gt;RALEIGH&lt;/City&gt;    &lt;Zip&gt;27606&lt;/Zip&gt;    &lt;EnableLCA&gt;false&lt;/EnableLCA&gt;&lt;/CombinedSearchAndOrderType&gt;</pre>      </td>      <td>Specify the any combination of:<br>      <ul><li>AreaCode</li><li>RateCenter</li><li>State</li><li>NpaNxx</li><li>NpaNxxX</li><li>Lata</li><li>City</li><li>Zip</li></ul>      <br>But with following limitations:<ul>    <li>Parameters AreaCode, NpaNxx and NpaNxxX<br>are mutually exclusive</li>    <li>LCA search is supported only for<br>one of the following criteria:<ul><ul><li>NpaNxx</li><li>NpaNxxX</li><li>RateCenter and State</li></ul></li>    <li>If City or RateCenter is specified<br>then State is required</li></ul>      </td><tr><td><pre>&lt;CombinedSearchAndOrderType&gt;    &lt;Quantity&gt;1&lt;/Quantity&gt;    &lt;AreaCode&gt;617&lt;/AreaCode&gt;    &lt;LocalVanity&gt;newcars&lt;/LocalVanity&gt;    &lt;EndsIn&gt;false&lt;/EndsIn&gt;&lt;/CombinedSearchAndOrderType&gt;</pre></td><td>    Specify AreaCode and LocalVanity to order telephone numbers matching a specific alphanumeric pattern between 4 and 7 characters long.<br>    <br>    Limitations:    <ul>    <li>AreaCode is always required</li>    <li>No parameter combinations are allowed here</li>    <li>This order type is unsupported with BackOrderRequested=true</li>    </ul></td></tr><tr><td><pre> &lt;TnAttributes&gt;    &lt;TnAttribute&gt;Protected&lt;/TnAttribute&gt;    &lt;/TnAttributes&gt;</pre>        </td>        <td>Specify TnAttribute to be assigned to the ordered telephone numbers.</td>      </tr>    </tr>  </tbody></table><br> <br> Some examples of POST payloads for some orders are below...",
        "operationId" : "createOrder_3",
        "parameters" : [ {
          "name" : "accountid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Order"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "An Order has been successfully placed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<OrderResponse>    <Order>        <CustomerOrderId>123456789</CustomerOrderId>        <id>34adcd9f-2c4a-4631-9dae-d1f318ed57bc</id>        <Name>Zip Order</Name>        <OrderCreateDate>2014-07-11T17:13:57.788Z</OrderCreateDate>        <BackOrderRequested>false</BackOrderRequested>        <ZIPSearchAndOrderType>            <Quantity>1</Quantity>            <Zip>27606</Zip>        </ZIPSearchAndOrderType>        <TnAttributes>                <TnAttribute>Protected</TnAttribute>                <TnAttribute>External</TnAttribute>                <TnAttribute>Imported</TnAttribute>        </TnAttributes>        <PartialAllowed>true</PartialAllowed>        <SiteId>3013</SiteId>    </Order></OrderResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "One or more of the input parameters are invalid.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderResponse>    <ErrorList>        <Error>            <Code>5016</Code>            <Description>The SiteId submitted is invalid.</Description>        </Error>    </ErrorList>    <Order>        <CustomerOrderId>123456789</CustomerOrderId>        <Name>Area Code Order</Name>        <OrderCreateDate>2014-07-08T14:29:13.174Z</OrderCreateDate>        <BackOrderRequested>false</BackOrderRequested>        <AreaCodeSearchAndOrderType>            <AreaCode>435</AreaCode>            <Quantity>1</Quantity>        </AreaCodeSearchAndOrderType>        <TnAttributes>                <TnAttribute>Protected</TnAttribute>                <TnAttribute>External</TnAttribute>                <TnAttribute>Imported</TnAttribute>        </TnAttributes>        <PartialAllowed>true</PartialAllowed>        <SiteId>763</SiteId>    </Order></OrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountid}/orders/{orderId}" : {
      "put" : {
        "tags" : [ "external" ],
        "description" : "With the introduction of Backorder capabilities, new number orders may stay in backordered state while the order is filled.   While in this state it is possible to update the modifiable fields in the record, as well as to request that backorder processing of the order be ended.The fields that can be updated are...<ul><li>The order name</li><li>The customer order id</li><li>The backordered state.</li></ul>Specifying a &lt;CloseOrder&gt; value of true will cancel the backorder request, leaving the currently ordered numbers on the account.  No further numbers will be added to the account as a result of the order.",
        "operationId" : "updateOrder",
        "parameters" : [ {
          "name" : "accountid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Order"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The order has been successfully updated.   The payload contains no content, but a 200 OK indicates success.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><OrderResponse/>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The request payload is invalid",
            "content" : {
              "application/xml" : { }
            }
          },
          "404" : {
            "description" : "The order-id cannot be found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/{orderType}/{orderId}/notes" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve the set of notes associated with an order.",
        "operationId" : "getOrderNotes",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - there are Notes associated with the order, and they have been returned in the response.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Notes>    <Note>        <Id>87037</Id>        <UserId>jbm</UserId>        <Description>This is a test note</Description>        <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>    </Note>    <Note>        <Id>87039</Id>        <UserId>smckinnon</UserId>        <Description>This is a second test note</Description>        <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>    </Note></Notes>                    "
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Updates the Notes resource by adding a note. Adding a note to a port-in order causes a notification to be sent to Bandwidth Operations, so that they may assist as necessary.",
        "operationId" : "createOrderNote",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Note"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><NoteResponse>    <ResponseStatus>        <ErrorCode>12501</ErrorCode>        <Description>Username is required</Description>    </ResponseStatus></NoteResponse>           "
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/{orderType}/{orderId}/notes/{noteId}" : {
      "put" : {
        "tags" : [ "external" ],
        "description" : "Updates single note by it's id.",
        "operationId" : "updateOrderNote",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Note"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK - note has been updated.  No body is returned",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request - the note has not been updated because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><NoteResponse>    <ResponseStatus>        <ErrorCode>12501</ErrorCode>        <Description>Username is required</Description>    </ResponseStatus></NoteResponse>           "
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/TnReservation" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves an account's telephone number reservations",
        "operationId" : "getReservations",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An account's information has been successfully retrieved",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ReservationsResponse>    <Reservations>        <Count>1</Count>        <Reservation>            <ReservationId>0559244b-11e3-474f-a4fe-303f0d19c296</ReservationId>            <AccountId>12346099</AccountId>            <ReservationExpires>1690</ReservationExpires>            <ReservedTn>4354776010</ReservedTn>        </Reservation>    </Reservations></ReservationsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Reserves a telephone number for a default time of 4 hours. A successful reservation returns a location header that can be used to retrieve the reservation at a later time.",
        "operationId" : "createReservation",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Reservation"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The TN has been successfully reserved, with the link to the reservation in the Location Header.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "The Telephone Number requested is not available.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ReservationResponse>    <ResponseStatus>        <ErrorCode>5041</ErrorCode>        <Description>Reservation failed: telephone number 4354776010 is not available.</Description>    </ResponseStatus></ReservationResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/TnReservation/{reservationId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves a TN reservation's information.",
        "operationId" : "getReservation",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reservationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A reservation's information has been successfully retrieved.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ReservationResponse>    <Reservation>        <ReservationId>f342904f-b03a-4499-bac0-e8f43a2664a1</ReservationId>        <AccountId>12346099</AccountId>        <ReservationExpires>1492</ReservationExpires>        <ReservedTn>4354776010</ReservedTn>    </Reservation></ReservationResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "Deletes a TN reservation.",
        "operationId" : "deleteReservation",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reservationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A reservation has been successfully deleted.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/TnReservation" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieves reservation information associated with the Telephone Number.",
        "operationId" : "getReservationByTn",
        "parameters" : [ {
          "name" : "tn",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The reservation information has been successfully retrieved.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?> <TNReservation> <ReservationID>d28529e6-23dc-408e-b7ad-f2015a6975d5</ReservationID> <Account>12346099</Account> <ReservationExpires>14346</ReservationExpires> <ReservedTN>6136211234</ReservedTN> </TNReservation>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{region}/rateCenters/{abbreviation}/vendors/{vendor}/coverage" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getCoverage",
        "parameters" : [ {
          "name" : "region",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "abbreviation",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vendor",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "updateCoverage",
        "parameters" : [ {
          "name" : "region",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "abbreviation",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vendor",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/RateCenterCoverage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/{region}/rateCenters/{abbreviation}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getRateCenter",
        "parameters" : [ {
          "name" : "region",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "abbreviation",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/{region}/rateCenters" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getRateCentersByRegion",
        "parameters" : [ {
          "name" : "region",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/{region}/rateCenters/{abbreviation}/coverage" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getRateCenterCoverage",
        "parameters" : [ {
          "name" : "region",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "abbreviation",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/reports" : {
      "get" : {
        "tags" : [ "internal" ],
        "summary" : "Get all reports",
        "description" : "Get all report definitions",
        "operationId" : "getReports",
        "parameters" : [ {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hidden",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "summary" : "Create report",
        "description" : "Creates a report type/definition",
        "operationId" : "createReport_1",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve report template details.",
        "operationId" : "getReport",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ReportResponse>    <Report>        <Name>Sample Report 1</Name>        <JasperUri>/jasper/path/to/sample/report1</JasperUri>        <Scope>ACCOUNT</Scope>        <DisplayPriority>2</DisplayPriority>        <Parameters>            <Parameter>                <Name>Report Parameter 1</Name>                <Type>String</Type>                <Required>true</Required>                <JasperId>jasperParam1</JasperId>                <Description>Report Parameter 1 Description</Description>                <MultiSelectAllowed>false</MultiSelectAllowed>                <HelpInformation>Report Parameter 1 Help Text</HelpInformation>            </Parameter>            <Parameter>                <Name>Report Parameter 2</Name>                <Type>Enum</Type>                <Required>false</Required>                <!--Contains a semicolon separated list of InternalNames-->                <ValueFilter>Value1;Value2;Value3</ValueFilter>                <Values>                    <Value>                        <!--A InternalName tag value should be used in report instance creation-->                        <InternalName>Value1</InternalName>                        <!--A DisplayName tag value is used only for UI purposes-->                        <DisplayName>Display Value2</DisplayName>                    </Value>                    <Value>                        <InternalName>Value2</InternalName>                        <DisplayName>Value2</DisplayName>                    </Value>                    <Value>                        <InternalName>Value3</InternalName>                        <DisplayName>Display Value3</DisplayName>                    </Value>                </Values>                <JasperId>jasperParam2</JasperId>                <Description>Report Parameter 2 Description</Description>                <MultiSelectAllowed>true</MultiSelectAllowed>                <HelpInformation>Report Parameter 2 Help Text</HelpInformation>            </Parameter>        </Parameters>    </Report></ReportsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A report template matching the provided ID could not be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ReportResponse> <ResponseStatus> <ErrorCode>19000</ErrorCode> <Description>No report found with report ID of '123'</Description> </ResponseStatus> </ReportResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "summary" : "Update report",
        "description" : "Update an existing report template. Incorrect or omitted display priority will be replaced with the default value of 1.",
        "operationId" : "updateReport",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The report template was updated successfully.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A report template matching the provided ID could not be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ReportResponse> <ResponseStatus> <ErrorCode>19000</ErrorCode> <Description>No report found with report ID of '123'</Description> </ResponseStatus> </ReportResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete an existing report template.",
        "operationId" : "deleteReport",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The report template was deleted successfully.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "A report template matching the provided ID could not be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ReportResponse> <ResponseStatus> <ErrorCode>19000</ErrorCode> <Description>No report found with report ID of '123'</Description> </ResponseStatus> </ReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "This API call retrieves information about the account indicated by the Account ID.",
        "operationId" : "getAcctReports",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><AccountResponse>    <Account>        <AccountId>14</AccountId>        <AssociatedCatapultAccount>u-ertyhgfd12dcvdhnboklk</AssociatedCatapultAccount>        <GlobalAccountNumber>globalAccount</GlobalAccountNumber>        <CompanyName>CWI Hosting</CompanyName>        <AccountType>Business</AccountType>        <NenaId></NenaId>        <CustomerSegment>Trial</CustomerSegment>        <Tiers>            <Tier>0</Tier>        </Tiers>        <Address>            <HouseNumber>904</HouseNumber>            <HouseSuffix>E</HouseSuffix>            <PreDirectional></PreDirectional>            <StreetName>Anson</StreetName>            <StreetSuffix>St</StreetSuffix>            <PostDirectional></PostDirectional>            <AddressLine2></AddressLine2>            <City>Marshalltown</City>            <StateCode>IA</StateCode>            <Zip>50158</Zip>            <PlusFour></PlusFour>            <County></County>            <Country>United States</Country>            <AddressType>Billing</AddressType>        </Address>        <Contact>            <FirstName>Sanjay</FirstName>            <LastName>Rao</LastName>            <Phone>9195441234</Phone>            <Email>srao@bandwidth.com</Email>        </Contact>        <AltSpid>X455</AltSpid>        <SPID>9999</SPID>        <PortCarrierType>WIRELINE</PortCarrierType>    </Account></AccountResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/{reportId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "A GET issued on a specific report (as identified by it's ID) will return all of the details of that report, allowing the API user to create an instance of that report.  Those details include:    <ul>        <li>The report name</li>        <li>a description of the report in general terms</li>        <li>a set of parameters that are used to provide boundaries on the information that is provided. &nbsp;These parameters contain</li>        <ul>            <li>The parameter name,</li>            <li>a&nbsp;description of the parameter,</li>            <li>a declaration of whether it is required or not, </li>            <li>is multiple vales allowed or not, </li>            <li>the type of the parameter, which can be one of</li>                <ul>                    <li>Account ID (autofilled)</li>                    <li>Site ID</li>                    <li>SipPeer ID</li>                    <li>String</li>                    <li>Integer</li>                    <li>Boolean</li>                    <li>Enum, with a list of possible values.</li>                </ul>            <li>the help info for describing parameter</li>            </ul>        </ul>    </ul>",
        "operationId" : "getAcctReport",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of report template details.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ReportResponse>    <Report>        <Id>123</Id>        <Name>Sample Report 1</Name>        <Parameters>            <Parameter>                <Name>Report Parameter 1</Name>                <Type>String</Type>                <Required>true</Required>                <Description>Report Parameter 1 Description</Description>                <MultiSelectAllowed>false</MultiSelectAllowed>                <HelpInformation>Report Parameter 1 Help Text</HelpInformation>            </Parameter>            <Parameter>                <Name>Report Parameter 2</Name>                <Type>Enum</Type>                <Required>false</Required>                <!--Contains a semicolon separated list of InternalNames-->                <ValueFilter>Value1;Value2;Value3</ValueFilter>                <Values>                    <Value>                        <!--A InternalName tag value should be used in report instance creation-->                        <InternalName>Value1</InternalName>                        <!--A DisplayName tag value is used only for UI purposes-->                        <DisplayName>Display Value2</DisplayName>                    </Value>                    <Value>                        <InternalName>Value2</InternalName>                        <DisplayName>Value2</DisplayName>                    </Value>                    <Value>                        <InternalName>Value3</InternalName>                        <DisplayName>Display Value3</DisplayName>                    </Value>                </Values>                <Description>Report Parameter 2 Description</Description>                <MultiSelectAllowed>true</MultiSelectAllowed>                <HelpInformation>Report Parameter 2 Help Text</HelpInformation>            </Parameter>        </Parameters>    </Report></ReportsResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A report template matching the provided ID could not be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <ReportResponse> <ResponseStatus> <ErrorCode>19000</ErrorCode> <Description>No report found with report ID of '123'</Description> </ResponseStatus> </ReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}/instances" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve report instances associated with a specific report, including the up-to-date report generation status.",
        "operationId" : "getReportInstances",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "userInstancesOnly",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstancesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ReportInstancesResponse>    <Instances>        <Instance>            <Id>100090</Id>            <ReportId>100020</ReportId>            <JasperId>aadbb201-1e1c-4f4d-920b-a18ec121da6d</JasperId>            <JasperExportId>703aef1d-8ca5-4265-8114-308c2ffa517c</JasperExportId>            <JasperSessionId>E8279C44E4E88B361282EC9AD4F7665A</JasperSessionId>            <ReportName>Sample Report</ReportName>            <OutputFormat>pdf</OutputFormat>            <RequestedByUserName>jbm</RequestedByUserName>            <RequestedAt>2015-05-18 14:03:04</RequestedAt>            <Parameters>                <Parameter>                    <Name>AccountId</Name>                    <Value>1</Value>                </Parameter>            </Parameters>            <JasperReportStatus>Expired</JasperReportStatus>            <Status>Expired</Status>        </Instance>        <Instance>            <Id>100098</Id>            <ReportId>100020</ReportId>            <JasperId>4ff4d77c-a2b6-4ab6-8dd7-193bf072b64e</JasperId>            <JasperExportId>61c444e3-b8d1-4299-92f8-0371ba45e123</JasperExportId>            <JasperSessionId>813885D097A3DF7B0CAC94475CEE0CAA</JasperSessionId>            <ReportName>Sample Report</ReportName>            <OutputFormat>html</OutputFormat>            <RequestedByUserName>jbm</RequestedByUserName>            <RequestedAt>2015-05-19 09:18:40</RequestedAt>            <Parameters>                <Parameter>                    <Name>AccountId</Name>                    <Value>1</Value>                </Parameter>                <Parameter>                    <Name>SiteId</Name>                    <Value>1</Value>                </Parameter>            </Parameters>            <JasperReportStatus>Expired</JasperReportStatus>            <Status>Expired</Status>        </Instance>        <Instance>            <Id>100102</Id>            <ReportId>100020</ReportId>            <JasperId>83a5fd11-801d-4ee7-9f0c-0ab83882be86</JasperId>            <JasperExportId>d8396a60-200c-4205-9609-ceca3d47dc7a</JasperExportId>            <JasperSessionId>21E6866B95AC144828178A2CF251F756</JasperSessionId>            <ReportName>Sample Report</ReportName>            <OutputFormat>pdf</OutputFormat>            <RequestedByUserName>jbm</RequestedByUserName>            <RequestedAt>2015-05-19 11:05:12</RequestedAt>            <Parameters>                <Parameter>                    <Name>AccountId</Name>                    <Value>1</Value>                </Parameter>            </Parameters>            <JasperReportStatus>Ready</JasperReportStatus>            <Status>Ready</Status>            <ExpiresAt>2016-06-15</ExpiresAt>        </Instance>    </Instances></ReportInstancesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create a new report instance for a specific report.",
        "operationId" : "createReportInstance",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportInstance"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful creation of report instance.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ReportInstanceResponse>    <ResponseStatus>        <ErrorCode>19032</ErrorCode>        <Description>Missing one or more required report parameters: AccountId</Description>    </ResponseStatus></ReportInstanceResponse>"
                  }
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ReportInstanceResponse>    <ResponseStatus>        <ErrorCode>19031</ErrorCode>        <Description>Error encountered processing request via external reporting service.  Please contact Bandwidth support for further assistance.</Description>    </ResponseStatus></ReportInstanceResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/{reportId}/instances" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve report instances associated with a specific report, including the up-to-date report generation status.",
        "operationId" : "getAcctReportInstances",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "userInstancesOnly",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of report instances.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstancesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ReportInstancesResponse>    <Instances>        <Instance>            <Id>100090</Id>            <ReportId>100020</ReportId>            <ReportName>Sample Report</ReportName>            <OutputFormat>pdf</OutputFormat>            <RequestedByUserName>jbm</RequestedByUserName>            <RequestedAt>2015-05-18 14:03:04</RequestedAt>            <Parameters>                <Parameter>                    <Name>AccountId</Name>                    <Value>1</Value>                </Parameter>            </Parameters>            <Status>Expired</Status>        </Instance>        <Instance>            <Id>100098</Id>            <ReportId>100020</ReportId>            <ReportName>Sample Report</ReportName>            <OutputFormat>html</OutputFormat>            <RequestedByUserName>jbm</RequestedByUserName>            <RequestedAt>2015-05-19 09:18:40</RequestedAt>            <Parameters>                <Parameter>                    <Name>AccountId</Name>                    <Value>1</Value>                </Parameter>                <Parameter>                    <Name>SiteId</Name>                    <Value>1</Value>                </Parameter>            </Parameters>            <Status>Expired</Status>        </Instance>        <Instance>            <Id>100102</Id>            <ReportId>100020</ReportId>            <ReportName>Sample Report</ReportName>            <OutputFormat>pdf</OutputFormat>            <RequestedByUserName>jbm</RequestedByUserName>            <RequestedAt>2015-05-19 11:05:12</RequestedAt>            <Parameters>                <Parameter>                    <Name>AccountId</Name>                    <Value>1</Value>                </Parameter>            </Parameters>            <Status>Ready</Status>            <ExpiresAt>2015-06-15</ExpiresAt>        </Instance>    </Instances></ReportInstancesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "POSTing to the instances resource of a specific report will create an instance of that report that pulls from data that is filtered by the supplied parameters.  Those parameter values must match the parameters that are required as defined by the report, as provided by issuing a GET on the report. <br><br>The sequence of events is essentially to...<ol>    <li>issue a GET on the desired report/report-id to retrieve the parameter and other details of the report</li>    <li>issue a POST on the /report/report-id/instances resource, using the parameter information retrieved in the initial call to define the data that is needed</li></ol>The Location header will provide a link to the created report instance.  Note that the report instance itself contains only the metadata describing the instance.  A subsequent call to /report/report-id/instances/instance-id/file must be made to actually download the file.",
        "operationId" : "createAcctReportInstance",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportInstance"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful creation of report instance.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ReportInstanceResponse>    <ResponseStatus>        <ErrorCode>19032</ErrorCode>        <Description>Missing one or more required report parameters: AccountId</Description>    </ResponseStatus></ReportInstanceResponse>"
                  }
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<ReportInstanceResponse>    <ResponseStatus>        <ErrorCode>19031</ErrorCode>        <Description>Error encountered processing request via external reporting service.  Please contact Bandwidth support for further assistance.</Description>    </ResponseStatus></ReportInstanceResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/instances" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getInstances",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "userInstancesOnly",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/instances" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getAcctInstances",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "userInstancesOnly",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}/instances/{reportInstanceId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve report instance details, including the current report instance status.",
        "operationId" : "getReportInstance",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reportInstanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of report instance.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ReportInstanceResponse>        <Instance>            <Id>100102</Id>            <ReportId>100020</ReportId>            <JasperId>83a5fd11-801d-4ee7-9f0c-0ab83882be86</JasperId>            <JasperExportId>d8396a60-200c-4205-9609-ceca3d47dc7a</JasperExportId>            <JasperSessionId>21E6866B95AC144828178A2CF251F756</JasperSessionId>            <ReportName>Sample Report</ReportName>            <OutputFormat>pdf</OutputFormat>            <RequestedByUserName>jbm</RequestedByUserName>            <RequestedAt>2015-05-19 11:05:12</RequestedAt>            <Parameters>                <Parameter>                    <Name>AccountId</Name>                    <Value>1</Value>                </Parameter>            </Parameters>            <JasperReportStatus>Ready</JasperReportStatus>            <Status>Ready</Status>            <ExpiresAt>2016-06-15</ExpiresAt>        </Instance></ReportInstanceResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A report template matching the provided ID could not be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ReportInstanceResponse>    <ResponseStatus>        <ErrorCode>19019</ErrorCode>        <Description>No report instance found for report 100020 with Id of '100103'</Description>    </ResponseStatus></ReportInstanceResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "updateReportInstance",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reportInstanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportInstance"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/{reportId}/instances/{reportInstanceId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "A GET on the specific instance will retrieve report instance details, including the current report instance status.  All of the information required to understand the nature and limits of the reported data are contained in the payload, including the general description information as well as the list of parameters and the values assigned to those parameters.",
        "operationId" : "getAcctReportInstance",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reportInstanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ReportInstanceResponse>        <Instance>            <Id>100102</Id>            <ReportId>100020</ReportId>            <ReportName>Sample Report</ReportName>            <OutputFormat>pdf</OutputFormat>            <RequestedByUserName>jbm</RequestedByUserName>            <RequestedAt>2015-05-19 11:05:12</RequestedAt>            <Parameters>                <Parameter>                    <Name>AccountId</Name>                    <Value>1</Value>                </Parameter>            </Parameters>            <Status>Ready</Status>            <ExpiresAt>2016-06-15</ExpiresAt>        </Instance></ReportInstanceResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A report template matching the provided ID could not be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ReportInstanceResponse>    <ResponseStatus>        <ErrorCode>19019</ErrorCode>        <Description>No report instance found for report 100020 with Id of '100103'</Description>    </ResponseStatus></ReportInstanceResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "updateAcctReportInstance",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reportInstanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReportInstance"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{reportId}/instances/{reportInstanceId}/file" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve report instance output file, if output is available.",
        "operationId" : "getReportInstanceFile",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reportInstanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of report output.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceFileResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Report generation is still in progress.  Check the status of the report instance, and When the report instance status becomes \"Ready\",",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceFileResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version='1.0' encoding='UTF-8'?><ReportInstanceFileResponse>    <ResponseStatus>        <ErrorCode>19048</ErrorCode>        <Description>            Report generation in progress; Output not yet available        </Description>    </ResponseStatus></ReportInstanceFileResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A report instance matching the supplied identification information could not be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version='1.0' encoding='UTF-8'?><ReportInstanceFileResponse>    <ResponseStatus>        <ErrorCode>19019</ErrorCode>        <Description>            No report instance found for report 123 with Id of '456'        </Description>    </ResponseStatus></ReportInstanceFileResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/{reportId}/instances/{reportInstanceId}/file" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve report instance output file, if output is available.",
        "operationId" : "getAcctReportInstanceFile",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reportInstanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of report output.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceFileResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Report generation is still in progress.  Check the status of the report instance, and When the report instance status becomes \"Ready\",",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceFileResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version='1.0' encoding='UTF-8'?><ReportInstanceFileResponse>    <ResponseStatus>        <ErrorCode>19048</ErrorCode>        <Description>            Report generation in progress; Output not yet available        </Description>    </ResponseStatus></ReportInstanceFileResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "A report instance matching the supplied identification information could not be found.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version='1.0' encoding='UTF-8'?><ReportInstanceFileResponse>    <ResponseStatus>        <ErrorCode>19019</ErrorCode>        <Description>            No report instance found for report 123 with Id of '456'        </Description>    </ResponseStatus></ReportInstanceFileResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{reportId}/instances/{reportInstanceId}" : {
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteReportInstance",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reportInstanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/{reportId}/instances/{reportInstanceId}" : {
      "delete" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "deleteAcctReportInstance",
        "parameters" : [ {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "reportInstanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportInstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/availableNumbers" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves the phone numbers according to the input parameters",
        "operationId" : "searchTelephoneNumbers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "areaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rateCenter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lata",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zip",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tollFreeWildCardPattern",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tollFreeVanity",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "localVanity",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endsIn",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "enableTNDetail",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "orderBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protected",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "LCA",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of available numbers is provided.  Additional information is available if the queryParameter enableTNDetail is true.If no numbers are available an empty SearchResult element is returned.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResult"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SearchResult>    <ResultCount>384</ResultCount>    <TelephoneNumberList>        <TelephoneNumber>4354776112</TelephoneNumber>                    <!---- SNIP ---->        <TelephoneNumber>4357095160</TelephoneNumber>    </TelephoneNumberList></SearchResult>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid/missing input parameter",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SearchResult>    <Error>        <Code>4010</Code>        <Description>One of more required search parameters are null or empty, please refer to the api documentation</Description>    </Error></SearchResult>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/availableNpaNxx" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieves a list of available Npa-Nxx telephone numbers.",
        "operationId" : "searchAvailableNpaNxx",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "areaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "quantity",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The quantity of available phone numbers, grouped by NPA-NXX.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultForAvailableNpaNxx"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><SearchResultForAvailableNpaNxx>    <AvailableNpaNxxList>        <AvailableNpaNxx>            <City>NASHVILLE</City>            <Npa>252</Npa>            <Nxx>220</Nxx>            <Quantity>1</Quantity>            <State>NC</State>        </AvailableNpaNxx>        <AvailableNpaNxx>            <City>FARMVILLE</City>            <Npa>252</Npa>            <Nxx>228</Nxx>            <Quantity>1</Quantity>            <State>NC</State>        </AvailableNpaNxx>    </AvailableNpaNxxList></SearchResultForAvailableNpaNxx>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "There are no phone numbers within the specified scope.",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SearchResultForAvailableNpaNxx>    <Error>        <Code>4000</Code>        <Description>The area code specified 433 is not present as a valid entry in our system</Description>    </Error></SearchResultForAvailableNpaNxx>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rateCenters" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "The Rate Centers API Call returns information about the Bandwidth CLEC Network, including coverage data, indicating both the extent of on-net and off-net coverage, as well as number availability, again from an on-net and off-net perspective. The rules are as follows- <ul><li>If supported=true is specified, then the coverage or availability is reported for the Bandwidth CLEC only. </li><li>If supported=true is omitted or false, then the coverage or availability is reported for the combination of the Bandwidth CLEC and our partners </li><li>If available=true is specified, then only Rate Centers in which we have available numbers are reported. </li><li>If available is omitted or false then all Rate Centers within the scope defined by supported will be returned. </li></ul>These rules apply for both the /rateCenters and /cities API calls. <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\"> <tbody> <tr> <td valign=\"top\" > </td> <td valign=\"top\" > Supported = true </td> <td valign=\"top\" > Supported is missing </td> </tr> <tr> <td valign=\"top\" > available = true </td> <td valign=\"top\" > Available numbers within the Bandwidth CLEC network </td> <td valign=\"top\" > Available numbers within the Bandwidth CLEC network combined with our partner networks </td> </tr> <tr> <td valign=\"top\" > available is missing </td> <td valign=\"top\" > Coverage in the Bandwidth CLEC </td> <td valign=\"top\" > Coverage of the combined Bandwidth CLEC + Partner networks </td> </tr> </tbody> </table>",
        "operationId" : "searchRateCenters",
        "parameters" : [ {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supported",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "available",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This response returns the list of Rate Center names and abbreviations.  If 'available' is specified then the number of TNs available in that Rate Center is also included.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RateCenterSearchResults"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><RateCenterResponse>    <ResultCount>450</ResultCount>    <RateCenters>        <RateCenter>            <Abbreviation>ADAMS</Abbreviation>            <Name>ADAMS</Name>        </RateCenter>        <RateCenter>            <Abbreviation>AINSWORTH</Abbreviation>            <Name>AINSWORTH</Name>        </RateCenter>        <RateCenter>            <Abbreviation>ALBION</Abbreviation>            <Name>ALBION</Name>        </RateCenter>        <RateCenter>            <Abbreviation>ALEXANDRIA</Abbreviation>            <Name>ALEXANDRIA</Name>        </RateCenter>        <!-- ... SNIP ... -->        <RateCenter>            <Abbreviation>WOOD RIVER</Abbreviation>            <Name>WOOD RIVER</Name>        </RateCenter>        <RateCenter>            <Abbreviation>WYMORE</Abbreviation>            <Name>WYMORE</Name>        </RateCenter>        <RateCenter>            <Abbreviation>WYFRYCSTHL</Abbreviation>            <Name>WYNOT FORDYCE SAINT HELENA</Name>        </RateCenter>        <RateCenter>            <Abbreviation>YORK</Abbreviation>            <Name>YORK</Name>        </RateCenter>        <RateCenter>            <Abbreviation>YUTAN</Abbreviation>            <Name>YUTAN</Name>        </RateCenter>    </RateCenters></RateCenterResponse><!-- .....OR.....In the case that the query parameter available is set to true ,we will include the quantity of numbers that are availablein the indicated Rate Center --><?xml version=\"1.0\"?><RateCenterResponse>    <ResultCount>131</ResultCount>    <RateCenters>        <RateCenter>            <Abbreviation>ADAMS</Abbreviation>            <AvailableTelephoneNumberCount>108</AvailableTelephoneNumberCount>            <Name>ADAMS</Name>        </RateCenter>        <RateCenter>            <Abbreviation>ALEXANDRIA</Abbreviation>            <AvailableTelephoneNumberCount>230</AvailableTelephoneNumberCount>            <Name>ALEXANDRIA</Name>        </RateCenter>        <RateCenter>            <Abbreviation>ASHLAND</Abbreviation>            <AvailableTelephoneNumberCount>129</AvailableTelephoneNumberCount>            <Name>ASHLAND</Name>        </RateCenter>        <!-- ... SNIP ... -->        <RateCenter>            <Abbreviation>WEST POINT</Abbreviation>            <AvailableTelephoneNumberCount>85</AvailableTelephoneNumberCount>            <Name>WEST POINT</Name>        </RateCenter>        <RateCenter>            <Abbreviation>WESTERN</Abbreviation>            <AvailableTelephoneNumberCount>134</AvailableTelephoneNumberCount>            <Name>WESTERN</Name>        </RateCenter>        <RateCenter>            <Abbreviation>WILBER</Abbreviation>            <AvailableTelephoneNumberCount>135</AvailableTelephoneNumberCount>            <Name>WILBER</Name>        </RateCenter>        <RateCenter>            <Abbreviation>WYMORE</Abbreviation>            <AvailableTelephoneNumberCount>132</AvailableTelephoneNumberCount>            <Name>WYMORE</Name>        </RateCenter>        <RateCenter>            <Abbreviation>YUTAN</Abbreviation>            <AvailableTelephoneNumberCount>588</AvailableTelephoneNumberCount>            <Name>YUTAN</Name>        </RateCenter>    </RateCenters></RateCenterResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cities" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "The Rate Centers and Cities API Calls return information about the Bandwidth CLEC Network, including coverage data, indicating both the extent of on-net and off-net coverage, as well as number availability, again from an on-net and off-net perspective. The rules are as follows- <ul><li>If supported=true is specified, then the coverage or availability is reported for the Bandwidth CLEC only. </li><li>If supported is omitted or false, then the coverage or availability is reported for the combination of the Bandwidth CLEC and our partners </li><li>If available=true is specified, then only Rate Centers in which we have available numbers are reported. </li><li>If available is omitted or false, then all Rate Centers within the scope defined by supported will be returned. </li></ul>These rules apply for both the /rateCenters and /cities API calls. <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\"> <tbody> <tr> <td valign=\"top\" > </td> <td valign=\"top\" > Supported = true </td> <td valign=\"top\" > Supported is missing </td> </tr> <tr> <td valign=\"top\" > available = true </td> <td valign=\"top\" > Available numbers within the Bandwidth CLEC network </td> <td valign=\"top\" > Available numbers within the Bandwidth CLEC network combined with our partner networks </td> </tr> <tr> <td valign=\"top\" > available is missing </td> <td valign=\"top\" > Coverage in the Bandwidth CLEC </td> <td valign=\"top\" > Coverage of the combined Bandwidth CLEC + Partner networks </td> </tr> </tbody> </table>",
        "operationId" : "searchCities",
        "parameters" : [ {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "supported",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "available",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This response returns the list of cities, along with the Rate Centers that serve those Cities.  If 'available' is specified then the number of TNs available in that city / RC combination is also included.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CitySearchResults"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\"?><CityResponse>    <ResultCount>449</ResultCount>    <Cities>        <City>            <RcAbbreviation>DOUGLAS</RcAbbreviation>            <Name>ADAMS</Name>        </City>        <City>            <RcAbbreviation>FILLEY</RcAbbreviation>            <Name>ADAMS</Name>        </City>        <City>            <RcAbbreviation>AINSWORTH</RcAbbreviation>            <Name>AINSWORTH</Name>        </City>        <!-- ... SNIP ... -->        <City>            <RcAbbreviation>LONG PINE</RcAbbreviation>            <Name>AINSWORTH</Name>        </City>        <City>            <RcAbbreviation>ODELL</RcAbbreviation>            <Name>WYMORE</Name>        </City>        <City>            <RcAbbreviation>BRADSHAW</RcAbbreviation>            <Name>YORK</Name>        </City>        <City>            <RcAbbreviation>YORK</RcAbbreviation>            <Name>YORK</Name>        </City>        <City>            <RcAbbreviation>WACO</RcAbbreviation>            <Name>YORK</Name>        </City>    </Cities></CityResponse>OR.....<?xml version=\"1.0\"?><CityResponse>    <ResultCount>129</ResultCount>    <Cities>        <City>            <RcAbbreviation>FILLEY</RcAbbreviation>            <AvailableTelephoneNumberCount>266</AvailableTelephoneNumberCount>            <Name>ADAMS</Name>        </City>        <City>            <RcAbbreviation>DOUGLAS</RcAbbreviation>            <AvailableTelephoneNumberCount>378</AvailableTelephoneNumberCount>            <Name>ADAMS</Name>        </City>        <City>            <RcAbbreviation>WAKEFIELD</RcAbbreviation>            <AvailableTelephoneNumberCount>272</AvailableTelephoneNumberCount>            <Name>ALLEN</Name>        </City>        <City>            <RcAbbreviation>ASHLAND</RcAbbreviation>            <AvailableTelephoneNumberCount>129</AvailableTelephoneNumberCount>            <Name>ASHLAND</Name>        </City>        <!-- ... SNIP ... -->        </City>        <City>            <RcAbbreviation>WEST POINT</RcAbbreviation>            <AvailableTelephoneNumberCount>85</AvailableTelephoneNumberCount>            <Name>WEST POINT</Name>        </City>        <City>            <RcAbbreviation>OAKLAND</RcAbbreviation>            <AvailableTelephoneNumberCount>290</AvailableTelephoneNumberCount>            <Name>WEST POINT</Name>        </City>        <City>            <RcAbbreviation>WESTERN</RcAbbreviation>            <AvailableTelephoneNumberCount>134</AvailableTelephoneNumberCount>            <Name>WESTERN</Name>        </City>        <City>            <RcAbbreviation>WAYNE</RcAbbreviation>            <AvailableTelephoneNumberCount>434</AvailableTelephoneNumberCount>            <Name>WINSIDE</Name>        </City>        <City>            <RcAbbreviation>BRADSHAW</RcAbbreviation>            <AvailableTelephoneNumberCount>274</AvailableTelephoneNumberCount>            <Name>YORK</Name>        </City>    </Cities></CityResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coveredRateCenters" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "The Covered Rate Centers API Call return information about the Bandwidth CLEC Network, including coverage data, indicating both the extent of on-net and off-net coverage, as well as number availability. The various query parameters are summarized in the following table ... <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\"> <tbody> <tr> <td valign=\"top\" width=\"114\"> <p><strong>Query Parameter</strong> </p> </td> <td valign=\"top\"> <p><strong>Description</strong> </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>page </p> </td> <td valign=\"top\"> <p>The starting value for a paginated response. The default is ‘1’ indicating the first page of results. </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>size </p> </td> <td valign=\"top\"> <p>The number of rate centers to include in a paginated result payload. </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>state </p> </td> <td valign=\"top\"> <p>A 2 character State code </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>abbreviation </p> </td> <td valign=\"top\"> <p>A rate center abbreviation </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>name </p> </td> <td valign=\"top\"> <p>A rate center name </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>zip </p> </td> <td valign=\"top\"> <p>A 5 digit zip code </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>city </p> </td> <td valign=\"top\"> <p>A City name </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>lata </p> </td> <td valign=\"top\"> <p>A 3 or 5 digit LATA </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>tier </p> </td> <td valign=\"top\"> <p>A bandwidth coverage tier; a value from 0 to 5. </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>npa </p> </td> <td valign=\"top\"> <p>A 3 digit NPA or Area Code </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>npaNxx </p> </td> <td valign=\"top\"> <p>6 digits NPA and NXX values </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>npaNxxX </p> </td> <td valign=\"top\"> <p>7 digits of NPA, NXX and thousands block values. </p> </td> </tr> <tr> <td valign=\"top\" width=\"114\"> <p>embed </p> </td> <td valign=\"top\"> <p>One of the values [ZipCodes, Cities, NpaNxxX, AvailableNumberCount, LimitedAvailableNumberCount, LocalRateCenters]. <br> This repeatable query parameter will force a list (or multiple lists) of the indicated data to be provided in the response. For example if the payload should contain a list of the Cities covered by the Rate Centers then embed=cities would be included as a query parameter.<br> No filter parameters are supported if <q>LocalRateCenters</q> is specified. In this case only <q>size</q>, <q>page</q> and any other <q>embed</q> parameters are supported. </p> </td> </tr> </tbody> </table>",
        "operationId" : "searchCoveredRateCenters",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "abbreviation",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "zip",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lata",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npa",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxx",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "npaNxxX",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "embed",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This response returns the list of Covered Rate Centers. <i><b>TotalCount</b></i> element's value represents the total number of rate centers for specified query parameters starting from the current page and included in response only if more rate centers available.  ",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CoveredRateCenterSearchResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <CoveredRateCenters> <TotalCount>18</TotalCount> <Links> <first>Link=&lt;https://api.inetwork.com:443/v1.0/coveredRateCenters?npa=310&amp;size=10&amp;embed=Cities&amp;embed=ZipCodes&amp;embed=NpaNxxX&amp;embed=Vendors&amp;page=1&gt;;rel=\"first\";</first> <next>Link=&lt;https://api.inetwork.com:443/v1.0/coveredRateCenters?npa=310&amp;size=10&amp;embed=Cities&amp;embed=ZipCodes&amp;embed=NpaNxxX&amp;embed=Vendors&amp;page=5&gt;;rel=\"next\";</next> </Links> <CoveredRateCenter> <Name>AVALON</Name> <Abbreviation>AVALON</Abbreviation> <State>CA</State> <Lata>730</Lata> <AvailableNumberCount>1</AvailableNumberCount> <LimitedAvailableNumberCount>1</LimitedAvailableNumberCount> <ZipCodes> <ZipCode>90731</ZipCode> </ZipCodes> <Cities> <City>SAN PEDRO</City> </Cities> </Vendors> <Tiers> <Tier>0</Tier> </Tiers> <NpaNxxXs> <NpaNxxX>3105100</NpaNxxX> <NpaNxxX>3105101</NpaNxxX> <NpaNxxX>3109498</NpaNxxX> <NpaNxxX>3109499</NpaNxxX> <NpaNxxX>4242260</NpaNxxX> </NpaNxxXs> <Id>3151</Id> <LocalRateCenters> <RateCenterId>369</RateCenterId> <RateCenterId>7843</RateCenterId> <RateCenterId>7945</RateCenterId> <RateCenterId>2461</RateCenterId> <RateCenterId>10741</RateCenterId> <RateCenterId>7059</RateCenterId> </LocalRateCenters> </CoveredRateCenter> <CoveredRateCenter> <Name>BEVERLY HILLS</Name> <Abbreviation>BEVERLYHLS</Abbreviation> <State>CA</State> <Lata>730</Lata> <AvailableNumberCount>25</AvailableNumberCount> <LimitedAvailableNumberCount>20</LimitedAvailableNumberCount> <ZipCodes> <ZipCode>90013</ZipCode> <ZipCode>90014</ZipCode> <ZipCode>90015</ZipCode> <ZipCode>90017</ZipCode> <ZipCode>90044</ZipCode> <ZipCode>90048</ZipCode> <ZipCode>90059</ZipCode> <ZipCode>90061</ZipCode> <ZipCode>90071</ZipCode> <ZipCode>90079</ZipCode> <ZipCode>90210</ZipCode> <ZipCode>90211</ZipCode> <ZipCode>90212</ZipCode> <ZipCode>90247</ZipCode> <ZipCode>90248</ZipCode> <ZipCode>90249</ZipCode> <ZipCode>91352</ZipCode> <ZipCode>91403</ZipCode> <ZipCode>91411</ZipCode> <ZipCode>91423</ZipCode> <ZipCode>91504</ZipCode> <ZipCode>91505</ZipCode> </ZipCodes> <Cities> <City>BEVERLY HILLS</City> <City>BURBANK</City> <City>GARDENA</City> <City>LOS ANGELES</City> <City>SHERMAN OAKS</City> <City>SUN VALLEY</City> <City>VAN NUYS</City> </Cities> </Vendors> <Tiers> <Tier>0</Tier> </Tiers> <NpaNxxXs> <NpaNxxX>3102010</NpaNxxX> <NpaNxxX>3102011</NpaNxxX> <NpaNxxX>3102012</NpaNxxX> <NpaNxxX>3102013</NpaNxxX> <NpaNxxX>3102014</NpaNxxX> <NpaNxxX>3102015</NpaNxxX> <NpaNxxX>3102016</NpaNxxX> <NpaNxxX>3102017</NpaNxxX> <NpaNxxX>3102018</NpaNxxX> <NpaNxxX>3102019</NpaNxxX> <NpaNxxX>4246669</NpaNxxX> <NpaNxxX>4247770</NpaNxxX> <NpaNxxX>4247771</NpaNxxX> <NpaNxxX>4247772</NpaNxxX> <NpaNxxX>4247773</NpaNxxX> <NpaNxxX>4247774</NpaNxxX> <NpaNxxX>4247775</NpaNxxX> <NpaNxxX>4247776</NpaNxxX> <NpaNxxX>4247777</NpaNxxX> <NpaNxxX>4247778</NpaNxxX> <NpaNxxX>4247779</NpaNxxX> </NpaNxxXs> <Id>3538</Id> <LocalRateCenters> <RateCenterId>4421</RateCenterId> <RateCenterId>14259</RateCenterId> </LocalRateCenters> </CoveredRateCenter> </CoveredRateCenters>"
                  }
                }
              }
            }
          },
          "303" : {
            "description" : "No <i><b>page</b></i> or <i><b>size</b></i> query parameters specified. Link to first page of results provided in <i><b>Location</b></i> header",
            "content" : {
              "application/xml" : { }
            }
          },
          "400" : {
            "description" : "Invalid query parameter value",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<CoveredRateCenters>    <ResponseStatus>        <ErrorCode>4002</ErrorCode>        <Description>Please verify that your NPA, NPA-NXX, or NPA-NXX-X search input parameters are correct.</Description>    </ResponseStatus></CoveredRateCenters>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coveredRateCenters/{rateCenterId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about a specific covered rate center identified as the resource.",
        "operationId" : "searchCoveredRateCenter",
        "parameters" : [ {
          "name" : "rateCenterId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CoveredRateCenter"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <CoveredRateCenter> <Name>LOMITA</Name> <Abbreviation>LOMITA</Abbreviation> <State>CA</State> <Lata>730</Lata> <AvailableNumberCount>5536</AvailableNumberCount> <LimitedAvailableNumberCount>5236</LimitedAvailableNumberCount> <ZipCodes> <ZipCode>90044</ZipCode> <ZipCode>90059</ZipCode> <ZipCode>90061</ZipCode> <ZipCode>90247</ZipCode> <ZipCode>90248</ZipCode> <ZipCode>90249</ZipCode> <ZipCode>90717</ZipCode> <ZipCode>90802</ZipCode> <ZipCode>90813</ZipCode> <ZipCode>90822</ZipCode> <ZipCode>90831</ZipCode> <ZipCode>90834</ZipCode> </ZipCodes> <Cities> <City>GARDENA</City> <City>LOMITA</City> <City>LONG BEACH</City> <City>LOS ANGELES</City> </Cities> </Vendors> <Tiers> <Tier>0</Tier> </Tiers> <NpaNxxXs> <NpaNxxX>3102570</NpaNxxX> <NpaNxxX>3102571</NpaNxxX> </NpaNxxXs> <Id>6854</Id> <LocalRateCenters> <RateCenterId>369</RateCenterId> <RateCenterId>7843</RateCenterId> <RateCenterId>7945</RateCenterId> </LocalRateCenters> </CoveredRateCenter>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND - the rate center id does not exist in the system",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/typeahead" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "doTypeaheadSearch",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "list the products associated with a SIP Peer",
        "operationId" : "getSipPeerProducts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "There is at least one product associated with the SIP Peer. If there is no products associated with Sip Peer, empty list will be displayed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerProductsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SipPeerProductResponse>    <Products>        <Product>            <Name>Termination</Name>        </Product>        <Product>            <Name>EdgeManagement</Name>        </Product>        <Product>            <Name>Messaging</Name>        </Product>        <Product>            <Name>Origination</Name>        </Product>    </Products></SipPeerProductResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/edgemanagement" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Retrieve SBC settings associated with a Sip Peer",
        "operationId" : "getSipPeerEdgeManagementProducts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerEdgeManagementProductResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementResponse>    <EdgeManagementProduct>        <EdgeManagementSettings>            <TrunkGroupId>SipPeerEMTrunkGroup</TrunkGroupId>            <NodeGroupName>East Coast 01</NodeGroupName>        </EdgeManagementSettings>    </EdgeManagementProduct></EdgeManagementResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>13563 \"Sip Peer '544545' account '12346159' and site '483' does not exist\"</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementResponse>    <ResponseStatus>        <ErrorCode>13563</ErrorCode>        <Description>Sip Peer '544545' account '12346159' and site '483' does not exist</Description>    </ResponseStatus></EdgeManagementResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found - The SBC settings on Sip Peer does not exists",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementResponse>    <ResponseStatus>        <Description>The resource does not exist</Description>    </ResponseStatus></EdgeManagementResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Update SBC setting to Sip Peer",
        "operationId" : "updateSipPeerEdgeManagementProducts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerEdgeManagementProduct"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "SBC setting updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerEdgeManagementProductResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>12041 \"EdgeManagement product has not been configured\"</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementResponse>    <ResponseStatus>        <ErrorCode>12041</ErrorCode>        <Description>EdgeManagement product has not been configured</Description>    </ResponseStatus></EdgeManagementResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Add SBC setting to Sip Peer",
        "operationId" : "createSipPeerEdgeManagementProducts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerEdgeManagementProduct"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "SBC setting added",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerEdgeManagementProductResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>12041 \"EdgeManagement product has not been configured\"</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementResponse>    <ResponseStatus>        <ErrorCode>12041</ErrorCode>        <Description>EdgeManagement product has not been configured</Description>    </ResponseStatus></EdgeManagementResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete SBC settings from Sip Peer",
        "operationId" : "deleteSipPeerEdgeManagementProducts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SBC settings deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerEdgeManagementProductResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>13563 \"Sip Peer '544545' account '12346159' and site '483' does not exist\"</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><EdgeManagementResponse>    <ResponseStatus>        <ErrorCode>13563</ErrorCode>        <Description>Sip Peer '544545' account '12346159' and site '483' does not exist</Description>    </ResponseStatus></EdgeManagementResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/messaging/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve sipper messaging settings",
        "operationId" : "retrieveMessagingSettings",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerMessagingSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerMessagingSettingsResponse>    <SipPeerMessagingSettings>        <BreakOutCountries>            <Country>CAN</Country>            <Country>GBR</Country>        </BreakOutCountries>    </SipPeerMessagingSettings></SipPeerMessagingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "create/update/delete messaging settings",
        "operationId" : "updateMessagingSettings_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerMessagingSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "settings were successfully created/updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerMessagingSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerMessagingSettingsResponse>    <SipPeerMessagingSettings>        <BreakOutCountries>            <Country>CAN</Country>            <Country>GBR</Country>         </BreakOutCountries>    </SipPeerMessagingSettings></SipPeerMessagingSettingsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "settings were successfully created/updated",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerMessagingSettingsResponse>    <ResponseStatus>        <ErrorCode>13654</ErrorCode>        <Description>The country values '[GBR]' do not match a 3-character country code that has been approved for this account.</Description>    </ResponseStatus></SipPeerMessagingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/messaging/features/sms" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve sms feature settings for sippeer",
        "operationId" : "retrieveSmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Payload contains sms feature settings for sippeer",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerSmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <SipPeerSmsFeature>        <SipPeerSmsFeatureSettings>            <TollFree>true</TollFree>            <ShortCode>true</ShortCode>            <A2pLongCode>DefaultOff</A2pLongCode>            <A2pMessageClass>SomeMessageClass</A2pMessageClass>            <A2pCampaignId>SomeCampaignId</A2pCampaignId>            <Protocol>SMPP</Protocol>            <Zone1>true</Zone1>            <Zone2>true</Zone2>            <Zone3>true</Zone3>            <Zone4>true</Zone4>            <Zone5>true</Zone5>        </SipPeerSmsFeatureSettings>        <SmppHosts>            <SmppHost>                <HostName>54.10.88.146</HostName>                <HostId>18</HostId>                <Priority>0</Priority>                <ConnectionType>RECEIVER_ONLY</ConnectionType>            </SmppHost>        </SmppHosts>    </SipPeerSmsFeature></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Update sms feature settings. <br/><b>Warning</b>: settings A2pLongCode as 'ON' or 'OFF' will enforce this value for all tns under target sippeer <br/><b>Note</b>: In case of using SMPP protocol, it may be not possible to add or delete hosts with large subnet masks. <br/>Please refer to the documentation ofaccounts/:accountid/sites/:siteid/sippeers/:sippeerid/products/:messaging/features/sms/smpp/hostsendpoint for information about restrictions and other tips regarding smpp hosts.",
        "operationId" : "updateSmsFeature_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerSmsFeature"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "settings have been successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerSmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <SipPeerSmsFeature>        <SipPeerSmsFeatureSettings>            <TollFree>false</TollFree>            <ShortCode>true</ShortCode>            <A2pLongCode>DefaultOff</A2pLongCode>            <A2pMessageClass>SomeMessageClass</A2pMessageClass>            <A2pCampaignId>NewCampaignId</A2pCampaignId>            <Protocol>SMPP</Protocol>            <Zone1>true</Zone1>            <Zone2>false</Zone2>            <Zone3>false</Zone3>            <Zone4>false</Zone4>            <Zone5>false</Zone5>        </SipPeerSmsFeatureSettings>        <SmppHosts>            <SmppHost>                <HostName>235.133.23.79</HostName>                <HostId>6</HostId>                <Priority>0</Priority>                <ConnectionType>TRANSCEIVER</ConnectionType>            </SmppHost>            <SmppHost>                <HostName>47.123.17.16/30</HostName>                <HostId>18</HostId>                <Priority>0</Priority>                <ConnectionType>TRANSCEIVER</ConnectionType>            </SmppHost>        </SmppHosts>    </SipPeerSmsFeature></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>CampaignID shouldn't be present if all of features 'A2pLongCode', 'TollFree' and 'ShortCode' are disabled</li>   <li>CampaignID is required if at least one of features 'A2pLongCode', 'TollFree' and 'ShortCode' is enabled</li>   <li>Campaign ID '%s' was not found in list of authorized Campaign IDs.</li>   <li>A2P Campaign ID '%s' is not valid. Needs to be between 1 and 64 characters. Only alphanumeric characters,   whitespaces, dashes, underscores and dots are allowed.</li>   <li>A2P Message Class '%s' is not valid.</li>   <li>A2P Message Class is required if at least one of features 'A2pLongCode', 'TollFree' and 'ShortCode' is enabled</li>   <li>A2P Message Class shouldn't be present if all of features 'A2pLongCode', 'TollFree' and 'ShortCode' are disabled</li>   <li>A2P Message Class '%s' was not found in list of authorized Message Classes.</li>   <li>A2P Message Class is required if 'A2pLongCode' is enabled.</li>   <li>A2P Message Class shouldn't be present if 'A2pLongCode' is disabled.</li>   <li>A2pLongCode value is invalid. Valid values are: 'ON', 'OFF', 'DefaultOn', 'DefaultOff'.</li>   <li>Host ip or mask can't be changed</li>   <li>47.0.0.0/12 has invalid mask. Valid mask values: 14-32</li>   <li>Termination IP 47.123.17.16/30 overlaps with an address that is already in use</li>   <li>Termination IP 47.123.17.16/30 overlaps with addresses that are already in use: 47.123.17.18</li>   <li>The IP address provided: &lt;47.123.17.17&gt; contains a non zero subnet portion. An equivalent   IP address such as &lt;47.123.17.16&gt; with a zero subnet value must be provided</li>   <li>Can not disable shortcode sms settings for a SipPeer if shortcode numbers with messaging enabled   are present on this SipPeer</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <ResponseStatus>        <ErrorCode>13637</ErrorCode>        <Description>CampaignID shouldn't be present if all of features 'A2pLongCode', 'TollFree' and 'ShortCode' are disabled.</Description>    </ResponseStatus></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access denied. Possible errors in response:<ul>   <li>Configuring subnet values larger than /20 requires Bandwidth staff intervention</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <ResponseStatus>        <ErrorCode>13674</ErrorCode>        <Description>Configuring subnet values larger than /20 requires Bandwidth staff intervention</Description>    </ResponseStatus></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Create sms feature settings. <br/><b>Warning</b>: settings A2pLongCode as 'ON' or 'OFF' will enforce this value for all tns under target sippeer <br/><b>Note</b>: In case of using SMPP protocol, it may be not possible to add or delete hosts with large subnet masks. <br/>Please refer to the documentation ofaccounts/:accountid/sites/:siteid/sippeers/:sippeerid/products/:messaging/features/sms/smpp/hostsendpoint for information about restrictions and other tips regarding smpp hosts.",
        "operationId" : "createSmsFeature_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerSmsFeature"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "settings has been successfully created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerSmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <SipPeerSmsFeature>        <SipPeerSmsFeatureSettings>            <TollFree>true</TollFree>            <ShortCode>true</ShortCode>            <A2pLongCode>DefaultOff</A2pLongCode>            <A2pMessageClass>SomeMessageClass</A2pMessageClass>            <A2pCampaignId>SomeCampaignId</A2pCampaignId>            <Protocol>SMPP</Protocol>            <Zone1>true</Zone1>            <Zone2>true</Zone2>            <Zone3>true</Zone3>            <Zone4>true</Zone4>            <Zone5>true</Zone5>        </SipPeerSmsFeatureSettings>        <SmppHosts>            <SmppHost>                <HostName>54.10.88.146</HostName>                <HostId>18</HostId>                <Priority>0</Priority>                <ConnectionType>RECEIVER_ONLY</ConnectionType>            </SmppHost>            <SmppHost>                <HostName>47.123.17.16/30</HostName>                <HostId>18</HostId>                <Priority>0</Priority>                <ConnectionType>RECEIVER_ONLY</ConnectionType>            </SmppHost>        </SmppHosts>    </SipPeerSmsFeature></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>    <li>Account level settings don`t exist</li>    <li>CampaignID shouldn't be present if all of features 'A2pLongCode', 'TollFree' and    'ShortCode' are disabled</li>    <li>CampaignID is required if at least one of features 'A2pLongCode', 'TollFree' and    'ShortCode' is enabled</li>    <li>Campaign ID '%s' was not found in list of authorized Campaign IDs.</li>    <li>A2P Campaign ID '%s' is not valid. Needs to be between 1 and 64 characters. Only alphanumeric    characters, whitespaces, dashes, underscores and dots are allowed.</li>    <li>A2P Message Class '%s' is not valid.</li>    <li>A2P Message Class is required if at least one of features 'A2pLongCode', 'TollFree' and    'ShortCode' is enabled</li>    <li>A2P Message Class shouldn't be present if all of features 'A2pLongCode', 'TollFree' and    'ShortCode' are disabled</li>    <li>A2P Message Class '%s' was not found in list of authorized Message Classes.</li>    <li>A2P Message Class is required if 'A2pLongCode' is enabled.</li>    <li>A2P Message Class shouldn't be present if 'A2pLongCode' is disabled.</li>    <li>A2pLongCode value is invalid. Valid values are: 'ON', 'OFF', 'DefaultOn', 'DefaultOff'.</li>    <li>Host ip or mask can't be changed</li>    <li>47.0.0.0/12 has invalid mask. Valid mask values: 14-32</li>    <li>Termination IP 47.123.17.16/30 overlaps with an address that is already in use</li>    <li>Termination IP 47.123.17.16/30 overlaps with addresses that are already in use: 47.123.17.18</li>    <li>The IP address provided: &lt;47.123.17.17&gt; contains a non zero subnet portion. An equivalent IP    address such as &lt;47.123.17.16&gt; with a zero subnet value must be provided</li>    <li>Account '%s' has no '%s' product feature</li>    <li>Can't create sip peer http protocol sms feature without account level http settings.</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <ResponseStatus>        <ErrorCode>13609</ErrorCode>        <Description>Can't create sip peer http protocol sms feature without account level http settings.</Description>    </ResponseStatus></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Access denied. Possible errors in response:<ul>   <li>Configuring subnet values larger than /20 requires Bandwidth staff intervention</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <ResponseStatus>        <ErrorCode>13674</ErrorCode>        <Description>Configuring subnet values larger than /20 requires Bandwidth staff intervention</Description>    </ResponseStatus></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "delete sms settings",
        "operationId" : "deleteSmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "settings have been deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerSmsFeatureResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>  <li>SMS feature can't be removed because MMS feature is present, remove it first.</li>  <li>Can not disable SMS feature on Sip Peer because it has telephone numbers with messaging enabled.</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <ResponseStatus>        <ErrorCode>13673</ErrorCode>        <Description>Can not disable SMS feature on Sip Peer because it has telephone numbers with messaging enabled.</Description>    </ResponseStatus></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "sms settings do not exist",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/messaging/features/mms/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve mms feature settings for sippeer",
        "operationId" : "retrieveMmsFeatureSettings_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MmsFeatureMmsSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SipPeerProductResponse>    <Products>        <Product>            <Name>Termination</Name>        </Product>        <Product>            <Name>EdgeManagement</Name>        </Product>        <Product>            <Name>Messaging</Name>        </Product>        <Product>            <Name>Origination</Name>        </Product>    </Products></SipPeerProductResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/messaging/features/mms" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve mms feature settings for sippeer",
        "operationId" : "retrieveMmsFeature",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><MmsFeatureResponse>  <MmsFeature>    <MmsSettings>      <protocol>HTTP</protocol>    </MmsSettings>    <Protocols>      <HTTP>        <HttpSettings>          <proxyPeerId>500017</proxyPeerId>        </HttpSettings>      </HTTP>    </Protocols>  </MmsFeature></MmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "update mms feature settings",
        "operationId" : "updateMmsFeature_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerMmsFeature"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "settings were successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MmsFeatureResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Set mms feature settings",
        "operationId" : "createMmsFeature_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerMmsFeature"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "setting was successfully added",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><MmsFeatureResponse>  <MmsFeature>    <MmsSettings>      <Protocol>MM4</Protocol>    </MmsSettings>    <Protocols>      <MM4>      <Tls>OFF</Tls>        <MmsMM4TermHosts>          <TermHosts>            <TermHost>              <HostId>1</HostId>              <HostName>206.107.248.58</HostName>            </TermHost>          </TermHosts>        </MmsMM4TermHosts>        <MmsMM4OrigHosts>          <OrigHosts>            <OrigHost>              <HostName>30.239.72.55</HostName>              <!--If port wasn't set explicitly it will not be included in response payload.-->              <Port>8726</Port>              <HostId>1</HostId>              <Priority>0</Priority>            </OrigHost>            <OrigHost>              <HostName>25.231.123.32</HostName>              <HostId>2</HostId>              <Priority>0</Priority>            </OrigHost>          </OrigHosts>        </MmsMM4OrigHosts>      </MM4>    </Protocols>  </MmsFeature></MmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Pauload contains two protocol</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><MmsFeatureResponse>  <ResponseStatus>    <ErrorCode>13606</ErrorCode>    <Description>Messaging feature may have only one protocol assigned.</Description>  </ResponseStatus></MmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "delete mms settings",
        "operationId" : "deleteMmsFeature_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "settings were deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MmsFeatureResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "mms settings were not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/messaging/features/sms/smpp/hosts" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve smpp hosts",
        "operationId" : "retrieveSmsFeatureSmppHosts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmsSmppHostsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SipPeerProductResponse>    <Products>        <Product>            <Name>Termination</Name>        </Product>        <Product>            <Name>EdgeManagement</Name>        </Product>        <Product>            <Name>Messaging</Name>        </Product>        <Product>            <Name>Origination</Name>        </Product>    </Products></SipPeerProductResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Host ip or mask can't be changed</li>   <li>47.0.0.0/12 has invalid mask. Valid mask values: 14-32</li>   <li>Termination IP 47.123.17.16/30 overlaps with an address that is already in use</li>   <li>Termination IP 47.123.17.16/30 overlaps with addresses that are already in use: 47.123.17.18</li>   <li>The IP address provided: <47.123.17.17> contains a non zero subnet portion. An equivalent IP address such as <47.123.17.16> with a zero subnet value must be provided</li></ul>",
            "content" : {
              "application/xml" : { }
            }
          },
          "403" : {
            "description" : "Access denied. Possible errors in response:<ul>   <li>Configuring subnet values larger than /20 requires Bandwidth staff intervention</li></ul>",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Add smpp host. Host address may or may not include the subnet mask (/32 is assumed if not specified)Regular users can only specify subnets not larger then /20. Updatingsubnet values larger than /20 requires Bandwidth staff intervention (Bandwidth staff may define subnets upto /14)Also, host address should not intersect with addresses used by other services or other accounts,otherwise a validation error will occur.",
        "operationId" : "createSmsFeatureSmppHosts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SmsHost"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "host was successfully added",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmsSmppHostsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Host ip or mask can't be changed</li>   <li>47.0.0.0/12 has invalid mask. Valid mask values: 14-32</li>   <li>Termination IP 47.123.17.16/30 overlaps with an address that is already in use</li>   <li>Termination IP 47.123.17.16/30 overlaps with addresses that are already in use: 47.123.17.18</li>   <li>The IP address provided: <47.123.17.17> contains a non zero subnet portion. An equivalent IP address such as <47.123.17.16> with a zero subnet value must be provided</li></ul>",
            "content" : {
              "application/xml" : { }
            }
          },
          "403" : {
            "description" : "Access denied. Possible errors in response:<ul>   <li>Configuring subnet values larger than /20 requires Bandwidth staff intervention</li></ul>",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/messaging/features/sms/smpp/hosts/{hostId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve smpp host",
        "operationId" : "retrieveSmsFeatureSmppHost",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "hostId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmsSmppHostsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SipPeerProductResponse>    <Products>        <Product>            <Name>Termination</Name>        </Product>        <Product>            <Name>EdgeManagement</Name>        </Product>        <Product>            <Name>Messaging</Name>        </Product>        <Product>            <Name>Origination</Name>        </Product>    </Products></SipPeerProductResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Update smpp host. Host address may or may not include the subnet mask (/32 is assumed if not specified)Regular users can only specify subnets not larger then /20. Updatingsubnet values larger than /20 requires Bandwidth staff intervention (Bandwidth staff may define subnets upto /14)Also, host address should not intersect with addresses used by other services or other accounts,otherwise a validation error will occur.",
        "operationId" : "updateSmsFeatureSmppHost",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "hostId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SmsHost"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "host was successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmsSmppHostsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Host ip or mask can't be changed</li>   <li>47.0.0.0/12 has invalid mask. Valid mask values: 14-32</li>   <li>Termination IP 47.123.17.16/30 overlaps with an address that is already in use</li>   <li>Termination IP 47.123.17.16/30 overlaps with addresses that are already in use: 47.123.17.18</li>   <li>The IP address provided: <47.123.17.17> contains a non zero subnet portion. An equivalent IP address such as <47.123.17.16> with a zero subnet value must be provided</li></ul>",
            "content" : {
              "application/xml" : { }
            }
          },
          "403" : {
            "description" : "Access denied. Possible errors in response:<ul>   <li>Configuring subnet values larger than /20 requires Bandwidth staff intervention</li></ul>",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "Delete smpp host. Note: plain users can not delete hosts with subnet masks that are larger then /20, becausethese hosts can only be managed by Bandwidth staff.",
        "operationId" : "deleteSmsFeatureSmppHosts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "hostId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "smpp host was deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmsSmppHostsResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "smpp host was not found",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/messaging/{applicationSettings}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve sipper application settings",
        "operationId" : "retrieveMessagingApplication",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ApplicationsSettingsResponse>  <ApplicationsSettings>    <HttpMessagingV2AppId>4a4ca6c1-156b-4fca-84e9-34e35e2afc32</HttpMessagingV2AppId>  </ApplicationsSettings></ApplicationsSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Create/update/delete application settings for sippeer<br>Set the ApplicationsSettings value to 'REMOVE' to unassign application <br>",
        "operationId" : "updateMessagingApplication",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationsSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "settings were successfully created/updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MmsFeatureResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><ApplicationsSettingsResponse>  <ApplicationsSettings>    <HttpMessagingV2AppId>c3b0f805-06ab-4d36-8bf4-8baff7623398</HttpMessagingV2AppId>  </ApplicationsSettings></ApplicationsSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/origination/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve origination settings for sippeer",
        "operationId" : "retrieveSipPeerTerminationGateway",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerOriginationSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><!--HTTP Voice--><SipPeerOriginationSettingsResponse>  <SipPeerOriginationSettings>    <VoiceProtocol>HTTP</VoiceProtocol>    <HttpSettings>      <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>    </HttpSettings>  </SipPeerOriginationSettings></SipPeerOriginationSettingsResponse><!--SIP Voice--><SipPeerOriginationSettingsResponse>  <SipPeerOriginationSettings>    <VoiceProtocol>SIP</VoiceProtocol>  </SipPeerOriginationSettings></SipPeerOriginationSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "update origination settings<br><ul>   <li>VoiceProtocol is required with possible values: HTTP, SIP</li>   <li>HttpSettings and HttpVoiceV2AppId are optional fields and only allowed if VoiceProtocol is HTTP</li></ul><br>Note: Changing the Voice Protocol from SIP to HTTP will remove Voice Hosts or Voice Host Groups and Termination Hosts, which are configured using API /accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}.",
        "operationId" : "updateSipPeerTerminationGateway",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerOriginationSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "settings were successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerOriginationSettingsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Set sippeer origination settings<br><ul>    <li>VoiceProtocol is required with possible values: HTTP, SIP</li>    <li>HttpSettings and HttpVoiceV2AppId are optional fields and only allowed if VoiceProtocol is HTTP</li></ul>",
        "operationId" : "createSipPeerTerminationGateway",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerOriginationSettings"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "setting were successfully added",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerOriginationSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerOriginationSettingsResponse>  <SipPeerOriginationSettings>    <VoiceProtocol>HTTP</VoiceProtocol>    <HttpSettings>      <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>    </HttpSettings>  </SipPeerOriginationSettings></SipPeerOriginationSettingsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Account level settings don`t exist</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <ResponseStatus>        <ErrorCode>13609</ErrorCode>        <Description>Can't create sip peer http protocol sms feature without account level http settings.</Description>    </ResponseStatus></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "get all sip peer gateway IPs and subnets",
        "operationId" : "getSipPeerTerminationProducts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTerminationProductsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationResponse> <TerminationProduct> <TerminationSettings> <VoiceProtocol>SIP</VoiceProtocol> </TerminationSettings> <TerminationHosts> <TerminationHost> <HostName>188.219.64.2</HostName> <Port>0</Port> <id>20</id> </TerminationHost> <TerminationHost> <HostName>87.67.71.16/30</HostName> <Port>0</Port> <id>21</id> </TerminationHost> </TerminationHosts> </TerminationProduct> </TerminationResponse>"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <SipPeerGatewayIpsResponse> <ResponseStatus> <Description>Some error description</Description> </ResponseStatus> </SipPeerGatewayIpsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination/hosts" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "get all sip peer gateway IPs and subnets",
        "operationId" : "getSipPeerTerminationGateways",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerGatewayIpsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationHosts> <TerminationHost> <HostName>212.240.169.208</HostName> <Port>0</Port> <id>21</id> </TerminationHost> <TerminationHost> <HostName>87.67.71.16/30</HostName> <Port>0</Port> <id>22</id> </TerminationHost> </TerminationHosts>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "post sip peer gateway IP or subnet",
        "operationId" : "createSipPeerTerminationGateway_2",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerGatewayIp"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "sip peer gateway IP has been created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerGatewayIpResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <SipPeerGatewayIpResponse> <SipPeerGatewayIp> <HostName>251.180.7.30/30</HostName> <Port>0</Port> <id>22</id> </SipPeerGatewayIp> </SipPeerGatewayIpResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination/hosts/{gatewayId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "get sip peer gateway IP or subnet by id",
        "operationId" : "getSipPeerTerminationGateway",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerGatewayIpResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <SipPeerGatewayIpResponse> <SipPeerGatewayIp> <HostName>87.67.71.16/30</HostName> <Port>0</Port> <id>23</id> </SipPeerGatewayIp> </SipPeerGatewayIpResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "sip peer gateway ip was not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "delete a sip peer gateway ip",
        "operationId" : "deleteSipPeerTerminationGateway",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "sip peer gateway ip was deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerGatewayIpResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "sip peer gateway ip was not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination/hosts/{gatewayId}/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "get all gateway attributes",
        "operationId" : "getSipPeerTerminationGatewayAttributes",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerGatewayAttributesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <SipPeerGatewayAttributesResponse> <SipPeerGatewayAttributes> <GatewayId>10</GatewayId> <GatewayAttributes> <GatewayAttribute> <id>8</id> <type>TRACE</type> <value>true</value> <effectiveDate>2014-11-13T17:48:33</effectiveDate> <inEffectiveDate>2014-12-13T17:48:33</inEffectiveDate> </GatewayAttribute> </GatewayAttributes> </SipPeerGatewayAttributes> </SipPeerGatewayAttributesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "post gateway attribute",
        "operationId" : "createSipPeerTerminationGatewayAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttribute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerGatewayAttributeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination/hosts/{gatewayId}/settings/{attributeId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "get gateway attribute by id",
        "operationId" : "getSipPeerTerminationGatewayAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerGatewayAttributeResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <SipPeerGatewayAttributeResponse> <SipPeerGatewayAttribute> <GatewayId>25</GatewayId> <GatewayAttribute> <id>21</id> <type>TRACE</type> <value>true</value> <effectiveDate>2014-11-13T17:48:33</effectiveDate> <inEffectiveDate>2014-12-13T17:48:33</inEffectiveDate> </GatewayAttribute> </SipPeerGatewayAttribute> </SipPeerGatewayAttributeResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "update gateway attribute",
        "operationId" : "updateSipPeerTerminationGatewayAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttribute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerGatewayAttributeResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "delete gateway attribute",
        "operationId" : "deleteSipPeerTerminationGatewayAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "gateway attribute was deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerGatewayAttributeResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "gateway attribute was not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination/settings" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve termination settings for sippeer",
        "operationId" : "retrieveSipPeerTerminationGateway_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTerminationSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><!--HTTP Voice--><SipPeerTerminationSettingsResponse>  <SipPeerTerminationSettings>    <VoiceProtocol>HTTP</VoiceProtocol>    <HttpSettings>      <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>    </HttpSettings>  </SipPeerTerminationSettings></SipPeerTerminationSettingsResponse><!--SIP Voice--><SipPeerOriginationSettingsResponse>  <SipPeerOriginationSettings>    <VoiceProtocol>SIP</VoiceProtocol>  </SipPeerOriginationSettings></SipPeerOriginationSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "update termination settings<br>Note: Changing the Voice Protocol from SIP to HTTP will remove Voice Hosts or Voice Host Groups and Termination Hosts, which are configured using API /accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}.",
        "operationId" : "updateSipPeerTerminationGateway_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerTerminationSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "settings were successfully updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTerminationSettingsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Set sippeer termination settings<br><ul>    <li>VoiceProtocol is required with possible values: HTTP, SIP</li>    <li>HttpSettings and HttpVoiceV2AppId are optional fields and only allowed if VoiceProtocol is HTTP</li></ul>",
        "operationId" : "createSipPeerTerminationGateway_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerTerminationSettings"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "setting were successfully added",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTerminationSettingsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerTerminationSettingsResponse>  <SipPeerTerminationSettings>    <VoiceProtocol>HTTP</VoiceProtocol>    <HttpSettings>      <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>    </HttpSettings>  </SipPeerTerminationSettings></SipPeerTerminationSettingsResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Account level settings don`t exist</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerSmsFeatureResponse>    <ResponseStatus>        <ErrorCode>13609</ErrorCode>        <Description>Can't create sip peer http protocol sms feature without account level http settings.</Description>    </ResponseStatus></SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve a the data associated with a Sip Peer",
        "operationId" : "getSipPeer",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnSipPeerResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerResponse>    <SipPeer>        <PeerId>304985</PeerId>        <PeerName>CNAM-TEST-778</PeerName>        <Description>description</Description>        <IsDefaultPeer>false</IsDefaultPeer>        <VoiceHosts/>        <VoiceHostGroups/>        <TerminationHosts/>        <Address>            <HouseNumber>1600</HouseNumber>            <HouseSuffix/>            <PreDirectional/>            <StreetName>PENNSYLVANIA AVE NW</StreetName>            <StreetSuffix/>            <PostDirectional/>            <AddressLine2/>            <City>Washington</City>            <StateCode>DC</StateCode>            <Zip>20500</Zip>            <PlusFour/>            <County/>            <Country>United States</Country>            <AddressType>Service</AddressType>        </Address>        <CallingName>            <Display>false</Display>            <Enforced>false</Enforced>        </CallingName>    </SipPeer></SipPeerResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request - Sip Peer id is wrong",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerResponse>    <ResponseStatus>        <ErrorCode>13563</ErrorCode>        <Description>Sip Peer '316167' account '9999999' and site '45' does not exist</Description>    </ResponseStatus></SipPeerResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "Update a Sip PeerThere are a few rules used to eliminate IP address collisions.  The primary restriction is on the ability to share Term IP addresses across the Bandwidth Dashboard API structural elements. Essentially...<ul><li>Term Addresses cannot be shared anywhere</li><li>VoiceHost and VoiceHostGroup addresses can be shared between SIP Peers, and can be different than or the same as Term IP Addresses </li></ul>",
        "operationId" : "updateSipPeer",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TnSipPeer"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Sip Peer updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnSipPeerResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>12113 \"The provided street address could not be verified. Please submit a valid street address.\"</li>   <li>13569 \"A termination host with HostName = 2.1.1.9 is already in use\"</li>   <li>13509 \"'wrong.ip' is not a valid host. Provide valid IP or domain name\"</li>   <li>13553 \"Duplicate host (and port) in VoiceHosts\"</li>   <li>13510 \"'wrong.url' is not a valid Destination URI\"</li>   <li>13522 \"IsDefaultPeer cannot be false right now. The account requires at least one Default Sip Peer\"</li>   <li>13552 \"A termination host with HostName = %s and Port = %s is already in use\"</li>   <li>12024 \"Region with state '%s' and country '%s' does not exist\"</li>   <li>13576 \"Account 9999999 has no CNAM product feature\"</li>   <li>13581 \"Display option is missing\"</li>   <li>13582 \"Enforce option is missing\"</li>   <li>13563 \"Sip Peer '316167' account '9999999' and site '45' does not exist\"</li>   <li>13590 \"The supplied CustomerTrafficAllowed value on host %s:%s are not allowed for this sippeer\"</li>   <li>13591 \"Termination Settings at the SIP Peer level are not allowed for accounts with the 'DedicatedPrivateNetworkTopology' product.\"</li>   <li>13592 \"Calling name 'Display' and 'Enforced' values can't be updated for 'DedicatedPrivateNetworkTopology' account.</li>   <li>13593 \"%s has invalid mask. Valid mask values: 24-32\"</li>   <li>13594 \"%s is not valid host\"</li>   <li>13595 \"The IP address provided: %s contains a non zero subnet portion. An equivalent IP address such as %s with a zero subnet value must be provided.\"</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerResponse>    <ResponseStatus>        <ErrorCode>13582</ErrorCode>        <Description>Enforce option is missing</Description>    </ResponseStatus></SipPeerResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "address couldn't be geocoded perfectly and needs some changes",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SipPeerResponse>    <ResponseStatus>        <ErrorCode>12112</ErrorCode>        <Description>The verifiable address closest to the submitted access is included below. Please use that street address or another valid street address in your next request</Description>    </ResponseStatus>    <AddressErrorDescription>        <AddressInconsistencies>Some adjustments are required to allow the address to pass geocoding:Specified value - City : \"WASHINGTUN\" Valid value - \"WASHINGTON\"</AddressInconsistencies>        <RecommendedAddress>            <AddressLine1>1600 PENNSYLVANIA AVE NW</AddressLine1>            <HouseNumber>1600</HouseNumber>            <StreetName>PENNSYLVANIA</StreetName>            <StreetSuffix>AVE</StreetSuffix>            <PostDirectional>NW</PostDirectional>            <City>WASHINGTON</City>            <StateCode>DC</StateCode>            <Zip>20500</Zip>            <Country>US</Country>        </RecommendedAddress>    </AddressErrorDescription></SipPeerResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "external" ],
        "description" : "Delete a Sip Peer",
        "operationId" : "deleteSipPeer",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Sip Peer deleted",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnSipPeerResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>Delete not allowed while a SIP Peer has SMS feature</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerResponse>    <ResponseStatus>        <ErrorCode>13613</ErrorCode>        <Description>Delete not allowed while a SIP Peer has SMS feature</Description>    </ResponseStatus></SipPeerResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Sip Peer not found",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about a Sip Peer or set of Sip Peers",
        "operationId" : "getSipPeers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TNSipPeersResponse>    <SipPeers>        <SipPeer xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"SipPeer\">            <PeerId>304985</PeerId>            <PeerName>CNAM-TEST-778</PeerName>            <Description>description</Description>            <IsDefaultPeer>false</IsDefaultPeer>            <VoiceHosts/>            <VoiceHostGroups/>            <TerminationHosts/>            <Address>                <HouseNumber>1600</HouseNumber>                <HouseSuffix/>                <PreDirectional/>                <StreetName>Pennsylvania Avenue Northwest</StreetName>                <StreetSuffix/>                <PostDirectional/>                <AddressLine2/>                <City>Washington</City>                <StateCode>DC</StateCode>                <Zip>20500</Zip>                <PlusFour/>                <County/>                <Country>United States</Country>                <AddressType>Service</AddressType>            </Address>            <CallingName>                <Display>false</Display>                <Enforced>false</Enforced>            </CallingName>        </SipPeer>    </SipPeers></TNSipPeersResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "Create a Sip Peer",
        "operationId" : "createSipPeer",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TnSipPeer"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Sip Peer created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TnSipPeerResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:   Possible errors in response:   <ul>        <li>12113 \"The provided street address could not be verified. Please submit a valid street address.\"</li>        <li>13569 \"A termination host with HostName = 2.1.1.9 is already in use\"</li>        <li>13509 \"'wrong.ip' is not a valid host. Provide valid IP or domain name\"</li>        <li>13553 \"Duplicate host (and port) in VoiceHosts\"</li>        <li>13510 \"'wrong.url' is not a valid Destination URI\"</li>        <li>13522 \"IsDefaultPeer cannot be false right now. The account requires at least one Default Sip Peer\"</li>        <li>13552 \"A termination host with HostName = %s and Port = %s is already in use\"</li>        <li>12024 \"Region with state '%s' and country '%s' does not exist\"</li>        <li>13576 \"Account 9999999 has no CNAM product feature\"</li>        <li>13581 \"Display option is missing\"</li>        <li>13582 \"Enforce option is missing\"</li>        <li>13590 \"The supplied CustomerTrafficAllowed value on host %s:%s are not allowed for this sippeer\"</li>        <li>13591 \"Termination Settings at the SIP Peer level are not allowed for accounts with the 'DedicatedPrivateNetworkTopology' product.\"</li>        <li>13592 \"Calling name 'Display' and 'Enforced' values can't be updated for 'DedicatedPrivateNetworkTopology' account.</li>        <li>13593 \"%s has invalid mask. Valid mask values: 20-32\"</li>        <li>13594 \"%s is not valid host\"</li>        <li>13595 \"The IP address provided: %s contains a non zero subnet portion. An equivalent IP address such as %s with a zero subnet value must be provided.\"</li>   </ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerResponse>    <ResponseStatus>        <ErrorCode>13582</ErrorCode>        <Description>Enforce option is missing</Description>    </ResponseStatus></SipPeerResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict - Sip Peer with such name already exists; address couldn't be geocoded perfectly and needs some changes",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<SipPeerResponse>    <ResponseStatus>        <ErrorCode>12112</ErrorCode>        <Description>The verifiable address closest to the submitted access is included below. Please use that street address or another valid street address in your next request</Description>    </ResponseStatus>    <AddressErrorDescription>        <AddressInconsistencies>Some adjustments are required to allow the address to pass geocoding:Specified value - City : \"WASHINGTUN\" Valid value - \"WASHINGTON\"</AddressInconsistencies>        <RecommendedAddress>            <AddressLine1>1600 PENNSYLVANIA AVE NW</AddressLine1>            <HouseNumber>1600</HouseNumber>            <StreetName>PENNSYLVANIA</StreetName>            <StreetSuffix>AVE</StreetSuffix>            <PostDirectional>NW</PostDirectional>            <City>WASHINGTON</City>            <StateCode>DC</StateCode>            <Zip>20500</Zip>            <Country>US</Country>        </RecommendedAddress>    </AddressErrorDescription></SipPeerResponse>"
                  }
                }
              }
            }
          },
          "503" : {
            "description" : "Service unavailable",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerResponse>    <ResponseStatus>        <ErrorCode>13566</ErrorCode>        <Description>Our E911 service is unavaliable</Description>    </ResponseStatus></SipPeerResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/movetns" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "The POST method moves all telephone numbers specified in the body to the given SIP peer.<br>The source SIP peer is determined by the Telephone Number, i.e. the PUT method can move multiple numbers from different source SIP peers.<br>The destination SIP peer is specified in the URL.<br>NOTE: only a maximum of 5000 Telephone Numbers can be moved in one operation.",
        "operationId" : "createSipPeerTelephoneNumberBulk",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerTelephoneNumberBulk"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has been successfully received.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTelephoneNumberBulkResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>    <li>Shared TNs with messaging cannot be moved to a sippeer without the SMS feature enabled.</li>    <li>Shared TNs with voice cannot be moved to a sippeer with the SMS feature enabled.</li></ul>",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/tns" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Retrieve information about a Telephone number or set of Telephone numbers",
        "operationId" : "getSipPeerTelephoneNumbers",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeAttributes",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tnStatus",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful result that contains the response data",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTelephoneNumbersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerTelephoneNumbersResponse>    <SipPeerTelephoneNumbers>        <SipPeerTelephoneNumber>            <FullNumber>2052160148</FullNumber>            <CallingNameDisplay>true</CallingNameDisplay>            <TnAttributes>                <TnAttribute>Protected</TnAttribute>                <TnAttribute>External</TnAttribute>                <TnAttribute>Imported</TnAttribute>            </TnAttributes>            <MessagingSettings>                <SmsEnabled>true</SmsEnabled>            </MessagingSettings>        </SipPeerTelephoneNumber>        <SipPeerTelephoneNumber>            <FullNumber>2053161118</FullNumber>            <CallingNameDisplay>false</CallingNameDisplay>            <MessagingSettings>                <SmsEnabled>true</SmsEnabled>            </MessagingSettings>        </SipPeerTelephoneNumber>        <SipPeerTelephoneNumber>            <FullNumber>2053160118</FullNumber>            <CallForward>2014563025</CallForward>            <CallingNameDisplay>false</CallingNameDisplay>        </SipPeerTelephoneNumber>    </SipPeerTelephoneNumbers></SipPeerTelephoneNumbersResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "external" ],
        "description" : "<strong>As of MARCH 2nd, 2020 this endpoint will go into sunset and be deactivated.</strong><br/>Moves an existing TN on the account to the specified SIP Peer, and sets the various TN-related options.This API call remains unpublished externally.  /movetns is preferred for TN moving.",
        "operationId" : "createSipPeerTelephoneNumber",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerTelephoneNumber"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Telephone number installed on the indicated SIP Peer with indicated capabilties provisioned.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTelephoneNumberResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "None"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Possible errors in response:<ul>   <li>13513 \"Call Forwarding number '%s' is not a valid 10-digit telephone number\"</li>   <li>13514 \"Number Format '%s' is invalid for telephone number '%s'\"</li>   <li>13515 \"Rewrite User '%s' is invalid for telephone number '%s'\"</li>   <li>13516 \"RPID Format '%s' is invalid for telephone number '%s'\"</li>   <li>13517 \"Telephone number '%s' is not available\"</li>   <li>13518 \"Telephone number '%s' is not available\"</li>   <li>13519 \"There is an issue with telephone number '%s'. Please contact Customer Service\"</li>   <li>13575 \"CallingNameDisplay '%s' is invalid. Valid values are: 'true', 'false'\"</li>   <li>13576 \"Account '%s' has no [CallForwarding|CNAM] product feature\"</li>   <li>13583 \"CNAM for '%s' is applied at the Location level and it is not applicable at the TN level.\"</li>   <li>5166 \"Sip Peer doesn't have Sms feature.\"</li>   <li>13670 \"Updating of sms attribute is not allowed for %TN\"</li></ul>",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerTelephoneNumberResponse>    <ResponseStatus>        <ErrorCode>13513</ErrorCode>        <Description>Call Forwarding number '%s' is not a valid 10-digit telephone number</Description>    </ResponseStatus></SipPeerTelephoneNumberResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Bad Request. Possible errors in response:   13536 \"Telephone number %s does not exist on Account %s, Site %s, and Sip Peer %s\"   13563 \"Sip Peer '%s' account '%s' and site '%s' does not exist\"",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerTelephoneNumberResponse>    <ResponseStatus>        <ErrorCode>13536</ErrorCode>        <Description>Telephone number %s does not exist on Account %s, Site %s, and Sip Peer %s</Description>    </ResponseStatus></SipPeerTelephoneNumberResponse>"
                  }
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict - Telephone number exists on Sip Peer",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerTelephoneNumberResponse>    <ResponseStatus>        <ErrorCode>13526</ErrorCode>        <Description>Telephone number '%s' is already associated with SIP Peer '%s'</Description>    </ResponseStatus></SipPeerTelephoneNumberResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/tns/{fullNumber}" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "getSipPeerTelephoneNumber",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "fullNumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTelephoneNumberResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "external" ],
        "description" : "TODO",
        "operationId" : "replaceSipPeerTelephoneNumber",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "siteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sipPeerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "fullNumber",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/SipPeerTelephoneNumber"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SipPeerTelephoneNumberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account/{accountId}/product/{productId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getAssignedProduct_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCustomerProductAssignmentResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteAssignedProduct_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCustomerProductAssignmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account/{accountId}/product" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getAssignedProducts",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCustomerProductAssignmentsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "assignProduct_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationProductAssignment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCustomerProductAssignmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account/{accountId}/attribute" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getCustomerAttributes_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "postCustomerAttribute_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttribute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account/{accountId}/attribute/{attributeId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getCustomerAttribute_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "putCustomerAttribute_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttribute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteCustomerAttribute_1",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all products from term services.",
        "operationId" : "getTerminationProducts",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationProductsResponse>  <TerminationProducts>    <TerminationProduct>      <id>1</id>      <name>TermProduct</name>      <description>test product</description>      <terminationAttributes>        <terminationAttribute>          <id>8</id>          <type>TRACE</type>          <value>true</value>          <effectiveDate>2014-10-23T14:27:33</effectiveDate>          <inEffectiveDate>2014-10-23T14:27:33</inEffectiveDate>          <externalId>12</externalId>        </terminationAttribute>      </terminationAttributes>    </TerminationProduct>  </TerminationProducts></TerminationProductsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "create product",
        "operationId" : "postTerminationProduct",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationProduct"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "product was successfully created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationProductResponse>  <TerminationProduct>    <id>1</id>    <name>TermProduct</name>    <description>test product</description>    <terminationAttributes>    </terminationAttributes>  </TerminationProduct></TerminationProductResponse>"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "required fields are absent, attribute list is not empty",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/account/{accountId}/gateway/{gatewayId}/attribute" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getGatewayAttributes",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationGatewayAttributesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "postGatewayAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttribute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationGatewayAttributeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account/{accountId}/gateway/{gatewayId}/attribute/{attributeId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getGatewayAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationGatewayAttributeResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "putGatewayAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttribute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationGatewayAttributeResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteGatewayAttribute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationGatewayAttributeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/carrier" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "This API allow get a list of all available carrier names from Roger.",
        "operationId" : "getTerminationCarriers",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarriersResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCarriersResponse> <TerminationCarriers> <TerminationCarrier> <carriername>Carrier</carriername> <description>Some carrier</description> <profileId>6</profileId> <gatewayId>14</gatewayId> <carrierId>1</carrierId> <maskPosition>1</maskPosition> </TerminationCarrier> </TerminationCarriers> </TerminationCarriersResponse>"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCarriersResponse> <ResponseStatus> <ErrorCode>18000</ErrorCode> <Description>Internal Roger error</Description> </ResponseStatus> </TerminationCarriersResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tollFreeCarriers" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getTerminationTollFreeCarriers",
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarriersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getTerminationAccounts",
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "postTerminationAccount",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAccount"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account/{accountId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getTerminationAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAccountResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteTerminationAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product/{productId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get termination product by id.",
        "operationId" : "getTerminationProduct",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "toAssign",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationProductResponse>  <TerminationProduct>    <id>1</id>    <name>TermProduct</name>    <description>test product</description>    <terminationAttributes>      <terminationAttribute>        <id>8</id>        <type>TRACE</type>        <value>true</value>        <effectiveDate>2014-10-23T14:27:33</effectiveDate>        <inEffectiveDate>2014-10-23T14:27:33</inEffectiveDate>        <externalId>12</externalId>      </terminationAttribute>    </terminationAttributes>  </TerminationProduct></TerminationProductResponse>"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find product by id.",
            "content" : {
              "application/xml" : { }
            }
          },
          "500" : {
            "description" : "System error.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete termination product by id.",
        "operationId" : "deleteTerminationProduct",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "product was successfully removed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find product by id.",
            "content" : {
              "application/xml" : { }
            }
          },
          "500" : {
            "description" : "System error.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/product/{productId}/attribute" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all product attributes",
        "operationId" : "getTerminationProductAttributes",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductAttributesResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationProductAttributesResponse>    <TerminationProduct>        <TerminationAttributes>            <TerminationAttribute>                <id>25</id>                <type>TRACE</type>                <value>true</value>                <effectiveDate>2014-11-13T13:43:07</effectiveDate>                <inEffectiveDate>2014-11-13T13:43:07</inEffectiveDate>            </TerminationAttribute>        </TerminationAttributes>    </TerminationProduct></TerminationProductAttributesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "create product attribute",
        "operationId" : "postTerminationProductAttribute",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttribute"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "product attribute was successfully created",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductAttributeResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationProductAttributeResponse>  <TerminationProduct>      <TerminationAttributes>          <TerminationAttribute>              <id>26</id>              <type>TRACE</type>              <value>true</value>              <effectiveDate>2014-11-13T13:44:59</effectiveDate>              <inEffectiveDate>2014-11-13T13:44:59</inEffectiveDate>          </TerminationAttribute>      </TerminationAttributes>  </TerminationProduct></TerminationProductAttributeResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/{productId}/attribute/{attributeId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all product attribute by id",
        "operationId" : "getTerminationProductAttribute",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductAttributeResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationProductAttributeResponse>    <TerminationProduct>        <TerminationAttributes>            <TerminationAttribute>                <id>27</id>                <type>TRACE</type>                <value>true</value>                <effectiveDate>2014-11-13T13:49:09</effectiveDate>                <inEffectiveDate>2014-11-13T13:49:09</inEffectiveDate>            </TerminationAttribute>        </TerminationAttributes>    </TerminationProduct></TerminationProductAttributeResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteTerminationProductAttribute",
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationProductAttributeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ratedeck/{deckId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get rate deck metadata by id.",
        "operationId" : "getRateDecksMetadata",
        "parameters" : [ {
          "name" : "deckId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckMetadataResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationRateDeckMetadataResponse>    <TerminationRateDeckMetadata>        <id>3</id>        <name>npanxx1.xlsx</name>        <deckType>NPANXX</deckType>        <rows>5</rows>        <fileName>npanxx1.xlsx</fileName>    </TerminationRateDeckMetadata></TerminationRateDeckMetadataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete rate deck by id.",
        "operationId" : "deleteRateDeck",
        "parameters" : [ {
          "name" : "deckId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ratedeck/type/{deckType}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all rate decks by type",
        "operationId" : "getRateDecksMetadata_1",
        "parameters" : [ {
          "name" : "deckType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "NPANXX", "LATAOCN" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckMetadataByTypeResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationRateDeckMetadataByTypeResponse>    <TerminationRateDeckMetadatas>        <TerminationRateDeckMetadata>            <id>16</id>            <name>npanxx1.xlsx</name>            <deckType>NPANXX</deckType>            <rows>5</rows>            <fileName>npanxx1.xlsx</fileName>        </TerminationRateDeckMetadata>    </TerminationRateDeckMetadatas></TerminationRateDeckMetadataByTypeResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratedeck" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all rate deck metadata",
        "operationId" : "getRateDecksMetadata_2",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckMetadatasResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationRateDeckMetadatasResponse>    <TerminationRateDeckMetadatas>        <TerminationRateDeckMetadata>            <id>6</id>            <name>npanxx1.xlsx</name>            <deckType>NPANXX</deckType>            <rows>5</rows>            <fileName>npanxx1.xlsx</fileName>        </TerminationRateDeckMetadata>    </TerminationRateDeckMetadatas></TerminationRateDeckMetadatasResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratedeck/{deckId}/file" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "downloadRateDeck",
        "parameters" : [ {
          "name" : "deckId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "filetype",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "CSV", "XLS" ]
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/ratedeck/file/{fileName}/{rateDeckName}" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Upload rate deck file",
        "operationId" : "postRateDeck",
        "parameters" : [ {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rateDeckName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The rate deck was successfully uploaded",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationRateDeckResponse> <TerminationRateDeckWrapper> <TerminationRateDeckResponse> <rogerDeckId>12</rogerDeckId> <name>test4321</name> <deckType>NPANXX</deckType> <rows>5</rows> <fileName>npanxx1.csv</fileName> <failedEntries/> </TerminationRateDeckResponse> </TerminationRateDeckWrapper> </TerminationRateDeckResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratedeckassignment/{assignmentId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all rate deck assignments",
        "operationId" : "getRateDeckAssignment",
        "parameters" : [ {
          "name" : "assignmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentUtilityResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationRateDeckAssignmentUtilityResponse>    <TerminationRateDeckAssignment>        <id>5</id>        <termServiceRateDeckId>20</termServiceRateDeckId>        <termServiceAccountId>92</termServiceAccountId>        <externalProfileId>153</externalProfileId>        <externalAssignmentId>5</externalAssignmentId>        <increaseDate>2014-11-14T14:16:54</increaseDate>        <decreaseDate>2014-11-14T14:16:54</decreaseDate>    </TerminationRateDeckAssignment></TerminationRateDeckAssignmentUtilityResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratedeckassignment/{assignmentId}/account/{accountId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get termination product by id.",
        "operationId" : "getRateDeckAssignmentForAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "assignmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationRateDeckAssignmentResponse>    <TerminationRateDeckAssignment>        <id>2</id>        <termServiceRateDeckId>17</termServiceRateDeckId>        <increaseDate>2014-11-14T13:27:11</increaseDate>        <decreaseDate>2014-11-14T13:27:11</decreaseDate>    </TerminationRateDeckAssignment></TerminationRateDeckAssignmentResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Unassign rate deck by assignment id.",
        "operationId" : "deleteRateDeckAssignmentForAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "assignmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "product was successfully removed.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Could not find assignment by id.",
            "content" : {
              "application/xml" : { }
            }
          },
          "500" : {
            "description" : "System error.",
            "content" : {
              "application/xml" : { }
            }
          }
        }
      }
    },
    "/ratedeckassignment" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all rate deck assignments",
        "operationId" : "getAllRateDeckAssignments",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentsUtilityResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationRateDeckAssignmentsResponse>    <TerminationRateDeckAssignments>        <TerminationRateDeckAssignment>            <id>1</id>            <termServiceRateDeckId>2</termServiceRateDeckId>            <increaseDate>2014-11-13T14:17:05</increaseDate>            <decreaseDate>2014-11-13T14:17:05</decreaseDate>        </TerminationRateDeckAssignment>    </TerminationRateDeckAssignments></TerminationRateDeckAssignmentsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "assign rate deck",
        "operationId" : "postRateDeckAssignmentForAccount",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationRateDeckAssignment"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Rate deck was successfuly assigned <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationRateDeckAssignmentResponse> <TerminationRateDeckAssignment> <id>2</id> <termServiceRateDeckId>17</termServiceRateDeckId> <increaseDate>2014-11-14T13:27:11</increaseDate> <decreaseDate>2014-11-14T13:27:11</decreaseDate> </TerminationRateDeckAssignment> </TerminationRateDeckAssignmentResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratedeckassignment/account/{accountId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get all rate deck assignments",
        "operationId" : "getAllRateDeckAssignmentsForAccount",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRateDeckAssignmentsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><TerminationRateDeckAssignmentsResponse>    <TerminationRateDeckAssignments>        <TerminationRateDeckAssignment>            <id>3</id>            <termServiceRateDeckId>18</termServiceRateDeckId>            <increaseDate>2014-11-14T13:51:29</increaseDate>            <decreaseDate>2014-11-14T13:51:29</decreaseDate>        </TerminationRateDeckAssignment>    </TerminationRateDeckAssignments></TerminationRateDeckAssignmentsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attributes" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get all attribute metadata",
        "operationId" : "getTerminationAttributeMetadatas",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeMetadatasResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationAttributeMetadatasResponse> <TerminationAttributeMetadatas> <TerminationAttributeMetadata> <id>4</id> <name>TRACE</name> <validationType>FREE_FORM</validationType> <attributeProvisionTypes> <attributeProvisionType>ACCOUNT</attributeProvisionType> <attributeProvisionType>GATEWAY</attributeProvisionType> </attributeProvisionTypes> <origin>LCR</origin> <repeatable>true</repeatable> <values> <value>OPTION1</value> <value>OPTION2</value> </values> </TerminationAttributeMetadata> </TerminationAttributeMetadatas> </TerminationAttributeMetadatasResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "post attribute metadata",
        "operationId" : "postTerminationAttributeMetadata",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttributeMetadata"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The carrier mask has been created as described in the payload <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeMetadataResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationAttributeMetadataResponse> <TerminationAttributeMetadata> <id>5</id> <name>TRACE</name> <validationType>FREE_FORM</validationType> <attributeProvisionTypes> <attributeProvisionType>ACCOUNT</attributeProvisionType> <attributeProvisionType>GATEWAY</attributeProvisionType> </attributeProvisionTypes> <origin>LCR</origin> <repeatable>true</repeatable> <values> <value>OPTION1</value> <value>OPTION2</value> </values> </TerminationAttributeMetadata> </TerminationAttributeMetadataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attributes/origin" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get all attributes by origin",
        "operationId" : "getTerminationAttributeMetadatasByOrigin",
        "parameters" : [ {
          "name" : "origin",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "CORE2", "LCR", "BILLING" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeMetadataByOriginResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationAttributeMetadataByOriginResponse> <TerminationAttributeMetadatas> <TerminationAttributeMetadata> <id>8</id> <name>TRACE</name> <validationType>FREE_FORM</validationType> <attributeProvisionTypes> <attributeProvisionType>ACCOUNT</attributeProvisionType> <attributeProvisionType>GATEWAY</attributeProvisionType> </attributeProvisionTypes> <origin>LCR</origin> <repeatable>true</repeatable> <values> <value>OPTION1</value> <value>OPTION2</value> </values> </TerminationAttributeMetadata> </TerminationAttributeMetadatas> </TerminationAttributeMetadataByOriginResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attributes/type" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get all attributes by type",
        "operationId" : "getTerminationAttributeMetadatasByType",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeMetadataByNameResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationAttributeMetadataByNameResponse> <TerminationAttributeMetadata> <id>9</id> <name>TRACE</name> <validationType>FREE_FORM</validationType> <attributeProvisionTypes> <attributeProvisionType>ACCOUNT</attributeProvisionType> <attributeProvisionType>GATEWAY</attributeProvisionType> </attributeProvisionTypes> <origin>LCR</origin> <repeatable>true</repeatable> <values> <value>OPTION1</value> <value>OPTION2</value> </values> </TerminationAttributeMetadata> </TerminationAttributeMetadataByNameResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attributes/{id}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "get account by id",
        "operationId" : "getTerminationAttributeMetadataById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeMetadataResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationAttributeMetadataResponse> <TerminationAttributeMetadata> <id>7</id> <name>TRACE</name> <validationType>FREE_FORM</validationType> <attributeProvisionTypes> <attributeProvisionType>ACCOUNT</attributeProvisionType> <attributeProvisionType>GATEWAY</attributeProvisionType> </attributeProvisionTypes> <origin>LCR</origin> <repeatable>true</repeatable> <values> <value>OPTION1</value> <value>OPTION2</value> </values> </TerminationAttributeMetadata> </TerminationAttributeMetadataResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "putTerminationAttributeMetadata",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationAttributeMetadata"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationAttributeMetadataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/carriermask" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get list of named Carrier Masks from Roger",
        "operationId" : "getCarrierMasks",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarrierMasksResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCarrierMasksResponse> <TerminationCarrierMasks> <TerminationCarrierMask> <id>5</id> <name>testName1</name> <carrierMaskType>NPANXX</carrierMaskType> <NpaNxxCarrierMasks> <NpaNxxCarrierMask> <carrierMask>00000</carrierMask> <npaNxx>222222</npaNxx> </NpaNxxCarrierMask> </NpaNxxCarrierMasks> <userType>TERMINATION_SERVICES</userType> </TerminationCarrierMask> <TerminationCarrierMask> <id>6</id> <name>testName2</name> <carrierMaskType>NPANXX</carrierMaskType> <NpaNxxCarrierMasks> <NpaNxxCarrierMask> <carrierMask>00000</carrierMask> <npaNxx>222223</npaNxx> </NpaNxxCarrierMask> </NpaNxxCarrierMasks> <userType>TERMINATION_SERVICES</userType> </TerminationCarrierMask> </TerminationCarrierMasks> </TerminationCarrierMasksResponse>"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCarrierMaskResponse> <ResponseStatus> <ErrorCode>18000</ErrorCode> <Description>Internal Roger error</Description> </ResponseStatus> </TerminationCarrierMaskResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "Update carrier mask",
        "operationId" : "updateCarrierMask",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationCarrierMask"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The carrier mask has been updated",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarrierMaskResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCarrierMaskResponse> <TerminationCarrierMask> <id>8</id> <name>testName</name> <carrierMaskType>NPANXX</carrierMaskType> <npaNxxCarrierMasks> <npaNxxCarrierMask> <carrierMask>11111</carrierMask> <npaNxx>222222</npaNxx> </npaNxxCarrierMask> </npaNxxCarrierMasks> <userType>TERMINATION_SERVICES</userType> </TerminationCarrierMask> </TerminationCarrierMaskResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create a carrier mask",
        "operationId" : "createCarrierMask",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationCarrierMask"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The carrier mask has been created as described in the payload <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarrierMaskResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCarrierMaskResponse> <TerminationCarrierMask> <id>7</id> <name>testName</name> <carrierMaskType>NPANXX</carrierMaskType> <npaNxxCarrierMasks> <npaNxxCarrierMask> <carrierMask>00000</carrierMask> <npaNxx>222222</npaNxx> </npaNxxCarrierMask> </npaNxxCarrierMasks> <userType>TERMINATION_SERVICES</userType> </TerminationCarrierMask> </TerminationCarrierMaskResponse>"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "It may happen in many cases, e.g. such carrier mask name already exists",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TerminationCarrierMaskResponse> <ResponseStatus> <ErrorCode>18000</ErrorCode> <Description>Internal Roger error</Description> </ResponseStatus> </TerminationCarrierMaskResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriermask/{maskId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getCarrierMask",
        "parameters" : [ {
          "name" : "maskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarrierMaskResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "Delete carrier mask by id",
        "operationId" : "deleteCarrierMask",
        "parameters" : [ {
          "name" : "maskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarrierMaskResponse"
                }
              }
            }
          }
        }
      }
    },
    "/carriermask/metadata" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get list of carrier mask metadata",
        "operationId" : "getCarrierMaskMetadatas",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarrierMaskMetadatasResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCarrierMaskMetadatasResponse> <TerminationCarrierMasks> <TerminationCarrierMask> <id>1</id> <name>testValue1</name> <carrierMaskType>NPANXX</carrierMaskType> <userType>TERMINATION_SERVICES</userType> </TerminationCarrierMask> </TerminationCarrierMasks> </TerminationCarrierMaskMetadatasResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriermask/metadata/{maskId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get carrier mask by specified id",
        "operationId" : "getCarrierMaskMetadata",
        "parameters" : [ {
          "name" : "maskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarrierMaskMetadataResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCarrierMaskMetadataResponse> <TerminationCarrierMask> <id>2</id> <name>testValue1</name> <carrierMaskType>NPANXX</carrierMaskType> <userType>TERMINATION_SERVICES</userType> </TerminationCarrierMask> </TerminationCarrierMaskMetadataResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriermask/metadata/search" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get carrier mask by specified carrier mask name",
        "operationId" : "searchCarrierMaskMetadata",
        "parameters" : [ {
          "name" : "query_name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationCarrierMaskMetadataSearchResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationCarrierMaskMetadataSearchResponse> <TerminationCarrierMasks> <id>3</id> <name>testValue1</name> <carrierMaskType>NPANXX</carrierMaskType> <userType>TERMINATION_SERVICES</userType> </TerminationCarrierMasks> </TerminationCarrierMaskMetadataSearchResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carriermask/file/{fileName}/{carrierMaskName}/{carrierMaskType}" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Upload carrier mask file",
        "operationId" : "postCarrierMaskFile",
        "parameters" : [ {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carrierMaskName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carrierMaskType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The carrier mask was successfully uploaded",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CarrierMaskFileResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <CarrierMaskFileResponse> <CarrierMaskFile> <id>6</id> </CarrierMaskFile> </CarrierMaskFileResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/routingexception" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get list of named Routing Exceptions from Roger",
        "operationId" : "getRoutingExceptions",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionsResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationRoutingExceptionsResponse> <TerminationRoutingExceptions> <TerminationRoutingException> <id>6</id> <routingExceptionName>routingExceptionTestName</routingExceptionName> <RoutingExceptionPrefixes> <RoutingExceptionPrefix> <prefix>403459</prefix> <routingExceptionType>BLOCK</routingExceptionType> </RoutingExceptionPrefix> </RoutingExceptionPrefixes> </TerminationRoutingException> </TerminationRoutingExceptions> </TerminationRoutingExceptionsResponse>"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationRoutingExceptionResponse> <ResponseStatus> <ErrorCode>18000</ErrorCode> <Description>Internal Roger error</Description> </ResponseStatus> </TerminationRoutingExceptionResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal" ],
        "description" : "update routing exception",
        "operationId" : "updateRoutingException",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationRoutingException"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create a routing exception",
        "operationId" : "createRoutingException",
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationRoutingException"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The routing exception has been created as described in the payload <br>",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationRoutingExceptionResponse> <TerminationRoutingException> <id>7</id> <routingExceptionName>routingExceptionTestName</routingExceptionName> <RoutingExceptionPrefixes> <RoutingExceptionPrefix> <prefix>403459</prefix> <routingExceptionType>BLOCK</routingExceptionType> </RoutingExceptionPrefix> </RoutingExceptionPrefixes> </TerminationRoutingException> </TerminationRoutingExceptionResponse>"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "It may happen in many cases, e.g. such routing exception name already exists",
            "content" : {
              "application/xml" : {
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<TerminationRoutingExceptionResponse> <ResponseStatus> <ErrorCode>18000</ErrorCode> <Description>Internal Roger error</Description> </ResponseStatus> </TerminationRoutingExceptionResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/routingexception/{id}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getRoutingException",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "delete routing exception by id",
        "operationId" : "deleteRoutingException",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/routingexception/{id}/file" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getRoutingExceptionFile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/routingexception/file/{fileName}/{routingExceptionName}" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Upload routing exception file",
        "operationId" : "postRoutingExceptionFile",
        "parameters" : [ {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routingExceptionName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The routing exception was successfully uploaded",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionFileResponse"
                },
                "examples" : {
                  "example" : {
                    "description" : "example",
                    "value" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?> <TerminationRoutingExceptionFileResponse> <TerminationRoutingExceptionFile> <id>3</id> </TerminationRoutingExceptionFile> </TerminationRoutingExceptionFileResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/routingexception/{id}/file/{fileName}/{routingExceptionName}" : {
      "put" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "postRoutingExceptionFile_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "fileName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "routingExceptionName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionFileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/routingexception/metadata" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getRoutingExceptionsMetadata",
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionsMetadataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/routingexception/metadata/{id}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getRoutingExceptionMetadata",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionMetadataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/routingexception/metadata/search" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getRoutingExceptionsMetadataByNamePattern",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationRoutingExceptionsMetadataByNameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account/{accountId}/gateway/{gatewayId}" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getGateway",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationGatewayResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "deleteGateway",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "gatewayId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationGatewayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/account/{accountId}/gateway" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getGateways",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationGatewaysResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "postGateway",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminationGateway"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerminationGatewayResponse"
                }
              }
            }
          }
        }
      }
    },
    "/carriermask/{id}/file" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "TODO",
        "operationId" : "getFile_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccountPayload" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "globalAccountNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "GlobalAccountNumber"
            }
          },
          "associatedCatapultAccount" : {
            "type" : "string",
            "xml" : {
              "name" : "AssociatedCatapultAccount"
            }
          },
          "companyName" : {
            "type" : "string",
            "xml" : {
              "name" : "CompanyName"
            }
          },
          "accountType" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountType"
            }
          },
          "externalId" : {
            "type" : "string",
            "xml" : {
              "name" : "ExternalId"
            }
          },
          "billingCycle" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "BillingCycle"
            }
          },
          "penaltyType" : {
            "type" : "string",
            "xml" : {
              "name" : "PenaltyType"
            }
          },
          "pricing" : {
            "type" : "string",
            "xml" : {
              "name" : "Pricing"
            }
          },
          "nenaId" : {
            "type" : "string",
            "xml" : {
              "name" : "NenaId"
            }
          },
          "tiers" : {
            "type" : "array",
            "xml" : {
              "name" : "Tiers",
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "xml" : {
                "name" : "Tier"
              }
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/Address",
            "xml" : {
              "name" : "Address"
            }
          },
          "contact" : {
            "$ref" : "#/components/schemas/Contact",
            "xml" : {
              "name" : "Contact"
            }
          },
          "altSpid" : {
            "type" : "string",
            "xml" : {
              "name" : "AltSpid"
            }
          },
          "spid" : {
            "type" : "string",
            "xml" : {
              "name" : "SPID"
            }
          },
          "portCarrierType" : {
            "type" : "string",
            "xml" : {
              "name" : "PortCarrierType"
            },
            "enum" : [ "WIRELESS", "WIRELINE" ]
          },
          "default911Provider" : {
            "type" : "string",
            "xml" : {
              "name" : "Default911Provider"
            }
          },
          "maxTnsForAutomatedPort" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "MaxTnsForAutomatedPort"
            }
          },
          "customerSegment" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerSegment"
            }
          }
        },
        "xml" : {
          "name" : "Account"
        }
      },
      "AccountResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountPayload",
            "xml" : {
              "name" : "Account"
            }
          },
          "addressErrorDescription" : {
            "$ref" : "#/components/schemas/AddressErrorDescription",
            "xml" : {
              "name" : "AddressErrorDescription"
            }
          }
        },
        "xml" : {
          "name" : "AccountResponse"
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "housePrefix" : {
            "type" : "string",
            "xml" : {
              "name" : "HousePrefix"
            }
          },
          "houseNo" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseNumber"
            }
          },
          "houseSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseSuffix"
            }
          },
          "preDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PreDirectional"
            }
          },
          "streetName" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetName"
            }
          },
          "streetSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetSuffix"
            }
          },
          "postDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PostDirectional"
            }
          },
          "addressLine2" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine2"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "regionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "stateCode" : {
            "type" : "string",
            "xml" : {
              "name" : "StateCode"
            }
          },
          "zip" : {
            "type" : "string",
            "xml" : {
              "name" : "Zip"
            }
          },
          "zip4" : {
            "type" : "string",
            "xml" : {
              "name" : "PlusFour"
            }
          },
          "county" : {
            "type" : "string",
            "xml" : {
              "name" : "County"
            }
          },
          "country" : {
            "type" : "string",
            "xml" : {
              "name" : "Country"
            }
          },
          "addressType" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressType"
            }
          },
          "legacyAddressId" : {
            "type" : "string"
          },
          "legacyEntityId" : {
            "type" : "string"
          },
          "resetAddressFields" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ResetAddressFields"
            }
          },
          "latitude" : {
            "type" : "string",
            "xml" : {
              "name" : "Latitude"
            }
          },
          "longitude" : {
            "type" : "string",
            "xml" : {
              "name" : "Longitude"
            }
          },
          "addressTypeEnum" : {
            "type" : "string",
            "enum" : [ "SERVICE", "BILLING", "DLDA", "E911" ]
          },
          "countryWithoutDefault" : {
            "type" : "string"
          },
          "new" : {
            "type" : "boolean"
          }
        }
      },
      "AddressErrorDescription" : {
        "type" : "object",
        "properties" : {
          "addressInconsistencies" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressInconsistencies"
            }
          },
          "recommendedAddress" : {
            "$ref" : "#/components/schemas/E911GeocodeAddress",
            "xml" : {
              "name" : "RecommendedAddress"
            }
          }
        },
        "xml" : {
          "name" : "AddressErrorDescription"
        }
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "xml" : {
              "name" : "FirstName"
            }
          },
          "lastName" : {
            "type" : "string",
            "xml" : {
              "name" : "LastName"
            }
          },
          "suffix" : {
            "type" : "string",
            "xml" : {
              "name" : "Suffix"
            }
          },
          "title" : {
            "type" : "string",
            "xml" : {
              "name" : "Title"
            }
          },
          "phone" : {
            "type" : "string",
            "xml" : {
              "name" : "Phone"
            }
          },
          "fax" : {
            "type" : "string",
            "xml" : {
              "name" : "Fax"
            }
          },
          "mobile" : {
            "type" : "string",
            "xml" : {
              "name" : "Mobile"
            }
          },
          "otherPhone" : {
            "type" : "string",
            "xml" : {
              "name" : "OtherPhone"
            }
          },
          "email" : {
            "type" : "string",
            "xml" : {
              "name" : "Email"
            }
          },
          "websiteAddress" : {
            "type" : "string",
            "xml" : {
              "name" : "WebsiteAddress"
            }
          }
        },
        "xml" : {
          "name" : "Contact"
        }
      },
      "E911GeocodeAddress" : {
        "type" : "object",
        "properties" : {
          "addressLine1" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine1"
            }
          },
          "houseNum" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseNumber"
            }
          },
          "houseNumSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseSuffix"
            }
          },
          "prefixDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PreDirectional"
            }
          },
          "streetName" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetName"
            }
          },
          "streetSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetSuffix"
            }
          },
          "postDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PostDirectional"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "StateCode"
            }
          },
          "zip" : {
            "type" : "string",
            "xml" : {
              "name" : "Zip"
            }
          },
          "zipPlusFour" : {
            "type" : "string",
            "xml" : {
              "name" : "PlusFour"
            }
          },
          "country" : {
            "type" : "string",
            "xml" : {
              "name" : "Country"
            }
          },
          "location" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine2"
            }
          }
        },
        "xml" : {
          "name" : "E911GeocodeAddress"
        }
      },
      "AccountPayloads" : {
        "type" : "object",
        "properties" : {
          "accounts" : {
            "type" : "array",
            "xml" : {
              "name" : "Account"
            },
            "items" : {
              "$ref" : "#/components/schemas/AccountPayload"
            }
          }
        },
        "xml" : {
          "name" : "Accounts"
        }
      },
      "AccountsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationAccountList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationAccount"
            }
          }
        },
        "xml" : {
          "name" : "AccountsResponse"
        }
      },
      "AccountSearchPayloads" : {
        "type" : "object",
        "xml" : {
          "name" : "AccountsSearch"
        }
      },
      "AccountSearchResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountSearchPayloads",
            "xml" : {
              "name" : "AccountsSearch"
            }
          }
        },
        "xml" : {
          "name" : "AccountSearchResponse"
        }
      },
      "AccountProduct" : {
        "type" : "object",
        "properties" : {
          "productName" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          }
        },
        "xml" : {
          "name" : "Product"
        }
      },
      "AccountProducts" : {
        "type" : "object",
        "properties" : {
          "accountProducts" : {
            "type" : "array",
            "xml" : {
              "name" : "Product"
            },
            "items" : {
              "$ref" : "#/components/schemas/AccountProduct"
            }
          }
        },
        "xml" : {
          "name" : "Products"
        }
      },
      "AccountProductsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountProducts",
            "xml" : {
              "name" : "Products"
            }
          }
        },
        "xml" : {
          "name" : "AccountProductsResponse"
        }
      },
      "AccountProductResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountProduct",
            "xml" : {
              "name" : "Product"
            }
          }
        },
        "xml" : {
          "name" : "AccountProductResponse"
        }
      },
      "AddressesPayload" : {
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "xml" : {
              "name" : "Address"
            },
            "items" : {
              "$ref" : "#/components/schemas/E911Address"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalCount"
            }
          }
        },
        "xml" : {
          "name" : "Addresses"
        }
      },
      "AddressesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AddressesPayload",
            "xml" : {
              "name" : "Addresses"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalCount"
            }
          }
        },
        "xml" : {
          "name" : "AddressesResponse"
        }
      },
      "E911Address" : {
        "type" : "object",
        "properties" : {
          "housePrefix" : {
            "type" : "string",
            "xml" : {
              "name" : "HousePrefix"
            }
          },
          "houseNo" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseNumber"
            }
          },
          "houseSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseSuffix"
            }
          },
          "preDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PreDirectional"
            }
          },
          "streetName" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetName"
            }
          },
          "streetSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetSuffix"
            }
          },
          "postDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PostDirectional"
            }
          },
          "addressLine2" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine2"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "stateCode" : {
            "type" : "string",
            "xml" : {
              "name" : "StateCode"
            }
          },
          "zip" : {
            "type" : "string",
            "xml" : {
              "name" : "Zip"
            }
          },
          "zip4" : {
            "type" : "string",
            "xml" : {
              "name" : "PlusFour"
            }
          },
          "county" : {
            "type" : "string",
            "xml" : {
              "name" : "County"
            }
          },
          "country" : {
            "type" : "string",
            "xml" : {
              "name" : "Country"
            }
          },
          "addressType" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressType"
            }
          },
          "resetAddressFields" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ResetAddressFields"
            }
          },
          "latitude" : {
            "type" : "string",
            "xml" : {
              "name" : "Latitude"
            }
          },
          "longitude" : {
            "type" : "string",
            "xml" : {
              "name" : "Longitude"
            }
          },
          "locationId" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationId"
            }
          },
          "valid" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ValidationStatus"
            }
          },
          "endpointCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "EndpointCount"
            }
          },
          "adjusted" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Adjusted"
            }
          }
        }
      },
      "PaginationLinks" : {
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "string"
          },
          "next" : {
            "type" : "string"
          },
          "previous" : {
            "type" : "string"
          },
          "last" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Links"
        }
      },
      "AlternateEndUserIdentifier" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "xml" : {
              "name" : "Identifier"
            }
          },
          "callbackNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "CallbackNumber"
            }
          },
          "pidfloEnabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "PIDFLOEnabled"
            }
          },
          "callerName" : {
            "type" : "string",
            "xml" : {
              "name" : "CallerName"
            }
          },
          "preferredLanguage" : {
            "type" : "string",
            "xml" : {
              "name" : "PreferredLanguage"
            },
            "enum" : [ "en", "fr", "Incorrect value" ]
          },
          "locationId" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationId"
            }
          },
          "groupPayload" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupPayload",
            "xml" : {
              "name" : "EmergencyNotificationGroup"
            }
          },
          "e911Status" : {
            "$ref" : "#/components/schemas/AlternateEndUserIdentifierE911Status",
            "xml" : {
              "name" : "E911"
            }
          }
        },
        "xml" : {
          "name" : "AlternateEndUserIdentifier"
        }
      },
      "AlternateEndUserIdentifierE911Status" : {
        "type" : "object",
        "properties" : {
          "callerName" : {
            "type" : "string",
            "xml" : {
              "name" : "CallerName"
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/Address",
            "xml" : {
              "name" : "Address"
            }
          },
          "groupPayload" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupPayload",
            "xml" : {
              "name" : "EmergencyNotificationGroup"
            }
          }
        },
        "xml" : {
          "name" : "AlternateEndUserIdentifierE911Status"
        }
      },
      "AlternateEndUserIdentifierResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AlternateEndUserIdentifier",
            "xml" : {
              "name" : "AlternateEndUserIdentifier"
            }
          }
        },
        "xml" : {
          "name" : "AlternateEndUserIdentifierResponse"
        }
      },
      "CallbackPayload" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "xml" : {
              "name" : "Url"
            }
          }
        },
        "xml" : {
          "name" : "Callback"
        }
      },
      "EepToEngAssociationsPayload" : {
        "type" : "object",
        "properties" : {
          "tnList" : {
            "type" : "array",
            "xml" : {
              "name" : "EepTns",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "aeuiList" : {
            "type" : "array",
            "xml" : {
              "name" : "EepAeuiIds",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Identifier"
              }
            }
          }
        },
        "xml" : {
          "name" : "EepToEngAssociations"
        }
      },
      "EmergencyNotificationGroupPayload" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "xml" : {
              "name" : "Identifier"
            }
          },
          "createdDate" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedDate"
            }
          },
          "modifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "ModifiedBy"
            }
          },
          "modifiedDate" : {
            "type" : "string",
            "xml" : {
              "name" : "ModifiedDate"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "emergencyNotificationRecipients" : {
            "$ref" : "#/components/schemas/EmergencyNotificationRecipientsPayload",
            "xml" : {
              "name" : "EmergencyNotificationRecipients"
            }
          },
          "eepToEngAssociations" : {
            "$ref" : "#/components/schemas/EepToEngAssociationsPayload",
            "xml" : {
              "name" : "EepToEngAssociations"
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationGroup"
        }
      },
      "EmergencyNotificationRecipientPayload" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "xml" : {
              "name" : "Identifier"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "Type"
            }
          },
          "email" : {
            "type" : "string",
            "xml" : {
              "name" : "EmailAddress"
            }
          },
          "sms" : {
            "type" : "array",
            "xml" : {
              "name" : "Sms",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "tts" : {
            "type" : "array",
            "xml" : {
              "name" : "Tts",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "callback" : {
            "$ref" : "#/components/schemas/CallbackPayload",
            "xml" : {
              "name" : "Callback"
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationRecipient"
        }
      },
      "EmergencyNotificationRecipientsPayload" : {
        "type" : "object",
        "properties" : {
          "payloadList" : {
            "type" : "array",
            "xml" : {
              "name" : "EmergencyNotificationRecipient"
            },
            "items" : {
              "$ref" : "#/components/schemas/EmergencyNotificationRecipientPayload"
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationRecipients"
        }
      },
      "AlternateEndUserIdentifiers" : {
        "type" : "object",
        "properties" : {
          "identifiers" : {
            "type" : "array",
            "xml" : {
              "name" : "AlternateEndUserIdentifier"
            },
            "items" : {
              "$ref" : "#/components/schemas/AlternateEndUserIdentifier"
            }
          }
        },
        "xml" : {
          "name" : "AlternateEndUserIdentifiers"
        }
      },
      "AlternateEndUserIdentifiersResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AlternateEndUserIdentifiers",
            "xml" : {
              "name" : "AlternateEndUserIdentifiers"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalCount"
            }
          }
        },
        "xml" : {
          "name" : "AlternateEndUserIdentifiersResponse"
        }
      },
      "ApplicationPayload" : {
        "type" : "object",
        "properties" : {
          "applicationId" : {
            "type" : "string",
            "xml" : {
              "name" : "ApplicationId"
            }
          },
          "serviceType" : {
            "type" : "string",
            "xml" : {
              "name" : "ServiceType"
            }
          },
          "applicationName" : {
            "type" : "string",
            "xml" : {
              "name" : "AppName"
            }
          },
          "callbackUrl" : {
            "type" : "string",
            "xml" : {
              "name" : "CallbackUrl"
            }
          },
          "msgCallbackUrl" : {
            "type" : "string",
            "xml" : {
              "name" : "MsgCallbackUrl"
            }
          },
          "callInitiatedCallbackUrl" : {
            "type" : "string",
            "xml" : {
              "name" : "CallInitiatedCallbackUrl"
            }
          },
          "callInitiatedMethod" : {
            "type" : "string",
            "xml" : {
              "name" : "CallInitiatedMethod"
            }
          },
          "callStatusCallbackUrl" : {
            "type" : "string",
            "xml" : {
              "name" : "CallStatusCallbackUrl"
            }
          },
          "callStatusMethod" : {
            "type" : "string",
            "xml" : {
              "name" : "CallStatusMethod"
            }
          },
          "callbackCreds" : {
            "$ref" : "#/components/schemas/CallbackCreds",
            "xml" : {
              "name" : "CallbackCreds"
            }
          },
          "callInitiatedFallbackUrl" : {
            "type" : "string",
            "xml" : {
              "name" : "CallInitiatedFallbackUrl"
            }
          },
          "callInitiatedFallbackMethod" : {
            "type" : "string",
            "xml" : {
              "name" : "CallInitiatedFallbackMethod"
            }
          },
          "callInitiatedFallbackCreds" : {
            "$ref" : "#/components/schemas/CallbackCreds",
            "xml" : {
              "name" : "CallInitiatedFallbackCreds"
            }
          },
          "callbackTimeout" : {
            "type" : "string",
            "xml" : {
              "name" : "CallbackTimeout"
            }
          }
        },
        "xml" : {
          "name" : "Application"
        }
      },
      "ApplicationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/ApplicationPayload",
            "xml" : {
              "name" : "Application"
            }
          }
        },
        "xml" : {
          "name" : "ApplicationProvisioningResponse"
        }
      },
      "CallbackCreds" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string",
            "xml" : {
              "name" : "UserId"
            }
          },
          "password" : {
            "type" : "string",
            "xml" : {
              "name" : "Password"
            }
          }
        },
        "xml" : {
          "name" : "CallbackCreds"
        }
      },
      "AssociatedSipPeer" : {
        "type" : "object",
        "properties" : {
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "siteName" : {
            "type" : "string",
            "xml" : {
              "name" : "SiteName"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "peerName" : {
            "type" : "string",
            "xml" : {
              "name" : "PeerName"
            }
          }
        },
        "xml" : {
          "name" : "AssociatedSipPeer"
        }
      },
      "AssociatedSipPeers" : {
        "type" : "object",
        "properties" : {
          "associatedSipPeers" : {
            "type" : "array",
            "xml" : {
              "name" : "AssociatedSipPeer"
            },
            "items" : {
              "$ref" : "#/components/schemas/AssociatedSipPeer"
            }
          }
        },
        "xml" : {
          "name" : "AssociatedSipPeers"
        }
      },
      "AssociatedSipPeersResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AssociatedSipPeers",
            "xml" : {
              "name" : "AssociatedSipPeers"
            }
          }
        },
        "xml" : {
          "name" : "AssociatedSipPeersResponse"
        }
      },
      "RateCenterCoverage" : {
        "type" : "object",
        "properties" : {
          "vendorId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "VendorId"
            }
          },
          "rcAbbreviation" : {
            "type" : "string",
            "xml" : {
              "name" : "Abbreviation"
            }
          },
          "rcState" : {
            "type" : "string",
            "xml" : {
              "name" : "Region"
            }
          },
          "tierId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TierId"
            }
          },
          "rcSupportsLnp" : {
            "type" : "boolean",
            "xml" : {
              "name" : "SupportsLnp"
            }
          },
          "rcSupportsNewTns" : {
            "type" : "boolean",
            "xml" : {
              "name" : "SupportsNewTns"
            }
          },
          "lrn" : {
            "type" : "string",
            "xml" : {
              "name" : "Lrn"
            }
          },
          "rcLata" : {
            "type" : "string",
            "xml" : {
              "name" : "Lata"
            }
          }
        },
        "xml" : {
          "name" : "RateCenterCoverage"
        }
      },
      "A2pCampaignId" : {
        "type" : "object",
        "properties" : {
          "campaignId" : {
            "type" : "string",
            "xml" : {
              "name" : "CampaignId"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "CampaignIdDescription"
            }
          },
          "accountId" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountId"
            }
          }
        },
        "xml" : {
          "name" : "A2pCampaignId"
        }
      },
      "A2pClass" : {
        "type" : "object",
        "properties" : {
          "messageClass" : {
            "type" : "string",
            "xml" : {
              "name" : "MessageClass"
            }
          },
          "classDescription" : {
            "type" : "string",
            "xml" : {
              "name" : "ClassDescription"
            }
          }
        },
        "xml" : {
          "name" : "A2pClass"
        }
      },
      "BreakOutCountry" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "alpha3Code" : {
            "type" : "string",
            "xml" : {
              "name" : "Alpha3Code"
            }
          },
          "countryCode" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "CountryCode"
            }
          },
          "prefixDigits" : {
            "type" : "array",
            "xml" : {
              "name" : "PrefixDigits",
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "xml" : {
                "name" : "Digits"
              }
            }
          },
          "authRequired" : {
            "type" : "boolean",
            "xml" : {
              "name" : "AuthRequired"
            }
          },
          "billingEnabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "BillingEnabled"
            }
          }
        },
        "xml" : {
          "name" : "BreakOutCountry"
        }
      },
      "AdminDataResponse" : {
        "type" : "object",
        "properties" : {
          "responseStatus" : {
            "$ref" : "#/components/schemas/ResponseStatus",
            "xml" : {
              "name" : "ResponseStatus"
            }
          }
        },
        "xml" : {
          "name" : "AdminDataResponse"
        }
      },
      "ResponseStatus" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ErrorCode"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "ResponseStatus"
        }
      },
      "BwspidsSystemValue" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Id"
            }
          },
          "routeType" : {
            "type" : "string",
            "xml" : {
              "name" : "RouteType"
            }
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Priority"
            }
          },
          "spid" : {
            "type" : "string",
            "xml" : {
              "name" : "Spid"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "Type"
            }
          },
          "alias" : {
            "type" : "string",
            "xml" : {
              "name" : "Alias"
            }
          }
        },
        "xml" : {
          "name" : "BwspidSystemValue"
        }
      },
      "Country" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Id"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "CountryName"
            }
          },
          "twoLetterCode" : {
            "type" : "string",
            "xml" : {
              "name" : "TwoLetterCode"
            }
          },
          "threeLetterCode" : {
            "type" : "string",
            "xml" : {
              "name" : "ThreeLetterCode"
            }
          },
          "supported" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Supported"
            }
          }
        },
        "xml" : {
          "name" : "Country"
        }
      },
      "InternationalVendor" : {
        "type" : "object",
        "properties" : {
          "vendorId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "VendorId"
            }
          },
          "supported" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Supported"
            }
          }
        },
        "xml" : {
          "name" : "InternationalVendor"
        }
      },
      "Level3PortingErrorSettingPayload" : {
        "type" : "object",
        "properties" : {
          "l3ErrorCode" : {
            "type" : "string",
            "xml" : {
              "name" : "L3ErrorCode"
            }
          },
          "bandwidthErrorCode" : {
            "type" : "string",
            "xml" : {
              "name" : "BandwidthErrorCode"
            }
          },
          "errorDescription" : {
            "type" : "string",
            "xml" : {
              "name" : "ErrorDescription"
            }
          },
          "installAction" : {
            "type" : "string",
            "xml" : {
              "name" : "InstallAction"
            }
          },
          "suppAction" : {
            "type" : "string",
            "xml" : {
              "name" : "SuppAction"
            }
          },
          "cancelAction" : {
            "type" : "string",
            "xml" : {
              "name" : "CancelAction"
            }
          },
          "portTnAction" : {
            "type" : "string",
            "xml" : {
              "name" : "PortTnAction"
            }
          },
          "validateAction" : {
            "type" : "string",
            "xml" : {
              "name" : "ValidateAction"
            }
          }
        },
        "xml" : {
          "name" : "Level3PortingErrorSetting"
        }
      },
      "LnpCarrier" : {
        "type" : "object",
        "properties" : {
          "spid" : {
            "type" : "string",
            "xml" : {
              "name" : "Spid"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "portOutMinimumDays" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PortOutMinDays"
            }
          },
          "l3PortOutMinimumDays" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "L3PortOutMinDays"
            }
          },
          "vendorId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "VendorId"
            }
          },
          "onNetTnThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "MaxTnsPerAutomatedPort"
            }
          }
        },
        "xml" : {
          "name" : "Tpa"
        }
      },
      "MessagingBlockedAccountId" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "note" : {
            "type" : "string",
            "xml" : {
              "name" : "Note"
            }
          }
        },
        "xml" : {
          "name" : "MessagingBlockedAccountId"
        }
      },
      "NnRoute" : {
        "type" : "object",
        "properties" : {
          "nnId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Nnid"
            }
          },
          "espid" : {
            "type" : "string",
            "xml" : {
              "name" : "Espid"
            }
          },
          "deliveryNetwork" : {
            "type" : "string",
            "xml" : {
              "name" : "DeliveryNetwork"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "trafficType" : {
            "type" : "string",
            "xml" : {
              "name" : "TrafficType"
            }
          },
          "provisionerIds" : {
            "type" : "array",
            "xml" : {
              "name" : "ProvisionerIds",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "ProvisionerId"
              }
            }
          }
        },
        "xml" : {
          "name" : "NNRoute"
        }
      },
      "ProxyPeerValue" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "serviceType" : {
            "type" : "string",
            "xml" : {
              "name" : "Service"
            },
            "enum" : [ "HTTPV1", "HTTPV2" ]
          },
          "proxyPeerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ProxyPeerId"
            }
          }
        },
        "xml" : {
          "name" : "ProxyPeer"
        }
      },
      "SbcNodeGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Id"
            }
          },
          "link" : {
            "type" : "string",
            "xml" : {
              "name" : "Link"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "nodes" : {
            "type" : "array",
            "xml" : {
              "name" : "Nodes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Node"
              }
            }
          }
        },
        "xml" : {
          "name" : "SbcNodeGroup"
        }
      },
      "SbcNodeGroups" : {
        "type" : "object",
        "properties" : {
          "sbcNodeGroups" : {
            "type" : "array",
            "xml" : {
              "name" : "SbcNodeGroup"
            },
            "items" : {
              "$ref" : "#/components/schemas/SbcNodeGroup"
            }
          }
        },
        "xml" : {
          "name" : "SbcNodeGroups"
        }
      },
      "SystemEventSubscription" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SubscriptionId"
            }
          },
          "systemEvent" : {
            "type" : "string",
            "xml" : {
              "name" : "SystemEvent"
            }
          },
          "email" : {
            "type" : "string",
            "xml" : {
              "name" : "Email"
            }
          },
          "zendeskGroupId" : {
            "type" : "string",
            "xml" : {
              "name" : "ZendeskGroupId"
            }
          },
          "digestType" : {
            "type" : "string",
            "xml" : {
              "name" : "DigestType"
            }
          },
          "callbackOrderType" : {
            "type" : "string",
            "xml" : {
              "name" : "CallbackOrderType"
            }
          }
        },
        "xml" : {
          "name" : "SystemEventSubscription"
        }
      },
      "TnTypePayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TnTypeId"
            }
          },
          "source" : {
            "type" : "string",
            "xml" : {
              "name" : "Source"
            }
          },
          "tnType" : {
            "type" : "string",
            "xml" : {
              "name" : "Type"
            }
          }
        },
        "xml" : {
          "name" : "TnType"
        }
      },
      "Vendor" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "VendorId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorName"
            }
          },
          "legacyId" : {
            "type" : "string",
            "xml" : {
              "name" : "LegacyId"
            }
          },
          "manualPortEnabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ManualPortEnabled"
            }
          },
          "tollfreeManualPortEnabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "TollfreeManualPortEnabled"
            }
          },
          "isOnNet" : {
            "type" : "boolean",
            "xml" : {
              "name" : "OnNet"
            }
          }
        },
        "xml" : {
          "name" : "Vendor"
        }
      },
      "PortInNotificationCustomerOptInAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "new" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "PortInNotificationCustomerOptInAccount"
        }
      },
      "SlingshotEnv" : {
        "type" : "object",
        "properties" : {
          "sippeerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SipPeerId"
            }
          },
          "value" : {
            "type" : "string",
            "xml" : {
              "name" : "Value"
            }
          }
        },
        "xml" : {
          "name" : "SlingshotEnv"
        }
      },
      "E911Host" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "xml" : {
              "name" : "HostName"
            }
          },
          "port" : {
            "type" : "string",
            "xml" : {
              "name" : "Port"
            }
          }
        },
        "xml" : {
          "name" : "Host"
        }
      },
      "E911Settings" : {
        "type" : "object",
        "properties" : {
          "dashUserId" : {
            "type" : "string",
            "xml" : {
              "name" : "DashUserId"
            }
          },
          "dashPassword" : {
            "type" : "string",
            "xml" : {
              "name" : "DashPassword"
            }
          },
          "dashAuthenticationStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "DashAuthenticationStatus"
            }
          },
          "hosts" : {
            "type" : "array",
            "xml" : {
              "name" : "Hosts",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/E911Host"
            }
          }
        },
        "xml" : {
          "name" : "E911Settings"
        }
      },
      "E911SettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/E911Settings",
            "xml" : {
              "name" : "E911Settings"
            }
          }
        },
        "xml" : {
          "name" : "E911SettingsResponse"
        }
      },
      "AccessRestriction" : {
        "type" : "object",
        "properties" : {
          "product" : {
            "type" : "string",
            "xml" : {
              "name" : "RestrictedProduct"
            }
          },
          "accessRestrictionTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "name" : "RestrictedAccessTypes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "RestrictedAccessType"
              }
            }
          }
        }
      },
      "CallAdmissionControlSettings" : {
        "type" : "object",
        "properties" : {
          "cps" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "CPS"
            }
          },
          "concurrentCalls" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ConcurrentCalls"
            }
          }
        },
        "xml" : {
          "name" : "CallAdmissionControlSettings"
        }
      },
      "EdgeManagementConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "sbcConfiguration" : {
            "$ref" : "#/components/schemas/SbcConfigurationPayload",
            "xml" : {
              "name" : "SbcSettings"
            }
          },
          "sipAuthConfiguration" : {
            "$ref" : "#/components/schemas/SipAuthConfigurationPayload",
            "xml" : {
              "name" : "SipAuthentication"
            }
          },
          "accessRestrictions" : {
            "type" : "array",
            "xml" : {
              "name" : "ProductSpecificAccessRestrictions",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AccessRestriction"
            }
          },
          "httpVoiceConfiguration" : {
            "$ref" : "#/components/schemas/HttpVoiceConfigurationPayload",
            "xml" : {
              "name" : "HttpVoice"
            }
          },
          "webRtcConfiguration" : {
            "$ref" : "#/components/schemas/WebRtcConfigurationPayload",
            "xml" : {
              "name" : "WebRtc"
            }
          }
        },
        "xml" : {
          "name" : "EdgeManagementSettings"
        }
      },
      "EdgeManagementConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/EdgeManagementConfigurationPayload",
            "xml" : {
              "name" : "EdgeManagementSettings"
            }
          }
        },
        "xml" : {
          "name" : "EdgeManagementSettingsResponse"
        }
      },
      "HttpVoiceConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Enabled"
            }
          },
          "callAdmissionControlSettings" : {
            "$ref" : "#/components/schemas/CallAdmissionControlSettings",
            "xml" : {
              "name" : "CallAdmissionControlSettings"
            }
          }
        },
        "xml" : {
          "name" : "HttpVoice"
        }
      },
      "SbcConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "trunkGroupId" : {
            "type" : "string",
            "xml" : {
              "name" : "TrunkGroupId"
            }
          },
          "nodeGroupName" : {
            "type" : "string",
            "xml" : {
              "name" : "NodeGroupName"
            }
          }
        },
        "xml" : {
          "name" : "SbcConfiguration"
        }
      },
      "SipAuthConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Enabled"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            },
            "enum" : [ "PROCESSING", "COMPLETE", "FAILED" ]
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SipAuthError"
            }
          }
        },
        "xml" : {
          "name" : "SipAuthentication"
        }
      },
      "SipAuthError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "Error"
        }
      },
      "WebRtcConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Enabled"
            }
          }
        },
        "xml" : {
          "name" : "WebRtc"
        }
      },
      "AccountSipAuthSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipAuthSettings",
            "xml" : {
              "name" : "SipAuthentication"
            }
          }
        },
        "xml" : {
          "name" : "SipAuthenticationResponse"
        }
      },
      "SipAuthDnsRecord" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "Type"
            },
            "enum" : [ "A", "SRV" ]
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "data" : {
            "type" : "string",
            "xml" : {
              "name" : "Data"
            }
          },
          "ttl" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "TTL"
            }
          }
        }
      },
      "SipAuthSbc" : {
        "type" : "object",
        "properties" : {
          "zone" : {
            "$ref" : "#/components/schemas/SipAuthZone",
            "xml" : {
              "name" : "Zone"
            }
          }
        }
      },
      "SipAuthSettings" : {
        "type" : "object",
        "properties" : {
          "realm" : {
            "type" : "string",
            "xml" : {
              "name" : "Realm"
            }
          },
          "defaultGroupName" : {
            "type" : "string",
            "xml" : {
              "name" : "DefaultGroupName"
            }
          },
          "sbc" : {
            "$ref" : "#/components/schemas/SipAuthSbc",
            "xml" : {
              "name" : "SBC"
            }
          },
          "dnsRecords" : {
            "type" : "array",
            "xml" : {
              "name" : "DNSRecords",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SipAuthDnsRecord"
            }
          }
        },
        "xml" : {
          "name" : "SipAuthentication"
        }
      },
      "SipAuthZone" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Id"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "sipSigPort" : {
            "$ref" : "#/components/schemas/SipSigPort",
            "xml" : {
              "name" : "SipSigPort"
            }
          }
        }
      },
      "SipSigPort" : {
        "type" : "object",
        "properties" : {
          "index" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Index"
            }
          },
          "portNumber" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PortNumber"
            }
          }
        }
      },
      "GeocodeRequestAddress" : {
        "type" : "object",
        "properties" : {
          "housePrefix" : {
            "type" : "string",
            "xml" : {
              "name" : "HousePrefix"
            }
          },
          "houseNo" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseNumber"
            }
          },
          "houseSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseSuffix"
            }
          },
          "preDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PreDirectional"
            }
          },
          "streetName" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetName"
            }
          },
          "streetSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetSuffix"
            }
          },
          "postDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PostDirectional"
            }
          },
          "addressLine2" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine2"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "stateCode" : {
            "type" : "string",
            "xml" : {
              "name" : "StateCode"
            }
          },
          "zip" : {
            "type" : "string",
            "xml" : {
              "name" : "Zip"
            }
          },
          "zip4" : {
            "type" : "string",
            "xml" : {
              "name" : "PlusFour"
            }
          },
          "county" : {
            "type" : "string",
            "xml" : {
              "name" : "County"
            }
          },
          "country" : {
            "type" : "string",
            "xml" : {
              "name" : "Country"
            }
          },
          "addressType" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressType"
            }
          },
          "resetAddressFields" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ResetAddressFields"
            }
          },
          "latitude" : {
            "type" : "string",
            "xml" : {
              "name" : "Latitude"
            }
          },
          "longitude" : {
            "type" : "string",
            "xml" : {
              "name" : "Longitude"
            }
          },
          "addressline1" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine1"
            }
          }
        },
        "xml" : {
          "name" : "RequestAddress"
        }
      },
      "GeocodeRequestResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/GeocodeRequestAddress",
            "xml" : {
              "name" : "RequestAddress"
            }
          },
          "errors" : {
            "type" : "string",
            "xml" : {
              "name" : "Errors"
            }
          },
          "geocodeAddress" : {
            "$ref" : "#/components/schemas/E911GeocodeAddress",
            "xml" : {
              "name" : "GeocodedAddress"
            }
          }
        },
        "xml" : {
          "name" : "GeocodeRequestResponse"
        }
      },
      "HolidayPayload" : {
        "type" : "object",
        "properties" : {
          "holidayDate" : {
            "type" : "string",
            "xml" : {
              "name" : "HolidayDate"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "Holiday"
        }
      },
      "HolidayResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/HolidayPayload",
            "xml" : {
              "name" : "Holiday"
            }
          }
        },
        "xml" : {
          "name" : "HolidayResponse"
        }
      },
      "MessagingSettings" : {
        "type" : "object",
        "properties" : {
          "smsEnabled" : {
            "type" : "string",
            "xml" : {
              "name" : "SmsEnabled"
            }
          },
          "campaignId" : {
            "type" : "string",
            "xml" : {
              "name" : "CampaignId"
            }
          },
          "messageClass" : {
            "type" : "string",
            "xml" : {
              "name" : "MessageClass"
            }
          },
          "a2pState" : {
            "type" : "string",
            "xml" : {
              "name" : "A2pState"
            },
            "enum" : [ "OFF", "SYSTEM_DEFAULT", "OVERRIDDEN" ]
          },
          "assignedNNRoute" : {
            "$ref" : "#/components/schemas/TnDetailsNnRoute",
            "xml" : {
              "name" : "AssignedNnRoute"
            }
          }
        },
        "xml" : {
          "name" : "MessagingSettings"
        }
      },
      "MessagingSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/MessagingSettings",
            "xml" : {
              "name" : "MessagingSettings"
            }
          }
        },
        "xml" : {
          "name" : "MessagingSettingsResponse"
        }
      },
      "AccountMessagingRoutesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/MessagingRoutes",
            "xml" : {
              "name" : "MessagingRoutes"
            }
          }
        },
        "xml" : {
          "name" : "AccountMessagingRoutesResponse"
        }
      },
      "MessagingRoute" : {
        "type" : "object",
        "properties" : {
          "nnId" : {
            "type" : "string",
            "xml" : {
              "name" : "NNID"
            }
          },
          "tnMessagingType" : {
            "type" : "string",
            "xml" : {
              "name" : "TNType"
            },
            "enum" : [ "ON_NET_TNS", "OFF_NET_TNS", "OFF_NET_CA_TNS", "EXTERNAL_CUSTOMER_OWNED_TNS", "EXTERNAL_THIRD_PARTY_TNS", "EXTERNAL_CANADIAN_TNS", "TOLL_FREE_TNS", "EXTERNAL_TOLL_FREE_TNS", "A2P_ON_NET_TNS", "A2P_OFF_NET_TNS", "INCORRECT_VALUE" ]
          },
          "defaultRoute" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Default"
            }
          },
          "detailsWrapper" : {
            "$ref" : "#/components/schemas/MessagingRouteDetailsWrapper",
            "xml" : {
              "name" : "Details"
            }
          }
        },
        "xml" : {
          "name" : "MessagingRoute"
        }
      },
      "MessagingRouteDetailsWrapper" : {
        "type" : "object",
        "properties" : {
          "nnRoute" : {
            "$ref" : "#/components/schemas/NnRoute",
            "xml" : {
              "name" : "NNRoute"
            }
          }
        },
        "xml" : {
          "name" : "Details"
        }
      },
      "MessagingRoutes" : {
        "type" : "object",
        "properties" : {
          "routes" : {
            "type" : "array",
            "xml" : {
              "name" : "MessagingRoute"
            },
            "items" : {
              "$ref" : "#/components/schemas/MessagingRoute"
            }
          }
        },
        "xml" : {
          "name" : "MessagingRoutes"
        }
      },
      "AccountSmsFeature" : {
        "type" : "object",
        "properties" : {
          "smsFeatureSettings" : {
            "$ref" : "#/components/schemas/AccountSmsFeatureSettings",
            "xml" : {
              "name" : "AccountSmsFeatureSettings"
            }
          },
          "smppSettings" : {
            "$ref" : "#/components/schemas/SmppSettings",
            "xml" : {
              "name" : "SmppSettings"
            }
          }
        },
        "xml" : {
          "name" : "AccountSmsFeature"
        }
      },
      "AccountSmsFeatureResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountSmsFeature",
            "xml" : {
              "name" : "AccountSmsFeature"
            }
          }
        },
        "xml" : {
          "name" : "AccountSmsFeatureResponse"
        }
      },
      "AccountSmsFeatureSettings" : {
        "type" : "object",
        "properties" : {
          "zone1" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone1"
            }
          },
          "zone2" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone2"
            }
          },
          "zone3" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone3"
            }
          },
          "zone4" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone4"
            }
          },
          "zone5" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone5"
            }
          },
          "smppEnabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "SmppEnabled"
            }
          },
          "defaultProvider" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "DefaultProvider"
            }
          }
        },
        "xml" : {
          "name" : "AccountSmsFeatureSettings"
        }
      },
      "SmppSettings" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "xml" : {
              "name" : "SmppUsername"
            }
          },
          "password" : {
            "type" : "string",
            "xml" : {
              "name" : "Password"
            }
          },
          "dlr" : {
            "type" : "string",
            "xml" : {
              "name" : "Dlr"
            },
            "enum" : [ "INTERMEDIATE", "FINAL" ]
          },
          "dlrCarrier" : {
            "type" : "boolean",
            "xml" : {
              "name" : "DlrCarrier"
            }
          },
          "maxPendingSubmits" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "MaxPendingSubmits"
            }
          },
          "forceTon" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ForceTon"
            }
          },
          "allowThirdPartyTN" : {
            "type" : "boolean",
            "xml" : {
              "name" : "AllowThirdPartyTN"
            }
          },
          "connectionTypeDefault" : {
            "type" : "string",
            "xml" : {
              "name" : "ConnectionTypeDefault"
            },
            "enum" : [ "TRANSCEIVER", "SENDER_ONLY", "RECEIVER_ONLY" ]
          },
          "maxConnections" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "MaxConnections"
            }
          },
          "resetPassword" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ResetPassword"
            }
          },
          "srcTon" : {
            "type" : "string",
            "xml" : {
              "name" : "SrcTon"
            },
            "enum" : [ "DEFAULT", "UNKNOWN", "INTERNATIONAL", "NATIONAL", "NETWORKSPECIFIC", "SUBSCRIBER", "ALPHANUMERIC", "ABBREVIATED", "EXTENSION" ]
          },
          "srcNpi" : {
            "type" : "string",
            "xml" : {
              "name" : "SrcNpi"
            },
            "enum" : [ "DEFAULT", "UNKNOWN", "E164", "X121", "TELEX", "NATIONAL", "PRIVATE", "ERMES", "EXTENSION" ]
          },
          "dstTon" : {
            "type" : "string",
            "xml" : {
              "name" : "DstTon"
            },
            "enum" : [ "DEFAULT", "UNKNOWN", "INTERNATIONAL", "NATIONAL", "NETWORKSPECIFIC", "SUBSCRIBER", "ALPHANUMERIC", "ABBREVIATED", "EXTENSION" ]
          },
          "dstNpi" : {
            "type" : "string",
            "xml" : {
              "name" : "DstNpi"
            },
            "enum" : [ "DEFAULT", "UNKNOWN", "E164", "X121", "TELEX", "NATIONAL", "PRIVATE", "ERMES", "EXTENSION" ]
          }
        },
        "xml" : {
          "name" : "SmppSettings"
        }
      },
      "AccountHttpFeature" : {
        "type" : "object",
        "properties" : {
          "defaultProxyPeerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "DefaultProxyPeerId"
            }
          }
        },
        "xml" : {
          "name" : "AccountHttpFeature"
        }
      },
      "AccountHttpFeatureResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountHttpFeature",
            "xml" : {
              "name" : "AccountHttpFeature"
            }
          }
        },
        "xml" : {
          "name" : "AccountHttpFeatureResponse"
        }
      },
      "AccountMmsFeatureSettings" : {
        "type" : "object",
        "properties" : {
          "mm4Enabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "MM4Enabled"
            }
          },
          "tollFreeMMSAllowed" : {
            "type" : "boolean",
            "xml" : {
              "name" : "TollFreeMMSAllowed"
            }
          },
          "defaultProvider" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "DefaultProvider"
            }
          },
          "genDlr" : {
            "type" : "boolean",
            "xml" : {
              "name" : "GenDlr"
            }
          },
          "genReadReply" : {
            "type" : "boolean",
            "xml" : {
              "name" : "GenReadReply"
            }
          }
        },
        "xml" : {
          "name" : "MmsSettings"
        }
      },
      "AccountMmsFeatureSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountMmsFeatureSettings",
            "xml" : {
              "name" : "mmsSettings"
            }
          }
        },
        "xml" : {
          "name" : "AccountMmsFeatureSettingsResponse"
        }
      },
      "Mm4Settings" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "type" : "string",
            "xml" : {
              "name" : "Domain"
            }
          },
          "connValidWindow" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ConnValidWindow"
            }
          },
          "maxConn" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "MaxConn"
            }
          },
          "persistentConn" : {
            "type" : "boolean",
            "xml" : {
              "name" : "PersistentConn"
            }
          },
          "keepAliveNoop" : {
            "type" : "boolean",
            "xml" : {
              "name" : "KeepAliveNoop"
            }
          },
          "skipAck" : {
            "type" : "boolean",
            "xml" : {
              "name" : "SkipAck"
            }
          },
          "allowMultiRecepient" : {
            "type" : "boolean",
            "xml" : {
              "name" : "AllowMultiRecepient"
            }
          },
          "connMessageRatio" : {
            "type" : "number",
            "format" : "float",
            "xml" : {
              "name" : "ConnMessageRatio"
            }
          },
          "connSentTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ConnSentTimeout"
            }
          },
          "maxMessagesInQueue" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "MaxMessagesInQueue"
            }
          },
          "loopAllowed" : {
            "type" : "boolean",
            "xml" : {
              "name" : "LoopAllowed"
            }
          },
          "forceAck" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ForceAck"
            }
          },
          "asyncMessageFlowSupported" : {
            "type" : "boolean",
            "xml" : {
              "name" : "AsyncMessageFlowSupported"
            }
          }
        },
        "xml" : {
          "name" : "MM4Settings"
        }
      },
      "MmsFeatureMm4SettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Mm4Settings",
            "xml" : {
              "name" : "mm4Settings"
            }
          }
        },
        "xml" : {
          "name" : "MmsFeatureMm4AdminSettingsResponse"
        }
      },
      "AccountMmsFeature" : {
        "type" : "object",
        "properties" : {
          "mmsFeatureSettings" : {
            "$ref" : "#/components/schemas/AccountMmsFeatureSettings",
            "xml" : {
              "name" : "MmsSettings"
            }
          },
          "mm4Settings" : {
            "$ref" : "#/components/schemas/Mm4Settings",
            "xml" : {
              "name" : "MM4Settings"
            }
          }
        },
        "xml" : {
          "name" : "AccountMmsFeature"
        }
      },
      "AccountMmsFeatureResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountMmsFeature",
            "xml" : {
              "name" : "MmsFeature"
            }
          }
        },
        "xml" : {
          "name" : "AccountMmsFeatureResponse"
        }
      },
      "BocAccount" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "updateAllLocations" : {
            "type" : "boolean",
            "xml" : {
              "name" : "AllLocations"
            }
          },
          "errorStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            }
          }
        },
        "xml" : {
          "name" : "Account"
        }
      },
      "BocAccountList" : {
        "type" : "object",
        "properties" : {
          "countryCode" : {
            "type" : "string",
            "xml" : {
              "name" : "Country"
            }
          },
          "operation" : {
            "type" : "string",
            "xml" : {
              "name" : "Operation"
            },
            "enum" : [ "ADD", "REMOVE" ]
          },
          "accountList" : {
            "type" : "array",
            "xml" : {
              "name" : "Accounts",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/BocAccount"
            }
          }
        },
        "xml" : {
          "name" : "BocAcctList"
        }
      },
      "GanProfileAttributeMigration" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            },
            "enum" : [ "MIGRATED", "ROLLEDBACK" ]
          }
        },
        "xml" : {
          "name" : "GanProfileAttributeMigration"
        }
      },
      "NnidAccountSync" : {
        "type" : "object",
        "properties" : {
          "accountIds" : {
            "type" : "array",
            "xml" : {
              "name" : "AccountIds",
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "xml" : {
                "name" : "AccountId"
              }
            }
          }
        },
        "xml" : {
          "name" : "NnidAccountSync"
        }
      },
      "TnHistoryRecast" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string",
            "xml" : {
              "name" : "Tag"
            }
          },
          "accountIds" : {
            "type" : "array",
            "xml" : {
              "name" : "AccountIds",
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "xml" : {
                "name" : "AccountId"
              }
            }
          },
          "fullnumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          }
        },
        "xml" : {
          "name" : "TnHistoryRecast"
        }
      },
      "TnHistoryCleanup" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string",
            "xml" : {
              "name" : "Tag"
            }
          },
          "accountIds" : {
            "type" : "array",
            "xml" : {
              "name" : "AccountIds",
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "xml" : {
                "name" : "AccountId"
              }
            }
          },
          "fullnumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          }
        },
        "xml" : {
          "name" : "TnHistoryCleanup"
        }
      },
      "CnamDipSettings" : {
        "type" : "object",
        "properties" : {
          "sustainedRequestRate" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SustainedRequestRate"
            }
          },
          "burstRequestRate" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "BurstRequestRate"
            }
          },
          "sourceIps" : {
            "type" : "array",
            "xml" : {
              "name" : "SourceIps",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Host"
            }
          }
        },
        "xml" : {
          "name" : "CnamDip"
        }
      },
      "Host" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "xml" : {
              "name" : "HostName"
            }
          },
          "port" : {
            "type" : "string",
            "xml" : {
              "name" : "Port"
            }
          }
        },
        "xml" : {
          "name" : "Host"
        }
      },
      "LnpSettings" : {
        "type" : "object",
        "properties" : {
          "falloutManagementGrade" : {
            "type" : "string",
            "xml" : {
              "name" : "FalloutManagementGrade"
            }
          }
        },
        "xml" : {
          "name" : "LNP"
        }
      },
      "NumberManagementSettings" : {
        "type" : "object",
        "properties" : {
          "cnamDipSettings" : {
            "$ref" : "#/components/schemas/CnamDipSettings",
            "xml" : {
              "name" : "CnamDip"
            }
          },
          "lnpSettings" : {
            "$ref" : "#/components/schemas/LnpSettings",
            "xml" : {
              "name" : "LNP"
            }
          },
          "vendorIds" : {
            "type" : "array",
            "xml" : {
              "name" : "VendorIds",
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "xml" : {
                "name" : "VendorId"
              }
            }
          },
          "countries" : {
            "type" : "array",
            "xml" : {
              "name" : "Countries",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "CountryTwoLetterCode"
              }
            }
          },
          "tnTypeIds" : {
            "type" : "array",
            "xml" : {
              "name" : "TnTypeIds",
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "xml" : {
                "name" : "TnTypeId"
              }
            }
          }
        },
        "xml" : {
          "name" : "NumberManagementSettings"
        }
      },
      "OriginationConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "concurrentBidirectionalCalls" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ConcurrentBidirectionalCalls"
            }
          },
          "concurrentInboundCalls" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ConcurrentInboundCalls"
            }
          },
          "redirectEnabled" : {
            "type" : "string",
            "xml" : {
              "name" : "RedirectEnabled"
            }
          }
        },
        "xml" : {
          "name" : "OriginationSettings"
        }
      },
      "OriginationConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/OriginationConfigurationPayload",
            "xml" : {
              "name" : "OriginationSettings"
            }
          }
        },
        "xml" : {
          "name" : "OriginationSettingResponse"
        }
      },
      "PomAccount" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "Type"
            },
            "enum" : [ "BLOCKED", "CUSTOMER_API_VALIDATION" ]
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          }
        },
        "xml" : {
          "name" : "PomAccount"
        }
      },
      "PomAccountResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/PomAccount",
            "xml" : {
              "name" : "PomAccount"
            }
          }
        },
        "xml" : {
          "name" : "PomAccountResponse"
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "managerFirstName" : {
            "type" : "string",
            "xml" : {
              "name" : "ProductManangerFirstName"
            }
          },
          "managerLastName" : {
            "type" : "string",
            "xml" : {
              "name" : "ProductManangerLastName"
            }
          },
          "managerEmail" : {
            "type" : "string",
            "xml" : {
              "name" : "ProductManangerEmail"
            }
          },
          "features" : {
            "type" : "array",
            "xml" : {
              "name" : "Features",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ProductFeature"
            }
          }
        },
        "xml" : {
          "name" : "Product"
        }
      },
      "ProductFeature" : {
        "type" : "object",
        "properties" : {
          "featureName" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "Feature"
        }
      },
      "Products" : {
        "type" : "object",
        "properties" : {
          "products" : {
            "type" : "array",
            "xml" : {
              "name" : "Product"
            },
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          }
        },
        "xml" : {
          "name" : "Products"
        }
      },
      "ProductsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Products",
            "xml" : {
              "name" : "Products"
            }
          }
        },
        "xml" : {
          "name" : "ProductsResponse"
        }
      },
      "ProductResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Product",
            "xml" : {
              "name" : "Product"
            }
          }
        },
        "xml" : {
          "name" : "ProductResponse"
        }
      },
      "SettingPayload" : {
        "type" : "object",
        "properties" : {
          "settingName" : {
            "type" : "string",
            "writeOnly" : true
          },
          "value" : {
            "type" : "object",
            "xml" : {
              "name" : "Value"
            }
          },
          "propertyName" : {
            "type" : "string"
          },
          "stringValue" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Setting"
        }
      },
      "AccountSipCredentials" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Account"
            }
          },
          "sipCredentials" : {
            "type" : "array",
            "xml" : {
              "name" : "SipCredential"
            },
            "items" : {
              "$ref" : "#/components/schemas/SipCredential"
            }
          }
        },
        "xml" : {
          "name" : "SipCredentials"
        }
      },
      "SipCredential" : {
        "type" : "object",
        "properties" : {
          "userName" : {
            "type" : "string",
            "xml" : {
              "name" : "UserName"
            }
          },
          "domain" : {
            "type" : "string",
            "xml" : {
              "name" : "Domain"
            }
          },
          "hash1" : {
            "type" : "string",
            "xml" : {
              "name" : "Hash1"
            }
          },
          "hash1b" : {
            "type" : "string",
            "xml" : {
              "name" : "Hash1b"
            }
          }
        },
        "xml" : {
          "name" : "SipCredential"
        }
      },
      "SipCredentials" : {
        "type" : "object",
        "properties" : {
          "accountSipCredentials" : {
            "type" : "array",
            "xml" : {
              "name" : "SipCredentialsByAccount"
            },
            "items" : {
              "$ref" : "#/components/schemas/AccountSipCredentials"
            }
          }
        },
        "xml" : {
          "name" : "SipCredentials"
        }
      },
      "SipCredentialError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ErrorCode"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "sipCredential" : {
            "$ref" : "#/components/schemas/SipCredential",
            "xml" : {
              "name" : "SipCredential"
            }
          }
        },
        "xml" : {
          "name" : "Error"
        }
      },
      "SipCredentialResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipCredential",
            "xml" : {
              "name" : "SipCredential"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "error" : {
            "$ref" : "#/components/schemas/SipCredentialError",
            "xml" : {
              "name" : "Error"
            }
          }
        },
        "xml" : {
          "name" : "SipCredentialResponse"
        }
      },
      "AccountSipCredentialsCreateResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountSipCredentials",
            "xml" : {
              "name" : "ValidSipCredentials"
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SipCredentialError"
            }
          }
        },
        "xml" : {
          "name" : "SipCredentialsResponse"
        }
      },
      "Hosts" : {
        "type" : "object",
        "properties" : {
          "hosts" : {
            "type" : "array",
            "xml" : {
              "name" : "Host"
            },
            "items" : {
              "$ref" : "#/components/schemas/Host"
            }
          }
        },
        "xml" : {
          "name" : "Hosts"
        }
      },
      "SipPeer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "peerName" : {
            "type" : "string",
            "xml" : {
              "name" : "PeerName"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "defaultPeer" : {
            "type" : "boolean",
            "xml" : {
              "name" : "IsDefaultPeer"
            }
          },
          "destinationUri" : {
            "type" : "string",
            "xml" : {
              "name" : "FinalDestinationUri"
            }
          },
          "voiceHosts" : {
            "$ref" : "#/components/schemas/Hosts",
            "xml" : {
              "name" : "VoiceHosts"
            }
          },
          "voiceHostGroups" : {
            "type" : "array",
            "xml" : {
              "name" : "VoiceHostGroups",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Hosts"
            }
          },
          "terminationHosts" : {
            "$ref" : "#/components/schemas/SipPeerTerminationHosts",
            "xml" : {
              "name" : "TerminationHosts"
            }
          },
          "productTypes" : {
            "type" : "array",
            "xml" : {
              "name" : "Products",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Product"
              },
              "enum" : [ "Origination", "Termination", "MESSAGING", "E911", "TollFree", "UcTrunking", "EdgeManagement", "CORE", "Iris", "NumberManagement", "Analytics" ]
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/Address",
            "xml" : {
              "name" : "Address"
            }
          },
          "premiseTrunks" : {
            "type" : "string",
            "xml" : {
              "name" : "PremiseTrunks"
            }
          },
          "callingName" : {
            "$ref" : "#/components/schemas/SipPeerLineOptionDto",
            "xml" : {
              "name" : "CallingName"
            }
          },
          "suggestedAddresses" : {
            "type" : "array",
            "xml" : {
              "name" : "SuggestedAddresses",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Address"
            }
          },
          "tnCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TnCount"
            }
          }
        }
      },
      "SipPeerLineOptionDto" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Display"
            }
          },
          "enforced" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Enforced"
            }
          }
        },
        "xml" : {
          "name" : "CallingName"
        }
      },
      "SipPeerTerminationHost" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "xml" : {
              "name" : "HostName"
            }
          },
          "port" : {
            "type" : "string",
            "xml" : {
              "name" : "Port"
            }
          },
          "customerTraffic" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerTrafficAllowed"
            }
          }
        },
        "xml" : {
          "name" : "TerminationHost"
        }
      },
      "SipPeerTerminationHosts" : {
        "type" : "object",
        "properties" : {
          "terminationHosts" : {
            "type" : "array",
            "xml" : {
              "name" : "TerminationHost"
            },
            "items" : {
              "$ref" : "#/components/schemas/SipPeerTerminationHost"
            }
          }
        },
        "xml" : {
          "name" : "TerminationHosts"
        }
      },
      "SipPeers" : {
        "type" : "object",
        "properties" : {
          "sipPeers" : {
            "type" : "array",
            "xml" : {
              "name" : "SipPeer"
            },
            "items" : {
              "$ref" : "#/components/schemas/SipPeer"
            }
          }
        },
        "xml" : {
          "name" : "SipPeers"
        }
      },
      "Site" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Id"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "customerProvidedId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerProvidedId"
            }
          },
          "customerName" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerName"
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/Address",
            "xml" : {
              "name" : "Address"
            }
          },
          "siteUcTrunkingConfiguration" : {
            "$ref" : "#/components/schemas/SiteUcTrunkingConfigurationPayload",
            "xml" : {
              "name" : "UcTrunkingConfiguration"
            }
          },
          "sipPeers" : {
            "$ref" : "#/components/schemas/SipPeers",
            "xml" : {
              "name" : "SipPeers"
            }
          },
          "totalTnCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalTnCount"
            }
          },
          "sipPeerCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SipPeerCount"
            }
          }
        },
        "xml" : {
          "name" : "Site"
        }
      },
      "SiteResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Site",
            "xml" : {
              "name" : "Site"
            }
          },
          "addressErrorDescription" : {
            "$ref" : "#/components/schemas/AddressErrorDescription",
            "xml" : {
              "name" : "AddressErrorDescription"
            }
          }
        },
        "xml" : {
          "name" : "SiteResponse"
        }
      },
      "SiteUcTrunkingConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "Type"
            }
          },
          "usageCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "UsageCategory"
            }
          }
        },
        "xml" : {
          "name" : "UcTrunkingConfiguration"
        }
      },
      "Sites" : {
        "type" : "object",
        "properties" : {
          "sites" : {
            "type" : "array",
            "xml" : {
              "name" : "Site"
            },
            "items" : {
              "$ref" : "#/components/schemas/Site"
            }
          }
        },
        "xml" : {
          "name" : "Sites"
        }
      },
      "SitesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Sites",
            "xml" : {
              "name" : "Sites"
            }
          }
        },
        "xml" : {
          "name" : "SitesResponse"
        }
      },
      "SiteLock" : {
        "type" : "object",
        "properties" : {
          "locked" : {
            "type" : "string",
            "xml" : {
              "name" : "Locked"
            }
          }
        },
        "xml" : {
          "name" : "Lock"
        }
      },
      "SiteLockResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SiteLock",
            "xml" : {
              "name" : "Lock"
            }
          }
        },
        "xml" : {
          "name" : "SiteLockResponse"
        }
      },
      "SiteBillingId" : {
        "type" : "object",
        "properties" : {
          "billingId" : {
            "type" : "string",
            "xml" : {
              "name" : "IdValue"
            }
          }
        },
        "xml" : {
          "name" : "BillingId"
        }
      },
      "SiteBillingIdResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SiteBillingId",
            "xml" : {
              "name" : "BillingId"
            }
          }
        },
        "xml" : {
          "name" : "SiteBillingIdResponse"
        }
      },
      "SiteContactPerson" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "xml" : {
              "name" : "FirstName"
            }
          },
          "lastName" : {
            "type" : "string",
            "xml" : {
              "name" : "LastName"
            }
          },
          "email" : {
            "type" : "string",
            "xml" : {
              "name" : "Email"
            }
          },
          "phoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "PhoneNumber"
            }
          }
        },
        "xml" : {
          "name" : "ContactPerson"
        }
      },
      "SiteContract" : {
        "type" : "object",
        "properties" : {
          "salesRepresentative" : {
            "$ref" : "#/components/schemas/SiteSalesRepresentative",
            "xml" : {
              "name" : "SalesRepresentative"
            }
          },
          "contactPerson" : {
            "$ref" : "#/components/schemas/SiteContactPerson",
            "xml" : {
              "name" : "ContactPerson"
            }
          }
        },
        "xml" : {
          "name" : "Contract"
        }
      },
      "SiteContractResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SiteContract",
            "xml" : {
              "name" : "Contract"
            }
          }
        },
        "xml" : {
          "name" : "SiteContractResponse"
        }
      },
      "SiteSalesRepresentative" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "Id"
            }
          },
          "firstName" : {
            "type" : "string",
            "xml" : {
              "name" : "FirstName"
            }
          },
          "lastName" : {
            "type" : "string",
            "xml" : {
              "name" : "LastName"
            }
          },
          "email" : {
            "type" : "string",
            "xml" : {
              "name" : "Email"
            }
          },
          "phoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "PhoneNumber"
            }
          }
        },
        "xml" : {
          "name" : "SalesRepresentative"
        }
      },
      "AccountTerminationConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "rogerUsedForTerminationSettings" : {
            "type" : "string",
            "xml" : {
              "name" : "RogerUsedForTerminationSettings"
            },
            "enum" : [ "false", "transition", "true" ]
          },
          "httpVoiceProxyTermHost" : {
            "type" : "string",
            "xml" : {
              "name" : "HttpVoiceProxyTermHost"
            }
          },
          "legacyTerminationConfiguration" : {
            "$ref" : "#/components/schemas/LegacyTerminationConfigurationPayload",
            "xml" : {
              "name" : "LegacyTerminationSettings"
            }
          },
          "rogerTerminationConfiguration" : {
            "$ref" : "#/components/schemas/RogerTerminationConfigurationPayload",
            "xml" : {
              "name" : "RogerTerminationSettings"
            }
          }
        },
        "xml" : {
          "name" : "TerminationSettings"
        }
      },
      "AccountTerminationConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountTerminationConfigurationPayload",
            "xml" : {
              "name" : "TerminationSettings"
            }
          }
        },
        "xml" : {
          "name" : "TerminationSettingResponse"
        }
      },
      "LegacyTerminationConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "customerTraffic" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerTrafficAllowed"
            }
          },
          "cpsQueue" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "CpsQueue"
            }
          },
          "concurrentOutboundCalls" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ConcurrentOutboundCalls"
            }
          },
          "concurrentBidirectionalCalls" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ConcurrentBidirectionalCalls"
            }
          },
          "billingType" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingType"
            }
          },
          "rateType" : {
            "type" : "string",
            "xml" : {
              "name" : "RateType"
            }
          },
          "discountPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "DiscountPercentage"
            }
          },
          "guaranteedTermination" : {
            "type" : "boolean",
            "xml" : {
              "name" : "GuaranteedTermination"
            }
          }
        },
        "xml" : {
          "name" : "LegacyTerminationSettings"
        }
      },
      "RogerTerminationConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "terminationId" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "TerminationId"
            }
          },
          "subnetAddressingAllowed" : {
            "type" : "boolean",
            "xml" : {
              "name" : "SubnetAddressingAllowed"
            }
          }
        },
        "xml" : {
          "name" : "RogerTerminationSettings"
        }
      },
      "TerminationAttribute" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "profileId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "inEffectiveDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productAttributeId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "isTemplate" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "TerminationAttribute"
        }
      },
      "TerminationProduct" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TerminationAttributes",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationAttribute"
            }
          }
        },
        "xml" : {
          "name" : "TerminationProduct"
        }
      },
      "TerminationProductAssignment" : {
        "type" : "object",
        "properties" : {
          "attributeId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productName" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "TerminationProductAssignment"
        }
      },
      "TerminationProductResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationProductWrapper",
            "xml" : {
              "name" : "TerminationProductWrapper"
            }
          }
        },
        "xml" : {
          "name" : "TerminationProductResponse"
        }
      },
      "TerminationProductWrapper" : {
        "type" : "object",
        "properties" : {
          "terminationProduct" : {
            "$ref" : "#/components/schemas/TerminationProduct",
            "xml" : {
              "name" : "TerminationProduct"
            }
          },
          "terminationProductAssignment" : {
            "$ref" : "#/components/schemas/TerminationProductAssignment",
            "xml" : {
              "name" : "TerminationProductAssignment"
            }
          }
        },
        "xml" : {
          "name" : "TerminationProductWrapper"
        }
      },
      "TerminationCustomerProductAssignmentResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationProductWrapper",
            "xml" : {
              "name" : "TerminationProductWrapper"
            }
          }
        },
        "xml" : {
          "name" : "TerminationCustomerProductAssignmentResponse"
        }
      },
      "TerminationCustomerProductAssignmentsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationProducts",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationProduct"
            }
          }
        },
        "xml" : {
          "name" : "TerminationCustomerProductAssignmentsResponse"
        }
      },
      "TerminationListTerminationProduct" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationProduct"
        }
      },
      "TerminationListTerminationRateDeckAssignment" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationRateDeckAssignment"
        }
      },
      "TerminationRateDeckAssignment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "termServiceRateDeckId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "termServiceAccountId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "externalProfileId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "externalAssignmentId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "billingAccountId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "increaseDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "decreaseDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckAssignment"
        }
      },
      "TerminationRateDeckAssignmentsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationRateDeckAssignments",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationRateDeckAssignment"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckAssignmentsResponse"
        }
      },
      "TerminationRateDeckAssignmentResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationRateDeckAssignment",
            "xml" : {
              "name" : "TerminationRateDeckAssignment"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckAssignmentResponse"
        }
      },
      "TerminationAttributesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationAttributesWrapper",
            "xml" : {
              "name" : "TerminationAttributesWrapper"
            }
          }
        },
        "xml" : {
          "name" : "TerminationAttributesResponse"
        }
      },
      "TerminationAttributesWrapper" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "attributes" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationAttributes",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationAttribute"
            }
          }
        },
        "xml" : {
          "name" : "TerminationAttributesWrapper"
        }
      },
      "TerminationListTerminationAttribute" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationAttribute"
        }
      },
      "TerminationAttributeResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationAttributeWrapper",
            "xml" : {
              "name" : "TerminationAttributeWrapper"
            }
          }
        },
        "xml" : {
          "name" : "TerminationAttributeResponse"
        }
      },
      "TerminationAttributeWrapper" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "attribute" : {
            "$ref" : "#/components/schemas/TerminationAttribute",
            "xml" : {
              "name" : "TerminationAttribute"
            }
          }
        },
        "xml" : {
          "name" : "TerminationAttributeWrapper"
        }
      },
      "TerminationMigrationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationMigrationWrapper",
            "xml" : {
              "name" : "TerminationMigrationWrapper"
            }
          }
        },
        "xml" : {
          "name" : "TerminationMigrationResponse"
        }
      },
      "TerminationMigrationWrapper" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "xml" : {
          "name" : "TerminationMigrationWrapper"
        }
      },
      "TollFreeSettings" : {
        "type" : "object",
        "properties" : {
          "respOrgException" : {
            "type" : "boolean",
            "xml" : {
              "name" : "RespOrgException"
            }
          }
        },
        "xml" : {
          "name" : "TollFreeSettings"
        }
      },
      "TollFreeSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TollFreeSettings",
            "xml" : {
              "name" : "TollFreeSettings"
            }
          }
        },
        "xml" : {
          "name" : "TollFreeSettingsResponse"
        }
      },
      "TrunkGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "Id"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            }
          },
          "sbcNodeGroup" : {
            "type" : "string",
            "xml" : {
              "name" : "SBCNodeGroup"
            }
          },
          "sbcZone" : {
            "type" : "string",
            "xml" : {
              "name" : "SBCZone"
            }
          }
        },
        "xml" : {
          "name" : "TrunkGroup"
        }
      },
      "TrunkGroupsPayload" : {
        "type" : "object",
        "properties" : {
          "trunkGroups" : {
            "type" : "array",
            "xml" : {
              "name" : "TrunkGroup"
            },
            "items" : {
              "$ref" : "#/components/schemas/TrunkGroup"
            }
          }
        },
        "xml" : {
          "name" : "TrunkGroups"
        }
      },
      "TrunkGroupsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TrunkGroupsPayload",
            "xml" : {
              "name" : "TrunkGroups"
            }
          }
        },
        "xml" : {
          "name" : "TrunkGroupsResponse"
        }
      },
      "UcTrunkingCloudConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "trunks" : {
            "type" : "string",
            "xml" : {
              "name" : "BiDirectionalTrunks"
            }
          }
        },
        "xml" : {
          "name" : "UcTrunkingCloudSettings"
        }
      },
      "UcTrunkingCloudConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/UcTrunkingCloudConfigurationPayload",
            "xml" : {
              "name" : "UcTrunkingCloudSettings"
            }
          }
        },
        "xml" : {
          "name" : "UcTrunkingCloudSettingsResponse"
        }
      },
      "UcTrunkingAllocationRule" : {
        "type" : "object",
        "properties" : {
          "lowerBound" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "LowerBound"
            }
          },
          "ratio" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Ratio"
            }
          }
        },
        "xml" : {
          "name" : "TrunkAllocationRule"
        }
      },
      "UcTrunkingConfigurationPayload" : {
        "type" : "object",
        "properties" : {
          "partnerType" : {
            "type" : "string",
            "xml" : {
              "name" : "PartnerType"
            }
          },
          "maxUcTrunks" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "MaxUcTrunks"
            }
          },
          "billingType" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingType"
            }
          },
          "customerTraffic" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerTrafficAllowed"
            }
          },
          "usageCategory" : {
            "type" : "string",
            "xml" : {
              "name" : "UsageCategory"
            }
          },
          "trunkAllocationRules" : {
            "type" : "array",
            "xml" : {
              "name" : "TrunkAllocationRules",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/UcTrunkingAllocationRule"
            }
          },
          "mainUCloudHost" : {
            "type" : "string",
            "xml" : {
              "name" : "MainCloudHost"
            }
          }
        },
        "xml" : {
          "name" : "UcTrunkingSettings"
        }
      },
      "UcTrunkingConfigurationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/UcTrunkingConfigurationPayload",
            "xml" : {
              "name" : "UcTrunkingSettings"
            }
          }
        },
        "xml" : {
          "name" : "UcTrunkingSettingsResponse"
        }
      },
      "IrisAccountDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountName"
            }
          }
        },
        "xml" : {
          "name" : "Account"
        }
      },
      "IrisAccountsDto" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "accounts" : {
            "type" : "array",
            "xml" : {
              "name" : "Account"
            },
            "items" : {
              "$ref" : "#/components/schemas/IrisAccountDto"
            }
          }
        },
        "xml" : {
          "name" : "AccountList"
        }
      },
      "IrisAccountsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/IrisAccountsDto",
            "xml" : {
              "name" : "AccountList"
            }
          }
        },
        "xml" : {
          "name" : "LdapAccountsResponse"
        }
      },
      "IrisAccountResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/IrisAccountDto",
            "xml" : {
              "name" : "Account"
            }
          }
        },
        "xml" : {
          "name" : "LdapAccountResponse"
        }
      },
      "Domain" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "DomainName"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "DomainDescription"
            }
          },
          "settings" : {
            "type" : "array",
            "xml" : {
              "name" : "DomainSettings",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "DomainSetting"
              }
            }
          }
        },
        "xml" : {
          "name" : "Domain"
        }
      },
      "DomainResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Domain",
            "xml" : {
              "name" : "Domain"
            }
          }
        },
        "xml" : {
          "name" : "DomainResponse"
        }
      },
      "Domains" : {
        "type" : "object",
        "properties" : {
          "domains" : {
            "type" : "array",
            "xml" : {
              "name" : "Domain"
            },
            "items" : {
              "$ref" : "#/components/schemas/Domain"
            }
          }
        },
        "xml" : {
          "name" : "DomainList"
        }
      },
      "DomainsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Domains",
            "xml" : {
              "name" : "DomainList"
            }
          }
        },
        "xml" : {
          "name" : "DomainsResponse"
        }
      },
      "LdapPermission" : {
        "type" : "object",
        "properties" : {
          "permissionId" : {
            "type" : "string",
            "xml" : {
              "name" : "PermissionId"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "PermissionDescription"
            }
          },
          "internal" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Internal"
            }
          }
        },
        "xml" : {
          "name" : "Permission"
        }
      },
      "LdapPermissions" : {
        "type" : "object",
        "properties" : {
          "ldapPermissions" : {
            "type" : "array",
            "xml" : {
              "name" : "Permission"
            },
            "items" : {
              "$ref" : "#/components/schemas/LdapPermission"
            }
          }
        },
        "xml" : {
          "name" : "PermissionList"
        }
      },
      "LdapPermissionsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapPermissions",
            "xml" : {
              "name" : "PermissionList"
            }
          }
        },
        "xml" : {
          "name" : "LdapPermissionsResponse"
        }
      },
      "LdapPermissionResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapPermission",
            "xml" : {
              "name" : "Permission"
            }
          }
        },
        "xml" : {
          "name" : "LdapPermissionResponse"
        }
      },
      "LdapUserPreference" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "PreferenceName"
            }
          },
          "value" : {
            "type" : "string",
            "xml" : {
              "name" : "PreferenceValue"
            }
          },
          "options" : {
            "type" : "array",
            "xml" : {
              "name" : "OptionalValues",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "OptionalValue"
              }
            }
          }
        },
        "xml" : {
          "name" : "UserPreference"
        }
      },
      "LdapUserPreferences" : {
        "type" : "object",
        "properties" : {
          "ldapUserPreferences" : {
            "type" : "array",
            "xml" : {
              "name" : "UserPreference"
            },
            "items" : {
              "$ref" : "#/components/schemas/LdapUserPreference"
            }
          },
          "preferencesNames" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "OptionalValue"
              }
            }
          }
        },
        "xml" : {
          "name" : "UserPreferences"
        }
      },
      "LdapUserPreferencesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUserPreferences",
            "xml" : {
              "name" : "UserPreferences"
            }
          }
        },
        "xml" : {
          "name" : "UserPreferencesResponse"
        }
      },
      "LdapRole" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "roleId" : {
            "type" : "string",
            "xml" : {
              "name" : "RoleId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "RoleSimpleName"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "RoleDescription"
            }
          },
          "internal" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Internal"
            }
          },
          "customerVisible" : {
            "type" : "boolean",
            "xml" : {
              "name" : "CustomerVisible"
            }
          },
          "permissions" : {
            "$ref" : "#/components/schemas/LdapPermissions",
            "xml" : {
              "name" : "PermissionList"
            }
          },
          "permissionIdList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "firstPermission" : {
            "$ref" : "#/components/schemas/LdapPermission"
          },
          "new" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "Role"
        }
      },
      "LdapRoleResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapRole",
            "xml" : {
              "name" : "Role"
            }
          }
        },
        "xml" : {
          "name" : "LdapRoleResponse"
        }
      },
      "LdapRolePermissionXrefResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapRole",
            "xml" : {
              "name" : "Role"
            }
          }
        },
        "xml" : {
          "name" : "LdapRolePermissionResponse"
        }
      },
      "LdapRolePermissionsXrefResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapRole",
            "xml" : {
              "name" : "Role"
            }
          }
        },
        "xml" : {
          "name" : "LdapRolePermissionsResponse"
        }
      },
      "ApiToken" : {
        "type" : "object",
        "properties" : {
          "tokenId" : {
            "type" : "string",
            "xml" : {
              "name" : "TokenId"
            }
          },
          "secret" : {
            "type" : "string",
            "xml" : {
              "name" : "Secret"
            }
          },
          "tokenScope" : {
            "$ref" : "#/components/schemas/TokenScope",
            "xml" : {
              "name" : "TokenScope"
            }
          }
        },
        "xml" : {
          "name" : "ApiToken"
        }
      },
      "TokenResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/ApiToken",
            "xml" : {
              "name" : "ApiToken"
            }
          }
        },
        "xml" : {
          "name" : "TokenResponse"
        }
      },
      "TokenScope" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountScope"
            }
          }
        },
        "xml" : {
          "name" : "TokenScope"
        }
      },
      "TokenGroup" : {
        "type" : "object",
        "properties" : {
          "tokens" : {
            "type" : "array",
            "xml" : {
              "name" : "TokenList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Token"
              }
            }
          },
          "tokenScope" : {
            "$ref" : "#/components/schemas/TokenScope",
            "xml" : {
              "name" : "TokenScope"
            }
          }
        },
        "xml" : {
          "name" : "TokenGroup"
        }
      },
      "TokenGroups" : {
        "type" : "object",
        "properties" : {
          "tokenGroups" : {
            "type" : "array",
            "xml" : {
              "name" : "TokenGroup"
            },
            "items" : {
              "$ref" : "#/components/schemas/TokenGroup"
            }
          }
        },
        "xml" : {
          "name" : "TokenGroups"
        }
      },
      "TokensResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TokenGroups",
            "xml" : {
              "name" : "TokenGroups"
            }
          }
        },
        "xml" : {
          "name" : "TokensResponse"
        }
      },
      "LdapAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountName"
            }
          }
        },
        "writeOnly" : true,
        "xml" : {
          "name" : "LdapAccount"
        }
      },
      "LdapAccountsDto" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "accounts" : {
            "type" : "array",
            "xml" : {
              "name" : "Account"
            },
            "items" : {
              "$ref" : "#/components/schemas/LdapAccount"
            }
          }
        },
        "xml" : {
          "name" : "AccountList"
        }
      },
      "LdapRoles" : {
        "type" : "object",
        "properties" : {
          "ldapRoles" : {
            "type" : "array",
            "xml" : {
              "name" : "Role"
            },
            "items" : {
              "$ref" : "#/components/schemas/LdapRole"
            }
          },
          "roleNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "roleIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "RoleList"
        }
      },
      "LdapUser" : {
        "type" : "object",
        "properties" : {
          "userName" : {
            "type" : "string",
            "xml" : {
              "name" : "UserId"
            }
          },
          "email" : {
            "type" : "string",
            "xml" : {
              "name" : "Email"
            }
          },
          "password" : {
            "type" : "string",
            "xml" : {
              "name" : "Password"
            }
          },
          "hasPassword" : {
            "type" : "boolean",
            "writeOnly" : true
          },
          "validated" : {
            "type" : "boolean",
            "xml" : {
              "name" : "EmailValidated"
            }
          },
          "clientCertificate" : {
            "type" : "string",
            "xml" : {
              "name" : "ClientCertificate"
            }
          },
          "userSettings" : {
            "$ref" : "#/components/schemas/UserSettings",
            "xml" : {
              "name" : "UserSettings"
            }
          },
          "userProfile" : {
            "$ref" : "#/components/schemas/UserProfile",
            "xml" : {
              "name" : "UserProfile"
            }
          },
          "roles" : {
            "$ref" : "#/components/schemas/LdapRoles",
            "xml" : {
              "name" : "RoleList"
            }
          },
          "accounts" : {
            "$ref" : "#/components/schemas/LdapAccountsDto",
            "xml" : {
              "name" : "AccountList"
            }
          },
          "userPreferences" : {
            "$ref" : "#/components/schemas/LdapUserPreferences",
            "xml" : {
              "name" : "UserPreferences"
            }
          },
          "reactRequest" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ReactRequest"
            }
          },
          "account" : {
            "$ref" : "#/components/schemas/LdapAccount"
          },
          "roleList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LdapRole"
            }
          },
          "userPreferencesList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LdapUserPreference"
            }
          }
        },
        "xml" : {
          "name" : "User"
        }
      },
      "LdapUserResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "User"
            }
          }
        },
        "xml" : {
          "name" : "LdapUserResponse"
        }
      },
      "UserProfile" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "xml" : {
              "name" : "FirstName"
            }
          },
          "lastName" : {
            "type" : "string",
            "xml" : {
              "name" : "LastName"
            }
          },
          "streetAddress" : {
            "$ref" : "#/components/schemas/UserStreetAddress",
            "xml" : {
              "name" : "StreetAddress"
            }
          },
          "telephoneNumbers" : {
            "$ref" : "#/components/schemas/UserTelephoneNumbers",
            "xml" : {
              "name" : "TelephoneNumbers"
            }
          },
          "companyName" : {
            "type" : "string",
            "xml" : {
              "name" : "CompanyName"
            }
          }
        },
        "xml" : {
          "name" : "UserProfile"
        }
      },
      "UserSettings" : {
        "type" : "object",
        "properties" : {
          "scope" : {
            "type" : "string",
            "xml" : {
              "name" : "Scope"
            }
          },
          "active" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Active"
            }
          },
          "allowedApiOrigin" : {
            "type" : "string",
            "xml" : {
              "name" : "AllowedApiOrigin"
            }
          },
          "allowedApiOriginEnum" : {
            "type" : "string",
            "enum" : [ "API", "GUI", "BOTH" ]
          },
          "scopeEnum" : {
            "type" : "string",
            "enum" : [ "SYSTEM", "ALL", "ACCOUNT_ADMIN", "ACCOUNT" ]
          }
        },
        "xml" : {
          "name" : "UserSettings"
        }
      },
      "UserStreetAddress" : {
        "type" : "object",
        "properties" : {
          "houseNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseNumber"
            }
          },
          "streetName" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetName"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "postalCode" : {
            "type" : "string",
            "xml" : {
              "name" : "PostalCode"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "StreetAddress"
        }
      },
      "UserTelephoneNumbers" : {
        "type" : "object",
        "properties" : {
          "homePhone" : {
            "type" : "string",
            "xml" : {
              "name" : "HomePhone"
            }
          },
          "cellPhone" : {
            "type" : "string",
            "xml" : {
              "name" : "CellPhone"
            }
          },
          "workPhone" : {
            "type" : "string",
            "xml" : {
              "name" : "WorkPhone"
            }
          },
          "otherPhone" : {
            "type" : "string",
            "xml" : {
              "name" : "OtherPhone"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "TelephoneNumbers"
        }
      },
      "LdapUsers" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "type" : "array",
            "xml" : {
              "name" : "User"
            },
            "items" : {
              "$ref" : "#/components/schemas/ShortLdapUser"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "UserList"
        }
      },
      "LdapUsersResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUsers",
            "xml" : {
              "name" : "UserList"
            }
          }
        },
        "xml" : {
          "name" : "LdapUsersResponse"
        }
      },
      "ShortLdapUser" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "xml" : {
              "name" : "FirstName"
            }
          },
          "lastName" : {
            "type" : "string",
            "xml" : {
              "name" : "LastName"
            }
          },
          "userName" : {
            "type" : "string",
            "xml" : {
              "name" : "UserId"
            }
          },
          "email" : {
            "type" : "string",
            "xml" : {
              "name" : "Email"
            }
          },
          "scope" : {
            "type" : "string",
            "xml" : {
              "name" : "Scope"
            }
          },
          "validated" : {
            "type" : "boolean",
            "xml" : {
              "name" : "EmailValidated"
            }
          },
          "active" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Active"
            }
          }
        },
        "xml" : {
          "name" : "User"
        }
      },
      "LdapUserPasswordResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "User"
            }
          }
        },
        "xml" : {
          "name" : "LdapUserPasswordResponse"
        }
      },
      "LdapUserPassword" : {
        "type" : "object",
        "xml" : {
          "name" : "Password"
        }
      },
      "UserAccountResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "User"
            }
          }
        },
        "xml" : {
          "name" : "UserAccountResponse"
        }
      },
      "UserAccountsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "User"
            }
          }
        },
        "xml" : {
          "name" : "UserAccountsResponse"
        }
      },
      "UserActivityEvent" : {
        "type" : "object",
        "properties" : {
          "invokingUsername" : {
            "type" : "string",
            "xml" : {
              "name" : "InvokingUser"
            }
          },
          "userActivityEventType" : {
            "type" : "string",
            "xml" : {
              "name" : "Event"
            },
            "enum" : [ "Login", "PasswordReset", "PasswordRecoveryKickOff", "PasswordRecoveryAttempt", "EmailValidationKickOff", "EmailValidationAttempt", "UserCreate", "UserProfileUpdate", "UserSettingsUpdate", "UserRolesUpdate", "UserAccountsUpdate" ]
          },
          "success" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Success"
            }
          },
          "eventDate" : {
            "type" : "string",
            "xml" : {
              "name" : "EventDate"
            }
          },
          "containDetails" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ContainDetails"
            }
          },
          "eventId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "EventId"
            }
          }
        },
        "xml" : {
          "name" : "UserEvent"
        }
      },
      "UserActivityEventDetails" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userActivityEvent" : {
            "$ref" : "#/components/schemas/UserActivityEvent",
            "xml" : {
              "name" : "UserEvent"
            }
          },
          "userBeforeActivityEvent" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "BeforeChanges"
            }
          },
          "userAfterActivityEvent" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "AfterChanges"
            }
          },
          "userBeforeChangeXml" : {
            "type" : "string"
          },
          "userBeforeChangeFromXml" : {
            "type" : "string",
            "writeOnly" : true
          },
          "userAfterChangeXml" : {
            "type" : "string"
          },
          "userAfterChangeFromXml" : {
            "type" : "string",
            "writeOnly" : true
          },
          "new" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "UserActivityEventDetails"
        }
      },
      "UserActivityEventDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/UserActivityEventDetails",
            "xml" : {
              "name" : "UserActivityEventDetails"
            }
          }
        },
        "xml" : {
          "name" : "UserActivityEventDetailsResponse"
        }
      },
      "UserActivityEventLogResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/UserActivityEvents",
            "xml" : {
              "name" : "UserEvents"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          }
        },
        "xml" : {
          "name" : "UserEventLog"
        }
      },
      "UserActivityEvents" : {
        "type" : "object",
        "properties" : {
          "userActivityEvents" : {
            "type" : "array",
            "xml" : {
              "name" : "UserEvent"
            },
            "items" : {
              "$ref" : "#/components/schemas/UserActivityEvent"
            }
          }
        },
        "xml" : {
          "name" : "UserEvents"
        }
      },
      "LdapUserPreferenceXrefResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "User"
            }
          }
        },
        "xml" : {
          "name" : "LdapUserPreferenceResponse"
        }
      },
      "UserProfileResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "User"
            }
          }
        },
        "xml" : {
          "name" : "UserProfileResponse"
        }
      },
      "LdapUserRoleXrefResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "User"
            }
          }
        },
        "xml" : {
          "name" : "LdapUserRoleResponse"
        }
      },
      "LdapUserRolesXrefResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "User"
            }
          }
        },
        "xml" : {
          "name" : "LdapUserRolesResponse"
        }
      },
      "UserSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LdapUser",
            "xml" : {
              "name" : "User"
            }
          }
        },
        "xml" : {
          "name" : "UserSettingsResponse"
        }
      },
      "AnalyticsData" : {
        "type" : "object"
      },
      "AnalyticsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AnalyticsData"
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ValidationError"
            }
          }
        },
        "xml" : {
          "name" : "AnalyticsResult"
        }
      },
      "ValidationError" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "typeId" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string",
            "xml" : {
              "name" : "Code"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          },
          "new" : {
            "type" : "boolean"
          }
        }
      },
      "TelephoneNumbersAssignmentOrderPayload" : {
        "type" : "object",
        "properties" : {
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "action" : {
            "type" : "string",
            "xml" : {
              "name" : "Action"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumbersAssignmentOrder"
        }
      },
      "AuditPeriod" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "xml" : {
              "name" : "StartDate"
            }
          },
          "endDate" : {
            "type" : "string",
            "xml" : {
              "name" : "EndDate"
            }
          },
          "auditMonth" : {
            "type" : "string",
            "xml" : {
              "name" : "Month"
            }
          }
        },
        "xml" : {
          "name" : "Period"
        }
      },
      "BillingTask" : {
        "type" : "object",
        "properties" : {
          "auditPeriod" : {
            "$ref" : "#/components/schemas/AuditPeriod",
            "xml" : {
              "name" : "Period"
            }
          },
          "actionType" : {
            "type" : "string",
            "xml" : {
              "name" : "Type"
            },
            "enum" : [ "DELETE", "GENERATE", "GENERATE_DAILY" ]
          },
          "regenerated" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Regenerated"
            }
          }
        },
        "xml" : {
          "name" : "BillingTask"
        }
      },
      "ControlPointResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/BillingTask",
            "xml" : {
              "name" : "BillingTask"
            }
          }
        },
        "xml" : {
          "name" : "BillingTaskResponse"
        }
      },
      "IntegrityAuditPayload" : {
        "type" : "object",
        "properties" : {
          "rangeStart" : {
            "type" : "string",
            "xml" : {
              "name" : "RangeStart"
            }
          },
          "chunkSize" : {
            "type" : "string",
            "xml" : {
              "name" : "ChunkSize"
            }
          },
          "chunksNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "ChunksNumber"
            }
          }
        },
        "xml" : {
          "name" : "IntegrityAuditPayload"
        }
      },
      "IntegrityAuditResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/IntegrityAuditPayload",
            "xml" : {
              "name" : "IntegrityAuditPayload"
            }
          }
        },
        "xml" : {
          "name" : "IntegrityAuditResponse"
        }
      },
      "BillingSetting" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "$ref" : "#/components/schemas/Key",
            "xml" : {
              "name" : "Key"
            }
          },
          "values" : {
            "type" : "array",
            "xml" : {
              "name" : "Values",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Value"
            }
          }
        },
        "xml" : {
          "name" : "BillingSetting"
        }
      },
      "BillingSettings" : {
        "type" : "object",
        "properties" : {
          "billingSettings" : {
            "type" : "array",
            "xml" : {
              "name" : "BillingSetting"
            },
            "items" : {
              "$ref" : "#/components/schemas/BillingSetting"
            }
          }
        },
        "xml" : {
          "name" : "BillingSettings"
        }
      },
      "BillingSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/BillingSettings",
            "xml" : {
              "name" : "BillingSettings"
            }
          }
        },
        "xml" : {
          "name" : "BillingSettingsResponse"
        }
      },
      "Key" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "Id"
            }
          },
          "display" : {
            "type" : "string",
            "xml" : {
              "name" : "Display"
            }
          }
        },
        "xml" : {
          "name" : "Key"
        }
      },
      "Value" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "Id"
            }
          },
          "display" : {
            "type" : "string",
            "xml" : {
              "name" : "Display"
            }
          },
          "active" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Active"
            }
          }
        },
        "xml" : {
          "name" : "Value"
        }
      },
      "Csr" : {
        "type" : "object",
        "properties" : {
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "workingOrBillingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "WorkingOrBillingTelephoneNumber"
            }
          },
          "workingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "WorkingTelephoneNumber"
            }
          },
          "billingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingTelephoneNumber"
            }
          },
          "customerName" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerName"
            }
          },
          "authorizingPersonName" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizingPersonName"
            }
          },
          "accountNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountNumber"
            }
          },
          "workingTelephoneNumbersOnAccount" : {
            "type" : "array",
            "xml" : {
              "name" : "WorkingTelephoneNumbersOnAccount",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "serviceAddress" : {
            "$ref" : "#/components/schemas/CsrServiceAddress",
            "xml" : {
              "name" : "ServiceAddress"
            }
          },
          "accountTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountTelephoneNumber"
            }
          },
          "endUserName" : {
            "type" : "string",
            "xml" : {
              "name" : "EndUserName"
            }
          },
          "authorizingUserName" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizingUserName"
            }
          },
          "customerCode" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerCode"
            }
          },
          "endUserPIN" : {
            "type" : "string",
            "xml" : {
              "name" : "EndUserPIN"
            }
          },
          "endUserPassword" : {
            "type" : "string",
            "xml" : {
              "name" : "EndUserPassword"
            }
          },
          "addressLineOne" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine1"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "zipCode" : {
            "type" : "string",
            "xml" : {
              "name" : "ZIPCode"
            }
          },
          "typeOfService" : {
            "type" : "string",
            "xml" : {
              "name" : "TypeOfService"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            }
          }
        },
        "xml" : {
          "name" : "Csr"
        }
      },
      "CsrServiceAddress" : {
        "type" : "object",
        "properties" : {
          "unparsedAddress" : {
            "type" : "string",
            "xml" : {
              "name" : "UnparsedAddress"
            }
          },
          "houseNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseNumber"
            }
          },
          "housePrefix" : {
            "type" : "string",
            "xml" : {
              "name" : "HousePrefix"
            }
          },
          "houseSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseSuffix"
            }
          },
          "preDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PreDirectional"
            }
          },
          "streetName" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetName"
            }
          },
          "streetSuffix" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetSuffix"
            }
          },
          "postDirectional" : {
            "type" : "string",
            "xml" : {
              "name" : "PostDirectional"
            }
          },
          "addressLine2" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine2"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "zip" : {
            "type" : "string",
            "xml" : {
              "name" : "Zip"
            }
          }
        },
        "xml" : {
          "name" : "ServiceAddress"
        }
      },
      "DldaListingName" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "xml" : {
              "name" : "FirstName"
            }
          },
          "firstName2" : {
            "type" : "string",
            "xml" : {
              "name" : "FirstName2"
            }
          },
          "lastName" : {
            "type" : "string",
            "xml" : {
              "name" : "LastName"
            }
          },
          "designation" : {
            "type" : "string",
            "xml" : {
              "name" : "Designation"
            }
          },
          "titleOfLineage" : {
            "type" : "string",
            "xml" : {
              "name" : "TitleOfLineage"
            }
          },
          "titleOfAddress" : {
            "type" : "string",
            "xml" : {
              "name" : "TitleOfAddress"
            }
          },
          "titleOfAddress2" : {
            "type" : "string",
            "xml" : {
              "name" : "TitleOfAddress2"
            }
          },
          "titleOfLineageName2" : {
            "type" : "string",
            "xml" : {
              "name" : "TitleOfLineageName2"
            }
          },
          "titleOfAddressName2" : {
            "type" : "string",
            "xml" : {
              "name" : "TitleOfAddressName2"
            }
          },
          "titleOfAddress2Name2" : {
            "type" : "string",
            "xml" : {
              "name" : "TitleOfAddress2Name2"
            }
          },
          "placeListingAs" : {
            "type" : "string",
            "xml" : {
              "name" : "PlaceListingAs"
            }
          }
        },
        "xml" : {
          "name" : "ListingName"
        }
      },
      "DldaOrderPayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "PENDING", "RECEIVED", "PROCESSING", "COMPLETE", "PARTIAL", "FAILED", "CANCELLED" ]
          },
          "dldaTnGroups" : {
            "type" : "array",
            "xml" : {
              "name" : "DldaTnGroups",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/DldaTnGroup"
            }
          },
          "deleteDldaTnGroups" : {
            "type" : "string",
            "xml" : {
              "name" : "DeleteDldaTnGroups"
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberError"
            }
          }
        },
        "xml" : {
          "name" : "DldaOrder"
        }
      },
      "DldaTnGroup" : {
        "required" : [ "listAddress", "listingType", "subscriberType" ],
        "type" : "object",
        "properties" : {
          "groupNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "subscriberType" : {
            "type" : "string",
            "xml" : {
              "name" : "SubscriberType"
            },
            "enum" : [ "BUSINESS", "RESIDENTIAL" ]
          },
          "listingType" : {
            "type" : "string",
            "xml" : {
              "name" : "ListingType"
            },
            "enum" : [ "LISTED", "NON_LISTED", "NON_PUBLISHED" ]
          },
          "listingName" : {
            "$ref" : "#/components/schemas/DldaListingName",
            "xml" : {
              "name" : "ListingName"
            }
          },
          "listAddress" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ListAddress"
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/Address",
            "xml" : {
              "name" : "Address"
            }
          }
        },
        "xml" : {
          "name" : "DldaTnGroup"
        }
      },
      "TelephoneNumberError" : {
        "type" : "object",
        "properties" : {
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "Error"
        }
      },
      "TnE911Address" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "houseNo" : {
            "type" : "string",
            "xml" : {
              "name" : "HouseNumber"
            }
          },
          "streetName" : {
            "type" : "string",
            "xml" : {
              "name" : "StreetName"
            }
          },
          "addressLine2" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine2"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "stateCode" : {
            "type" : "string",
            "xml" : {
              "name" : "StateCode"
            }
          },
          "zip" : {
            "type" : "string",
            "xml" : {
              "name" : "Zip"
            }
          },
          "zip4" : {
            "type" : "string",
            "xml" : {
              "name" : "PlusFour"
            }
          }
        },
        "xml" : {
          "name" : "TnE911Address"
        }
      },
      "TnE911AddressResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TnE911Address",
            "xml" : {
              "name" : "Address"
            }
          },
          "emergencyNotificationGroup" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupPayload",
            "xml" : {
              "name" : "EmergencyNotificationGroup"
            }
          }
        },
        "xml" : {
          "name" : "TnE911AddressResponse"
        }
      },
      "EmergencyNotificationGroupOrderPayload" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "xml" : {
              "name" : "Identifier"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "addedEmergencyNotificationRecipients" : {
            "type" : "array",
            "xml" : {
              "name" : "AddedEmergencyNotificationRecipients",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/EmergencyNotificationRecipientPayload"
            }
          },
          "deletedEmergencyNotificationRecipients" : {
            "type" : "array",
            "xml" : {
              "name" : "DeletedEmergencyNotificationRecipients",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/EmergencyNotificationRecipientPayload"
            }
          },
          "errorList" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Description"
              }
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationGroup"
        }
      },
      "EmergencyNotificationGroupRecipientOrderResponse" : {
        "type" : "object",
        "properties" : {
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "orderCreatedDate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "OrderCreatedDate"
            }
          },
          "createdBy" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedBy"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "PENDING", "PROCESSING", "COMPLETED", "FAILED" ]
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "addedEmergencyNotificationGroup" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupOrderPayload",
            "xml" : {
              "name" : "AddedEmergencyNotificationGroup"
            }
          },
          "modifiedEmergencyNotificationGroup" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupOrderPayload",
            "xml" : {
              "name" : "ModifiedEmergencyNotificationGroup"
            }
          },
          "deleteEmergencyNotificationGroup" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupOrderPayload",
            "xml" : {
              "name" : "DeletedEmergencyNotificationGroup"
            }
          },
          "errorList" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Description"
              }
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationGroupOrderResponse"
        }
      },
      "EmergencyNotificationGroupRecipientOrderPayload" : {
        "type" : "object",
        "properties" : {
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "orderCreatedDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreatedDate"
            }
          },
          "createdBy" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedBy"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "addedEmergencyNotificationGroup" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupOrderPayload",
            "xml" : {
              "name" : "AddedEmergencyNotificationGroup"
            }
          },
          "modifiedEmergencyNotificationGroup" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupOrderPayload",
            "xml" : {
              "name" : "ModifiedEmergencyNotificationGroup"
            }
          },
          "deleteEmergencyNotificationGroup" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupOrderPayload",
            "xml" : {
              "name" : "DeletedEmergencyNotificationGroup"
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationGroupOrder"
        }
      },
      "EmergencyNotificationEndpointAssociationsPayload" : {
        "type" : "object",
        "properties" : {
          "emergencyNotificationGroup" : {
            "type" : "array",
            "xml" : {
              "name" : "EmergencyNotificationGroup",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Identifier"
              }
            }
          },
          "addedAssociations" : {
            "type" : "array",
            "xml" : {
              "name" : "AddedAssociations",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/EepToEngAssociationsPayload"
            }
          },
          "deletedAssociations" : {
            "type" : "array",
            "xml" : {
              "name" : "DeletedAssociations",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/EepToEngAssociationsPayload"
            }
          },
          "errorList" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Description"
              }
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationEndpointAssociations"
        }
      },
      "EmergencyNotificationGroupEndpointAssociationPayload" : {
        "type" : "object",
        "properties" : {
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "orderCreatedDate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "OrderCreatedDate"
            }
          },
          "createdBy" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedBy"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "PENDING", "PROCESSING", "COMPLETED", "FAILED" ]
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "emergencyNotificationEndpointAssociationsPayload" : {
            "$ref" : "#/components/schemas/EmergencyNotificationEndpointAssociationsPayload",
            "xml" : {
              "name" : "EmergencyNotificationEndpointAssociations"
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationEndpointOrder"
        }
      },
      "EmergencyNotificationGroupEndpointAssociationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupEndpointAssociationPayload",
            "xml" : {
              "name" : "EmergencyNotificationEndpointOrder"
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationEndpointOrderResponse"
        }
      },
      "EmergencyNotificationGroupsEndpointAssociationPayload" : {
        "type" : "object",
        "properties" : {
          "payloadList" : {
            "type" : "array",
            "xml" : {
              "name" : "EmergencyNotificationEndpointOrder"
            },
            "items" : {
              "$ref" : "#/components/schemas/EmergencyNotificationGroupEndpointAssociationPayload"
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationEndpointOrders"
        }
      },
      "EmergencyNotificationGroupsEndpointAssociationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupsEndpointAssociationPayload",
            "xml" : {
              "name" : "EmergencyNotificationEndpointOrders"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          }
        },
        "xml" : {
          "name" : "EmergencyNotificationEndpointOrderResponse"
        }
      },
      "E911AlternateEndUserIdentifier" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string",
            "xml" : {
              "name" : "Identifier"
            }
          },
          "callbackNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "CallbackNumber"
            }
          },
          "pidfloEnabled" : {
            "type" : "boolean",
            "xml" : {
              "name" : "PIDFLOEnabled"
            }
          },
          "callerName" : {
            "type" : "string",
            "xml" : {
              "name" : "CallerName"
            }
          },
          "preferredLanguage" : {
            "type" : "string",
            "xml" : {
              "name" : "PreferredLanguage"
            },
            "enum" : [ "en", "fr", "Incorrect value" ]
          },
          "locationId" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationId"
            }
          }
        },
        "xml" : {
          "name" : "E911AlternateEndUserIdentifier"
        }
      },
      "E911OrderPayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "callerName" : {
            "type" : "string",
            "xml" : {
              "name" : "CallerName"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "RECEIVED", "PROCESSING", "COMPLETE", "PARTIAL", "FAILED", "ADJUSTED_COMPLETE", "ADJUSTED_PARTIAL" ]
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "alternateEndUserIdentifiers" : {
            "type" : "array",
            "xml" : {
              "name" : "AlternateEndUserIdentifiers",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/E911AlternateEndUserIdentifier"
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/E911Address",
            "xml" : {
              "name" : "Address"
            }
          },
          "additionalAddresses" : {
            "type" : "array",
            "xml" : {
              "name" : "AdditionalAddresses",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/E911Address"
            }
          },
          "locationId" : {
            "type" : "string",
            "xml" : {
              "name" : "LocationId"
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/GroupErrorObject"
            }
          },
          "e911OrderType" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderType"
            }
          },
          "revertToSipPeerAddress" : {
            "type" : "boolean",
            "xml" : {
              "name" : "DeleteTNSpecificE911Address"
            }
          }
        },
        "xml" : {
          "name" : "E911Order"
        }
      },
      "GroupErrorObject" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        }
      },
      "Endpoint" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "ServerName"
            }
          },
          "path" : {
            "type" : "string",
            "xml" : {
              "name" : "ServerPath"
            }
          },
          "resources" : {
            "type" : "array",
            "xml" : {
              "name" : "Resources",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/EndpointResource"
            }
          }
        },
        "xml" : {
          "name" : "Endpoint"
        }
      },
      "EndpointResource" : {
        "type" : "object",
        "properties" : {
          "uriMethod" : {
            "type" : "string",
            "xml" : {
              "name" : "Method"
            }
          },
          "uriPath" : {
            "type" : "string",
            "xml" : {
              "name" : "Path"
            }
          }
        },
        "xml" : {
          "name" : "Resources"
        }
      },
      "EndpointResponse" : {
        "type" : "object",
        "properties" : {
          "resourceCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ResourceCount"
            }
          },
          "endpoints" : {
            "type" : "array",
            "xml" : {
              "name" : "Endpoints",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Endpoint"
            }
          }
        },
        "xml" : {
          "name" : "EndpointResponse"
        }
      },
      "ExternalTnsOrderPayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "action" : {
            "type" : "string",
            "xml" : {
              "name" : "Action"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "RECEIVED", "PROCESSING", "COMPLETE", "PARTIAL", "FAILED" ]
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberGroupError"
            }
          },
          "loaType" : {
            "type" : "string",
            "xml" : {
              "name" : "LoaType"
            }
          },
          "sipPeerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SipPeerId"
            }
          }
        },
        "xml" : {
          "name" : "ExternalTnsOrder"
        }
      },
      "TelephoneNumberGroupError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          }
        },
        "xml" : {
          "name" : "Error"
        }
      },
      "TelephoneNumbersAssignmentOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "TelephoneNumbersAssignmentOrderReportResponse"
        }
      },
      "BdrArchiveResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "BdrResponse"
        }
      },
      "BdrArchiveCreationDescriptor" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "xml" : {
              "name" : "StartDate"
            }
          },
          "endDate" : {
            "type" : "string",
            "xml" : {
              "name" : "EndDate"
            }
          }
        },
        "xml" : {
          "name" : "Bdr"
        }
      },
      "BdrArchiveFileResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "BdrFileResponse"
        }
      },
      "BdrArchiveRetrievalResponse" : {
        "type" : "object",
        "properties" : {
          "infoMessage" : {
            "type" : "string",
            "xml" : {
              "name" : "Info"
            }
          }
        },
        "xml" : {
          "name" : "BdrRetrievalResponse"
        }
      },
      "BdrArchiveCleanUpResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "BdrArchiveCleanUpResponse"
        }
      },
      "BillingReportCreationResponse" : {
        "type" : "object",
        "properties" : {
          "reportStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ReportStatus"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "BillingReportCreationResponse"
        }
      },
      "BillingReportCreationPayload" : {
        "type" : "object",
        "properties" : {
          "reportType" : {
            "type" : "string",
            "xml" : {
              "name" : "Type"
            }
          },
          "reportDateRange" : {
            "$ref" : "#/components/schemas/BillingReportDateRange",
            "xml" : {
              "name" : "DateRange"
            }
          }
        },
        "xml" : {
          "name" : "BillingReport"
        }
      },
      "BillingReportDateRange" : {
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "xml" : {
              "name" : "StartDate"
            }
          },
          "endDate" : {
            "type" : "string",
            "xml" : {
              "name" : "EndDate"
            }
          }
        },
        "xml" : {
          "name" : "DateRange"
        }
      },
      "BillingReportArchiveRetrievalResponse" : {
        "type" : "object",
        "properties" : {
          "reportStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ReportStatus"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "BillingReportArchiveRetrievalResponse"
        }
      },
      "BillingReport" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingReportId"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingReportKind"
            }
          },
          "requestedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "UserId"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "ReportStatus"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "CreatedDate"
            }
          },
          "dateRange" : {
            "$ref" : "#/components/schemas/BillingReportDateRange",
            "xml" : {
              "name" : "DateRange"
            }
          }
        },
        "xml" : {
          "name" : "BillingReport"
        }
      },
      "BillingReportsRetrievalResponse" : {
        "type" : "object",
        "properties" : {
          "billingReportsRetrievePayload" : {
            "$ref" : "#/components/schemas/BillingReportsRetrievePayload",
            "xml" : {
              "name" : "BillingReportList"
            }
          },
          "reportStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ReportStatus"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "BillingReportsRetrievalResponse"
        }
      },
      "BillingReportsRetrievePayload" : {
        "type" : "object",
        "properties" : {
          "billingReportList" : {
            "type" : "array",
            "xml" : {
              "name" : "BillingReport"
            },
            "items" : {
              "$ref" : "#/components/schemas/BillingReport"
            }
          }
        },
        "xml" : {
          "name" : "BillingReportList"
        }
      },
      "BillingReportRetrievalResponse" : {
        "type" : "object",
        "properties" : {
          "reportStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ReportStatus"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "BillingReportRetrievalResponse"
        }
      },
      "AccountSitesHosts" : {
        "type" : "object",
        "properties" : {
          "siteHosts" : {
            "type" : "array",
            "xml" : {
              "name" : "SiteHost"
            },
            "items" : {
              "$ref" : "#/components/schemas/SiteHost"
            }
          }
        },
        "xml" : {
          "name" : "SiteHosts"
        }
      },
      "AccountSitesHostsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AccountSitesHosts",
            "xml" : {
              "name" : "SiteHosts"
            }
          }
        },
        "xml" : {
          "name" : "SiteHostsResponse"
        }
      },
      "SipPeerHost" : {
        "type" : "object",
        "properties" : {
          "sipPeerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SipPeerId"
            }
          },
          "smsHosts" : {
            "$ref" : "#/components/schemas/Hosts",
            "xml" : {
              "name" : "SmsHosts"
            }
          },
          "voiceHosts" : {
            "$ref" : "#/components/schemas/Hosts",
            "xml" : {
              "name" : "VoiceHosts"
            }
          },
          "terminationHosts" : {
            "$ref" : "#/components/schemas/Hosts",
            "xml" : {
              "name" : "TerminationHosts"
            }
          }
        }
      },
      "SipPeerHosts" : {
        "type" : "object",
        "properties" : {
          "sipPeerHosts" : {
            "type" : "array",
            "xml" : {
              "name" : "SipPeerHost"
            },
            "items" : {
              "$ref" : "#/components/schemas/SipPeerHost"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerHosts"
        }
      },
      "SiteHost" : {
        "type" : "object",
        "properties" : {
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "sipPeerHosts" : {
            "$ref" : "#/components/schemas/SipPeerHosts",
            "xml" : {
              "name" : "SipPeerHosts"
            }
          }
        }
      },
      "CsrOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "CsrOrderHistoryResponse"
        }
      },
      "CsrError" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "Error"
        }
      },
      "CsrOrderResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Csr",
            "xml" : {
              "name" : "CsrData"
            }
          },
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            },
            "enum" : [ "RECEIVED", "PROCESSING", "ACTION_REQUIRED", "COMPLETE", "FAILED", "REQUESTED_CANCEL", "CANCELLED" ]
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "accountNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountNumber"
            }
          },
          "accountTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountTelephoneNumber"
            }
          },
          "endUserName" : {
            "type" : "string",
            "xml" : {
              "name" : "EndUserName"
            }
          },
          "authorizingUserName" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizingUserName"
            }
          },
          "customerCode" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerCode"
            }
          },
          "endUserPIN" : {
            "type" : "string",
            "xml" : {
              "name" : "EndUserPIN"
            }
          },
          "endUserPassword" : {
            "type" : "string",
            "xml" : {
              "name" : "EndUserPassword"
            }
          },
          "addressLineOne" : {
            "type" : "string",
            "xml" : {
              "name" : "AddressLine1"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "zipCode" : {
            "type" : "string",
            "xml" : {
              "name" : "ZIPCode"
            }
          },
          "typeOfService" : {
            "type" : "string",
            "xml" : {
              "name" : "TypeOfService"
            }
          },
          "csrErrors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/CsrError"
            }
          }
        },
        "xml" : {
          "name" : "CsrResponse"
        }
      },
      "DldaOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "DldaOrderReportResponse"
        }
      },
      "E911OrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "E911OrderReportResponse"
        }
      },
      "ExternalTnsOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "ExternalTnsOrderReportResponse"
        }
      },
      "ImportTnOrdersHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "ImportTnOrdersReportResponse"
        }
      },
      "LidbOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "LidbOrderReportResponse"
        }
      },
      "TnOptionOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "TnOptionOrderReportResponse"
        }
      },
      "LsrOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "LsrOrderReportResponse"
        }
      },
      "LongXMLWrapper" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "Count"
            }
          }
        },
        "xml" : {
          "name" : "Quantity"
        }
      },
      "PortInOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "PortInOrderReportResponse"
        }
      },
      "PortOutOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "PortOutOrderReportResponse"
        }
      },
      "RemoveImportedTnOrdersHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "RemoveImportedTnOrdersReportResponse"
        }
      },
      "TnOrderHistoryResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "TnOrderReportResponse"
        }
      },
      "ProductTnHistory" : {
        "type" : "object"
      },
      "ProductTnHistoryResponse" : {
        "type" : "object",
        "properties" : {
          "productTnReportWrapper" : {
            "$ref" : "#/components/schemas/ProductTnReportWrapper",
            "xml" : {
              "name" : "ProductTNDetails"
            }
          }
        },
        "xml" : {
          "name" : "ProductTNDetailsResponse"
        }
      },
      "ProductTnReportWrapper" : {
        "type" : "object",
        "properties" : {
          "productTnReport" : {
            "$ref" : "#/components/schemas/ProductTnHistory"
          }
        },
        "xml" : {
          "name" : "ProductTNDetails"
        }
      },
      "SipPeerTelephoneNumbersCount" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SipPeerTelephoneNumbersCount"
            }
          },
          "cnamCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "CnamTelephoneNumbersCount"
            }
          },
          "lidbCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "LidbTelephoneNumbersCount"
            }
          },
          "dldaCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "DldaTelephoneNumbersCount"
            }
          },
          "daCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "DaTelephoneNumbersCount"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTelephoneNumbersCounts"
        }
      },
      "SipPeerTelephoneNumbersCountResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerTelephoneNumbersCount",
            "xml" : {
              "name" : "SipPeerTelephoneNumbersCounts"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTelephoneNumbersCountResponse"
        }
      },
      "SiteTnTotal" : {
        "type" : "object",
        "properties" : {
          "totalTnCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalCount"
            }
          }
        },
        "xml" : {
          "name" : "SiteTNs"
        }
      },
      "SiteTnTotalResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SiteTnTotal",
            "xml" : {
              "name" : "SiteTNs"
            }
          }
        },
        "xml" : {
          "name" : "SiteTNsResponse"
        }
      },
      "TelephoneNumbersHistory" : {
        "type" : "object",
        "xml" : {
          "name" : "TelephoneNumbers"
        }
      },
      "TelephoneNumbersHistoryResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TelephoneNumbersHistory",
            "xml" : {
              "name" : "TelephoneNumbers"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          },
          "telephoneNumberCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TelephoneNumberCount"
            }
          },
          "errorList" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberGroupError"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumbersResponse"
        }
      },
      "TelephoneNumber" : {
        "type" : "object",
        "properties" : {
          "tnType" : {
            "type" : "string"
          },
          "valid" : {
            "type" : "boolean"
          },
          "unformattedTn" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "region" : {
            "type" : "string"
          }
        }
      },
      "TelephoneNumberList" : {
        "type" : "array",
        "properties" : {
          "allShortCode" : {
            "type" : "boolean"
          },
          "anyNanp" : {
            "type" : "boolean"
          },
          "anyShortCode" : {
            "type" : "boolean"
          },
          "allNanp" : {
            "type" : "boolean"
          },
          "allInternational" : {
            "type" : "boolean"
          },
          "anyInternational" : {
            "type" : "boolean"
          },
          "allNanpNumbers" : {
            "type" : "array",
            "properties" : {
              "allShortCode" : {
                "type" : "boolean"
              },
              "anyNanp" : {
                "type" : "boolean"
              },
              "anyShortCode" : {
                "type" : "boolean"
              },
              "allNanp" : {
                "type" : "boolean"
              },
              "allInternational" : {
                "type" : "boolean"
              },
              "anyInternational" : {
                "type" : "boolean"
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumber"
            }
          },
          "allInternationalNumbers" : {
            "type" : "array",
            "properties" : {
              "allShortCode" : {
                "type" : "boolean"
              },
              "anyNanp" : {
                "type" : "boolean"
              },
              "anyShortCode" : {
                "type" : "boolean"
              },
              "allNanp" : {
                "type" : "boolean"
              },
              "allInternational" : {
                "type" : "boolean"
              },
              "anyInternational" : {
                "type" : "boolean"
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumber"
            }
          },
          "allShortCodes" : {
            "type" : "array",
            "properties" : {
              "allShortCode" : {
                "type" : "boolean"
              },
              "anyNanp" : {
                "type" : "boolean"
              },
              "anyShortCode" : {
                "type" : "boolean"
              },
              "allNanp" : {
                "type" : "boolean"
              },
              "allInternational" : {
                "type" : "boolean"
              },
              "anyInternational" : {
                "type" : "boolean"
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumber"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TelephoneNumber"
        }
      },
      "TelephoneNumbersPayload" : {
        "type" : "object",
        "properties" : {
          "telephoneNumbers" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "name" : "Tn"
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          }
        },
        "xml" : {
          "name" : "TnList"
        }
      },
      "HostedTelephoneNumberDetailHistory" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "site" : {
            "$ref" : "#/components/schemas/Site",
            "xml" : {
              "name" : "Site"
            }
          },
          "sipPeer" : {
            "$ref" : "#/components/schemas/SipPeer",
            "xml" : {
              "name" : "SipPeer"
            }
          },
          "serviceTypesOwned" : {
            "type" : "array",
            "xml" : {
              "name" : "ServiceTypes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          },
          "lastModified" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModified"
            }
          },
          "messagingSettings" : {
            "$ref" : "#/components/schemas/MessagingSettings",
            "xml" : {
              "name" : "MessagingSettings"
            }
          },
          "tnAttributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TnAttributes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          },
          "tnOptions" : {
            "$ref" : "#/components/schemas/TnOptions",
            "xml" : {
              "name" : "TnOptions"
            }
          }
        },
        "xml" : {
          "name" : "HostedTelephoneNumberDetail"
        }
      },
      "OriginationRoutePayload" : {
        "type" : "object",
        "properties" : {
          "endpoint" : {
            "type" : "string",
            "xml" : {
              "name" : "Endpoint"
            }
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Priority"
            }
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Weight"
            }
          },
          "endpointType" : {
            "type" : "string",
            "xml" : {
              "name" : "EndpointType"
            },
            "enum" : [ "TN", "IPv4", "SIP", "FQDN" ]
          }
        },
        "xml" : {
          "name" : "Route"
        }
      },
      "OriginationRoutePlan" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "xml" : {
              "name" : "Id"
            }
          },
          "originationRoutes" : {
            "type" : "array",
            "xml" : {
              "name" : "Route"
            },
            "items" : {
              "$ref" : "#/components/schemas/OriginationRoutePayload"
            }
          },
          "action" : {
            "type" : "string",
            "xml" : {
              "name" : "Action"
            },
            "enum" : [ "UNCHANGED", "OFF", "AS_SPECIFIED", "INCORRECT_VALUE" ]
          }
        },
        "xml" : {
          "name" : "OriginationRoutePlan"
        }
      },
      "TelephoneNumberDetailHistoryPayload" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "lata" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Lata"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "telephoneNumber" : {
            "$ref" : "#/components/schemas/TelephoneNumber",
            "xml" : {
              "name" : "FullNumber"
            }
          },
          "country" : {
            "type" : "string",
            "xml" : {
              "name" : "Country"
            }
          },
          "tnType" : {
            "type" : "string",
            "xml" : {
              "name" : "TnType"
            }
          },
          "tier" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Tier"
            }
          },
          "vendorId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "VendorId"
            }
          },
          "vendorName" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorName"
            }
          },
          "rateCenter" : {
            "type" : "string",
            "xml" : {
              "name" : "RateCenter"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "site" : {
            "$ref" : "#/components/schemas/Site",
            "xml" : {
              "name" : "Site"
            }
          },
          "sipPeer" : {
            "$ref" : "#/components/schemas/SipPeer",
            "xml" : {
              "name" : "SipPeer"
            }
          },
          "serviceTypesOwned" : {
            "type" : "array",
            "xml" : {
              "name" : "ServiceTypes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "ServiceType"
              }
            }
          },
          "lastModified" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModified"
            }
          },
          "inServiceDate" : {
            "type" : "string",
            "xml" : {
              "name" : "InServiceDate"
            }
          },
          "tnAttributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TnAttributes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          },
          "messagingSettings" : {
            "$ref" : "#/components/schemas/MessagingSettings",
            "xml" : {
              "name" : "MessagingSettings"
            }
          },
          "tnOptions" : {
            "$ref" : "#/components/schemas/TnOptions",
            "xml" : {
              "name" : "TnOptions"
            }
          },
          "originationRoutePlan" : {
            "$ref" : "#/components/schemas/OriginationRoutePlan",
            "xml" : {
              "name" : "OriginationRoutePlan"
            }
          },
          "hostedTelephoneNumberDetailHistories" : {
            "type" : "array",
            "xml" : {
              "name" : "HostedTelephoneNumberDetails",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/HostedTelephoneNumberDetailHistory"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumber"
        }
      },
      "TelephoneNumberDetailHistoryResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TelephoneNumberDetailHistoryPayload",
            "xml" : {
              "name" : "TelephoneNumberDetails"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumberResponse"
        }
      },
      "TnDetailsNnRoute" : {
        "type" : "object",
        "properties" : {
          "nnId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Nnid"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          }
        }
      },
      "TnOptions" : {
        "type" : "object",
        "properties" : {
          "numberFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "NumberFormat"
            }
          },
          "rpidFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "RPIDFormat"
            }
          },
          "rewriteUser" : {
            "type" : "string",
            "xml" : {
              "name" : "RewriteUser"
            }
          },
          "callForward" : {
            "$ref" : "#/components/schemas/TelephoneNumber",
            "xml" : {
              "name" : "CallForward"
            }
          },
          "finalDestinationUri" : {
            "type" : "string",
            "xml" : {
              "name" : "FinalDestinationURI"
            }
          },
          "cnamLookup" : {
            "type" : "string",
            "xml" : {
              "name" : "CallingNameDisplay"
            }
          },
          "portOutPasscode" : {
            "type" : "string",
            "xml" : {
              "name" : "PortOutPasscode"
            }
          }
        },
        "xml" : {
          "name" : "TnOptions"
        }
      },
      "DetailedTelephoneNumberStatus" : {
        "type" : "object",
        "properties" : {
          "tn" : {
            "type" : "string"
          },
          "tnStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            }
          },
          "userId" : {
            "type" : "string",
            "xml" : {
              "name" : "UserId"
            }
          },
          "spid" : {
            "type" : "string",
            "xml" : {
              "name" : "Spid"
            }
          },
          "altSpid" : {
            "type" : "string",
            "xml" : {
              "name" : "AltSpid"
            }
          },
          "lrn" : {
            "type" : "string",
            "xml" : {
              "name" : "Lrn"
            }
          },
          "ocn" : {
            "type" : "string",
            "xml" : {
              "name" : "Ocn"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "orderCreatedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "errorMessage" : {
            "type" : "string",
            "xml" : {
              "name" : "ErrorMessage"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "vendorId" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorId"
            }
          },
          "lnpLosingCarrierName" : {
            "type" : "string",
            "xml" : {
              "name" : "LNPLosingCarrierName"
            }
          },
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "orderType" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderType"
            }
          },
          "orderStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderStatus"
            }
          }
        }
      },
      "OrderDetailsReport" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "lata" : {
            "type" : "string",
            "xml" : {
              "name" : "Lata"
            }
          },
          "ratecenter" : {
            "type" : "string",
            "xml" : {
              "name" : "RateCenter"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "npa" : {
            "type" : "string",
            "xml" : {
              "name" : "AreaCode"
            }
          },
          "npanxx" : {
            "type" : "string",
            "xml" : {
              "name" : "NPA-NXX"
            }
          },
          "npanxxx" : {
            "type" : "string",
            "xml" : {
              "name" : "NPA-NXX-X"
            }
          },
          "fullNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "FullNumber"
            }
          },
          "tier" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Tier"
            }
          },
          "vendorId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "VendorId"
            }
          },
          "vendorName" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorName"
            }
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Count"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneDetailsReport"
        }
      },
      "TelephoneNumberStatusWrapper" : {
        "type" : "object",
        "properties" : {
          "telephoneNumberStatusList" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumberStatuses",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/DetailedTelephoneNumberStatus"
            }
          },
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "tnStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "orderCreatedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "orderType" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderType"
            }
          },
          "inServiceDate" : {
            "type" : "string",
            "xml" : {
              "name" : "InServiceDate"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerGroup" : {
            "type" : "string",
            "xml" : {
              "name" : "PeerGroup"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "tnDetails" : {
            "$ref" : "#/components/schemas/OrderDetailsReport",
            "xml" : {
              "name" : "TelephoneNumberDetails"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumberResponse"
        }
      },
      "TelephoneNumberAvailableNnRoutes" : {
        "type" : "object",
        "properties" : {
          "tnDetailsNnRoutes" : {
            "type" : "array",
            "xml" : {
              "name" : "NNRoute"
            },
            "items" : {
              "$ref" : "#/components/schemas/TnDetailsNnRoute"
            }
          }
        }
      },
      "TelephoneNumberAvailableNnRoutesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TelephoneNumberAvailableNnRoutes",
            "xml" : {
              "name" : "AvailableNnRoutes"
            }
          }
        },
        "xml" : {
          "name" : "AvailableNNRoutesResponse"
        }
      },
      "TelephoneNumberTotalsHistory" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Count"
            }
          }
        },
        "xml" : {
          "name" : "Quantity"
        }
      },
      "AccountTelephoneNumbersHistoryResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TelephoneNumbers",
            "xml" : {
              "name" : "TelephoneNumbers"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalCount"
            }
          }
        },
        "xml" : {
          "name" : "TNs"
        }
      },
      "TelephoneNumbers" : {
        "type" : "object",
        "properties" : {
          "tnsList" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumberList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          }
        },
        "xml" : {
          "name" : "ReprovisionTns"
        }
      },
      "InserviceNumberCheckResponse" : {
        "type" : "object"
      },
      "AccountDisconnectedNumbersResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TelephoneNumbers",
            "xml" : {
              "name" : "TelephoneNumbers"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalCount"
            }
          }
        },
        "xml" : {
          "name" : "TNs"
        }
      },
      "TnPortOutPasscodePayload" : {
        "type" : "object",
        "properties" : {
          "fullNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "FullNumber"
            }
          },
          "passcode" : {
            "type" : "string",
            "xml" : {
              "name" : "Passcode"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumber"
        }
      },
      "TnPortOutPasscodesPayload" : {
        "type" : "object",
        "properties" : {
          "tnPortOutPasscodes" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumber"
            },
            "items" : {
              "$ref" : "#/components/schemas/TnPortOutPasscodePayload"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumbers"
        }
      },
      "TnPortOutPasscodesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TnPortOutPasscodesPayload",
            "xml" : {
              "name" : "TelephoneNumbers"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          },
          "errorList" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberGroupError"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumbersResponse"
        }
      },
      "TelephoneNumbersDetail" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "lata" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Lata"
            }
          },
          "ratecenter" : {
            "type" : "string",
            "xml" : {
              "name" : "RateCenter"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "npa" : {
            "type" : "string",
            "xml" : {
              "name" : "AreaCode"
            }
          },
          "npanxx" : {
            "type" : "string",
            "xml" : {
              "name" : "NPA-NXX"
            }
          },
          "npanxxx" : {
            "type" : "string",
            "xml" : {
              "name" : "NPA-NXX-X"
            }
          },
          "fullNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "FullNumber"
            }
          },
          "tier" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Tier"
            }
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Count"
            }
          }
        },
        "xml" : {
          "name" : "TNs"
        }
      },
      "TelephoneNumbersDetailsHistory" : {
        "type" : "object",
        "properties" : {
          "telephoneNumbersDetails" : {
            "type" : "array",
            "xml" : {
              "name" : "TNs"
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumbersDetail"
            }
          }
        },
        "xml" : {
          "name" : "TNs"
        }
      },
      "UcTrunkingPremiseTrunks" : {
        "type" : "object",
        "properties" : {
          "premiseTrunks" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "BiDirectionalTrunks"
            }
          }
        },
        "xml" : {
          "name" : "UcTrunkingPremiseSettings"
        }
      },
      "UcTrunkingPremiseTrunksResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/UcTrunkingPremiseTrunks",
            "xml" : {
              "name" : "UcTrunkingPremiseSettings"
            }
          }
        },
        "xml" : {
          "name" : "UcTrunkingPremiseSettingsResponse"
        }
      },
      "AccountTollFreeTotalsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TollFreeTotals",
            "xml" : {
              "name" : "TollFreeTotals"
            }
          }
        },
        "xml" : {
          "name" : "AccountTollFreeTotalsResponse"
        }
      },
      "TollFreeTotals" : {
        "type" : "object",
        "xml" : {
          "name" : "TollFreeTotals"
        }
      },
      "SiteTollFreeTotalsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TollFreeTotals",
            "xml" : {
              "name" : "TollFreeTotals"
            }
          }
        },
        "xml" : {
          "name" : "SiteTollFreeTotalsResponse"
        }
      },
      "SipPeerTollFreeTotalsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TollFreeTotals",
            "xml" : {
              "name" : "TollFreeTotals"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTollFreeTotalsResponse"
        }
      },
      "ImportTnOrdersPayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "subscriber" : {
            "$ref" : "#/components/schemas/Subscriber",
            "xml" : {
              "name" : "Subscriber"
            }
          },
          "loaAuthorizingPerson" : {
            "type" : "string",
            "xml" : {
              "name" : "LoaAuthorizingPerson"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "RECEIVED", "PROCESSING", "COMPLETE", "PARTIAL", "FAILED" ]
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberGroupError"
            }
          },
          "loaType" : {
            "type" : "string",
            "xml" : {
              "name" : "LoaType"
            }
          },
          "sipPeerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SipPeerId"
            }
          }
        },
        "xml" : {
          "name" : "ImportTnOrder"
        }
      },
      "Subscriber" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "subscriberType" : {
            "type" : "string",
            "xml" : {
              "name" : "SubscriberType"
            },
            "enum" : [ "business", "residential", "generic" ]
          },
          "businessName" : {
            "type" : "string",
            "xml" : {
              "name" : "BusinessName"
            }
          },
          "firstName" : {
            "type" : "string",
            "xml" : {
              "name" : "FirstName"
            }
          },
          "middleInitial" : {
            "type" : "string",
            "xml" : {
              "name" : "MiddleInitial"
            }
          },
          "lastName" : {
            "type" : "string",
            "xml" : {
              "name" : "LastName"
            }
          },
          "genericName" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "accountNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountNumber"
            }
          },
          "accountPin" : {
            "type" : "string",
            "xml" : {
              "name" : "PinNumber"
            }
          },
          "serviceAddress" : {
            "$ref" : "#/components/schemas/Address",
            "xml" : {
              "name" : "ServiceAddress"
            }
          },
          "new" : {
            "type" : "boolean"
          }
        }
      },
      "ImportTnCheckerPayload" : {
        "type" : "object",
        "properties" : {
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "importTnErrors" : {
            "type" : "array",
            "xml" : {
              "name" : "ImportTnErrors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ImportTnError"
            }
          }
        },
        "xml" : {
          "name" : "ImportTnCheckerPayload"
        }
      },
      "ImportTnError" : {
        "type" : "object",
        "properties" : {
          "phoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "errorDescription" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "ImportTnErrorType"
        }
      },
      "ImportToAccountNumberOrder" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "orderType" : {
            "$ref" : "#/components/schemas/ImportToAccountNumberOrderType"
          }
        },
        "xml" : {
          "name" : "ImportToAccountNumberOrder"
        }
      },
      "ImportToAccountNumberOrderResponse" : {
        "type" : "object",
        "properties" : {
          "orderRequest" : {
            "$ref" : "#/components/schemas/ImportToAccountNumberOrder",
            "xml" : {
              "name" : "OrderRequest"
            }
          },
          "orderStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderStatus"
            },
            "enum" : [ "RECEIVED", "COMPLETE", "PARTIAL", "FAILED", "BACKORDERED", "PROCESSING" ]
          },
          "importedTelephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "ImportedTelephoneNumberList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/OrderError"
            }
          },
          "provisionedTelephoneNumberDetails" : {
            "type" : "array",
            "xml" : {
              "name" : "ImportedTelephoneNumberDetailList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberDetail"
            }
          }
        },
        "xml" : {
          "name" : "ImportToAccountNumberOrderResponse"
        }
      },
      "ImportToAccountNumberOrderType" : {
        "type" : "object",
        "properties" : {
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumberList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "telephoneNumber"
              }
            }
          },
          "vendorName" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorName"
            }
          },
          "batchId" : {
            "type" : "string",
            "xml" : {
              "name" : "BatchId"
            }
          },
          "batchSize" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "BatchSize"
            }
          },
          "importBillingType" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingType"
            },
            "enum" : [ "NOCHARGE", "PORTIN", "NEWNUMBER", "PROJECTPORT" ]
          },
          "tnAttributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TnAttributes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          },
          "initialStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "InitialStatus"
            }
          }
        },
        "xml" : {
          "name" : "ImportToAccountNumberOrderType"
        }
      },
      "OrderError" : {
        "type" : "object",
        "properties" : {
          "errorTypeEnum" : {
            "type" : "string",
            "enum" : [ "INVALID_ACCOUNT", "INVALID_INPUT_TELEPHONENUMBER_LIST", "VALIDATION_ERROR", "PROVISIONING_FAILURE", "INVALID_VENDOR", "TELEPHONENUMBER_UNAVAILABLE", "TELEPHONENUMBER_DISCONNECT_ERROR", "EXCEEDED_MAX_ORDERING_CAPACITY", "ZERO_VALID_TELEPHONENUMBERS", "INVALID_ORDER_QUANTITY", "UNDEFINED_LNP_OPERATION", "NO_TIER_FOUND_FOR_ACCOUNT", "ACCOUNT_LOCKED", "HOLDING_ACCOUNT_NOT_FOUND", "DLDA_REQUEST_TIMEOUT", "LIDB_REQUEST_TIMEOUT", "INVALID_SITE", "TELEPHONENUMBER_MOVE_ERROR", "TELEPHONENUMBERS_PARTIALLY_UNAVAILABLE", "TELEPHONENUMBERS_TOTALLY_UNAVAILABLE", "PENDING_PROCESSING", "NO_DEFAULT_SIPPEER", "NO_GATEWAY_PROFILE", "SITE_ID_REQUIRED", "SIP_PEER_INVALID", "INVALID_PROJECT_PORT_QUANTITY", "PROJECT_PORT_VALUES_REQUIRED", "PROJECT_PORT_COUNTS_INCORRECT", "PROJECT_PORT_SIZE_LESS_THAN_ONE", "CANT_CHANGE_BATCH_SIZE", "PROJECT_PORT_HAS_BEEN_COMPLETED", "PROJECT_PORT_BATCH_ID_INVALID", "UNSUPPORTED_TELEPHONENUMBERS", "ALIEN_TELEPHONENUMBERS", "ORDER_NOT_FOUND", "ORDER_ADMIN_PARAMETERS_NOT_FOUND", "BANDWIDTH_PRIME_TOO_LONG", "INVALID_ACTIVITY_STATE", "INVALID_ADMIN_PARAMS_PAYLOAD", "ORDER_NOTE_NOT_FOUND", "USER_DOES_NOT_BELONG_TO_ACCOUNT", "INVALID_CUSTOMER_ORDER_ID", "BACKORDERED_WAITING_TNS", "BACKORDERED_WAITING_FULL_QUANTITY", "BACKORDER_COMPATIBILITY_ERROR", "NO_TIERS_TO_BACKORDER", "RATECENTER_NOT_SUPPORT_NEW_TNS", "NPA_LIMITED_FOR_BACKORDERING", "NPA_LIMITED_FOR_BACKORDERING_QUANTITY_REDUCED", "NPA_BLOCKED_FOR_BACKORDERING", "NONE_BACKORDERED_CLOSE_ATTEMPT", "INVALID_ORDER_ID", "SIPPEER_ID_REQUIRED", "VENDOR_NOT_FOUND", "UNABLE_TO_PROVIDE_COVERAGE", "CANT_CHANGE_BILLING_TYPE", "TN_INVALID", "TN_IS_NOT_AVAILABLE", "TN_DUPLICATE", "TN_REQUIRED", "TN_NOT_INSERVICE", "TN_NOT_ON_ACCOUNT", "TNS_NOT_VALID", "PRODUCT_FEATURE_DOES_NOT_EXIST", "CNAM_VALUE_INVALID", "CALL_FORWARD_TN_INVALID", "NUMBER_FORMAT_VALUE_INVALID", "REWRITE_USER_VALUE_INVALID", "REQUESTED_PROFILE_NOT_FOUND", "INVALID_DISCONNECT_MODE", "UNAUTHORIZED_DISCONNECT_MODE", "ORDER_REQUEST_TIMEOUT", "EMPTY_ORDER_TYPE", "CALL_FORWARD_TN_SAME_AS_ORIGIN", "RPID_FORMAT_VALUE_INVALID", "TF_NUMBER_NOT_ALLOWED", "SIP_PEER_CNAM_IS_ENFORCED_AND_NOT_APPLICABLE_TO_TN", "INVALID_IMPORT_BILLING_TYPE", "DUPLICATE_TNS", "SITE_LOCKED", "ORDER_TNS_LIMIT", "INCORRECT_TOLLFREE_VENDOR", "ORDER_PROTECTED_TN_REQUIRED_PROTECTED_FEATURE", "SOME_TNS_ARE_ALREADY_PROTECTED", "NON_CLEC_TNS_CANNOT_BE_PROTECTED", "TF_TNS_CANNOT_BE_PROTECTED", "PROTECTED_TN_ATTRIBUTE_IS_NOT_APPLICABLE", "INVALID_TN_ATTRIBUTE", "DUPLICATE_TN_ATTRIBUTE", "INITIAL_TN_STATUS_REQUIRES_PROTECTED_TN_ATTRIBUTE", "INVALID_INITIAL_TN_STATUS", "SITE_AND_PEER_IDS_SHOULD_NOT_BE_SPECIFIED", "INCLUDING_CALLER_NAME_OR_ADDRESS_IS_INCOMPATIBLE", "PROTECTED_VALUE_INVALID", "DISCONNECT_PROTECTED_ATTRIBUTE_IS_INVALID", "INCOMPATIBLE_DISCONNECT_MODE_WITH_PROTECTED_ATTRIBUTE", "ACCOUNT_DOES_NOT_SUPPORT_PROTECTED_ASSIGNMENT", "PARTNER_VENDOR_IS_APPLICABLE_TO_NO_CHARGE_IMPORT_BILLING_TYPE_ONLY", "PROTECTED_ATTRIBUTE_IS_REQUIRED", "SMS_VALUE_INVALID", "SMS_SETTINGS_ARE_NOT_CONFIGURED", "TN_OPTION_ATTRIBUTES_REQUIRED", "ROUTE_IS_NOT_CONFIGURED_FOR_TIER", "FINAL_DESTINATION_URI_VALUE_TOO_LONG", "FINAL_DESTINATION_URI_INVALID_TELEPHONE_NUMBER", "FINAL_DESTINATION_URI_INVALID_HOST_PORTION", "FINAL_DESTINATION_URI_INVALID_PREFIX", "FINAL_DESTINATION_URI_INVALID_NAME", "FINAL_DESTINATION_URI_INVALID_FORMAT", "PROTECTED_TN_ACCOUNT_IS_INVALID", "TELEPHONE_NUMBERS_ALREADY_EXIST", "EXTERNAL_TNS_USAGE_ERROR", "TOLL_FREE_TNS_USAGE_ERROR", "EXTERNAL_TN_ATTRIBUTE_USAGE_ERROR", "EXTERNAL_TN_MANAGE_ERROR", "ASSIGNMENT_ACTION_IS_INVALID", "EXTERNAL_TNS_CANNOT_BE_ASSIGNED", "NOT_IN_SERVICE_NUMBERS_CANNOT_BE_ASSIGNED", "SMS_SHOULD_BE_ON_DURING_PROVISIONING_A2P", "SPECIAL_SIP_PEER_SMS_SETTINGS_ON_A2P_PROVISIONING_OF_LONG_CODE_TNS", "A2P_ATTRIBUTE_INCOMPATIBLE_WITH_ACTION", "A2P_ACTION_CANNOT_BE_OFF_FOR_TOLLFREE_TNS", "A2P_HAS_TO_BE_CONFIGURED_ON_SIP_PEER_TO_SET_SYSTEM_DEFAULT", "A2P_ACTION_INCORRECT_VALUE", "A2P_SHOULD_BE_ENABLED_ON_ACCOUNT", "NNID_NOT_VALID", "ESPID_NOT_VALID", "NNID_ESPID_DO_NOT_MATCH", "NNID_NOT_INTEGER", "NNID_CHANGE_PROHIBITED", "SMS_SHOULD_BE_ENABLED_ON_SIPPEER", "TN_IS_IN_PROCESSING", "NNID_ESPID_PERMISSIONS", "NNID_UPDATE_EXPIRATION", "IMPORT_TN_ORDERS_IS_NOT_ENABLED", "IMPORT_TN_ORDERS_NOT_ALLOWED_FOR_ACCOUNT", "IMPORT_TN_ORDERS_LOA_CHANGE_PROHIBITED", "IMPORT_TN_ORDERS_LOA_PERMISSIONS", "PORT_IN_ORDER_LOA_PERMISSION", "LOA_PERMISSION", "ORDER_TYPE_DOES_NOT_HAVE_PERMISSIONS_TO_LOAD_LOAS", "NNIDS_FOR_TN_TYPE_ARE_NOT_CONFIGURED", "ROUTES_ARE_NOT_CONFIGURED", "TN_HAS_NOT_BEEN_PREVIOUSLY_IMPORTED", "VOICE_SERVICE_NOT_OWNED", "MESSAGING_SERVICE_NOT_OWNED", "SMS_ATTRIBUTE_UPDATE_NOT_ALLOWED", "TOLL_FREE_SHOULD_BE_ENABLED_ON_LOCATION", "MESSAGING_NOT_OWNED", "INVALID_INTERNATIONAL_DISCONNECT_MODE", "CANNOT_MIX_REGIONS", "SIPPEER_DOES_NOT_HAVE_SMS_FEATURE", "REGION_NOT_AVAILABLE_ON_ACCOUNT", "TN_TYPE_NOT_AVAILABLE_ON_ACCOUNT", "INVALID_INTERNATIONAL_BILLING_TYPE", "VENDOR_NOT_AVAILABLE", "ACCOUNT_NOT_INTERNATIONAL", "INTERNATIONAL_ACCT_CANNOT_ORDER_NANP_TNS", "INVALID_SHORTCODE_DISCONNECT_MODE", "CANNOT_MIX_TN_TYPES_AT_DISCONNECT", "INVALID_SHORT_CODE_BILLING_TYPE", "VENDOR_NAME_IS_REQUIRED", "INVALID_INITIAL_SHORT_CODE_TN_STATUS", "SHORT_CODE_SHOULD_BE_ENABLED_ON_LOCATION", "TN_ATTRIBUTES_NOT_APPLICABLE", "CANNOT_MIX_TN_TYPES_AT_IMPORT", "UNSUPPORTED_SHORT_CODE_LINE_OPTION", "ORDERING_FEATURE_NOT_ENABLED", "ROUTE_PLAN_CANNOT_BE_EMPTY", "ROUTE_PLAN_INVALID_SIZE", "ENDPOINT_MUST_BE_UNIQUE_AT_GIVEN_PRIORITY", "ROUTE_WEIGHT_MUST_BE_GREATER_THAN_ZERO", "INVALID_ROUTE_PLAN_ENDPOINT", "ROUTE_PRIORITY_MUST_BE_GREATER_THAN_ZERO", "ROUTE_ENDPOINT_TOO_LONG", "MISSING_ENDPOINT_VALUE", "TOO_MANY_ROUTE_PLAN_PRIORITIES", "PORT_OUT_PASSCODE_IS_INVALID", "PORT_OUT_PASSCODE_SHOULD_BE_ENABLED_ON_ACCOUNT", "PORT_OUT_PASSCODE_ALREADY_EXISTS_FOR_PARTICULAR_TN", "PORT_OUT_PASSCODE_CAN_BE_ASSIGNED_TO_ON_NET_TNS", "PORT_OUT_PASSCODE_CAN_NOT_BE_ASSIGNED_ON_MESSAGING_OWNER", "AREA_CODE_SEARCH_AND_ORDER_TYPE_INCOMPLETE", "TOLL_FREE_VANITY_SEARCH_AND_ORDER_TYPE_INCOMPLETE", "ORIGINATION_ROUTE_NOT_ENABLED", "ROUTE_PLAN_ENDPOINT_MUST_BE_NANP_TN", "SMS_SHOULD_BE_ON_FOR_NNID_ASSIGNMENT", "TN_ROUTE_PLAN_ERROR_DUE_TO_CALL_FORWARDING", "TN_ROUTE_PLAN_ERROR_DUE_TO_REWRITE_USER", "TN_CALL_FORWARD_ERROR_DUE_TO_ROUTE_PLAN", "TN_REWRITE_USER_ERROR_DUE_TO_ROUTE_PLAN", "INVALID_ROUTE_PLAN_ACTION", "ROUTE_PLAN_MUST_BE_EMPTY", "ORIGINATION_ROUTE_PROVISIONING_FAILURE", "INVALID_ACCOUNT_ID", "EXCEEDED_MAX_TNS", "INVALID_TN_LIST", "INVALID_TN", "ZERO_VALID_TNS", "INVALID_ORDER_QTY", "NO_DEFAULT_NNID", "INVALID_PARTIAL_ALLOWED", "ORIGINATION_ROUTE_CANNOT_HAVE_PRIVATE_IPV4_ENDPOINT", "ORIGINATION_ROUTE_CANNOT_HAVE_INVALID_SIP_HOST", "ORIGINATION_ROUTE_CANNOT_HAVE_PRIVATE_IPV4_AS_SIP_HOST", "EMPTY_CRITERIA", "INVALID_CRITERIA_LENGTH", "INVALID_RATE_CENTER_ABBR", "CRITERIA_NOT_PARSABLE", "INVALID_STATE", "INVALID_LATA", "INVALID_AREA_CODE_BEGINNING", "INVALID_AREA_CODE_SECOND_DIGIT", "INVALID_AREA_CODE_END", "INVALID_NXX_BEGINNING", "SHOULD_BE_ALPHANUMERIC", "INVALID_ZIP_CODE", "INVALID_CITY", "SPECIFY_CRITERION", "INVALID_TOLLFREE_WILD_CHAR_PATTERN", "INVALID_SEARCH_COMBINATION", "INVALID_LOCAL_VANITY", "INVALID_LOCAL_VANITY_LENGTH", "SHOULD_BE_ALPHANUMERIC_OR_GLOB", "INVALID_TOLLFREE_CRITERIA", "ENDS_IN_WITHOUT_LOCAL_VANITY", "LCA_NOT_SUPPORTED_COMBINATION", "NO_SEARCH_CRITERIA", "TN_NOT_VALID_FOR_ORDERING", "A2P_CANNOT_BE_UPDATED" ]
          },
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "errorDescription" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "OrderError"
        }
      },
      "TelephoneNumberDetail" : {
        "type" : "object",
        "properties" : {
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "FullNumber"
            }
          },
          "rateCenterAbbreviation" : {
            "type" : "string",
            "xml" : {
              "name" : "RateCenter"
            }
          },
          "lata" : {
            "type" : "string",
            "xml" : {
              "name" : "LATA"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "vendorName" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorName"
            }
          },
          "vendorId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "VendorId"
            }
          },
          "tier" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Tier"
            }
          },
          "isTollFree" : {
            "type" : "boolean",
            "xml" : {
              "name" : "isTollfree"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumberDetail"
        }
      },
      "TelephoneNumberListWrapper" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalCount"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Count"
            }
          },
          "telephoneNumberList" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumber"
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "errorMessage" : {
            "type" : "string",
            "xml" : {
              "name" : "ErrorMessage"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumbers"
        }
      },
      "LnpError" : {
        "type" : "object",
        "properties" : {
          "errorTypeEnum" : {
            "type" : "string",
            "enum" : [ "7000 - API request has timed out", "7001 - The account ID is required", "7002 - The account ID is invalid", "7003 - Unauthorized user", "7004 - Unable to provide coverage", "7005 - Unable to determine the next available FOC date", "7006 - SL service exception", "7007 - Unknown Level3 exception", "7100 - The order ID is required", "7101 - At least one number must be specified to port", "7102 - Telephone number is required", "7103 - The billing telephone number (BTN) is required", "7104 - Subscriber information is required", "7105 - The subscriber name is required", "7106 - The subscriber type is required", "7107 - The service address is required", "7108 - The service address house number is required", "7109 - The service address street name is required", "7110 - The service address city is required", "7111 - The service address state code is required", "7112 - The service address zip code is required", "7113 - Wireless information is required", "7114 - The account number is required", "7115 - The LOA authorizing person is required", "7116 - The new network SPID is required", "7117 - The personal identification number (PIN) is required", "7118 - The port out action is required", "7119 - The requested FOC date is required", "7120 - The PON is required", "7121 - The POT order type is required", "7122 - Telephone number list is required", "7123 - Billing type is required", "7200 - The order ID was not found", "7201 - Telephone number is invalid", "7202 - Telephone number was not found", "7203 - The billing telephone number (BTN) is invalid", "7204 - All telephone numbers, including the billing telephone number (BTN) and new BTN when provided, must belong to the same carrier", "7205 - Telephone number is already being processed on another order", "7206 - Telephone number is already in service", "7207 - The requested FOC date is invalid", "7208 - The requested FOC date cannot be in the past", "7209 - The requested FOC date is too soon", "7210 - The requested FOC date is too far in the future. Date must be within 30 days", "7211 - A residential subscriber type may not have a business name", "7212 - Account number required or incorrect", "7213 - PIN number is invalid", "7214 - ZIP code is invalid", "7215 - The order ID has invalid format", "7216 - Actual FOC Date has invalid format", "7217 - Requested FOC Date has invalid format", "7300 - The order cannot be modified because the order is awaiting a response from the losing carrier", "7301 - The order cannot be modified or cancelled because the pending FOC date is too soon", "7302 - The order cannot be cancelled after the FOC date has passed", "7303 - The order is already cancelled and cannot be modified or cancelled", "7304 - The order is already complete and cannot be modified or cancelled", "7305 - The billing telephone number (BTN) cannot be modified at this time", "7306 - Subscriber information cannot be modified at this time", "7307 - The subscriber address cannot be modified at this time", "7308 - Wireless information cannot be modified at this time", "7309 - The site id was not supplied or is invalid.", "7310 - The site id submitted does not have a default SIP peer associated to it.", "7311 - The sippeer id is invalid for this site.", "7312 - The sippeer id is invalid.", "7313 - The requested time %s is outside business hours. FOC time must be within processing hours of 8:00AM and 3:30PM Eastern Time", "7472 - Portability checking mode is not valid. Valid values: FALSE, TRUE, ONNETPORTABILITY, OFFNETPORTABILITY", "7314 - The number of telephone numbers provided exceeds the maximum %s", "7315 - The date is during a weekend or holiday.", "7316 - At least one telephone number must be provided.", "7317 - Requested FOC date is before the next available FOC date.", "7318 - Customer order ID is invalid. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.", "7319 - Partial Port must be a valid boolean variation.", "7320 - BW owned TN - contact customer support", "7321 - TollFree number cannot be ported through this interface - please call your Bandwidth representative", "7322 - Information provided is incorrect", "7323 - Unable to contact vendor for porting information. Please submit your request again later.", "7324 - The business name is too long. The business name should not be longer than 25 characters.", "7325 - Not authorized to perform operation on the account '%s'", "7326 - Error from POT", "7327 - The port out passed the FOC grace period for activation. The LNP operations team has been notified of this event", "7328 - The principal user %s does not have the permissions to request immediate port", "7329 - Pre directional is not valid. Valid values: N, S, E, W, NE, NW, SE, SW", "7330 - Post directional is not valid. Valid values: N, S, E, W, NE, NW, SE, SW", "7331 - Rate Center Not Present in Bandwidth Dashboard", "7332 - PeerId is required", "7333 - Porting is not enabled on the account.", "7334 - SiteId is required", "7335 - The order ID was not found for requested accountId.", "7336 - This site is currently locked for contract paperwork.  Please contact support for further assistance.", "7337 - AltSPID used in the order does not match account AltSPID. Please use the value specified in the account settings.", "7338 - ActivationStatus is required.", "7339 - Telephone numbers '%s' are not valid", "7340 - Telephone numbers are already activated.", "7341 - Telephone numbers not found in portin order.", "7342 - On demand portin activation not yet allowed.", "7343 - Customer Activation is not supported for Wireless winning carriers.", "7344 - Customer Activation is not yet supported for Bandwidth losing carriers.", "7345 - Customer Activation is not allowed on non triggered portins.", "7346 - Triggered/On Demand porting disabled.", "7347 - Activation date and time cannot be later than %s and it was updated to latest allowed value ", "7348 - Order processing has been temporarily suspended and will be resumed when all systems are available - no action is required.", "7349 - The order is already completed or cancelled.", "7350 - \"Customer Activation\" can't be changed.", "7351 - Unable to sumbit activation request to Neustar. Received NACK response.", "7352 - On demand portin activation is allowed only for orders with FOC state.", "7353 - The order cannot be modified because it is in requested cancel status", "7354 - Middle initial is too long. Middle initial should not be longer than 1 character.", "7355 - First name is too long. First name should not be longer than 25 characters.", "7356 - Last name is too long. Last name should not be longer than 25 characters.", "7357 - The LOA authorizing person is too long. The LOA authorizing person should be not longer than 15 characters.", "7358 - Incorrect Billing Type. Valid values: NOCHARGE, PORTIN, NEWNUMBER, PROJECTPORT, DISCOUNTED", "7359 - Billing Type cannot be set with permissions assigned to current user. Allowed permissions: %s", "7360 - Telephone number list can't contain duplicates.", "7361 - Customer Activation is not supported for manual off-net port in orders.", "7362 - Immediate flag is not supported for manual port in orders.", "7363 - This port request contains numbers from multiple vendors. Please check the portability of these numbers using the Check Portability tool", "7364 - Incorrect next porting state. Allowed next states: {%s}", "7365 - Next Processing Status cannot be set with permissions assigned to current user. Allowed permissions: {%s}", "7366 - Actual FOC date cannot be set with permissions assigned to current user. Allowed permissions: {%s}", "7367 - Unable to modify processing status for %s port type", "7368 - Unable to modify actual FOC date for %s port type", "7369 - The actual FOC date cannot be in the past", "7370 - FOC processing status is unavailable without actual FOC date specified", "7371 - The order cannot be modified or cancelled because the FOC date is in the past", "7372 - ProcessingStatus '%s' is invalid. Valid values: %s", "7373 - 'AutoActivation' can be set only for manual port in orders.", "7374 - 'AutoActivation' cannot be set with permissions assigned to current user. Allowed permissions: {%s}", "7375 - 'ManualTnActivation' can be set only for manual port in orders.", "7376 - 'ManualTnActivation' cannot be set with permissions assigned to current user. Allowed permissions: {%s}", "7377 - 'AutoActivation' cannot be set during the creation of the order.", "7378 - Porting is not available for numbers that are not in service on the losing carrier account", "7379 - Actual FOC date cannot be set without 'FOC' status for the first time", "7380 - Automatic activation for this port is scheduled outside of the normal Bandwidth support time-frames, and support for the activation will not likely be available until the next business day", "7381 - Order not submitted. Please resubmit order with a trigger time that is within the porting time frame, %1$s - %2$s.", "7382 - Activation must take place between %1$s and %2$s", "7383 - Wireless info is not allowed for tollfree manual off-net port-ins", "7384 - Partial port is not allowed for tollfree manual off-net port-ins", "7385 - Billing telephone number is not allowed for tollfree manual off-net port-ins", "7386 - You have mixed toll free and non-toll free numbers in the order. Please submit the toll free and non-toll free numbers in separate orders. These numbers are %s ", "7387 - Activation date is on holiday or weekend.", "7388 - The LOA Authorizing Person field has been truncated to 15 characters for submission to the losing carrier. No action is required", "7389 - The Requested Foc Time was reset to default %1s", "7390 - The order cannot be modified on FOC date and after", "7391 - Incorrect subscriber type for toll free port in. Only business is allowed", "7392 - Immediate flag is not supported for manual toll free off-net port in orders.", "7394 - Immediate is not allowed for tollfree manual off-net port-ins", "7395 - Unsupported state code: %s.", "7396 - Subscriber name [%s] will be trimmed to [%s] in an attempt to comply with port-in processing name length limits. No action is required", "7397 - Toll free numbers are not candidates for Protected status", "7398 - Protected status is not available for numbers in off-net rate centers", "7399 - Telephone number attribute '%s' is invalid. Valid values: Protected, External, Hosted", "7474 - Duplicate telephone number attribute '%s'.", "7475 - Telephone numbers cannot be marked as Protected - the account has not been configured for Protected Numbers", "7476 - AutoActivation is not allowed for this portin.", "7477 - AutoActivation value is invalid.", "7478 - AutoActivation can not be updated to \"none\".", "7479 - Telephone numbers from this portin must be activated manually.", "7480 - Cannot SUPP or CANCEL a non existent order", "7481 - The account number and pin number fields cannot be defined in the Subscriber section for portin orders. Please provide these two fields within the WirelessInfo section.", "7482 - OverrideValidation flag can be supped only in EXCEPTION status.", "7483 - Supp is not allowed for this PortIn. Please contact support if this issue is not resolved in 1 business day", "7486 - Information on losing carrier is not available, supported losing carrier or carriers is assumed.", "7487 - SIP Peer assignment cannot change for this port request.", "7489 - Port PS check returned empty SPID.", "7490 - There are too many telephone numbers in this request", "7491 - This order was cancelled due to the following numbers: [%s]. These numbers will need to be disconnected in the system first and this port-in re-submitted afterwards. Please contact your customer support representative for assistance on this.", "7492 - Customer Activation is not allowed on manual triggered portins", "7493 - NewBillingTelephoneNumber must be supplied because port is partial and BillingTelephoneNumber is being ported", "7494 - NewBillingTelephoneNumber is not valid NANPA telephone number", "7496 - NewBillingTelephoneNumber cannot be in the list of phone numbers being ported", "7497 - NewBillingTelephoneNumber cannot be the same as the BillingTelephoneNumber", "7498 - List of telephone numbers cannot be changed for this port request", "7499 - Port type %s cannot be change to %s", "7495 - Unable to change the TNs on this port. Please ensure that the new TNs are from the same losing carrier as the current TNs.", "7500 - Unable to change the TNs on this port. Please ensure that the new TNs are from the same vendor as the current TNs.", "7501 - Telephone numbers are invalid", "7502 - Telephone number list can not contain duplicates: %s", "7503 - Telephone numbers are non portable", "7504 - This order was cancelled due to the following numbers: [%s]. These numbers are external and cannot be processed by Internal Port-in order", "7700 - Portin order not found", "7701 - Portin order already relates to another bulk portin order", "7702 - Order is not in 'DRAFT' state", "7703 - Put is not allowed for bulk portin with subtending portins assigned", "7704 - Transition to IN_PROGRESS is not allowed for bulk portin without subtending portins assigned", "7705 - %s cannot be patched for bulk portin with subtending portins", "7706 - The bulk port-in API is not enabled", "7707 - You are not allowed to access the bulk port-in API", "7708 - AlternateSPID cannot be modified on a non-DRAFT state port-in", "7709 - Bulk port-in with id %s cannot be deleted since it is not in draft status.", "7710 - History is not supported for bulk port-ins or individual port-ins in draft status.", "7711 - Portin list modification is not allowed for bulk portin in status: %s.", "7712 - Only draft subtending portins are allowed for draft bulk portin.", "7713 - Only non-draft subtending portins are allowed for non-draft bulk portin.", "7714 - Portins in terminal status are not allowed for portin list update.", "7715 - This port-in cannot be associated with this bulk port-in because its earliest estimate date needs to be earlier than the bulk port-in requested FOC date.", "7400 - Error: serviceOrderHeader is required", "7401 - Error: Could not find valid externalOrderID", "7402 - Error: Unrecognized product ID", "7403 - Error: Request does not contains %s.", "7404 - Error: %s field is missing.", "7405 - Error: notification is required", "7406 - Error: Invalid E911CoverageIndicator", "7407 - The wireless AccountNumber cannot be changed after order submission for automated off-net port-ins.", "7408 - The wireless PinNumber cannot be changed after order submission for automated off-net port-ins.", "7409 - When changing the subscriber name, both FirstName and LastName must be supplied for automated off-net port-ins.", "7410 - BusinessName required when SubscriberType set to Business for automated off-net port-ins.", "7411 - Subscriber name cannot be changed when SubscriberType is set to Business for automated off-net port-ins.", "7413 - The ListOfPhoneNumbers cannot be changed after order submission for automated off-net port-ins.", "7414 - The BusinessName cannot be changed after FOC is assigned for automated off-net port-ins.", "7415 - The BillingTelephoneNumber cannot be changed after FOC is assigned for automated off-net port-ins.", "7416 - BusinessName cannot be changed when SubscriberType is set to Residential for automated off-net port-ins.", "7417 - Both FirstName and LastName are required when SubscriberType set to Residential for automated off-net port-ins.", "7418 - The SubscriberType cannot be changed after FOC is assigned for automated off-net port-ins.", "7419 - The subscriber name cannot be changed after FOC is assigned for automated off-net port-ins.", "7420 - The order address cannot be changed after order submission for automated off-net port-ins.", "7421 - All ported numbers on an order need to be from the same carrier.", "7422 - The LocalOrderUpdate query parameter is restricted to Bandwidth internal users only.", "7423 - The LocalOrderUpdate query parameter can only be specified for orders in FOC status.", "7424 - The LocalOrderUpdate query parameter requires inclusion of a valid RequestedFocDate in the request payload.", "7425 - The LocalOrderUpdate query parameter may only be used when it is not possible for the user to change the FOC date using the normal SUPP request.", "7510 - Required Account Code missing", "7511 - Invalid Account Code", "7512 - Required PIN missing", "7513 - PIN Invalid", "7514 - Required ZIP Code missing", "7515 - Invalid ZIP Code", "7516 - Telephone Number not recognized or invalid for this account", "7517 - Too many Telephone numbers in this request", "7518 - Telephone Number Not Active", "7519 - Customer info does not match", "7520 - The telephone number must be unlocked by the end user and current service provider", "7521 - The TN you are requesting to port could require manual handling. An LNP agent will manually update your LSR order within 24 hours. If you have not received an updated response in your order, please email us at portouts@bandwidth.com for more information.", "7522 - Customer does migration from one portout validation endpoint to another.", "7593 - Unexpected response code %s in portout API validation response", "7594 - Received %s response code in portout API validation response, possibly something should be fixed", "7595 - Empty response body in portout API validation response (code %s)", "7596 - Non-portable portable response without errors", "7597 - %s: Unrecognized error code: %s", "7598 - Invalid Request", "7599 - Fatal Error in Processing", "7600 - External telephone number(s) cannot be used: %s", "7601 - Immediate is not allowed outside the business hours.", "7602 - Requested FOC date must be between %s and %s", "7603 - The requested time %s is outside business hours. FOC time must be within processing hours of %s and %s Eastern Time", "7604 - Activation can only be triggered between the hours of %s and %s on the actual FOC date: %s.", "7605 - Activation must be scheduled between the hours of %s and %s on the actual FOC date: %s.", "7606 - Order must be in FOC state to be scheduled for activation.", "7607 - Unable to sumbit portTN request to Level3.", "7608 - The requested time can not be updated for non triggered portin order.", "7609 - The telephone number(s) belongs to unsupported losing carrier.", "7610 - PIN does not match the Passcodes on the telephone numbers being ported out.", "7400", "7401", "7401", "7401", "7402", "7402", "7402", "7402", "7402", "7402", "7403", "7404", "7405", "7406", "7406", "7407", "7407", "7407", "7407", "7408", "7409", "7409", "7409", "7409", "7409", "7410", "7410", "7411", "7412", "7412", "7412", "7412", "7412", "7413", "7414", "7415", "7415", "7416", "7416", "7416", "7417", "7417", "7417", "7418", "7419", "7419", "7419", "7420", "7421", "7421", "7422", "7423", "7424", "7424", "7425", "7426", "7427", "7428", "7429", "7429", "7429", "7429", "7430", "7431", "7432", "7433", "7434", "7434", "7434", "7434", "7434", "7435", "7435", "7435", "7435", "7435", "7435", "7436", "7437", "7437", "7438", "7439", "7440", "7441", "7442", "7443", "7444", "7445", "7445", "7446", "7446", "7447", "7448", "7449", "7450", "7451", "7452", "7453", "7454", "7455", "7456", "7460", "7461", "7462", "7463", "7464", "7465", "7466", "7467", "7470", "7471", "7473", "7473", "7484", "7485", "7800 - Document name too long, max 50 characters", "7999 - An internal error has occurred. Please contact support if this issue is not resolved in 1 business day" ]
          },
          "errorDescription" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "phoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          }
        },
        "xml" : {
          "name" : "LnpError"
        }
      },
      "LnpResponseListWrapper" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalCount"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          },
          "lnpPortInfoForGivenStatus" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LnpResponseWrapper"
            }
          }
        },
        "xml" : {
          "name" : "LNPResponseWrapper"
        }
      },
      "LnpResponseWrapper" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "userId"
            }
          },
          "lastModifiedDate" : {
            "type" : "string"
          },
          "countOfTNs" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "CountOfTNs"
            }
          },
          "bandwidthPrime" : {
            "type" : "string",
            "xml" : {
              "name" : "BandwidthPrime"
            }
          },
          "activityState" : {
            "type" : "string",
            "xml" : {
              "name" : "ActivityState"
            }
          },
          "lastModifiedNote" : {
            "$ref" : "#/components/schemas/Note",
            "xml" : {
              "name" : "LastModifiedNote"
            }
          },
          "suppCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SuppCount"
            }
          },
          "orderType" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderType"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "orderDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderDate"
            }
          },
          "billingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingTelephoneNumber"
            }
          },
          "newBillingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "NewBillingTelephoneNumber"
            }
          },
          "vendorId" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorId"
            }
          },
          "errorMessage" : {
            "type" : "string",
            "xml" : {
              "name" : "ErrorMessage"
            }
          },
          "errorCode" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ErrorCode"
            }
          },
          "requestedFocDate" : {
            "type" : "string",
            "xml" : {
              "name" : "RequestedFOCDate"
            }
          },
          "actualFocDate" : {
            "type" : "string",
            "xml" : {
              "name" : "ActualFOCDate"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            }
          },
          "vendorOrder" : {
            "type" : "string",
            "xml" : {
              "name" : "PON"
            }
          },
          "vendorName" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorName"
            }
          },
          "lnpLosingCarrierId" : {
            "type" : "string",
            "xml" : {
              "name" : "LNPLosingCarrierId"
            }
          },
          "lnpLosingCarrierName" : {
            "type" : "string",
            "xml" : {
              "name" : "LNPLosingCarrierName"
            }
          },
          "fullNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "FullNumber"
            }
          },
          "lnpErrors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LnpError"
            }
          },
          "telephoneNumberDetails" : {
            "$ref" : "#/components/schemas/TelephoneNumberDetailsWrapper",
            "xml" : {
              "name" : "TelephoneNumberDetails"
            }
          },
          "companyName" : {
            "type" : "string",
            "xml" : {
              "name" : "CompanyName"
            }
          },
          "bulkPortinOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "BulkPortinOrderId"
            }
          }
        },
        "xml" : {
          "name" : "LNPPortInfoForGivenStatus"
        }
      },
      "Note" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Id"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "UserId"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "xml" : {
              "name" : "LastDateModifier"
            }
          },
          "internal" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Internal"
            }
          }
        },
        "xml" : {
          "name" : "Note"
        }
      },
      "TelephoneNumberDetailsWrapper" : {
        "type" : "object",
        "properties" : {
          "States" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/OrderDetailsReport"
            }
          },
          "RateCenters" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/OrderDetailsReport"
            }
          },
          "Cities" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/OrderDetailsReport"
            }
          },
          "Tiers" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/OrderDetailsReport"
            }
          },
          "Vendors" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/OrderDetailsReport"
            }
          }
        },
        "xml" : {
          "name" : "TelephoneNumberDetails"
        }
      },
      "IrisStatus" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "statusType" : {
            "$ref" : "#/components/schemas/IrisStatusType"
          }
        },
        "xml" : {
          "name" : "Status"
        }
      },
      "IrisStatusType" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "LnpOrderResponse" : {
        "required" : [ "billingTelephoneNumber", "loaAuthorizingPerson", "newBillingTelephoneNumber", "numbersToPort" ],
        "type" : "object",
        "properties" : {
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "DRAFT", "PENDING_DOCUMENTS", "SUBMITTED", "REQUESTED_SUPP", "FOC", "COMPLETE", "EXCEPTION", "SNAPBACK", "REQUESTED_CANCEL", "CANCELLED" ]
          },
          "bulkPortinOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "BulkPortinOrderId"
            }
          },
          "externalId" : {
            "type" : "string",
            "xml" : {
              "name" : "ExternalId"
            }
          },
          "requestedFocDate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "RequestedFocDate"
            }
          },
          "earliestEstimate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "EarliestEstimate"
            }
          },
          "actualFocDate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "ActualFocDate"
            }
          },
          "alternateSpid" : {
            "type" : "string",
            "xml" : {
              "name" : "AlternateSpid"
            }
          },
          "billingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingTelephoneNumber"
            }
          },
          "newBillingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "NewBillingTelephoneNumber"
            }
          },
          "subscriber" : {
            "$ref" : "#/components/schemas/Subscriber",
            "xml" : {
              "name" : "Subscriber"
            }
          },
          "loaAuthorizingPerson" : {
            "type" : "string",
            "xml" : {
              "name" : "LoaAuthorizingPerson"
            }
          },
          "wirelessInfo" : {
            "$ref" : "#/components/schemas/WirelessInfo",
            "xml" : {
              "name" : "WirelessInfo"
            }
          },
          "numbersToPort" : {
            "type" : "array",
            "xml" : {
              "name" : "ListOfPhoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "PhoneNumber"
              }
            }
          },
          "vendorOrder" : {
            "type" : "string",
            "xml" : {
              "name" : "PON"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors"
            },
            "items" : {
              "$ref" : "#/components/schemas/LnpError"
            }
          },
          "losingCarrierName" : {
            "type" : "string",
            "xml" : {
              "name" : "LosingCarrierName"
            }
          },
          "losingCarrierSpid" : {
            "type" : "string",
            "xml" : {
              "name" : "LosingCarrierSPID"
            }
          },
          "losingCarrierIsWireless" : {
            "type" : "string",
            "xml" : {
              "name" : "LosingCarrierIsWireless"
            }
          },
          "vendorName" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorName"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "userId" : {
            "type" : "string"
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "status" : {
            "$ref" : "#/components/schemas/IrisStatus",
            "xml" : {
              "name" : "Status"
            }
          },
          "nnspid" : {
            "type" : "string",
            "xml" : {
              "name" : "SPID"
            }
          },
          "portOutStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "PortOutStatus"
            },
            "enum" : [ "NEW", "SUPP", "MODIFY", "COMPLETE", "CANCELLED", "VALIDATION_FAILED_NEW", "VALIDATION_FAILED_SUPP", "VALIDATION_FAILED_MODIFY", "EXCEPTION", "SOA_PENDING", "SOA_CONFLICT" ]
          },
          "partialPort" : {
            "type" : "string",
            "xml" : {
              "name" : "PartialPort"
            }
          },
          "immediately" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Immediately"
            }
          },
          "triggered" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Triggered"
            }
          },
          "billingType" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingType"
            },
            "enum" : [ "NOCHARGE", "PORTIN", "NEWNUMBER", "PROJECTPORT", "DISCOUNTED" ]
          },
          "portInType" : {
            "type" : "string",
            "xml" : {
              "name" : "PortType"
            },
            "enum" : [ "INTERNAL", "AUTOMATED", "AUTOMATEDOFFNET", "MANUALOFFNET", "MANUAL_TOLLFREE", "MIXED", "MANUAL_ON_NET" ]
          },
          "tnAttributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TnAttributes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          },
          "autoActivationType" : {
            "type" : "string",
            "xml" : {
              "name" : "AutoActivation"
            }
          },
          "overrideValidation" : {
            "type" : "boolean",
            "xml" : {
              "name" : "OverrideValidation"
            }
          },
          "draft" : {
            "type" : "boolean"
          },
          "losingCarrierFields" : {
            "$ref" : "#/components/schemas/LnpCarrier"
          }
        },
        "xml" : {
          "name" : "LnpOrderResponse"
        }
      },
      "WirelessInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "accountNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountNumber"
            }
          },
          "pinNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "PinNumber"
            }
          },
          "new" : {
            "type" : "boolean"
          }
        }
      },
      "OrderHistory" : {
        "type" : "object",
        "properties" : {
          "orderDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderDate"
            }
          },
          "noteDescription" : {
            "type" : "string",
            "xml" : {
              "name" : "Note"
            }
          },
          "author" : {
            "type" : "string",
            "xml" : {
              "name" : "Author"
            }
          },
          "orderStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            }
          },
          "difference" : {
            "type" : "string",
            "xml" : {
              "name" : "Difference"
            }
          }
        },
        "xml" : {
          "name" : "OrderHistory"
        }
      },
      "OrderHistoryWrapper" : {
        "type" : "object",
        "properties" : {
          "orderHistories" : {
            "type" : "array",
            "xml" : {
              "name" : "OrderHistory"
            },
            "items" : {
              "$ref" : "#/components/schemas/OrderHistory"
            }
          }
        },
        "xml" : {
          "name" : "OrderHistoryWrapper"
        }
      },
      "LidbDetailTnGroup" : {
        "type" : "object",
        "properties" : {
          "fullNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "subscriberInformation" : {
            "type" : "string",
            "xml" : {
              "name" : "SubscriberInformation"
            }
          },
          "useType" : {
            "type" : "string",
            "xml" : {
              "name" : "UseType"
            },
            "enum" : [ "BUSINESS", "RESIDENTIAL" ]
          },
          "visibility" : {
            "type" : "string",
            "xml" : {
              "name" : "Visibility"
            },
            "enum" : [ "PUBLIC", "PRIVATE" ]
          }
        },
        "xml" : {
          "name" : "LidbTnGroup"
        }
      },
      "LidbOrderError" : {
        "type" : "object",
        "properties" : {
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "Error"
        }
      },
      "LidbOrderPayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "RECEIVED", "PROCESSING", "COMPLETE", "PARTIAL", "FAILED" ]
          },
          "lidbDetailTnGroups" : {
            "type" : "array",
            "xml" : {
              "name" : "LidbTnGroups",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LidbDetailTnGroup"
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LidbOrderError"
            }
          }
        },
        "xml" : {
          "name" : "LidbOrder"
        }
      },
      "LidbOrderResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LidbOrderPayload",
            "xml" : {
              "name" : "LidbOrder"
            }
          },
          "orderType" : {
            "type" : "string",
            "enum" : [ "bulk_port_in", "port_in", "port_out", "new_number", "disconnect", "import_to_account", "lidb", "dlda", "lsr", "e911", "tn_option", "external_tns", "numbers_assignment", "import_tn_orders", "remove_imported_tn_orders", "csr", "emergency_notification_group", "emergency_endpoint_group" ]
          },
          "errorCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "responseDescription" : {
            "type" : "string"
          },
          "requestedAccountId" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "LidbOrderResponse"
        }
      },
      "LosingCarrierGroup" : {
        "type" : "object",
        "properties" : {
          "losingCarrierSpid" : {
            "type" : "string",
            "xml" : {
              "name" : "LosingCarrierSPID"
            }
          },
          "losingCarrierName" : {
            "type" : "string",
            "xml" : {
              "name" : "LosingCarrierName"
            }
          },
          "losingCarrierIsWireless" : {
            "type" : "boolean",
            "xml" : {
              "name" : "LosingCarrierIsWireless"
            }
          },
          "losingCarrierAccountNumberRequired" : {
            "type" : "boolean",
            "xml" : {
              "name" : "LosingCarrierAccountNumberRequired"
            }
          },
          "losingCarrierMinimumPortingInterval" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "LosingCarrierMinimumPortingInterval"
            }
          },
          "l3LosingCarrierMinimumPortingInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TnList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          }
        },
        "xml" : {
          "name" : "LosingCarrierGroup"
        }
      },
      "NumberPortabilityResponse" : {
        "type" : "object",
        "properties" : {
          "portInType" : {
            "type" : "string",
            "xml" : {
              "name" : "PortType"
            },
            "enum" : [ "INTERNAL", "AUTOMATED", "AUTOMATEDOFFNET", "MANUALOFFNET", "MANUAL_TOLLFREE", "MIXED", "MANUAL_ON_NET" ]
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors"
            },
            "items" : {
              "$ref" : "#/components/schemas/LnpError"
            }
          },
          "supportedNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "PortableNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          },
          "portabilityErrors" : {
            "type" : "array",
            "xml" : {
              "name" : "PortabilityErrors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LnpError"
            }
          },
          "supportedRateCenters" : {
            "type" : "array",
            "xml" : {
              "name" : "SupportedRateCenters",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RateCenterGroup"
            }
          },
          "partnerSupportedRateCenters" : {
            "type" : "array",
            "xml" : {
              "name" : "PartnerSupportedRateCenters",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RateCenterGroup"
            }
          },
          "supportedTollFreeNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "SupportedTollFreeNumbers",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TollFreeNumberGroup"
            }
          },
          "unsupportedRateCenters" : {
            "type" : "array",
            "xml" : {
              "name" : "UnsupportedRateCenters",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RateCenterGroup"
            }
          },
          "supportedLosingCarriers" : {
            "type" : "array",
            "xml" : {
              "name" : "SupportedLosingCarriers",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LosingCarrierGroup"
            }
          },
          "unSupportedLosingCarriers" : {
            "type" : "array",
            "xml" : {
              "name" : "UnsupportedLosingCarriers",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LosingCarrierGroup"
            }
          },
          "supportedRateCenterTelephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "SupportedRateCenterTelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          },
          "supportedTollFreeTelephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "SupportedTollFreeTelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          },
          "unsupportedRateCenterTelephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "UnsupportedRateCenterTelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          },
          "unsupportedLosingCarrierTelephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "UnsupportedLosingCarrierTelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          }
        },
        "xml" : {
          "name" : "NumberPortabilityResponse"
        }
      },
      "RateCenterGroup" : {
        "type" : "object",
        "properties" : {
          "vendor" : {
            "type" : "string",
            "xml" : {
              "name" : "Vendor"
            }
          },
          "automatedPort" : {
            "type" : "boolean",
            "xml" : {
              "name" : "AutomatedPort"
            }
          },
          "rateCenter" : {
            "type" : "string",
            "xml" : {
              "name" : "RateCenter"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "lata" : {
            "type" : "string",
            "xml" : {
              "name" : "LATA"
            }
          },
          "tiers" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "name" : "Tiers",
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "xml" : {
                "name" : "Tier"
              }
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TnList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          }
        },
        "xml" : {
          "name" : "RateCenterGroup"
        }
      },
      "TollFreeNumberGroup" : {
        "type" : "object",
        "properties" : {
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TnList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          }
        },
        "xml" : {
          "name" : "TollFreeNumberGroup"
        }
      },
      "NumberPortabilityRequest" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "checkingMode" : {
            "type" : "string",
            "enum" : [ "FALSE", "TRUE", "ONNETPORTABILITY", "OFFNETPORTABILITY" ]
          },
          "typedOrderIdToIgnoreCheck" : {
            "type" : "integer",
            "format" : "int32"
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TnList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Tn"
              }
            }
          }
        },
        "xml" : {
          "name" : "NumberPortabilityRequest"
        }
      },
      "LnpAvailabilityCheckResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/IrisStatus",
            "xml" : {
              "name" : "Status"
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors"
            },
            "items" : {
              "$ref" : "#/components/schemas/LnpError"
            }
          },
          "phoneNumber" : {
            "$ref" : "#/components/schemas/PhoneNumber",
            "xml" : {
              "name" : "PhoneNumber"
            }
          },
          "available" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Available"
            }
          }
        },
        "xml" : {
          "name" : "LnpAvailabilityCheckResponse"
        }
      },
      "PhoneNumber" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string"
          }
        }
      },
      "LnpOrder" : {
        "required" : [ "siteId" ],
        "type" : "object",
        "properties" : {
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "DRAFT", "PENDING_DOCUMENTS", "SUBMITTED", "REQUESTED_SUPP", "FOC", "COMPLETE", "EXCEPTION", "SNAPBACK", "REQUESTED_CANCEL", "CANCELLED" ]
          },
          "billingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingTelephoneNumber"
            }
          },
          "newBillingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "NewBillingTelephoneNumber"
            }
          },
          "wirelessInfo" : {
            "$ref" : "#/components/schemas/WirelessInfo",
            "xml" : {
              "name" : "WirelessInfo"
            }
          },
          "requestedFocDateStr" : {
            "type" : "string",
            "writeOnly" : true,
            "xml" : {
              "name" : "RequestedFocDate"
            }
          },
          "subscriber" : {
            "$ref" : "#/components/schemas/Subscriber",
            "xml" : {
              "name" : "Subscriber"
            }
          },
          "peerId" : {
            "type" : "string",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "partialPort" : {
            "type" : "string",
            "xml" : {
              "name" : "PartialPort"
            }
          },
          "loaAuthorizingPerson" : {
            "type" : "string",
            "xml" : {
              "name" : "LoaAuthorizingPerson"
            }
          },
          "immediately" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Immediately"
            }
          },
          "triggered" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Triggered"
            }
          },
          "billingType" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingType"
            }
          },
          "autoActivationType" : {
            "type" : "string",
            "xml" : {
              "name" : "AutoActivation"
            }
          },
          "tnAttributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TnAttributes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          },
          "overrideValidation" : {
            "type" : "boolean",
            "xml" : {
              "name" : "OverrideValidation"
            }
          },
          "alternateSpid" : {
            "type" : "string",
            "xml" : {
              "name" : "AlternateSpid"
            }
          },
          "portInType" : {
            "type" : "string",
            "xml" : {
              "name" : "PortType"
            },
            "enum" : [ "INTERNAL", "AUTOMATED", "AUTOMATEDOFFNET", "MANUALOFFNET", "MANUAL_TOLLFREE", "MIXED", "MANUAL_ON_NET" ]
          },
          "numbersToPort" : {
            "$ref" : "#/components/schemas/PhoneNumberList",
            "xml" : {
              "name" : "ListOfPhoneNumbers"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          }
        },
        "xml" : {
          "name" : "LnpOrder"
        }
      },
      "PhoneNumberList" : {
        "type" : "object",
        "properties" : {
          "phoneNumbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PhoneNumber"
            }
          },
          "numbersAsStrings" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          }
        }
      },
      "LnpOrderSupp" : {
        "type" : "object",
        "properties" : {
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "DRAFT", "PENDING_DOCUMENTS", "SUBMITTED", "REQUESTED_SUPP", "FOC", "COMPLETE", "EXCEPTION", "SNAPBACK", "REQUESTED_CANCEL", "CANCELLED" ]
          },
          "billingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingTelephoneNumber"
            }
          },
          "newBillingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "NewBillingTelephoneNumber"
            }
          },
          "wirelessInfo" : {
            "$ref" : "#/components/schemas/WirelessInfo",
            "xml" : {
              "name" : "WirelessInfo"
            }
          },
          "requestedFocDateStr" : {
            "type" : "string",
            "writeOnly" : true,
            "xml" : {
              "name" : "RequestedFocDate"
            }
          },
          "subscriber" : {
            "$ref" : "#/components/schemas/Subscriber",
            "xml" : {
              "name" : "Subscriber"
            }
          },
          "peerId" : {
            "type" : "string",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "partialPort" : {
            "type" : "string",
            "xml" : {
              "name" : "PartialPort"
            }
          },
          "loaAuthorizingPerson" : {
            "type" : "string",
            "xml" : {
              "name" : "LoaAuthorizingPerson"
            }
          },
          "immediately" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Immediately"
            }
          },
          "triggered" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Triggered"
            }
          },
          "billingType" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingType"
            }
          },
          "autoActivationType" : {
            "type" : "string",
            "xml" : {
              "name" : "AutoActivation"
            }
          },
          "tnAttributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TnAttributes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          },
          "overrideValidation" : {
            "type" : "boolean",
            "xml" : {
              "name" : "OverrideValidation"
            }
          },
          "alternateSpid" : {
            "type" : "string",
            "xml" : {
              "name" : "AlternateSpid"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "actualFocDate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "ActualFocDate"
            }
          },
          "numbersToPort" : {
            "$ref" : "#/components/schemas/PhoneNumberList",
            "xml" : {
              "name" : "ListOfPhoneNumbers"
            }
          }
        },
        "xml" : {
          "name" : "LnpOrderSupp"
        }
      },
      "BulkPortout" : {
        "type" : "object",
        "properties" : {
          "pon" : {
            "type" : "string",
            "xml" : {
              "name" : "PON"
            }
          },
          "pin" : {
            "type" : "string",
            "xml" : {
              "name" : "Pin"
            }
          },
          "newSpid" : {
            "type" : "string",
            "xml" : {
              "name" : "NewNetworkSPID"
            }
          },
          "focDate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "FocDate"
            }
          },
          "supplemental" : {
            "type" : "string",
            "xml" : {
              "name" : "Supplemental"
            },
            "enum" : [ "NONE", "CANCEL", "UPDATE", "OTHER" ]
          },
          "immediately" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Immediately"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumberList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumberToPort"
              }
            }
          },
          "callbackUrl" : {
            "type" : "string",
            "xml" : {
              "name" : "CallbackUrl"
            }
          },
          "internalPort" : {
            "type" : "boolean",
            "xml" : {
              "name" : "InternalPort"
            }
          },
          "accountNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountNumber"
            }
          },
          "zip" : {
            "type" : "string",
            "xml" : {
              "name" : "ZipCode"
            }
          },
          "subscriberName" : {
            "type" : "string",
            "xml" : {
              "name" : "SubscriberName"
            }
          },
          "overrideValidation" : {
            "type" : "boolean",
            "xml" : {
              "name" : "OverrideValidation"
            }
          },
          "skipPortPsCheck" : {
            "type" : "boolean",
            "xml" : {
              "name" : "SkipPortPsCheck"
            }
          }
        },
        "xml" : {
          "name" : "BulkPortOut"
        }
      },
      "ManualPortOutRequest" : {
        "required" : [ "focDate", "nnspid", "pin", "portOutAction", "telephoneNumber" ],
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pin" : {
            "type" : "string",
            "xml" : {
              "name" : "Pin"
            }
          },
          "nnspid" : {
            "type" : "string",
            "xml" : {
              "name" : "NewNetworkSPID"
            }
          },
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumberToPort"
            }
          },
          "focDate" : {
            "type" : "string",
            "xml" : {
              "name" : "FocDate"
            }
          },
          "portOutAction" : {
            "type" : "string",
            "xml" : {
              "name" : "PortOutAction"
            },
            "enum" : [ "NEW", "SUPP", "MODIFY", "CANCEL" ]
          },
          "bulkPortout" : {
            "$ref" : "#/components/schemas/BulkPortout",
            "xml" : {
              "name" : "BulkPortOut"
            }
          },
          "internalPortOut" : {
            "type" : "boolean"
          },
          "stringAccountId" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "PortOutRequest"
        }
      },
      "ManualPortOutResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/IrisStatus",
            "xml" : {
              "name" : "Status"
            }
          },
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "portOutStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "NEW", "SUPP", "MODIFY", "COMPLETE", "CANCELLED", "VALIDATION_FAILED_NEW", "VALIDATION_FAILED_SUPP", "VALIDATION_FAILED_MODIFY", "EXCEPTION", "SOA_PENDING", "SOA_CONFLICT" ]
          },
          "manualPortOutRequest" : {
            "$ref" : "#/components/schemas/ManualPortOutRequest",
            "xml" : {
              "name" : "PortOutRequest"
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors"
            },
            "items" : {
              "$ref" : "#/components/schemas/LnpError"
            }
          }
        },
        "xml" : {
          "name" : "PortOutResponse"
        }
      },
      "BulkPortin" : {
        "type" : "object",
        "properties" : {
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "requestedFocDate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "RequestedFocDate"
            }
          },
          "alternateSpid" : {
            "type" : "string",
            "xml" : {
              "name" : "AlternateSpid"
            }
          },
          "billingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingTelephoneNumber"
            }
          },
          "subscriber" : {
            "$ref" : "#/components/schemas/Subscriber",
            "xml" : {
              "name" : "Subscriber"
            }
          },
          "loaAuthorizingPerson" : {
            "type" : "string",
            "xml" : {
              "name" : "LoaAuthorizingPerson"
            }
          },
          "accountNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountNumber"
            }
          },
          "pinNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "PinNumber"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "DRAFT", "IN_PROGRESS", "NEEDS_ATTENTION", "PARTIAL", "COMPLETED", "CANCELLED" ]
          },
          "tnAttributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TnAttributes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "actualFocDate" : {
            "type" : "string",
            "xml" : {
              "name" : "ActualFocDate"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "lastModifiedDate" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          }
        },
        "xml" : {
          "name" : "BulkPortin"
        }
      },
      "AddressPatch" : {
        "type" : "object",
        "properties" : {
          "delete" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            }
          },
          "housePrefix" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "HousePrefix"
            }
          },
          "houseNo" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "HouseNumber"
            }
          },
          "houseSuffix" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "HouseSuffix"
            }
          },
          "preDirectional" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "PreDirectional"
            }
          },
          "streetName" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "StreetName"
            }
          },
          "streetSuffix" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "StreetSuffix"
            }
          },
          "postDirectional" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "PostDirectional"
            }
          },
          "addressLine2" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "AddressLine2"
            }
          },
          "city" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "City"
            }
          },
          "stateCode" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "StateCode"
            }
          },
          "zip" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "Zip"
            }
          },
          "zip4" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "PlusFour"
            }
          },
          "country" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "County"
            }
          }
        }
      },
      "BulkPortinPatch" : {
        "type" : "object",
        "properties" : {
          "customerOrderId" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "requestedFocDate" : {
            "$ref" : "#/components/schemas/DatePatch",
            "xml" : {
              "name" : "RequestedFocDate"
            }
          },
          "alternateSpid" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "AlternateSpid"
            }
          },
          "billingTelephoneNumber" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "BillingTelephoneNumber"
            }
          },
          "subscriber" : {
            "$ref" : "#/components/schemas/SubscriberPatch",
            "xml" : {
              "name" : "Subscriber"
            }
          },
          "loaAuthorizingPerson" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "LoaAuthorizingPerson"
            }
          },
          "accountNumber" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "AccountNumber"
            }
          },
          "pinNumber" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "PinNumber"
            }
          },
          "siteId" : {
            "$ref" : "#/components/schemas/IntPatch",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "$ref" : "#/components/schemas/IntPatch",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "processingStatus" : {
            "$ref" : "#/components/schemas/ProcessingStatusPatch",
            "xml" : {
              "name" : "ProcessingStatus"
            }
          },
          "tnAttributes" : {
            "$ref" : "#/components/schemas/TnAttributesPatch",
            "xml" : {
              "name" : "TnAttributes"
            }
          }
        },
        "xml" : {
          "name" : "BulkPortin"
        }
      },
      "DatePatch" : {
        "type" : "object",
        "properties" : {
          "delete" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "IntPatch" : {
        "type" : "object",
        "properties" : {
          "delete" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "ProcessingStatusPatch" : {
        "type" : "object",
        "properties" : {
          "delete" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "StringPatch" : {
        "type" : "object",
        "properties" : {
          "delete" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "SubscriberPatch" : {
        "type" : "object",
        "properties" : {
          "delete" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            }
          },
          "subscriberType" : {
            "$ref" : "#/components/schemas/SubscriberTypePatch",
            "xml" : {
              "name" : "SubscriberType"
            }
          },
          "businessName" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "BusinessName"
            }
          },
          "firstName" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "FirstName"
            }
          },
          "middleInitial" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "MiddleInitial"
            }
          },
          "lastName" : {
            "$ref" : "#/components/schemas/StringPatch",
            "xml" : {
              "name" : "LastName"
            }
          },
          "serviceAddress" : {
            "$ref" : "#/components/schemas/AddressPatch",
            "xml" : {
              "name" : "ServiceAddress"
            }
          }
        }
      },
      "SubscriberTypePatch" : {
        "type" : "object",
        "properties" : {
          "delete" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "TnAttributesPatch" : {
        "type" : "object",
        "properties" : {
          "delete" : {
            "type" : "boolean",
            "xml" : {
              "attribute" : true
            }
          }
        }
      },
      "BulkPortinList" : {
        "type" : "object",
        "properties" : {
          "portinOrderIds" : {
            "type" : "array",
            "xml" : {
              "name" : "PortinOrderId"
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "PortinOrderId"
              }
            }
          }
        },
        "xml" : {
          "name" : "PortinList"
        }
      },
      "BulkTnList" : {
        "type" : "object",
        "properties" : {
          "tns" : {
            "type" : "array",
            "xml" : {
              "name" : "TN"
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TN"
              }
            }
          }
        },
        "xml" : {
          "name" : "TnList"
        }
      },
      "PortinLosingCarrierInfo" : {
        "type" : "object",
        "properties" : {
          "spid" : {
            "type" : "string",
            "xml" : {
              "name" : "Spid"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "wireless" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Wireless"
            }
          },
          "accountNumberRequired" : {
            "type" : "boolean",
            "xml" : {
              "name" : "AccountNumberRequired"
            }
          },
          "minRespTime" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "MinimumPortingInterval"
            }
          }
        },
        "xml" : {
          "name" : "LosingCarrier"
        }
      },
      "PortinLosingCarrierResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/PortinLosingCarrierInfo",
            "xml" : {
              "name" : "LosingCarrier"
            }
          }
        },
        "xml" : {
          "name" : "PortinLosingCarrierResponse"
        }
      },
      "LsrOrderError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "LsrSubmissionOrderError"
        }
      },
      "LsrOrderPayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "overrideValidation" : {
            "type" : "boolean",
            "xml" : {
              "name" : "OverrideValidation"
            }
          },
          "authorizingPerson" : {
            "type" : "string",
            "xml" : {
              "name" : "AuthorizingPerson"
            }
          },
          "spid" : {
            "type" : "string",
            "xml" : {
              "name" : "SPID"
            }
          },
          "billingTelephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "BillingTelephoneNumber"
            }
          },
          "pon" : {
            "type" : "string",
            "xml" : {
              "name" : "Pon"
            }
          },
          "ponVersion" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PonVersion"
            }
          },
          "partialPort" : {
            "type" : "boolean",
            "xml" : {
              "name" : "PartialPort"
            }
          },
          "requestedFocDate" : {
            "type" : "string",
            "xml" : {
              "name" : "RequestedFocDate"
            }
          },
          "actualFocDate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "ActualFocDate"
            }
          },
          "subscriber" : {
            "$ref" : "#/components/schemas/Subscriber",
            "xml" : {
              "name" : "Subscriber"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "ListOfTelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "lsrOrderErrors" : {
            "type" : "array",
            "xml" : {
              "name" : "LsrOrderErrors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LsrOrderError"
            }
          },
          "countOfTNs" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "CountOfTNs"
            }
          },
          "orderStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderStatus"
            },
            "enum" : [ "FOC", "EXCEPTION", "PENDING", "COMPLETE", "CANCELLED", "FAILED", "PARTIAL" ]
          }
        },
        "xml" : {
          "name" : "LsrOrder"
        }
      },
      "LsrOrderResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LsrOrderPayload",
            "xml" : {
              "name" : "LsrOrder"
            }
          },
          "lsrOrderErrors" : {
            "type" : "array",
            "xml" : {
              "name" : "LsrOrderErrors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LsrOrderError"
            }
          }
        },
        "xml" : {
          "name" : "LsrOrderResponse"
        }
      },
      "TnActivationStatus" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LnpError"
            }
          },
          "activationDate" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "AutoActivationDate"
            }
          },
          "activatedTns" : {
            "type" : "array",
            "xml" : {
              "name" : "ActivatedTelephoneNumbersList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "notActivatedTns" : {
            "type" : "array",
            "xml" : {
              "name" : "NotYetActivatedTelephoneNumbersList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          }
        },
        "xml" : {
          "name" : "ActivationStatus"
        }
      },
      "TnActivationStatusResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TnActivationStatus",
            "xml" : {
              "name" : "ActivationStatus"
            }
          }
        },
        "xml" : {
          "name" : "ActivationStatusResponse"
        }
      },
      "PotCallbackResponse" : {
        "type" : "object"
      },
      "InternalPortEvent" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/Status",
            "xml" : {
              "name" : "Status"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "COMPLETED", "EXCEPTION", "FOC", "CANCELLED" ]
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "ProcessingErrors",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Error"
              }
            }
          },
          "bulkPortOut" : {
            "$ref" : "#/components/schemas/BulkPortout",
            "xml" : {
              "name" : "BulkPortOut"
            }
          }
        },
        "xml" : {
          "name" : "InternalPortEvent"
        }
      },
      "Status" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          }
        },
        "xml" : {
          "name" : "Status"
        }
      },
      "FileData" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "xml" : {
              "name" : "FileName"
            }
          },
          "fileMetaData" : {
            "$ref" : "#/components/schemas/FileMetaDataPayload",
            "xml" : {
              "name" : "FileMetaData"
            }
          }
        },
        "xml" : {
          "name" : "FileData"
        }
      },
      "FileListResponse" : {
        "required" : [ "fileCount", "resultCode", "resultMessage" ],
        "type" : "object",
        "properties" : {
          "resultCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "resultMessage" : {
            "type" : "string"
          },
          "fileCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fileNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fileData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FileData"
            }
          },
          "error" : {
            "type" : "string",
            "writeOnly" : true,
            "enum" : [ "7000 - API request has timed out", "7001 - The account ID is required", "7002 - The account ID is invalid", "7003 - Unauthorized user", "7004 - Unable to provide coverage", "7005 - Unable to determine the next available FOC date", "7006 - SL service exception", "7007 - Unknown Level3 exception", "7100 - The order ID is required", "7101 - At least one number must be specified to port", "7102 - Telephone number is required", "7103 - The billing telephone number (BTN) is required", "7104 - Subscriber information is required", "7105 - The subscriber name is required", "7106 - The subscriber type is required", "7107 - The service address is required", "7108 - The service address house number is required", "7109 - The service address street name is required", "7110 - The service address city is required", "7111 - The service address state code is required", "7112 - The service address zip code is required", "7113 - Wireless information is required", "7114 - The account number is required", "7115 - The LOA authorizing person is required", "7116 - The new network SPID is required", "7117 - The personal identification number (PIN) is required", "7118 - The port out action is required", "7119 - The requested FOC date is required", "7120 - The PON is required", "7121 - The POT order type is required", "7122 - Telephone number list is required", "7123 - Billing type is required", "7200 - The order ID was not found", "7201 - Telephone number is invalid", "7202 - Telephone number was not found", "7203 - The billing telephone number (BTN) is invalid", "7204 - All telephone numbers, including the billing telephone number (BTN) and new BTN when provided, must belong to the same carrier", "7205 - Telephone number is already being processed on another order", "7206 - Telephone number is already in service", "7207 - The requested FOC date is invalid", "7208 - The requested FOC date cannot be in the past", "7209 - The requested FOC date is too soon", "7210 - The requested FOC date is too far in the future. Date must be within 30 days", "7211 - A residential subscriber type may not have a business name", "7212 - Account number required or incorrect", "7213 - PIN number is invalid", "7214 - ZIP code is invalid", "7215 - The order ID has invalid format", "7216 - Actual FOC Date has invalid format", "7217 - Requested FOC Date has invalid format", "7300 - The order cannot be modified because the order is awaiting a response from the losing carrier", "7301 - The order cannot be modified or cancelled because the pending FOC date is too soon", "7302 - The order cannot be cancelled after the FOC date has passed", "7303 - The order is already cancelled and cannot be modified or cancelled", "7304 - The order is already complete and cannot be modified or cancelled", "7305 - The billing telephone number (BTN) cannot be modified at this time", "7306 - Subscriber information cannot be modified at this time", "7307 - The subscriber address cannot be modified at this time", "7308 - Wireless information cannot be modified at this time", "7309 - The site id was not supplied or is invalid.", "7310 - The site id submitted does not have a default SIP peer associated to it.", "7311 - The sippeer id is invalid for this site.", "7312 - The sippeer id is invalid.", "7313 - The requested time %s is outside business hours. FOC time must be within processing hours of 8:00AM and 3:30PM Eastern Time", "7472 - Portability checking mode is not valid. Valid values: FALSE, TRUE, ONNETPORTABILITY, OFFNETPORTABILITY", "7314 - The number of telephone numbers provided exceeds the maximum %s", "7315 - The date is during a weekend or holiday.", "7316 - At least one telephone number must be provided.", "7317 - Requested FOC date is before the next available FOC date.", "7318 - Customer order ID is invalid. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.", "7319 - Partial Port must be a valid boolean variation.", "7320 - BW owned TN - contact customer support", "7321 - TollFree number cannot be ported through this interface - please call your Bandwidth representative", "7322 - Information provided is incorrect", "7323 - Unable to contact vendor for porting information. Please submit your request again later.", "7324 - The business name is too long. The business name should not be longer than 25 characters.", "7325 - Not authorized to perform operation on the account '%s'", "7326 - Error from POT", "7327 - The port out passed the FOC grace period for activation. The LNP operations team has been notified of this event", "7328 - The principal user %s does not have the permissions to request immediate port", "7329 - Pre directional is not valid. Valid values: N, S, E, W, NE, NW, SE, SW", "7330 - Post directional is not valid. Valid values: N, S, E, W, NE, NW, SE, SW", "7331 - Rate Center Not Present in Bandwidth Dashboard", "7332 - PeerId is required", "7333 - Porting is not enabled on the account.", "7334 - SiteId is required", "7335 - The order ID was not found for requested accountId.", "7336 - This site is currently locked for contract paperwork.  Please contact support for further assistance.", "7337 - AltSPID used in the order does not match account AltSPID. Please use the value specified in the account settings.", "7338 - ActivationStatus is required.", "7339 - Telephone numbers '%s' are not valid", "7340 - Telephone numbers are already activated.", "7341 - Telephone numbers not found in portin order.", "7342 - On demand portin activation not yet allowed.", "7343 - Customer Activation is not supported for Wireless winning carriers.", "7344 - Customer Activation is not yet supported for Bandwidth losing carriers.", "7345 - Customer Activation is not allowed on non triggered portins.", "7346 - Triggered/On Demand porting disabled.", "7347 - Activation date and time cannot be later than %s and it was updated to latest allowed value ", "7348 - Order processing has been temporarily suspended and will be resumed when all systems are available - no action is required.", "7349 - The order is already completed or cancelled.", "7350 - \"Customer Activation\" can't be changed.", "7351 - Unable to sumbit activation request to Neustar. Received NACK response.", "7352 - On demand portin activation is allowed only for orders with FOC state.", "7353 - The order cannot be modified because it is in requested cancel status", "7354 - Middle initial is too long. Middle initial should not be longer than 1 character.", "7355 - First name is too long. First name should not be longer than 25 characters.", "7356 - Last name is too long. Last name should not be longer than 25 characters.", "7357 - The LOA authorizing person is too long. The LOA authorizing person should be not longer than 15 characters.", "7358 - Incorrect Billing Type. Valid values: NOCHARGE, PORTIN, NEWNUMBER, PROJECTPORT, DISCOUNTED", "7359 - Billing Type cannot be set with permissions assigned to current user. Allowed permissions: %s", "7360 - Telephone number list can't contain duplicates.", "7361 - Customer Activation is not supported for manual off-net port in orders.", "7362 - Immediate flag is not supported for manual port in orders.", "7363 - This port request contains numbers from multiple vendors. Please check the portability of these numbers using the Check Portability tool", "7364 - Incorrect next porting state. Allowed next states: {%s}", "7365 - Next Processing Status cannot be set with permissions assigned to current user. Allowed permissions: {%s}", "7366 - Actual FOC date cannot be set with permissions assigned to current user. Allowed permissions: {%s}", "7367 - Unable to modify processing status for %s port type", "7368 - Unable to modify actual FOC date for %s port type", "7369 - The actual FOC date cannot be in the past", "7370 - FOC processing status is unavailable without actual FOC date specified", "7371 - The order cannot be modified or cancelled because the FOC date is in the past", "7372 - ProcessingStatus '%s' is invalid. Valid values: %s", "7373 - 'AutoActivation' can be set only for manual port in orders.", "7374 - 'AutoActivation' cannot be set with permissions assigned to current user. Allowed permissions: {%s}", "7375 - 'ManualTnActivation' can be set only for manual port in orders.", "7376 - 'ManualTnActivation' cannot be set with permissions assigned to current user. Allowed permissions: {%s}", "7377 - 'AutoActivation' cannot be set during the creation of the order.", "7378 - Porting is not available for numbers that are not in service on the losing carrier account", "7379 - Actual FOC date cannot be set without 'FOC' status for the first time", "7380 - Automatic activation for this port is scheduled outside of the normal Bandwidth support time-frames, and support for the activation will not likely be available until the next business day", "7381 - Order not submitted. Please resubmit order with a trigger time that is within the porting time frame, %1$s - %2$s.", "7382 - Activation must take place between %1$s and %2$s", "7383 - Wireless info is not allowed for tollfree manual off-net port-ins", "7384 - Partial port is not allowed for tollfree manual off-net port-ins", "7385 - Billing telephone number is not allowed for tollfree manual off-net port-ins", "7386 - You have mixed toll free and non-toll free numbers in the order. Please submit the toll free and non-toll free numbers in separate orders. These numbers are %s ", "7387 - Activation date is on holiday or weekend.", "7388 - The LOA Authorizing Person field has been truncated to 15 characters for submission to the losing carrier. No action is required", "7389 - The Requested Foc Time was reset to default %1s", "7390 - The order cannot be modified on FOC date and after", "7391 - Incorrect subscriber type for toll free port in. Only business is allowed", "7392 - Immediate flag is not supported for manual toll free off-net port in orders.", "7394 - Immediate is not allowed for tollfree manual off-net port-ins", "7395 - Unsupported state code: %s.", "7396 - Subscriber name [%s] will be trimmed to [%s] in an attempt to comply with port-in processing name length limits. No action is required", "7397 - Toll free numbers are not candidates for Protected status", "7398 - Protected status is not available for numbers in off-net rate centers", "7399 - Telephone number attribute '%s' is invalid. Valid values: Protected, External, Hosted", "7474 - Duplicate telephone number attribute '%s'.", "7475 - Telephone numbers cannot be marked as Protected - the account has not been configured for Protected Numbers", "7476 - AutoActivation is not allowed for this portin.", "7477 - AutoActivation value is invalid.", "7478 - AutoActivation can not be updated to \"none\".", "7479 - Telephone numbers from this portin must be activated manually.", "7480 - Cannot SUPP or CANCEL a non existent order", "7481 - The account number and pin number fields cannot be defined in the Subscriber section for portin orders. Please provide these two fields within the WirelessInfo section.", "7482 - OverrideValidation flag can be supped only in EXCEPTION status.", "7483 - Supp is not allowed for this PortIn. Please contact support if this issue is not resolved in 1 business day", "7486 - Information on losing carrier is not available, supported losing carrier or carriers is assumed.", "7487 - SIP Peer assignment cannot change for this port request.", "7489 - Port PS check returned empty SPID.", "7490 - There are too many telephone numbers in this request", "7491 - This order was cancelled due to the following numbers: [%s]. These numbers will need to be disconnected in the system first and this port-in re-submitted afterwards. Please contact your customer support representative for assistance on this.", "7492 - Customer Activation is not allowed on manual triggered portins", "7493 - NewBillingTelephoneNumber must be supplied because port is partial and BillingTelephoneNumber is being ported", "7494 - NewBillingTelephoneNumber is not valid NANPA telephone number", "7496 - NewBillingTelephoneNumber cannot be in the list of phone numbers being ported", "7497 - NewBillingTelephoneNumber cannot be the same as the BillingTelephoneNumber", "7498 - List of telephone numbers cannot be changed for this port request", "7499 - Port type %s cannot be change to %s", "7495 - Unable to change the TNs on this port. Please ensure that the new TNs are from the same losing carrier as the current TNs.", "7500 - Unable to change the TNs on this port. Please ensure that the new TNs are from the same vendor as the current TNs.", "7501 - Telephone numbers are invalid", "7502 - Telephone number list can not contain duplicates: %s", "7503 - Telephone numbers are non portable", "7504 - This order was cancelled due to the following numbers: [%s]. These numbers are external and cannot be processed by Internal Port-in order", "7700 - Portin order not found", "7701 - Portin order already relates to another bulk portin order", "7702 - Order is not in 'DRAFT' state", "7703 - Put is not allowed for bulk portin with subtending portins assigned", "7704 - Transition to IN_PROGRESS is not allowed for bulk portin without subtending portins assigned", "7705 - %s cannot be patched for bulk portin with subtending portins", "7706 - The bulk port-in API is not enabled", "7707 - You are not allowed to access the bulk port-in API", "7708 - AlternateSPID cannot be modified on a non-DRAFT state port-in", "7709 - Bulk port-in with id %s cannot be deleted since it is not in draft status.", "7710 - History is not supported for bulk port-ins or individual port-ins in draft status.", "7711 - Portin list modification is not allowed for bulk portin in status: %s.", "7712 - Only draft subtending portins are allowed for draft bulk portin.", "7713 - Only non-draft subtending portins are allowed for non-draft bulk portin.", "7714 - Portins in terminal status are not allowed for portin list update.", "7715 - This port-in cannot be associated with this bulk port-in because its earliest estimate date needs to be earlier than the bulk port-in requested FOC date.", "7400 - Error: serviceOrderHeader is required", "7401 - Error: Could not find valid externalOrderID", "7402 - Error: Unrecognized product ID", "7403 - Error: Request does not contains %s.", "7404 - Error: %s field is missing.", "7405 - Error: notification is required", "7406 - Error: Invalid E911CoverageIndicator", "7407 - The wireless AccountNumber cannot be changed after order submission for automated off-net port-ins.", "7408 - The wireless PinNumber cannot be changed after order submission for automated off-net port-ins.", "7409 - When changing the subscriber name, both FirstName and LastName must be supplied for automated off-net port-ins.", "7410 - BusinessName required when SubscriberType set to Business for automated off-net port-ins.", "7411 - Subscriber name cannot be changed when SubscriberType is set to Business for automated off-net port-ins.", "7413 - The ListOfPhoneNumbers cannot be changed after order submission for automated off-net port-ins.", "7414 - The BusinessName cannot be changed after FOC is assigned for automated off-net port-ins.", "7415 - The BillingTelephoneNumber cannot be changed after FOC is assigned for automated off-net port-ins.", "7416 - BusinessName cannot be changed when SubscriberType is set to Residential for automated off-net port-ins.", "7417 - Both FirstName and LastName are required when SubscriberType set to Residential for automated off-net port-ins.", "7418 - The SubscriberType cannot be changed after FOC is assigned for automated off-net port-ins.", "7419 - The subscriber name cannot be changed after FOC is assigned for automated off-net port-ins.", "7420 - The order address cannot be changed after order submission for automated off-net port-ins.", "7421 - All ported numbers on an order need to be from the same carrier.", "7422 - The LocalOrderUpdate query parameter is restricted to Bandwidth internal users only.", "7423 - The LocalOrderUpdate query parameter can only be specified for orders in FOC status.", "7424 - The LocalOrderUpdate query parameter requires inclusion of a valid RequestedFocDate in the request payload.", "7425 - The LocalOrderUpdate query parameter may only be used when it is not possible for the user to change the FOC date using the normal SUPP request.", "7510 - Required Account Code missing", "7511 - Invalid Account Code", "7512 - Required PIN missing", "7513 - PIN Invalid", "7514 - Required ZIP Code missing", "7515 - Invalid ZIP Code", "7516 - Telephone Number not recognized or invalid for this account", "7517 - Too many Telephone numbers in this request", "7518 - Telephone Number Not Active", "7519 - Customer info does not match", "7520 - The telephone number must be unlocked by the end user and current service provider", "7521 - The TN you are requesting to port could require manual handling. An LNP agent will manually update your LSR order within 24 hours. If you have not received an updated response in your order, please email us at portouts@bandwidth.com for more information.", "7522 - Customer does migration from one portout validation endpoint to another.", "7593 - Unexpected response code %s in portout API validation response", "7594 - Received %s response code in portout API validation response, possibly something should be fixed", "7595 - Empty response body in portout API validation response (code %s)", "7596 - Non-portable portable response without errors", "7597 - %s: Unrecognized error code: %s", "7598 - Invalid Request", "7599 - Fatal Error in Processing", "7600 - External telephone number(s) cannot be used: %s", "7601 - Immediate is not allowed outside the business hours.", "7602 - Requested FOC date must be between %s and %s", "7603 - The requested time %s is outside business hours. FOC time must be within processing hours of %s and %s Eastern Time", "7604 - Activation can only be triggered between the hours of %s and %s on the actual FOC date: %s.", "7605 - Activation must be scheduled between the hours of %s and %s on the actual FOC date: %s.", "7606 - Order must be in FOC state to be scheduled for activation.", "7607 - Unable to sumbit portTN request to Level3.", "7608 - The requested time can not be updated for non triggered portin order.", "7609 - The telephone number(s) belongs to unsupported losing carrier.", "7610 - PIN does not match the Passcodes on the telephone numbers being ported out.", "7400", "7401", "7401", "7401", "7402", "7402", "7402", "7402", "7402", "7402", "7403", "7404", "7405", "7406", "7406", "7407", "7407", "7407", "7407", "7408", "7409", "7409", "7409", "7409", "7409", "7410", "7410", "7411", "7412", "7412", "7412", "7412", "7412", "7413", "7414", "7415", "7415", "7416", "7416", "7416", "7417", "7417", "7417", "7418", "7419", "7419", "7419", "7420", "7421", "7421", "7422", "7423", "7424", "7424", "7425", "7426", "7427", "7428", "7429", "7429", "7429", "7429", "7430", "7431", "7432", "7433", "7434", "7434", "7434", "7434", "7434", "7435", "7435", "7435", "7435", "7435", "7435", "7436", "7437", "7437", "7438", "7439", "7440", "7441", "7442", "7443", "7444", "7445", "7445", "7446", "7446", "7447", "7448", "7449", "7450", "7451", "7452", "7453", "7454", "7455", "7456", "7460", "7461", "7462", "7463", "7464", "7465", "7466", "7467", "7470", "7471", "7473", "7473", "7484", "7485", "7800 - Document name too long, max 50 characters", "7999 - An internal error has occurred. Please contact support if this issue is not resolved in 1 business day" ]
          }
        }
      },
      "FileMetaDataPayload" : {
        "type" : "object",
        "properties" : {
          "documentName" : {
            "type" : "string",
            "xml" : {
              "name" : "DocumentName"
            }
          },
          "documentType" : {
            "type" : "string",
            "xml" : {
              "name" : "DocumentType"
            },
            "enum" : [ "LOA", "INVOICE", "CSR", "OTHER" ]
          }
        },
        "xml" : {
          "name" : "FileMetaData"
        }
      },
      "BasicAuthenticationCredentials" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "xml" : {
              "name" : "Username"
            }
          },
          "password" : {
            "type" : "string",
            "xml" : {
              "name" : "Password"
            }
          }
        },
        "xml" : {
          "name" : "BasicAuthentication"
        }
      },
      "CallbackCredentials" : {
        "type" : "object",
        "properties" : {
          "basicAuthenticationCredentials" : {
            "$ref" : "#/components/schemas/BasicAuthenticationCredentials",
            "xml" : {
              "name" : "BasicAuthentication"
            }
          },
          "publicKey" : {
            "type" : "string",
            "xml" : {
              "name" : "PublicKey"
            }
          }
        },
        "xml" : {
          "name" : "CallbackCredentials"
        }
      },
      "CallbackSubscription" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "xml" : {
              "name" : "URL"
            }
          },
          "expiry" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "Expiry"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            }
          },
          "callbackCredentials" : {
            "$ref" : "#/components/schemas/CallbackCredentials",
            "xml" : {
              "name" : "CallbackCredentials"
            }
          }
        },
        "xml" : {
          "name" : "CallbackSubscription"
        }
      },
      "EmailSubscription" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "xml" : {
              "name" : "Email"
            }
          },
          "digestRequested" : {
            "type" : "string",
            "xml" : {
              "name" : "DigestRequested"
            },
            "enum" : [ "none", "daily" ]
          }
        },
        "xml" : {
          "name" : "EmailSubscription"
        }
      },
      "Subscription" : {
        "type" : "object",
        "properties" : {
          "subscriptionId" : {
            "type" : "string",
            "xml" : {
              "name" : "SubscriptionId"
            }
          },
          "orderTypeValue" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderType"
            }
          },
          "orderId" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "subscriptionEventTypeValue" : {
            "type" : "string",
            "xml" : {
              "name" : "EventType"
            }
          },
          "emailSubscription" : {
            "$ref" : "#/components/schemas/EmailSubscription",
            "xml" : {
              "name" : "EmailSubscription"
            }
          },
          "callbackSubscription" : {
            "$ref" : "#/components/schemas/CallbackSubscription",
            "xml" : {
              "name" : "CallbackSubscription"
            }
          }
        },
        "xml" : {
          "name" : "Subscription"
        }
      },
      "SubscriptionResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Subscription",
            "xml" : {
              "name" : "Subscription"
            }
          }
        },
        "xml" : {
          "name" : "SubscriptionResponse"
        }
      },
      "SubscriptionsResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "SubscriptionsResponse"
        }
      },
      "ImportAvailableNumberOrder" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "orderType" : {
            "$ref" : "#/components/schemas/ImportAvailableNumberOrderType"
          }
        },
        "xml" : {
          "name" : "ImportAvailableNumberOrder"
        }
      },
      "ImportAvailableNumberOrderType" : {
        "type" : "object",
        "properties" : {
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumberList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "vendorName" : {
            "type" : "string",
            "xml" : {
              "name" : "VendorName"
            }
          },
          "accountProfileName" : {
            "type" : "string",
            "xml" : {
              "name" : "AccountProfile"
            }
          },
          "gatewayProfileName" : {
            "type" : "string",
            "xml" : {
              "name" : "GatewayProfile"
            }
          },
          "elementProfileName" : {
            "type" : "string",
            "xml" : {
              "name" : "ElementProfile"
            }
          }
        },
        "xml" : {
          "name" : "ImportAvailableNumberOrderType"
        }
      },
      "DisconnectTelephoneNumberOrder" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "orderType" : {
            "$ref" : "#/components/schemas/DisconnectTelephoneNumberOrderType",
            "xml" : {
              "name" : "DisconnectTelephoneNumberOrderType"
            }
          }
        },
        "xml" : {
          "name" : "DisconnectTelephoneNumberOrder"
        }
      },
      "DisconnectTelephoneNumberOrderType" : {
        "type" : "object",
        "properties" : {
          "telephoneNumbers" : {
            "type" : "array",
            "properties" : {
              "allShortCode" : {
                "type" : "boolean"
              },
              "anyNanp" : {
                "type" : "boolean"
              },
              "anyShortCode" : {
                "type" : "boolean"
              },
              "allNanp" : {
                "type" : "boolean"
              },
              "allInternational" : {
                "type" : "boolean"
              },
              "anyInternational" : {
                "type" : "boolean"
              },
              "allNanpNumbers" : {
                "type" : "array",
                "properties" : {
                  "allShortCode" : {
                    "type" : "boolean"
                  },
                  "anyNanp" : {
                    "type" : "boolean"
                  },
                  "anyShortCode" : {
                    "type" : "boolean"
                  },
                  "allNanp" : {
                    "type" : "boolean"
                  },
                  "allInternational" : {
                    "type" : "boolean"
                  },
                  "anyInternational" : {
                    "type" : "boolean"
                  },
                  "empty" : {
                    "type" : "boolean"
                  }
                },
                "items" : {
                  "$ref" : "#/components/schemas/TelephoneNumber"
                }
              },
              "allInternationalNumbers" : {
                "type" : "array",
                "properties" : {
                  "allShortCode" : {
                    "type" : "boolean"
                  },
                  "anyNanp" : {
                    "type" : "boolean"
                  },
                  "anyShortCode" : {
                    "type" : "boolean"
                  },
                  "allNanp" : {
                    "type" : "boolean"
                  },
                  "allInternational" : {
                    "type" : "boolean"
                  },
                  "anyInternational" : {
                    "type" : "boolean"
                  },
                  "empty" : {
                    "type" : "boolean"
                  }
                },
                "items" : {
                  "$ref" : "#/components/schemas/TelephoneNumber"
                }
              },
              "allShortCodes" : {
                "type" : "array",
                "properties" : {
                  "allShortCode" : {
                    "type" : "boolean"
                  },
                  "anyNanp" : {
                    "type" : "boolean"
                  },
                  "anyShortCode" : {
                    "type" : "boolean"
                  },
                  "allNanp" : {
                    "type" : "boolean"
                  },
                  "allInternational" : {
                    "type" : "boolean"
                  },
                  "anyInternational" : {
                    "type" : "boolean"
                  },
                  "empty" : {
                    "type" : "boolean"
                  }
                },
                "items" : {
                  "$ref" : "#/components/schemas/TelephoneNumber"
                }
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TelephoneNumberList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumber"
            }
          },
          "disconnectMode" : {
            "type" : "string",
            "xml" : {
              "name" : "DisconnectMode"
            }
          },
          "protectedAttribute" : {
            "type" : "string",
            "xml" : {
              "name" : "Protected"
            }
          }
        },
        "xml" : {
          "name" : "DisconnectTelephoneNumberOrderType"
        }
      },
      "AdminParametersPayload" : {
        "type" : "object",
        "properties" : {
          "activityState" : {
            "type" : "string",
            "xml" : {
              "name" : "ActivityState"
            }
          },
          "bandwidthPrime" : {
            "type" : "string",
            "xml" : {
              "name" : "BandwidthPrime"
            }
          }
        },
        "xml" : {
          "name" : "AdminParameters"
        }
      },
      "AdminParametersResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/AdminParametersPayload",
            "xml" : {
              "name" : "AdminParameters"
            }
          }
        },
        "xml" : {
          "name" : "AdminParametersResponse"
        }
      },
      "LineOption" : {
        "type" : "object",
        "properties" : {
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "numberFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "NumberFormat"
            }
          },
          "rpidFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "RPIDFormat"
            }
          },
          "rewriteUser" : {
            "type" : "string",
            "xml" : {
              "name" : "RewriteUser"
            }
          },
          "callForward" : {
            "type" : "string",
            "xml" : {
              "name" : "CallForward"
            }
          },
          "cnamLookup" : {
            "type" : "string",
            "xml" : {
              "name" : "CallingNameDisplay"
            }
          },
          "protect" : {
            "type" : "string",
            "xml" : {
              "name" : "Protected"
            }
          },
          "sms" : {
            "type" : "string",
            "xml" : {
              "name" : "Sms"
            }
          }
        },
        "xml" : {
          "name" : "TnLineOptions"
        }
      },
      "LineOptionOrderPayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "lineOptions" : {
            "type" : "array",
            "xml" : {
              "name" : "TnLineOptions"
            },
            "items" : {
              "$ref" : "#/components/schemas/LineOption"
            }
          },
          "completedNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "CompletedNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LineOptionTelephoneNumberError"
            }
          },
          "warnings" : {
            "type" : "array",
            "xml" : {
              "name" : "Warnings",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LineOptionOrderWarningPayload"
            }
          }
        },
        "xml" : {
          "name" : "LineOptionOrder"
        }
      },
      "LineOptionOrderResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/LineOptionOrderPayload",
            "xml" : {
              "name" : "LineOptions"
            }
          }
        },
        "xml" : {
          "name" : "LineOptionOrderResponse"
        }
      },
      "LineOptionOrderWarningPayload" : {
        "type" : "object",
        "properties" : {
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "Warning"
        }
      },
      "LineOptionTelephoneNumberError" : {
        "type" : "object",
        "properties" : {
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ErrorCode"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "Error"
        }
      },
      "AreaCodeSearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "npa" : {
            "type" : "string",
            "xml" : {
              "name" : "AreaCode"
            }
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          }
        },
        "xml" : {
          "name" : "AreaCodeSearchAndOrderType"
        }
      },
      "BaseOrderType" : {
        "type" : "object",
        "xml" : {
          "name" : "BaseOrderType"
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExistingTelephoneNumberOrderType"
        }, {
          "$ref" : "#/components/schemas/RateCenterSearchAndOrderType"
        }, {
          "$ref" : "#/components/schemas/AreaCodeSearchAndOrderType"
        }, {
          "$ref" : "#/components/schemas/NPANXXSearchAndOrderType"
        }, {
          "$ref" : "#/components/schemas/TollFreeWildCharSearchAndOrderType"
        }, {
          "$ref" : "#/components/schemas/TollFreeVanitySearchAndOrderType"
        }, {
          "$ref" : "#/components/schemas/LATASearchAndOrderType"
        }, {
          "$ref" : "#/components/schemas/ZIPSearchAndOrderType"
        }, {
          "$ref" : "#/components/schemas/CitySearchAndOrderType"
        }, {
          "$ref" : "#/components/schemas/StateSearchAndOrderType"
        }, {
          "$ref" : "#/components/schemas/CombinedSearchAndOrderType"
        } ]
      },
      "CitySearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          }
        },
        "xml" : {
          "name" : "CitySearchAndOrderType"
        }
      },
      "CombinedSearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "npa" : {
            "type" : "string",
            "xml" : {
              "name" : "AreaCode"
            }
          },
          "npaNxx" : {
            "type" : "string",
            "xml" : {
              "name" : "NpaNxx"
            }
          },
          "npaNxxBlock" : {
            "type" : "string",
            "xml" : {
              "name" : "NpaNxxX"
            }
          },
          "rateCenterAbbreviation" : {
            "type" : "string",
            "xml" : {
              "name" : "RateCenter"
            }
          },
          "lata" : {
            "type" : "string",
            "xml" : {
              "name" : "LATA"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "zip" : {
            "type" : "string",
            "xml" : {
              "name" : "Zip"
            }
          },
          "localVanity" : {
            "type" : "string",
            "xml" : {
              "name" : "LocalVanity"
            }
          },
          "endsIn" : {
            "type" : "boolean",
            "xml" : {
              "name" : "EndsIn"
            }
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          }
        },
        "xml" : {
          "name" : "CombinedSearchAndOrderType"
        }
      },
      "ExistingTelephoneNumberOrderType" : {
        "type" : "object",
        "properties" : {
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumberList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "reservationIds" : {
            "type" : "array",
            "xml" : {
              "name" : "ReservationIdList",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "ReservationId"
              }
            }
          }
        },
        "xml" : {
          "name" : "ExistingTelephoneNumberOrderType"
        }
      },
      "LATASearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          },
          "lata" : {
            "type" : "string",
            "xml" : {
              "name" : "LATA"
            }
          }
        },
        "xml" : {
          "name" : "LATASearchAndOrderType"
        }
      },
      "NPANXXSearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "npaNxx" : {
            "type" : "string",
            "xml" : {
              "name" : "NpaNxx"
            }
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          }
        },
        "xml" : {
          "name" : "NPANXXSearchAndOrderType"
        }
      },
      "Order" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "orderType" : {
            "$ref" : "#/components/schemas/BaseOrderType"
          },
          "partialAllowed" : {
            "type" : "boolean",
            "xml" : {
              "name" : "PartialAllowed"
            }
          },
          "backOrderRequested" : {
            "type" : "boolean",
            "xml" : {
              "name" : "BackOrderRequested"
            }
          },
          "closeOrder" : {
            "type" : "boolean",
            "xml" : {
              "name" : "CloseOrder"
            }
          },
          "tnAttributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TnAttributes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          }
        },
        "xml" : {
          "name" : "Order"
        }
      },
      "RateCenterSearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "rateCenterAbbreviation" : {
            "type" : "string",
            "xml" : {
              "name" : "RateCenter"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          }
        },
        "xml" : {
          "name" : "RateCenterSearchAndOrderType"
        }
      },
      "StateSearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          }
        },
        "xml" : {
          "name" : "StateSearchAndOrderType"
        }
      },
      "TollFreeVanitySearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "vanity" : {
            "type" : "string",
            "xml" : {
              "name" : "TollFreeVanity"
            }
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          }
        },
        "xml" : {
          "name" : "TollFreeVanitySearchAndOrderType"
        }
      },
      "TollFreeWildCharSearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "tollFreeWildCardPattern" : {
            "type" : "string",
            "xml" : {
              "name" : "TollFreeWildCardPattern"
            }
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          }
        },
        "xml" : {
          "name" : "TollFreeWildCharSearchAndOrderType"
        }
      },
      "ZIPSearchAndOrderType" : {
        "type" : "object",
        "properties" : {
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          },
          "zip" : {
            "type" : "string",
            "xml" : {
              "name" : "Zip"
            }
          }
        },
        "xml" : {
          "name" : "ZIPSearchAndOrderType"
        }
      },
      "NotesResponse" : {
        "type" : "object",
        "properties" : {
          "notes" : {
            "type" : "array",
            "xml" : {
              "name" : "Note"
            },
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          }
        },
        "xml" : {
          "name" : "Notes"
        }
      },
      "NoteResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Note",
            "xml" : {
              "name" : "Note"
            }
          }
        },
        "xml" : {
          "name" : "NoteResponse"
        }
      },
      "Reservation" : {
        "type" : "object",
        "properties" : {
          "reservationId" : {
            "type" : "string",
            "xml" : {
              "name" : "ReservationId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "reservationExpires" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "ReservationExpires"
            }
          },
          "reservedTn" : {
            "$ref" : "#/components/schemas/TelephoneNumber",
            "xml" : {
              "name" : "ReservedTn"
            }
          }
        },
        "xml" : {
          "name" : "Reservation"
        }
      },
      "Reservations" : {
        "type" : "object",
        "properties" : {
          "reservations" : {
            "type" : "array",
            "xml" : {
              "name" : "Reservation"
            },
            "items" : {
              "$ref" : "#/components/schemas/Reservation"
            }
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Count"
            }
          }
        },
        "xml" : {
          "name" : "Reservations"
        }
      },
      "ReservationsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Reservations",
            "xml" : {
              "name" : "Reservations"
            }
          }
        },
        "xml" : {
          "name" : "ReservationsResponse"
        }
      },
      "ReservationResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Reservation",
            "xml" : {
              "name" : "Reservation"
            }
          }
        },
        "xml" : {
          "name" : "ReservationResponse"
        }
      },
      "Region" : {
        "required" : [ "abbreviation" ],
        "type" : "object",
        "properties" : {
          "abbreviation" : {
            "type" : "string",
            "xml" : {
              "name" : "Abbreviation"
            }
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Region"
        }
      },
      "RegionsResponse" : {
        "type" : "object",
        "properties" : {
          "regions" : {
            "type" : "array",
            "xml" : {
              "name" : "Region"
            },
            "items" : {
              "$ref" : "#/components/schemas/Region"
            }
          }
        },
        "xml" : {
          "name" : "RegionsResponse"
        }
      },
      "RemoveImportedTnOrdersPayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "RECEIVED", "PROCESSING", "COMPLETE", "PARTIAL", "FAILED" ]
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "Errors",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberGroupError"
            }
          },
          "sipPeerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SipPeerId"
            }
          }
        },
        "xml" : {
          "name" : "RemoveImportedTnOrder"
        }
      },
      "EnumParameterAllowedValue" : {
        "type" : "object",
        "properties" : {
          "internalName" : {
            "type" : "string",
            "xml" : {
              "name" : "InternalName"
            }
          },
          "displayName" : {
            "type" : "string",
            "xml" : {
              "name" : "DisplayName"
            }
          },
          "reportParameterId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "displayIndex" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "Value"
        }
      },
      "Report" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Id"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "jasperUri" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperUri"
            }
          },
          "scope" : {
            "type" : "string",
            "xml" : {
              "name" : "Scope"
            }
          },
          "displayPriority" : {
            "type" : "string",
            "xml" : {
              "name" : "DisplayPriority"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "parameters" : {
            "type" : "array",
            "xml" : {
              "name" : "Parameters",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ReportParameter"
            }
          }
        },
        "xml" : {
          "name" : "Report"
        }
      },
      "ReportParameter" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "Type"
            }
          },
          "listType" : {
            "type" : "string",
            "xml" : {
              "name" : "ListType"
            }
          },
          "multiSelectAllowed" : {
            "type" : "string",
            "xml" : {
              "name" : "MultiSelectAllowed"
            }
          },
          "required" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Required"
            }
          },
          "valueFilter" : {
            "type" : "string",
            "xml" : {
              "name" : "ValueFilter"
            }
          },
          "jasperId" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperId"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "enumParameterAllowedValues" : {
            "type" : "array",
            "xml" : {
              "name" : "Values",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/EnumParameterAllowedValue"
            }
          },
          "recommendedValue" : {
            "type" : "string",
            "xml" : {
              "name" : "RecommendedValue"
            }
          },
          "helpInformation" : {
            "type" : "string",
            "xml" : {
              "name" : "HelpInformation"
            }
          }
        },
        "xml" : {
          "name" : "Parameter"
        }
      },
      "ReportResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/Report",
            "xml" : {
              "name" : "Report"
            }
          }
        },
        "xml" : {
          "name" : "ReportResponse"
        }
      },
      "Reports" : {
        "type" : "object",
        "properties" : {
          "Reports" : {
            "type" : "array",
            "xml" : {
              "name" : "Report"
            },
            "items" : {
              "$ref" : "#/components/schemas/Report"
            }
          }
        },
        "xml" : {
          "name" : "Reports"
        }
      },
      "ReportsResponse" : {
        "type" : "object",
        "properties" : {
          "reports" : {
            "$ref" : "#/components/schemas/Reports",
            "xml" : {
              "name" : "Reports"
            }
          }
        },
        "xml" : {
          "name" : "ReportsResponse"
        }
      },
      "ReportInstance" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Id"
            }
          },
          "reportId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ReportId"
            }
          },
          "jasperId" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperId"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "jasperExportId" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperExportId"
            }
          },
          "jasperHost" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperHost"
            }
          },
          "jasperSessionId" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperSessionId"
            }
          },
          "reportName" : {
            "type" : "string",
            "xml" : {
              "name" : "ReportName"
            }
          },
          "outputFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "OutputFormat"
            }
          },
          "pages" : {
            "type" : "string",
            "xml" : {
              "name" : "Pages"
            }
          },
          "status" : {
            "type" : "string",
            "xml" : {
              "name" : "Status"
            }
          },
          "jasperOutputFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperOutputFormat"
            }
          },
          "requestedByUserName" : {
            "type" : "string",
            "xml" : {
              "name" : "RequestedByUserName"
            }
          },
          "requestedForAccountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "RequestedForAccountId"
            }
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "RequestedAt"
            }
          },
          "expiresAtStr" : {
            "type" : "string",
            "writeOnly" : true,
            "xml" : {
              "name" : "ExpiresAt"
            }
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time",
            "xml" : {
              "name" : "CompletedAt"
            }
          },
          "parameterValues" : {
            "type" : "array",
            "xml" : {
              "name" : "Parameters",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ReportParameterValue"
            }
          },
          "errorDetails" : {
            "$ref" : "#/components/schemas/ReportInstanceErrorDetails",
            "xml" : {
              "name" : "ErrorDetails"
            }
          },
          "jasperReportStatusDisplay" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperReportStatus"
            }
          },
          "jasperExportStatusDisplay" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperExportStatus"
            }
          }
        },
        "xml" : {
          "name" : "Instance"
        }
      },
      "ReportInstanceErrorDetails" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "message" : {
            "type" : "string",
            "xml" : {
              "name" : "Message"
            }
          }
        },
        "xml" : {
          "name" : "ErrorDetails"
        }
      },
      "ReportInstanceResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/ReportInstance",
            "xml" : {
              "name" : "Instance"
            }
          }
        },
        "xml" : {
          "name" : "ReportInstanceResponse"
        }
      },
      "ReportParameterValue" : {
        "type" : "object",
        "properties" : {
          "parameterName" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "jasperParameterId" : {
            "type" : "string",
            "xml" : {
              "name" : "JasperParameterId"
            }
          },
          "values" : {
            "type" : "array",
            "xml" : {
              "name" : "Value"
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Value"
              }
            }
          }
        },
        "xml" : {
          "name" : "ParameterValue"
        }
      },
      "ReportInstances" : {
        "type" : "object",
        "xml" : {
          "name" : "Instances"
        }
      },
      "ReportInstancesResponse" : {
        "type" : "object",
        "properties" : {
          "reportInstances" : {
            "$ref" : "#/components/schemas/ReportInstances",
            "xml" : {
              "name" : "Instances"
            }
          }
        },
        "xml" : {
          "name" : "ReportInstancesResponse"
        }
      },
      "ReportInstanceFileResponse" : {
        "type" : "object",
        "xml" : {
          "name" : "ReportInstanceFileResponse"
        }
      },
      "SearchError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "errorDescription" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "errorType" : {
            "$ref" : "#/components/schemas/IrisStatusType"
          }
        },
        "xml" : {
          "name" : "SearchError"
        }
      },
      "SearchResult" : {
        "type" : "object",
        "properties" : {
          "searchError" : {
            "$ref" : "#/components/schemas/SearchError",
            "xml" : {
              "name" : "Error"
            }
          },
          "resultSize" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ResultCount"
            }
          },
          "status" : {
            "$ref" : "#/components/schemas/IrisStatus"
          },
          "TelephoneNumberList" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "TelephoneNumberDetailList" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberDetail"
            }
          }
        },
        "xml" : {
          "name" : "SearchResult"
        }
      },
      "ResultItemForAvailableNpaNxx" : {
        "type" : "object",
        "properties" : {
          "npa" : {
            "type" : "string",
            "xml" : {
              "name" : "Npa"
            }
          },
          "nxx" : {
            "type" : "string",
            "xml" : {
              "name" : "Nxx"
            }
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Quantity"
            }
          },
          "city" : {
            "type" : "string",
            "xml" : {
              "name" : "City"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          }
        },
        "xml" : {
          "name" : "ResultItemForAvailableNpaNxx"
        }
      },
      "SearchResultForAvailableNpaNxx" : {
        "type" : "object",
        "properties" : {
          "searchError" : {
            "$ref" : "#/components/schemas/SearchError",
            "xml" : {
              "name" : "Error"
            }
          },
          "resultSet" : {
            "type" : "array",
            "xml" : {
              "name" : "AvailableNpaNxxList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ResultItemForAvailableNpaNxx"
            }
          },
          "status" : {
            "$ref" : "#/components/schemas/IrisStatus"
          }
        },
        "xml" : {
          "name" : "SearchResultForAvailableNpaNxx"
        }
      },
      "RateCenterSearchResult" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "abbreviation" : {
            "type" : "string",
            "xml" : {
              "name" : "Abbreviation"
            }
          },
          "availableTelephoneNumberCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AvailableTelephoneNumberCount"
            }
          }
        },
        "xml" : {
          "name" : "RateCenter"
        }
      },
      "RateCenterSearchResults" : {
        "type" : "object",
        "properties" : {
          "searchError" : {
            "$ref" : "#/components/schemas/SearchError",
            "xml" : {
              "name" : "Error"
            }
          },
          "resultSet" : {
            "type" : "array",
            "xml" : {
              "name" : "RateCenters",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RateCenterSearchResult"
            }
          },
          "resultSize" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ResultCount"
            }
          },
          "status" : {
            "$ref" : "#/components/schemas/IrisStatus"
          },
          "TelephoneNumberList" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "TelephoneNumberDetailList" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberDetail"
            }
          }
        },
        "xml" : {
          "name" : "RateCenterResponse"
        }
      },
      "CitySearchResult" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "abbreviation" : {
            "type" : "string",
            "xml" : {
              "name" : "RcAbbreviation"
            }
          },
          "availableTelephoneNumberCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AvailableTelephoneNumberCount"
            }
          }
        },
        "xml" : {
          "name" : "City"
        }
      },
      "CitySearchResults" : {
        "type" : "object",
        "properties" : {
          "searchError" : {
            "$ref" : "#/components/schemas/SearchError",
            "xml" : {
              "name" : "Error"
            }
          },
          "resultSet" : {
            "type" : "array",
            "xml" : {
              "name" : "Cities",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/CitySearchResult"
            }
          },
          "resultSize" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ResultCount"
            }
          },
          "status" : {
            "$ref" : "#/components/schemas/IrisStatus"
          },
          "TelephoneNumberList" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          },
          "TelephoneNumberDetailList" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberDetail"
            }
          }
        },
        "xml" : {
          "name" : "CityResponse"
        }
      },
      "CoveredRateCenter" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Id"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "abbreviation" : {
            "type" : "string",
            "xml" : {
              "name" : "Abbreviation"
            }
          },
          "state" : {
            "type" : "string",
            "xml" : {
              "name" : "State"
            }
          },
          "lata" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Lata"
            }
          },
          "availableNumberCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AvailableNumberCount"
            }
          },
          "limitedAvailableNumberCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "LimitedAvailableNumberCount"
            }
          },
          "ZipCodes" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "ZipCode"
              }
            }
          },
          "Cities" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "City"
              }
            }
          },
          "Vendors" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Vendor"
              }
            }
          },
          "Tiers" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "format" : "byte",
              "xml" : {
                "name" : "Tier"
              }
            }
          },
          "NpaNxxXs" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "NpaNxxX"
              }
            }
          },
          "Npas" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Npa"
              }
            }
          },
          "LocalRateCenterIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "xml" : {
              "name" : "LocalRateCenters",
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "xml" : {
                "name" : "RateCenterId"
              }
            }
          }
        },
        "xml" : {
          "name" : "CoveredRateCenter"
        }
      },
      "CoveredRateCenterSearchResponse" : {
        "type" : "object",
        "properties" : {
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TotalCount"
            }
          },
          "CoveredRateCenters" : {
            "type" : "array",
            "xml" : {
              "name" : "CoveredRateCenter"
            },
            "items" : {
              "$ref" : "#/components/schemas/CoveredRateCenter"
            }
          }
        },
        "xml" : {
          "name" : "CoveredRateCenters"
        }
      },
      "SipPeerProducts" : {
        "type" : "object",
        "properties" : {
          "products" : {
            "type" : "array",
            "xml" : {
              "name" : "Product"
            },
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          }
        },
        "xml" : {
          "name" : "Products"
        }
      },
      "SipPeerProductsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerProducts",
            "xml" : {
              "name" : "Products"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerProductResponse"
        }
      },
      "SipPeerEdgeManagementProduct" : {
        "type" : "object",
        "properties" : {
          "sbcConfiguration" : {
            "$ref" : "#/components/schemas/SbcConfigurationPayload",
            "xml" : {
              "name" : "EdgeManagementSettings"
            }
          }
        },
        "xml" : {
          "name" : "EdgeManagementProduct"
        }
      },
      "SipPeerEdgeManagementProductResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerEdgeManagementProduct",
            "xml" : {
              "name" : "EdgeManagementProduct"
            }
          }
        },
        "xml" : {
          "name" : "EdgeManagementResponse"
        }
      },
      "SipPeerMessagingSettings" : {
        "type" : "object",
        "properties" : {
          "breakoutCountries" : {
            "type" : "array",
            "xml" : {
              "name" : "BreakOutCountries",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Country"
              }
            }
          }
        },
        "xml" : {
          "name" : "SipPeerMessagingSettings"
        }
      },
      "SipPeerMessagingSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerMessagingSettings",
            "xml" : {
              "name" : "SipPeerMessagingSettings"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerMessagingSettingsResponse"
        }
      },
      "SipPeerSmsFeature" : {
        "type" : "object",
        "properties" : {
          "sipPeerSmsFeatureSettings" : {
            "$ref" : "#/components/schemas/SipPeerSmsFeatureSettings",
            "xml" : {
              "name" : "SipPeerSmsFeatureSettings"
            }
          },
          "smsHosts" : {
            "type" : "array",
            "xml" : {
              "name" : "SmppHosts",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SmsHost"
            }
          },
          "smsHttpSettings" : {
            "$ref" : "#/components/schemas/SmsHttpSettings",
            "xml" : {
              "name" : "HttpSettings"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerSmsFeature"
        }
      },
      "SipPeerSmsFeatureResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerSmsFeature",
            "xml" : {
              "name" : "SipPeerSmsFeature"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerSmsFeatureResponse"
        }
      },
      "SipPeerSmsFeatureSettings" : {
        "type" : "object",
        "properties" : {
          "tollFree" : {
            "type" : "boolean",
            "xml" : {
              "name" : "TollFree"
            }
          },
          "shortCode" : {
            "type" : "boolean",
            "xml" : {
              "name" : "ShortCode"
            }
          },
          "a2pLongCode" : {
            "type" : "string",
            "xml" : {
              "name" : "A2pLongCode"
            },
            "enum" : [ "ON", "OFF", "DEFAULT_ON", "DEFAULT_OFF", "INCORRECT_VALUE" ]
          },
          "a2pMessageClass" : {
            "type" : "string",
            "xml" : {
              "name" : "A2pMessageClass"
            }
          },
          "a2pCampaignId" : {
            "type" : "string",
            "xml" : {
              "name" : "A2pCampaignId"
            }
          },
          "protocol" : {
            "type" : "string",
            "xml" : {
              "name" : "Protocol"
            },
            "enum" : [ "SIP", "SMPP", "HTTP" ]
          },
          "zone1" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone1"
            }
          },
          "zone2" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone2"
            }
          },
          "zone3" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone3"
            }
          },
          "zone4" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone4"
            }
          },
          "zone5" : {
            "type" : "boolean",
            "xml" : {
              "name" : "Zone5"
            }
          }
        },
        "xml" : {
          "name" : "SmsSettings"
        }
      },
      "SmsHost" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "xml" : {
              "name" : "HostName"
            }
          },
          "port" : {
            "type" : "string",
            "xml" : {
              "name" : "Port"
            }
          },
          "hostId" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "HostId"
            }
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Priority"
            }
          },
          "username" : {
            "type" : "string",
            "xml" : {
              "name" : "Username"
            }
          },
          "password" : {
            "type" : "string",
            "xml" : {
              "name" : "Password"
            }
          },
          "connectionType" : {
            "type" : "string",
            "xml" : {
              "name" : "ConnectionType"
            },
            "enum" : [ "TRANSCEIVER", "SENDER_ONLY", "RECEIVER_ONLY" ]
          }
        },
        "xml" : {
          "name" : "SmsHost"
        }
      },
      "SmsHttpSettings" : {
        "type" : "object",
        "properties" : {
          "proxyPeerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ProxyPeerId"
            }
          }
        },
        "xml" : {
          "name" : "HttpSettings"
        }
      },
      "MmsFeatureMmsSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/MmsSettings",
            "xml" : {
              "name" : "MmsSettings"
            }
          }
        },
        "xml" : {
          "name" : "MmsFeatureMmsSettingsResponse"
        }
      },
      "MmsSettings" : {
        "type" : "object",
        "properties" : {
          "protocol" : {
            "type" : "string",
            "xml" : {
              "name" : "Protocol"
            },
            "enum" : [ "MM4", "HTTP" ]
          }
        },
        "xml" : {
          "name" : "MmsSettings"
        }
      },
      "MmsFeatureResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerMmsFeature",
            "xml" : {
              "name" : "MmsFeature"
            }
          }
        },
        "xml" : {
          "name" : "MmsFeatureResponse"
        }
      },
      "MmsHttpProtocol" : {
        "type" : "object",
        "properties" : {
          "httpSettings" : {
            "$ref" : "#/components/schemas/MmsHttpSettings",
            "xml" : {
              "name" : "HttpSettings"
            }
          }
        },
        "xml" : {
          "name" : "HTTP"
        }
      },
      "MmsHttpSettings" : {
        "type" : "object",
        "properties" : {
          "proxyPeerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "ProxyPeerId"
            }
          }
        },
        "xml" : {
          "name" : "HttpSettings"
        }
      },
      "MmsMM4OrigHost" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "xml" : {
              "name" : "HostName"
            }
          },
          "port" : {
            "type" : "string",
            "xml" : {
              "name" : "Port"
            }
          },
          "hostId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "HostId"
            }
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Priority"
            }
          }
        },
        "xml" : {
          "name" : "origHost"
        }
      },
      "MmsMM4OrigHosts" : {
        "type" : "object",
        "properties" : {
          "hosts" : {
            "type" : "array",
            "xml" : {
              "name" : "OrigHosts",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MmsMM4OrigHost"
            }
          }
        },
        "xml" : {
          "name" : "MmsMM4OrigHosts"
        }
      },
      "MmsMM4Protocol" : {
        "type" : "object",
        "properties" : {
          "tls" : {
            "type" : "string",
            "xml" : {
              "name" : "Tls"
            }
          },
          "termHosts" : {
            "$ref" : "#/components/schemas/MmsMM4TermHosts",
            "xml" : {
              "name" : "MmsMM4TermHosts"
            }
          },
          "origHosts" : {
            "$ref" : "#/components/schemas/MmsMM4OrigHosts",
            "xml" : {
              "name" : "MmsMM4OrigHosts"
            }
          }
        },
        "xml" : {
          "name" : "Mm4Hosts"
        }
      },
      "MmsMM4TermHost" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "xml" : {
              "name" : "HostName"
            }
          },
          "port" : {
            "type" : "string",
            "xml" : {
              "name" : "Port"
            }
          },
          "hostId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "HostId"
            }
          }
        },
        "xml" : {
          "name" : "TermHost"
        }
      },
      "MmsMM4TermHosts" : {
        "type" : "object",
        "properties" : {
          "hosts" : {
            "type" : "array",
            "xml" : {
              "name" : "TermHosts",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MmsMM4TermHost"
            }
          }
        },
        "xml" : {
          "name" : "MmsMM4TermHosts"
        }
      },
      "MmsProtocols" : {
        "type" : "object",
        "properties" : {
          "mm4Protocol" : {
            "$ref" : "#/components/schemas/MmsMM4Protocol",
            "xml" : {
              "name" : "MM4"
            }
          },
          "httpProtocol" : {
            "$ref" : "#/components/schemas/MmsHttpProtocol",
            "xml" : {
              "name" : "HTTP"
            }
          }
        },
        "xml" : {
          "name" : "Protocols"
        }
      },
      "SipPeerMmsFeature" : {
        "type" : "object",
        "properties" : {
          "mmsSettings" : {
            "$ref" : "#/components/schemas/MmsSettings",
            "xml" : {
              "name" : "MmsSettings"
            }
          },
          "protocols" : {
            "$ref" : "#/components/schemas/MmsProtocols",
            "xml" : {
              "name" : "Protocols"
            }
          }
        },
        "xml" : {
          "name" : "MmsFeature"
        }
      },
      "SmsHosts" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/SmsHost"
        }
      },
      "SmsSmppHostsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "SmsHosts",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SmsHost"
            }
          }
        },
        "xml" : {
          "name" : "SmsSmppHostsResponse"
        }
      },
      "ApplicationsSettings" : {
        "type" : "object",
        "properties" : {
          "application" : {
            "type" : "string",
            "xml" : {
              "name" : "HttpMessagingV2AppId"
            }
          }
        },
        "xml" : {
          "name" : "ApplicationsSettings"
        }
      },
      "SipPeerHttpSettings" : {
        "type" : "object",
        "properties" : {
          "applicationId" : {
            "type" : "string",
            "xml" : {
              "name" : "HttpVoiceV2AppId"
            }
          }
        },
        "xml" : {
          "name" : "HttpSettings"
        }
      },
      "SipPeerOriginationSettings" : {
        "type" : "object",
        "properties" : {
          "httpSettings" : {
            "$ref" : "#/components/schemas/SipPeerHttpSettings",
            "xml" : {
              "name" : "HttpSettings"
            }
          },
          "voiceProtocol" : {
            "type" : "string",
            "xml" : {
              "name" : "VoiceProtocol"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerOriginationSettings"
        }
      },
      "SipPeerOriginationSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerOriginationSettings",
            "xml" : {
              "name" : "SipPeerOriginationSettings"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerOriginationSettingsResponse"
        }
      },
      "SipPeerGatewayIp" : {
        "type" : "object",
        "properties" : {
          "hostName" : {
            "type" : "string",
            "xml" : {
              "name" : "HostName"
            }
          },
          "port" : {
            "type" : "string",
            "xml" : {
              "name" : "Port"
            }
          },
          "gatewayId" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "id"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerGatewayIp"
        }
      },
      "SipPeerGatewayIps" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/SipPeerGatewayIp"
        }
      },
      "SipPeerTerminationProducts" : {
        "type" : "object",
        "properties" : {
          "terminationSettings" : {
            "$ref" : "#/components/schemas/SipPeerTerminationSettings",
            "xml" : {
              "name" : "TerminationSettings"
            }
          },
          "sipPeerGatewayIps" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationHosts",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SipPeerGatewayIp"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTerminationProducts"
        }
      },
      "SipPeerTerminationProductsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerTerminationProducts",
            "xml" : {
              "name" : "TerminationProduct"
            }
          }
        },
        "xml" : {
          "name" : "TerminationResponse"
        }
      },
      "SipPeerTerminationSettings" : {
        "type" : "object",
        "properties" : {
          "httpSettings" : {
            "$ref" : "#/components/schemas/SipPeerHttpSettings",
            "xml" : {
              "name" : "HttpSettings"
            }
          },
          "voiceProtocol" : {
            "type" : "string",
            "xml" : {
              "name" : "VoiceProtocol"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTerminationSettings"
        }
      },
      "SipPeerGatewayIpsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationHost"
            },
            "items" : {
              "$ref" : "#/components/schemas/SipPeerGatewayIp"
            }
          }
        },
        "xml" : {
          "name" : "TerminationHosts"
        }
      },
      "SipPeerGatewayIpResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerGatewayIp",
            "xml" : {
              "name" : "TerminationHost"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerGatewayIpResponse"
        }
      },
      "SipPeerGatewayAttributes" : {
        "type" : "object",
        "properties" : {
          "gatewayId" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "GatewayId"
            }
          },
          "attributes" : {
            "type" : "array",
            "xml" : {
              "name" : "GatewayAttributes",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationAttribute"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerGatewayIps"
        }
      },
      "SipPeerGatewayAttributesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerGatewayAttributes",
            "xml" : {
              "name" : "SipPeerGatewayAttributes"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerGatewayAttributesResponse"
        }
      },
      "SipPeerGatewayAttribute" : {
        "type" : "object",
        "properties" : {
          "gatewayId" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "name" : "GatewayId"
            }
          },
          "attribute" : {
            "$ref" : "#/components/schemas/TerminationAttribute",
            "xml" : {
              "name" : "GatewayAttribute"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerGatewayAttribute"
        }
      },
      "SipPeerGatewayAttributeResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerGatewayAttribute",
            "xml" : {
              "name" : "SipPeerGatewayAttribute"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerGatewayAttributeResponse"
        }
      },
      "SipPeerTerminationSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerTerminationSettings",
            "xml" : {
              "name" : "SipPeerTerminationSettings"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTerminationSettingsResponse"
        }
      },
      "TnSipPeer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "peerName" : {
            "type" : "string",
            "xml" : {
              "name" : "PeerName"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "defaultPeer" : {
            "type" : "boolean",
            "xml" : {
              "name" : "IsDefaultPeer"
            }
          },
          "destinationUri" : {
            "type" : "string",
            "xml" : {
              "name" : "FinalDestinationUri"
            }
          },
          "voiceHosts" : {
            "$ref" : "#/components/schemas/Hosts",
            "xml" : {
              "name" : "VoiceHosts"
            }
          },
          "voiceHostGroups" : {
            "type" : "array",
            "xml" : {
              "name" : "VoiceHostGroups",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Hosts"
            }
          },
          "terminationHosts" : {
            "$ref" : "#/components/schemas/SipPeerTerminationHosts",
            "xml" : {
              "name" : "TerminationHosts"
            }
          },
          "productTypes" : {
            "type" : "array",
            "xml" : {
              "name" : "Products",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "Product"
              },
              "enum" : [ "Origination", "Termination", "MESSAGING", "E911", "TollFree", "UcTrunking", "EdgeManagement", "CORE", "Iris", "NumberManagement", "Analytics" ]
            }
          },
          "address" : {
            "$ref" : "#/components/schemas/Address",
            "xml" : {
              "name" : "Address"
            }
          },
          "premiseTrunks" : {
            "type" : "string",
            "xml" : {
              "name" : "PremiseTrunks"
            }
          },
          "callingName" : {
            "$ref" : "#/components/schemas/SipPeerLineOptionDto",
            "xml" : {
              "name" : "CallingName"
            }
          },
          "suggestedAddresses" : {
            "type" : "array",
            "xml" : {
              "name" : "SuggestedAddresses",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Address"
            }
          },
          "tnCount" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "TnCount"
            }
          }
        },
        "xml" : {
          "name" : "SipPeer"
        }
      },
      "TnSipPeerResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TnSipPeer",
            "xml" : {
              "name" : "SipPeer"
            }
          },
          "addressErrorDescription" : {
            "$ref" : "#/components/schemas/AddressErrorDescription",
            "xml" : {
              "name" : "AddressErrorDescription"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerResponse"
        }
      },
      "SipPeersResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeers",
            "xml" : {
              "name" : "SipPeers"
            }
          }
        },
        "xml" : {
          "name" : "TNSipPeersResponse"
        }
      },
      "SipPeerTelephoneNumberBulk" : {
        "type" : "object",
        "properties" : {
          "telephoneNumbers" : {
            "type" : "array",
            "properties" : {
              "allShortCode" : {
                "type" : "boolean"
              },
              "anyNanp" : {
                "type" : "boolean"
              },
              "anyShortCode" : {
                "type" : "boolean"
              },
              "allNanp" : {
                "type" : "boolean"
              },
              "allInternational" : {
                "type" : "boolean"
              },
              "anyInternational" : {
                "type" : "boolean"
              },
              "allNanpNumbers" : {
                "type" : "array",
                "properties" : {
                  "allShortCode" : {
                    "type" : "boolean"
                  },
                  "anyNanp" : {
                    "type" : "boolean"
                  },
                  "anyShortCode" : {
                    "type" : "boolean"
                  },
                  "allNanp" : {
                    "type" : "boolean"
                  },
                  "allInternational" : {
                    "type" : "boolean"
                  },
                  "anyInternational" : {
                    "type" : "boolean"
                  },
                  "empty" : {
                    "type" : "boolean"
                  }
                },
                "items" : {
                  "$ref" : "#/components/schemas/TelephoneNumber"
                }
              },
              "allInternationalNumbers" : {
                "type" : "array",
                "properties" : {
                  "allShortCode" : {
                    "type" : "boolean"
                  },
                  "anyNanp" : {
                    "type" : "boolean"
                  },
                  "anyShortCode" : {
                    "type" : "boolean"
                  },
                  "allNanp" : {
                    "type" : "boolean"
                  },
                  "allInternational" : {
                    "type" : "boolean"
                  },
                  "anyInternational" : {
                    "type" : "boolean"
                  },
                  "empty" : {
                    "type" : "boolean"
                  }
                },
                "items" : {
                  "$ref" : "#/components/schemas/TelephoneNumber"
                }
              },
              "allShortCodes" : {
                "type" : "array",
                "properties" : {
                  "allShortCode" : {
                    "type" : "boolean"
                  },
                  "anyNanp" : {
                    "type" : "boolean"
                  },
                  "anyShortCode" : {
                    "type" : "boolean"
                  },
                  "allNanp" : {
                    "type" : "boolean"
                  },
                  "allInternational" : {
                    "type" : "boolean"
                  },
                  "anyInternational" : {
                    "type" : "boolean"
                  },
                  "empty" : {
                    "type" : "boolean"
                  }
                },
                "items" : {
                  "$ref" : "#/components/schemas/TelephoneNumber"
                }
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "FullNumber"
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumber"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTelephoneNumbers"
        }
      },
      "SipPeerTelephoneNumberBulkResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerTelephoneNumberBulk",
            "xml" : {
              "name" : "SipPeerTelephoneNumberMove"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTelephoneNumberMoveResponse"
        }
      },
      "SipPeerTelephoneNumber" : {
        "type" : "object",
        "properties" : {
          "fullNumber" : {
            "$ref" : "#/components/schemas/TelephoneNumber",
            "xml" : {
              "name" : "FullNumber"
            }
          },
          "numberFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "NumberFormat"
            }
          },
          "rpidFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "RPIDFormat"
            }
          },
          "rewriteUser" : {
            "type" : "string",
            "xml" : {
              "name" : "RewriteUser"
            }
          },
          "callForward" : {
            "$ref" : "#/components/schemas/TelephoneNumber",
            "xml" : {
              "name" : "CallForward"
            }
          },
          "finalDestinationUri" : {
            "type" : "string",
            "xml" : {
              "name" : "FinalDestinationURI"
            }
          },
          "cnamLookup" : {
            "type" : "string",
            "xml" : {
              "name" : "CallingNameDisplay"
            }
          },
          "tnAttributes" : {
            "type" : "array",
            "xml" : {
              "name" : "TnAttributes",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TnAttribute"
              }
            }
          },
          "messagingSettings" : {
            "$ref" : "#/components/schemas/MessagingSettings",
            "xml" : {
              "name" : "MessagingSettings"
            }
          },
          "portOutPasscode" : {
            "type" : "string",
            "xml" : {
              "name" : "PortOutPasscode"
            }
          },
          "routePlanId" : {
            "type" : "string",
            "xml" : {
              "name" : "RoutePlanId"
            }
          },
          "warnings" : {
            "type" : "array",
            "xml" : {
              "name" : "Warnings",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SipPeerTelephoneNumberWarningPayload"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTelephoneNumber"
        }
      },
      "SipPeerTelephoneNumberWarningPayload" : {
        "type" : "object",
        "properties" : {
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "Warning"
        }
      },
      "SipPeerTelephoneNumbers" : {
        "type" : "object",
        "properties" : {
          "sipPeerTelephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "SipPeerTelephoneNumber"
            },
            "items" : {
              "$ref" : "#/components/schemas/SipPeerTelephoneNumber"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTelephoneNumbers"
        }
      },
      "SipPeerTelephoneNumbersResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerTelephoneNumbers",
            "xml" : {
              "name" : "SipPeerTelephoneNumbers"
            }
          },
          "paginationLinks" : {
            "$ref" : "#/components/schemas/PaginationLinks",
            "xml" : {
              "name" : "Links"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTelephoneNumbersResponse"
        }
      },
      "SipPeerTelephoneNumberResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/SipPeerTelephoneNumber",
            "xml" : {
              "name" : "SipPeerTelephoneNumber"
            }
          }
        },
        "xml" : {
          "name" : "SipPeerTelephoneNumberResponse"
        }
      },
      "TerminationProductsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationProducts",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationProduct"
            }
          }
        },
        "xml" : {
          "name" : "TerminationProductsResponse"
        }
      },
      "TerminationGateway" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lcrId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "core2Id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "core2ProfileId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "host" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attributes" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationAttributes",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationAttribute"
            }
          }
        },
        "xml" : {
          "name" : "TerminationGateway"
        }
      },
      "TerminationGatewayAttributesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationGateway",
            "xml" : {
              "name" : "TerminationGateway"
            }
          }
        },
        "xml" : {
          "name" : "TerminationGatewayAttributesResponse"
        }
      },
      "TerminationGatewayAttributeResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationGateway",
            "xml" : {
              "name" : "TerminationGateway"
            }
          }
        },
        "xml" : {
          "name" : "TerminationGatewayAttributeResponse"
        }
      },
      "TerminationCarrier" : {
        "type" : "object",
        "properties" : {
          "carriername" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "profileId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "gatewayId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "carrierId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "maskPosition" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "TerminationCarrier"
        }
      },
      "TerminationCarriersResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationCarriers",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationCarrier"
            }
          }
        },
        "xml" : {
          "name" : "TerminationCarriersResponse"
        }
      },
      "TerminationListTerminationCarrier" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationCarrier"
        }
      },
      "TerminationAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "externalAccountId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lcrId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "core2Id" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "xml" : {
          "name" : "TerminationAccount"
        }
      },
      "TerminationListTerminationAccount" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationAccount"
        }
      },
      "TerminationAccountResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationAccount",
            "xml" : {
              "name" : "TerminationAccount"
            }
          }
        },
        "xml" : {
          "name" : "TerminationAccountResponse"
        }
      },
      "TerminationProductAttributesResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationProduct",
            "xml" : {
              "name" : "TerminationProduct"
            }
          }
        },
        "xml" : {
          "name" : "TerminationProductAttributesResponse"
        }
      },
      "TerminationProductAttributeResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationProduct",
            "xml" : {
              "name" : "TerminationProduct"
            }
          }
        },
        "xml" : {
          "name" : "TerminationProductAttributeResponse"
        }
      },
      "RateDeckFailedEntry" : {
        "type" : "object",
        "properties" : {
          "entryRow" : {
            "type" : "integer",
            "format" : "int32"
          },
          "entryStringValue" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "TerminationRateDeckMetadata" : {
        "type" : "object",
        "properties" : {
          "rogerDeckId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "deckType" : {
            "type" : "string",
            "enum" : [ "NPANXX", "LATAOCN" ]
          },
          "rows" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fileName" : {
            "type" : "string"
          },
          "failedEntries" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RateDeckFailedEntry"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckMetadata"
        }
      },
      "TerminationRateDeckMetadataResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationRateDeckMetadata",
            "xml" : {
              "name" : "TerminationRateDeckMetadata"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckMetadataResponse"
        }
      },
      "TerminationListTerminationRateDeckMetadata" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationRateDeckMetadata"
        }
      },
      "TerminationRateDeckMetadataByTypeResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "terminationRateDeckMetadatas",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationRateDeckMetadata"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckMetadataByTypeResponse"
        }
      },
      "TerminationRateDeckMetadatasResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "terminationRateDeckMetadatas",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationRateDeckMetadata"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckMetadatasResponse"
        }
      },
      "TerminationRateDeck" : {
        "type" : "object",
        "properties" : {
          "deckByteBuffer" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "deckFileType" : {
            "type" : "string",
            "enum" : [ "CSV", "XLS" ]
          }
        },
        "xml" : {
          "name" : "TerminationRateDeck"
        }
      },
      "TerminationRateDeckResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationRateDeckWrapper",
            "xml" : {
              "name" : "TerminationRateDeckWrapper"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckResponse"
        }
      },
      "TerminationRateDeckWrapper" : {
        "type" : "object",
        "properties" : {
          "rateDeck" : {
            "$ref" : "#/components/schemas/TerminationRateDeck",
            "xml" : {
              "name" : "TerminationRateDeck"
            }
          },
          "metadata" : {
            "$ref" : "#/components/schemas/TerminationRateDeckMetadata",
            "xml" : {
              "name" : "TerminationRateDeckResponse"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckWrapper"
        }
      },
      "TerminationRateDeckAssignmentUtilityResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationRateDeckAssignment",
            "xml" : {
              "name" : "TerminationRateDeckAssignment"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckAssignmentUtilityResponse"
        }
      },
      "TerminationRateDeckAssignmentsUtilityResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationRateDeckAssignment"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRateDeckAssignmentsUtilityResponse"
        }
      },
      "TerminationAttributeMetadata" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "validationType" : {
            "type" : "string",
            "enum" : [ "REGEX", "LIST", "MASK", "GENERIC" ]
          },
          "attributeProvisionTypes" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "attributeProvisionType"
              },
              "enum" : [ "ACCOUNT", "ELEMENT", "GATEWAY", "MTAP", "MTEP", "MOAP", "MOEP" ]
            }
          },
          "origin" : {
            "type" : "string",
            "enum" : [ "CORE2", "LCR", "BILLING" ]
          },
          "repeatable" : {
            "type" : "boolean"
          },
          "values" : {
            "type" : "array",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "value"
              }
            }
          }
        },
        "xml" : {
          "name" : "TerminationAttributeMetadata"
        }
      },
      "TerminationAttributeMetadatasResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationAttributeMetadatas",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationAttributeMetadata"
            }
          }
        },
        "xml" : {
          "name" : "TerminationAttributeMetadatasResponse"
        }
      },
      "TerminationListTerminationAttributeMetadata" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationAttributeMetadata"
        }
      },
      "TerminationAttributeMetadataByOriginResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationAttributeMetadatas",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationAttributeMetadata"
            }
          }
        },
        "xml" : {
          "name" : "TerminationAttributeMetadataByOriginResponse"
        }
      },
      "TerminationAttributeMetadataByNameResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationAttributeMetadata",
            "xml" : {
              "name" : "TerminationAttributeMetadata"
            }
          }
        },
        "xml" : {
          "name" : "TerminationAttributeMetadataByNameResponse"
        }
      },
      "TerminationAttributeMetadataResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationAttributeMetadata",
            "xml" : {
              "name" : "TerminationAttributeMetadata"
            }
          }
        },
        "xml" : {
          "name" : "TerminationAttributeMetadataResponse"
        }
      },
      "NpaNxxCarrierMask" : {
        "type" : "object",
        "properties" : {
          "npaNxx" : {
            "type" : "string"
          },
          "carrierMask" : {
            "type" : "string"
          }
        }
      },
      "PrefixCarrierMask" : {
        "type" : "object",
        "properties" : {
          "prefix" : {
            "type" : "string"
          },
          "carrierMask" : {
            "type" : "string"
          }
        }
      },
      "TerminationCarrierMask" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "carrierMaskType" : {
            "type" : "string",
            "enum" : [ "NPANXX", "GLOBAL", "INTERNATIONAL" ]
          },
          "prefixCarrierMasks" : {
            "type" : "array",
            "xml" : {
              "name" : "PrefixCarrierMasks",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PrefixCarrierMask"
            }
          },
          "npaNxxCarrierMasks" : {
            "type" : "array",
            "xml" : {
              "name" : "NpaNxxCarrierMasks",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/NpaNxxCarrierMask"
            }
          },
          "globalCarrierMask" : {
            "type" : "string"
          },
          "userType" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "TerminationCarrierMask"
        }
      },
      "TerminationCarrierMasksResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationCarrierMasks",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationCarrierMask"
            }
          }
        },
        "xml" : {
          "name" : "TerminationCarrierMasksResponse"
        }
      },
      "TerminationListTerminationCarrierMask" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationCarrierMask"
        }
      },
      "TerminationCarrierMaskResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationCarrierMask",
            "xml" : {
              "name" : "TerminationCarrierMask"
            }
          }
        },
        "xml" : {
          "name" : "TerminationCarrierMaskResponse"
        }
      },
      "TerminationCarrierMaskMetadatasResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationCarrierMasks",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationCarrierMask"
            }
          }
        },
        "xml" : {
          "name" : "TerminationCarrierMaskMetadatasResponse"
        }
      },
      "TerminationCarrierMaskMetadataResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationCarrierMask",
            "xml" : {
              "name" : "TerminationCarrierMask"
            }
          }
        },
        "xml" : {
          "name" : "TerminationCarrierMaskMetadataResponse"
        }
      },
      "TerminationCarrierMaskMetadataSearchResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationCarrierMasks"
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationCarrierMask"
            }
          }
        },
        "xml" : {
          "name" : "TerminationCarrierMaskMetadataSearchResponse"
        }
      },
      "CarrierMaskFile" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "carrierMaskName" : {
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          },
          "fileBytes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "xml" : {
                "name" : "fileBytes"
              }
            }
          },
          "carrierMaskType" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "CarrierMaskFile"
        }
      },
      "CarrierMaskFileResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/CarrierMaskFile",
            "xml" : {
              "name" : "CarrierMaskFile"
            }
          }
        },
        "xml" : {
          "name" : "CarrierMaskFileResponse"
        }
      },
      "RoutingExceptionPrefix" : {
        "type" : "object",
        "properties" : {
          "routingExceptionType" : {
            "type" : "string",
            "enum" : [ "BLOCK" ]
          },
          "prefix" : {
            "type" : "string"
          }
        }
      },
      "TerminationListTerminationRoutingException" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationRoutingException"
        }
      },
      "TerminationRoutingException" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "routingExceptionName" : {
            "type" : "string"
          },
          "routingExceptions" : {
            "type" : "array",
            "xml" : {
              "name" : "RoutingExceptionPrefixes",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RoutingExceptionPrefix"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRoutingException"
        }
      },
      "TerminationRoutingExceptionsResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationRoutingExceptions",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationRoutingException"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRoutingExceptionsResponse"
        }
      },
      "TerminationRoutingExceptionResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationRoutingException",
            "xml" : {
              "name" : "TerminationRoutingException"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRoutingExceptionResponse"
        }
      },
      "TerminationRoutingExceptionFile" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "routingExceptionName" : {
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          },
          "fileBytes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "xml" : {
                "name" : "fileBytes"
              }
            }
          }
        },
        "xml" : {
          "name" : "TerminationRoutingExceptionFile"
        }
      },
      "TerminationRoutingExceptionFileResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationRoutingExceptionFile",
            "xml" : {
              "name" : "TerminationRoutingExceptionFile"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRoutingExceptionFileResponse"
        }
      },
      "TerminationRoutingExceptionsMetadataResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationRoutingExceptions",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationRoutingException"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRoutingExceptionsMetadataResponse"
        }
      },
      "TerminationRoutingExceptionMetadataResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationRoutingException",
            "xml" : {
              "name" : "TerminationRoutingException"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRoutingExceptionMetadataResponse"
        }
      },
      "TerminationRoutingExceptionsMetadataByNameResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationRoutingExceptions",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationRoutingException"
            }
          }
        },
        "xml" : {
          "name" : "TerminationRoutingExceptionsMetadataByNameResponse"
        }
      },
      "TerminationGatewayResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TerminationGateway",
            "xml" : {
              "name" : "TerminationGateway"
            }
          }
        },
        "xml" : {
          "name" : "TerminationGatewayResponse"
        }
      },
      "TerminationGatewaysResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "xml" : {
              "name" : "TerminationGateways",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TerminationGateway"
            }
          }
        },
        "xml" : {
          "name" : "TerminationGatewaysResponse"
        }
      },
      "TerminationListTerminationGateway" : {
        "type" : "array",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "items" : {
          "$ref" : "#/components/schemas/TerminationGateway"
        }
      },
      "A2pSettings" : {
        "type" : "object",
        "properties" : {
          "messageClass" : {
            "type" : "string",
            "xml" : {
              "name" : "MessageClass"
            }
          },
          "campaignId" : {
            "type" : "string",
            "xml" : {
              "name" : "CampaignId"
            }
          },
          "action" : {
            "type" : "string",
            "xml" : {
              "name" : "Action"
            },
            "enum" : [ "UNCHANGED", "SYSTEM_DEFAULT", "OFF", "AS_SPECIFIED", "INCORRECT_VALUE" ]
          }
        },
        "xml" : {
          "name" : "A2pSettings"
        }
      },
      "TnOptionGroup" : {
        "type" : "object",
        "properties" : {
          "numberFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "NumberFormat"
            }
          },
          "rpidFormat" : {
            "type" : "string",
            "xml" : {
              "name" : "RPIDFormat"
            }
          },
          "rewriteUser" : {
            "type" : "string",
            "xml" : {
              "name" : "RewriteUser"
            }
          },
          "callForward" : {
            "type" : "string",
            "xml" : {
              "name" : "CallForward"
            }
          },
          "cnamLookup" : {
            "type" : "string",
            "xml" : {
              "name" : "CallingNameDisplay"
            }
          },
          "portOutPasscode" : {
            "type" : "string",
            "xml" : {
              "name" : "PortOutPasscode"
            }
          },
          "protect" : {
            "type" : "string",
            "xml" : {
              "name" : "Protected"
            }
          },
          "sms" : {
            "type" : "string",
            "xml" : {
              "name" : "Sms"
            }
          },
          "finalDestinationUri" : {
            "type" : "string",
            "xml" : {
              "name" : "FinalDestinationURI"
            }
          },
          "a2pSettings" : {
            "$ref" : "#/components/schemas/A2pSettings",
            "xml" : {
              "name" : "A2pSettings"
            }
          },
          "nnid" : {
            "type" : "string",
            "xml" : {
              "name" : "NNID"
            }
          },
          "espid" : {
            "type" : "string",
            "xml" : {
              "name" : "ESPID"
            }
          },
          "originationRoutePlan" : {
            "$ref" : "#/components/schemas/OriginationRoutePlan",
            "xml" : {
              "name" : "OriginationRoutePlan"
            }
          },
          "groupNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "xml" : {
                "name" : "TelephoneNumber"
              }
            }
          }
        },
        "xml" : {
          "name" : "TnOptionGroup"
        }
      },
      "TnOptionOrderError" : {
        "type" : "object",
        "properties" : {
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "Code"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          },
          "telephoneNumbers" : {
            "type" : "array",
            "xml" : {
              "name" : "TelephoneNumbers",
              "wrapped" : true
            },
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "Error"
        }
      },
      "TnOptionOrderPayload" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderId"
            }
          },
          "accountId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "AccountId"
            }
          },
          "name" : {
            "type" : "string",
            "xml" : {
              "name" : "Name"
            }
          },
          "lastModifiedDateInUtc" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedDate"
            }
          },
          "lastModifiedBy" : {
            "type" : "string",
            "xml" : {
              "name" : "LastModifiedBy"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "customerOrderId" : {
            "type" : "string",
            "xml" : {
              "name" : "CustomerOrderId"
            }
          },
          "siteId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "SiteId"
            }
          },
          "peerId" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "PeerId"
            }
          },
          "orderCreateDate" : {
            "type" : "string",
            "xml" : {
              "name" : "OrderCreateDate"
            }
          },
          "processingStatus" : {
            "type" : "string",
            "xml" : {
              "name" : "ProcessingStatus"
            },
            "enum" : [ "RECEIVED", "PROCESSING", "COMPLETE", "PARTIAL", "FAILED" ]
          },
          "tnOptionGroups" : {
            "type" : "array",
            "xml" : {
              "name" : "TnOptionGroups",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TnOptionGroup"
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TnOptionOrderError"
            }
          },
          "warnings" : {
            "type" : "array",
            "xml" : {
              "name" : "Warnings",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TnOptionOrderWarningPayload"
            }
          }
        },
        "xml" : {
          "name" : "TnOptionOrder"
        }
      },
      "TnOptionOrderWarningPayload" : {
        "type" : "object",
        "properties" : {
          "telephoneNumber" : {
            "type" : "string",
            "xml" : {
              "name" : "TelephoneNumber"
            }
          },
          "description" : {
            "type" : "string",
            "xml" : {
              "name" : "Description"
            }
          }
        },
        "xml" : {
          "name" : "Warning"
        }
      },
      "TnsReprovisioningDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "completedQuantity" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "name" : "CompletedQuantity"
            }
          },
          "createdByUser" : {
            "type" : "string",
            "xml" : {
              "name" : "CreatedByUser"
            }
          },
          "errors" : {
            "type" : "array",
            "xml" : {
              "name" : "ErrorList",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/TelephoneNumberGroupError"
            }
          },
          "reprovisionedTns" : {
            "$ref" : "#/components/schemas/TelephoneNumbers",
            "xml" : {
              "name" : "CompletedNumbers"
            }
          },
          "new" : {
            "type" : "boolean"
          }
        },
        "xml" : {
          "name" : "ReprovisionTnsResponse"
        }
      },
      "TnsReprovisioningResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "$ref" : "#/components/schemas/TnsReprovisioningDto",
            "xml" : {
              "name" : "ReprovisionTnsResponse"
            }
          }
        },
        "xml" : {
          "name" : "ReprovisionTnsResponse"
        }
      }
    },
    "securitySchemes" : {
      "httpBasic" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}