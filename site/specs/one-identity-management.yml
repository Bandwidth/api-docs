openapi: 3.0.3
info:
  title: Identity Management
  description: Bandwidth Identity API
  contact:
    name: Bandwidth
  version: 4.1.2
  termsOfService: https://www.bandwidth.com/legal/terms-of-use-bandwidthcom-web-sites/
servers:
  - url: https://management.id.bandwidth.com
tags:
  - name: Identity Provider Management
paths:
  /idps:
    get:
      tags:
        - Identity Provider Management
      summary: List IdPs
      description: Returns all the IdPs that the requesting user has access to.
      operationId: getIdps
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/active'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/getIdpsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
    post:
      tags:
        - Identity Provider Management
      summary: Create IdP
      description: Creates a new IdP.
      operationId: postIdps
      requestBody:
        $ref: '#/components/requestBodies/createIdpRequest'
      responses:
        '201':
          $ref: '#/components/responses/createdIdpResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
  /idps/{idpId}:
    put:
      tags:
        - Identity Provider Management
      summary: Replace IdP
      description: Modifies an IdP.
      operationId: putIdp
      parameters:
        - $ref: '#/components/parameters/idpId'
      requestBody:
        $ref: '#/components/requestBodies/updateIdpRequest'
      responses:
        '200':
          $ref: '#/components/responses/putIdpsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '409':
          $ref: '#/components/responses/conflictResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
    get:
      tags:
        - Identity Provider Management
      summary: Get IdP
      description: Returns the IdP with the given id.
      operationId: getIdp
      parameters:
        - $ref: '#/components/parameters/idpId'
      responses:
        '200':
          $ref: '#/components/responses/getIdpResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
    delete:
      tags:
        - Identity Provider Management
      summary: Delete IdP
      description: Deletes the IdP with the given id.
      operationId: deleteIdp
      parameters:
        - $ref: '#/components/parameters/idpId'
      responses:
        '204':
          $ref: '#/components/responses/deleteIdpResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '409':
          $ref: '#/components/responses/conflictResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
components:
  parameters:
    limit:
      in: query
      name: limit
      description: The maximum records requested in search result.
      schema:
        type: integer
        format: int32
        default: 20
        minimum: 1
      example: 50
    offset:
      in: query
      name: offset
      description: >-
        The amount of records to skip in search result. Combine with limit to
        fetch results one page at a time.
      schema:
        type: integer
      example: 50
    active:
      in: query
      name: active
      description: >-
        Set this to true to find only active IdPs. Or false to find only
        inactive ones.
      schema:
        type: boolean
      example: true
    accountId:
      in: query
      name: accountId
      description: >-
        The accountId associated with a specific IdP. If you have access to
        multiple accounts with their own IdPs, use this filter to narrow the
        results down to just a particular account or accounts (can be specified
        multiple times).
      schema:
        type: string
      example: '9999999'
    idpId:
      name: idpId
      in: path
      description: The IdP id.
      required: true
      schema:
        type: string
        format: uuid
        pattern: >-
          ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89AB][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$
  requestBodies:
    createIdpRequest:
      description: Create Idp request body.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/newIdP'
      required: true
    updateIdpRequest:
      description: Update Idp request body.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateIdP'
      required: true
  responses:
    createdIdpResponse:
      description: Created.
      headers:
        Location:
          description: The URL of the created resource.
          content:
            text/plain:
              schema:
                type: string
                description: The URL of the created resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/idpResponse'
    deleteIdpResponse:
      description: No Content
    getIdpResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/idpResponse'
    getIdpsResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listIdpResponse'
    putIdpsResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/idpResponse'
    badRequestResponse:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            badRequestResponseExample:
              $ref: '#/components/examples/badRequestResponse'
    conflictResponse:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            conflictResponseExample:
              $ref: '#/components/examples/conflictResponse'
    forbiddenResponse:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            forbiddenResponseExample:
              $ref: '#/components/examples/forbiddenResponse'
    internalErrorResponse:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            internalErrorResponseExample:
              $ref: '#/components/examples/internalErrorResponse'
    methodNotAllowedResponse:
      description: Method Not Allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            methodNotAllowedResponseExample:
              $ref: '#/components/examples/methodNotAllowedResponse'
    notFoundResponse:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            notFoundResponseExample:
              $ref: '#/components/examples/notFoundResponse'
    tooManyRequestsResponse:
      description: Too Many Requests
    unauthorizedResponse:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            unauthorizedResponseExample:
              $ref: '#/components/examples/unauthorizedResponse'
  schemas:
    idpResponse:
      required:
        - links
        - data
        - errors
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          example: []
        data:
          $ref: '#/components/schemas/idP'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/error'
          example: []
    listIdpResponse:
      required:
        - links
        - data
        - errors
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          example: []
        data:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/idP'
            totalCount:
              type: integer
              description: The total number of IdPs found with the specified filters
              format: int32
              example: 0
        errors:
          type: array
          items:
            $ref: '#/components/schemas/error'
          example: []
    errorResponse:
      required:
        - links
        - data
        - errors
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          example: []
        data:
          type: object
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/error'
          example: []
    newSamlIdp:
      title: NewSAMLIdP
      required:
        - accountIds
        - active
        - issuerUri
        - singleSignOnUrl
        - name
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/protocol'
        name:
          $ref: '#/components/schemas/name'
        accountIds:
          $ref: '#/components/schemas/accountIds'
        active:
          $ref: '#/components/schemas/active'
        usernameField:
          $ref: '#/components/schemas/usernameField'
        issuerUri:
          $ref: '#/components/schemas/issuerUri'
        singleSignOnUrl:
          $ref: '#/components/schemas/singleSignOnUrl'
        signatureCertificate:
          $ref: '#/components/schemas/signatureCertificate'
    updateSamlIdp:
      title: UpdateSAMLIdP
      required:
        - accountIds
        - active
        - issuerUri
        - singleSignOnUrl
        - signatureCertificate
        - name
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/protocol'
        name:
          $ref: '#/components/schemas/name'
        accountIds:
          $ref: '#/components/schemas/accountIds'
        active:
          $ref: '#/components/schemas/active'
        usernameField:
          $ref: '#/components/schemas/usernameField'
        issuerUri:
          $ref: '#/components/schemas/issuerUri'
        singleSignOnUrl:
          $ref: '#/components/schemas/singleSignOnUrl'
        signatureCertificate:
          $ref: '#/components/schemas/signatureCertificate'
    samlIdp:
      title: SAMLIdP
      required:
        - accountIds
        - active
        - id
        - entityId
        - acsUrl
        - name
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/accountIds'
        active:
          $ref: '#/components/schemas/active'
        id:
          type: string
          description: The identifier for this Identity Provider.
          example: 12345678-abcd-47e9-8fab-87654321cbab
          format: uuid
          pattern: >-
            ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89AB][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$
        name:
          $ref: '#/components/schemas/name'
        entityId:
          type: string
          description: >-
            The IdP entity id. This should be used as input to configure the
            source provider.
          example: https://youridentityprovider.com/saml2/idp-provider/123456abcd
        acsUrl:
          type: string
          description: >-
            The SAML Assertion Consumer Service URL. This should be used as
            input to configure the source provider.
          example: https://login.bandwidth.com/sso/saml2/12345678abcdef
        usernameField:
          $ref: '#/components/schemas/usernameField'
        issuerUri:
          $ref: '#/components/schemas/issuerUri'
        singleSignOnUrl:
          $ref: '#/components/schemas/singleSignOnUrl'
        signatureCertificate:
          $ref: '#/components/schemas/signatureCertificate'
    active:
      title: active
      type: boolean
      description: >-
        Whether this IdP is active or not. Only one IdP can be active for a
        given accountId.
      example: false
    usernameField:
      title: usernameField
      type: string
      description: The field in the SAML assertion that contains the username
      example: user1
    issuerUri:
      title: issuerUri
      type: string
      format: uri
      description: >-
        URI of the Identity Provider. This value is usually the SAML Metadata
        EntityID of the IdP EntityDescriptor.
      example: https://your.provider.com/
    singleSignOnUrl:
      title: singleSignOnUrl
      type: string
      format: uri
      description: >-
        The binding-specific IdP Authentication Request Protocol endpoint that
        receives SAML AuthnRequest messages. This must be a valid RFC 3986
        value.
      example: https://login.example.com/
    signatureCertificate:
      title: signatureCertificate
      type: string
      minLength: 1
      maxLength: 2147483647
      description: >-
        The PEM or DER encoded public key certificate of the Identity Provider
        used to verify SAML message and assertion signatures.
      example: >-
        MIIF1DCCA7wCCQDUe/gZ7Z9qrTANBgkqhkiG9w0BAQsFADCBqzELMAkGA1UEBhMCVVMxFzAVB......
    accountIds:
      title: accountIds
      type: array
      description: Array of Bandwidth account ids that will use this Identity Provider.
      example:
        - 123456
        - 654321
    protocol:
      title: protocol
      enum:
        - SAML2
      type: string
      description: >-
        The protocol used by this Identity Provider. Only SAML2 is supported for
        now.
      example: SAML2
    name:
      title: name
      type: string
      description: >-
        A short description to uniquely identify an Identity Provider
        configuration. Max 40 characters
      example: IDP for Developers
    link:
      title: link
      type: object
    error:
      title: error
      type: object
      properties:
        type:
          type: string
          description: A short human-readable summary of the problem encountered
          example: Error
        description:
          type: string
          description: >-
            A human-readable detailed description that SHOULD be specific to the
            problem encountered
          example: There was a problem with your request. Please try again
        code:
          type: string
          description: An Identity Management API specific error code
          example: E0001
        source:
          type: object
          description: Information about the source of the error
          example: {}
    idP:
      title: IdP
      type: object
      oneOf:
        - $ref: '#/components/schemas/samlIdp'
      discriminator:
        propertyName: protocol
        mapping:
          SAML2: '#/components/schemas/samlIdp'
    newIdP:
      title: NewIdP
      oneOf:
        - $ref: '#/components/schemas/newSamlIdp'
      discriminator:
        propertyName: protocol
        mapping:
          SAML2: '#/components/schemas/newSamlIdp'
    updateIdP:
      title: UpdateIdP
      oneOf:
        - $ref: '#/components/schemas/updateSamlIdp'
      discriminator:
        propertyName: protocol
        mapping:
          SAML2: '#/components/schemas/updateSamlIdp'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
    basicAuth:
      type: http
      scheme: basic
  examples:
    badRequestResponse:
      value:
        links: []
        data: null
        errors:
          - type: Validation
            description: >-
              failed to validate input: provided SignatureCertificate has
              expired
            code: E0001
            source: {}
    conflictResponse:
      value:
        links: []
        data: null
        errors:
          - type: Conflict
            description: invalid account(s) provided
            code: E0002
            source: {}
    forbiddenResponse:
      value:
        links: []
        data: null
        errors:
          - type: Error
            description: ''
            code: ''
            source: {}
    internalErrorResponse:
      value:
        links: []
        data: null
        errors:
          - type: Internal Error
            description: An error occurred. Please refresh and try again.
            code: E0003
            source: {}
    methodNotAllowedResponse:
      value:
        links: []
        data: null
        errors:
          - type: Error
            description: the HTTP method used is not supported by this resource
            code: E0004
            source: {}
    notFoundResponse:
      value:
        links: []
        data: null
        errors:
          - type: Error
            description: the specified resource could not be found.
            code: E0005
            source: {}
    unauthorizedResponse:
      value:
        links: []
        data: null
        errors:
          - type: Authorization
            description: Invalid credentials
            code: E0006
            source: {}
security:
  - basicAuth: []
  - bearerAuth: []
