openapi: 3.0.3
info:
  title: Identity Management
  description: Bandwidth Identity API
  contact: {}
  version: 1.1.0-alpha
  x-server-configuration:
    default-environment: Production
    default-server: Production
    environments:
      - name: Production
      - name: Custom
        servers:
          - name: default
            url: '{base_url}'
    parameters:
      - name: base_url
        description: ''
        type: string
        example: https://www.example.com
paths:
  /idps:
    get:
      tags:
        - Identity Provider Management
      summary: getIdps
      description: Returns all the IdPs that the requesting user has access to.
      operationId: getIdps
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/active'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/getIdpsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      deprecated: false
    post:
      tags:
        - Identity Provider Management
      summary: postIdps
      description: Creates a new IdP.
      operationId: postIdps
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CreateIdpRequest'
      responses:
        '201':
          $ref: '#/components/responses/createdResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      deprecated: false
  /idps/{idpId}:
    put:
      tags:
        - Identity Provider Management
      summary: putIdp
      description: Modifies an IdP.
      operationId: putIdp
      parameters:
        - $ref: '#/components/parameters/idpId'
      requestBody:
        $ref: '#/components/requestBodies/CreateIdpRequest'
      responses:
        '200':
          $ref: '#/components/responses/putIdpsResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '409':
          $ref: '#/components/responses/conflictResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      deprecated: false
    get:
      tags:
        - Identity Provider Management
      summary: getIdp
      description: Returns the IdP with the given id.
      operationId: getIdp
      parameters:
        - $ref: '#/components/parameters/idpId'
      responses:
        '200':
          $ref: '#/components/responses/getIdpResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      deprecated: false
    delete:
      tags:
        - Identity Provider Management
      summary: deleteIdp
      description: Deletes the IdP with the given id.
      operationId: deleteIdp
      parameters:
        - $ref: '#/components/parameters/idpId'
      responses:
        '204':
          $ref: '#/components/responses/deleteResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '409':
          $ref: '#/components/responses/conflictResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      deprecated: false
  /.well-known/webfinger:
    get:
      tags:
        - Webfinger
      summary: Webfinger
      description: Returns a Webfinger response for the provided resource.
      operationId: webfinger
      parameters:
        - $ref: '#/components/parameters/webfingerResource'
      responses:
        '200':
          $ref: '#/components/responses/webfingerResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '429':
          $ref: '#/components/responses/tooManyRequestsResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      deprecated: false
      security: []
components:
  parameters:
    limit:
      in: query
      name: limit
      required: false
      description: The maximum records requested in search result. Default 20
      style: form
      explode: true
      schema:
        type: integer
        format: int32
        default: 20
        minimum: 1
      example: 50
    offset:
      in: query
      name: offset
      required: false
      description: >-
        The amount of records to skip in search result. Combine with offset to
        fetch results one page at a time.
      style: form
      explode: true
      schema:
        type: integer
      example: 50
    active:
      in: query
      name: active
      required: false
      description: >-
        Set this to true to find only active IdPs. Or false to find only
        inactive ones.
      style: form
      explode: true
      schema:
        type: boolean
      example: true
    accountId:
      in: query
      name: accountId
      required: false
      description: >-
        The accountId associated with a specific IdP. If you have access to
        multiple accounts with their own IdPs, use this filter to narrow the
        results down to just a particular account or accounts (can be specified
        multiple times).
      style: form
      explode: true
      schema:
        type: string
      example: '9999999'
    idpId:
      name: idpId
      in: path
      description: The IdP id.
      required: true
      style: simple
      schema:
        type: string
    webfingerResource:
      name: resource
      in: query
      description: The resource to get information about
      required: true
      style: form
      explode: true
      schema:
        type: string
        example: okta:acct:user@company.com
  requestBodies:
    CreateIdpRequest:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewSAMLIdP'
      required: true
  responses:
    createdResponse:
      description: Successful Response. Returns the newly created IdP resource.
      headers:
        Location:
          description: The URL of the created resource.
          content:
            text/plain:
              schema:
                type: string
                description: The URL of the created resource.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/SAMLIdP'
    deleteResponse:
      description: Successful response. The IdP resource was deleted.
      headers: {}
      content: {}
    getIdpResponse:
      description: Successful response. The IdP resource, if it exists.
      headers: {}
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/SAMLIdP'
    getIdpsResponse:
      description: >-
        Successful response. A list of IdPs is returned. If there are no IdPs to
        return, an empty list is returned.
      headers: {}
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                oneOf:
                  - $ref: '#/components/schemas/SAMLIdP'
              totalCount:
                type: integer
                description: The total number of IdPs found with the specified filters
            description: ''
    putIdpsResponse:
      description: Successful Response. Returns the modified IdP resource.
      headers: {}
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/SAMLIdP'
    webfingerResponse:
      description: A webfinger standard response for the requested resource.
      headers: {}
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/webfingerIdPEnabledResponse'
    badRequestResponse:
      description: Bad Request
      headers: {}
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/badRequestResponse'
    conflictResponse:
      description: >-
        Conflict. You are attempting to modify an IdP in a way it cannot be
        changed
      headers: {}
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/conflictResponse'
    forbiddenResponse:
      description: Forbidden
      headers: {}
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/forbiddenResponse'
    internalErrorResponse:
      description: An internal error occurred attempting to process a request
      headers: {}
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/internalErrorResponse'
    methodNotAllowedResponse:
      description: Method Not Allowed
      headers: {}
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/methodNotAllowedResponse'
    notFoundResponse:
      description: IdP not found.
      headers: {}
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notFoundResponse'
    tooManyRequestsResponse:
      description: Too Many Requests
      headers: {}
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tooManyRequestsResponse'
    unauthorizedResponse:
      description: Unauthorized
      headers: {}
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/unauthorizedResponse'
  schemas:
    NewSAMLIdP:
      title: NewSAMLIdP
      allOf:
        - $ref: '#/components/schemas/newIdp'
        - required:
            - accountId
            - active
          type: object
          properties:
            accountId:
              type: string
              description: The Bandwidth account id that will use this Identity Provider.
            active:
              type: boolean
              description: >-
                Whether this IdP is active or not. Only one IdP can be active
                for a given accountId.
              example: false
            usernameField:
              type: string
              description: The field in the SAML assertion that contains the username
            issuerUri:
              type: string
              description: >-
                URI of the Identity Provider. This value is usually the SAML
                Metadata EntityID of the IdP EntityDescriptor.
            singleSignOnUrl:
              type: string
              description: >-
                The binding-specific IdP Authentication Request Protocol
                endpoint that receives SAML AuthnRequest messages.
            signatureCertificate:
              type: string
              description: >-
                The PEM or DER encoded public key certificate of the Identity
                Provider used to verify SAML message and assertion signatures.
    SAMLIdP:
      title: SAMLIdP
      allOf:
        - $ref: '#/components/schemas/idp'
        - required:
            - accountId
            - active
            - id
            - entityId
            - acsUrl
          type: object
          properties:
            accountId:
              type: string
              description: The Bandwidth account id that will use this Identity Provider.
            active:
              type: boolean
              description: >-
                Whether this IdP is active or not. Only one IdP can be active
                for a given accountId.
              example: false
            id:
              type: string
              description: The identifier for this Identity Provider.
            entityId:
              type: string
              description: >-
                The IdP entity id. This should be used as input to configure the
                source provider.
            acsUrl:
              type: string
              description: >-
                The consumer assertion URL. This should be used as input to
                configure the source provider.
            usernameField:
              type: string
              description: The field in the SAML assertion that container the username
            issuerUri:
              type: string
              description: >-
                URI of the Identity Provider. This value is usually the SAML
                Metadata EntityID of the IdP EntityDescriptor.
            singleSignOnUrl:
              type: string
              description: >-
                The binding-specific IdP Authentication Request Protocol
                endpoint that receives SAML AuthnRequest messages.
            signatureCertificate:
              type: string
              description: >-
                The PEM or DER encoded public key certificate of the Identity
                Provider used to verify SAML message and assertion signatures.
    badRequestResponse:
      title: badRequestResponse
      type: object
      properties:
        statusCode:
          type: integer
          description: >-
            The HTTP status code returned by the server for the error
            encountered
          format: int32
          example: 400
    conflictResponse:
      title: conflictResponse
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp in ISO 8601 format of when the error was encountered
          format: date-time
        statusCode:
          type: integer
          description: >-
            The HTTP status code returned by the server for the error
            encountered
          format: int32
          example: 409
        statusText:
          type: string
          description: A short description about the error encountered
        traceId:
          type: string
          description: A unique trace ID used to identify the request and response.
          example: b77a5ea79036d5b9
    forbiddenResponse:
      title: forbiddenResponse
      type: object
      properties:
        statusCode:
          type: integer
          description: >-
            The HTTP status code returned by the server for the error
            encountered
          format: int32
          example: 403
    methodNotAllowedResponse:
      title: methodNotAllowedResponse
      type: object
      properties:
        statusCode:
          type: integer
          description: >-
            The HTTP status code returned by the server for the error
            encountered
          format: int32
          example: 405
    notFoundResponse:
      title: notFoundResponse
      type: object
      properties:
        statusCode:
          type: integer
          description: >-
            The HTTP status code returned by the server for the error
            encountered
          format: int32
          example: 404
    tooManyRequestsResponse:
      title: tooManyRequestsResponse
      type: object
      properties:
        statusCode:
          type: integer
          description: >-
            The HTTP status code returned by the server for the error
            encountered
          format: int32
          example: 429
    unauthorizedResponse:
      title: unauthorizedResponse
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp in ISO 8601 format of when the error was encountered
          format: date-time
        statusCode:
          type: integer
          description: >-
            The HTTP status code returned by the server for the error
            encountered
          format: int32
          example: 401
        error:
          type: string
          description: A short description about the error encountered
          example: Invalid credentials
        traceId:
          type: string
          description: A unique trace ID used to identify the request and response.
          example: b77a5ea79036d5b9
        path:
          type: string
          description: the path that was requested
          example: /api/v1/idps/1
    internalErrorResponse:
      title: internalErrorResponse
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp in ISO 8601 format of when the error was encountered
          format: date-time
        statusCode:
          type: integer
          description: >-
            The HTTP status code returned by the server for the error
            encountered
          format: int32
          example: 500
        statusText:
          type: string
          description: A short description about the error encountered
        traceId:
          type: string
          description: A unique trace ID used to identify the request and response.
          example: b77a5ea79036d5b9
    idp:
      title: IdP
      required:
        - protocol
      type: object
      properties:
        protocol:
          type: string
      discriminator:
        propertyName: protocol
        mapping:
          SAML: SAMLIdP
    newIdp:
      title: NewIdP
      required:
        - protocol
      type: object
      properties:
        protocol:
          enum:
            - SAML
          type: string
          description: >-
            The protocol used by this Identity Provider. Only SAML is supported
            for now.
          example: SAML
      discriminator:
        propertyName: protocol
        mapping:
          SAML: NewSAMLIdP
    webfingerIdPEnabledResponse:
      title: webfingerIdPEnabledResponse
      required:
        - subject
        - links
      type: object
      properties:
        subject:
          type: string
          description: The resource
          xml:
            attribute: true
            wrapped: false
        links:
          type: array
          items:
            $ref: '#/components/schemas/webfinger_links'
          description: ''
          example:
            - href: >-
                https://login.bandwidth.com/sso/idps/0oahx4rqfARaXDIas4x6?login_hint=user%40company.com#
              rel: okta:idp
              properties:
                okta:idp:id: 0obhx4rqfARaXDIas4x2
                okta:idp:metadata: >-
                  https://login.bandwidth.com/api/v1/idps/0obhx4rqfARaXDIas4x2/metadata.xml
                okta:idp:type: SAML2
              titles:
                und: Company IdP
      description: The response from the Webfinger for a resource with BYOIdP enabled
      example:
        subject: okta:acct:user@company;com
        links:
          - href: >-
              https://login.bandwidth.com/sso/idps/0oahx4rqfARaXDIas4x6?login_hint=user%40company.com#
            rel: okta:idp
            properties:
              okta:idp:id: 0obhx4rqfARaXDIas4x2
              okta:idp:metadata: >-
                https://login.bandwidth.com/api/v1/idps/0obhx4rqfARaXDIas4x2/metadata.xml
              okta:idp:type: SAML2
            titles:
              und: Company IdP
    webfingerLinksTitles:
      title: webfinger_links_titles
      required:
        - und
      type: object
      properties:
        und:
          type: string
          description: Title of the link of the resource
          xml:
            attribute: true
            wrapped: false
      description: ''
    webfingerLinksProperties:
      title: webfinger_links_properties
      required:
        - okta:idp:id
        - okta:idp:metadata
        - okta:idp:type
      type: object
      properties:
        okta:idp:id:
          type: string
          description: The IdP ID
          xml:
            attribute: true
            wrapped: false
        okta:idp:metadata:
          type: string
          description: Link to the IdP metadata
          xml:
            attribute: true
            wrapped: false
        okta:idp:type:
          type: string
          description: The IdP type or protocol
          xml:
            attribute: true
            wrapped: false
          example: SAML2
      description: ''
    webfingerLinks:
      title: webfinger_links
      required:
        - href
        - rel
        - properties
        - titles
      type: object
      properties:
        href:
          type: string
          description: Direct link to initiate resource login process
          xml:
            attribute: true
            wrapped: false
        rel:
          type: string
          xml:
            attribute: true
            wrapped: false
          example: okta:idp
        properties:
          $ref: '#/components/schemas/webfingerLinksProperties'
        titles:
          $ref: '#/components/schemas/webfingerLinksTitles'
      description: Links for the resource in the subject
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
  - bearerAuth: []
tags:
  - name: Identity Provider Management
    description: ''
  - name: Webfinger
    description: ''
servers:
  - description: Production
    url: https://management.id.bandwidth.com
    variables: {}
  - url: '{base_url}'
    variables:
      base_url:
        default: https://www.example.com
        description: ''
