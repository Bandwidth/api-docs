openapi: 3.0.3
info:
  title: Messaging - Beta
  version: 1.0.0
  contact:
    name: Bandwidth
    url: https://support.bandwidth.com
    email: support@bandwidth.com
  description: |-
    This document gives an overview of the Messaging BETA API.
    
    Messaging BETA is a RESTful API that enables developers to integrate messaging capabilities into their applications. The API provides a simple, scalable, and reliable way to send and receive SMS messages to and from UK mobile to UK numbers. The API provides endpoints for sending messages and callback functionality for receiving messages and retrieving delivery receipts.

    IMPORTANT:
    Please contact your Bandwidth dedicated Account Manager to obtain your accountId and applicationId.
    
    ## Base URL
    `https://global-messaging.bandwidth.com/api/v1`
servers:
  - url: https://global-messaging.bandwidth.com/api/v1
    description: Production
paths:
  /users/{accountId}/messages:
    post:
      summary: Create Message
      description: Endpoint for sending text messages.
      operationId: createMessage
      tags:
        - Messages
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        $ref: '#/components/requestBodies/createMessageRequest'
      responses:
        '202':
          $ref: '#/components/responses/createMessageResponse'
        '400':
          $ref: '#/components/responses/createMessageBadRequestError'
        '401':
          $ref: '#/components/responses/messagingUnauthorizedError'
        '403':
          $ref: '#/components/responses/messagingForbiddenError'
        '404':
          $ref: '#/components/responses/messagingNotFoundError'
        '415':
          $ref: '#/components/responses/messagingInvalidMediaTypeError'
        '429':
          $ref: '#/components/responses/messagingTooManyRequestsError'
        '500':
          $ref: '#/components/responses/messagingInternalServerError'
      callbacks:
        callback:
          $ref: '#/components/callbacks/callback'
components:
  parameters:
    accountId:
      in: path
      name: accountId
      required: true
      schema:
        type: string
      description: >-
        This is not your Bandwidth Account ID. Please contact Bandwidth for your
        International Account ID.
      example: '9900000'
    messageStatus:
      in: query
      name: messageStatus
      required: false
      description: >-
        The status of the message. One of RECEIVED QUEUED SENDING SENT FAILED
        DELIVERED ACCEPTED UNDELIVERED.
      schema:
        $ref: '#/components/schemas/messageStatusEnum'
    messageDirection:
      in: query
      name: messageDirection
      required: false
      description: The direction of the message. One of INBOUND OUTBOUND.
      schema:
        $ref: '#/components/schemas/listMessageDirectionEnum'
    errorCode:
      in: query
      name: errorCode
      required: false
      description: The error code of the message.
      example: 9902
      schema:
        type: integer
  schemas:
    inboundMessageCallback:
      description: Inbound Message Callback
      type: object
      properties:
        time:
          type: string
          format: date-time
          example: 2016-09-14T18:20:16.000Z
        type:
          type: string
          example: message-received
        to:
          type: string
          example: '+447975777666'
        description:
          type: string
          example: Incoming message received
        message:
          type: object
          properties:
            id:
              type: string
              example: 1661365814859loidf7mcwd4qacn7
            owner:
              type: string
              example: '+447975777666'
            time:
              type: string
              format: date-time
              example: 2016-09-14T18:20:16.000Z
            segmentCount:
              type: integer
              example: 1
            direction:
              $ref: '#/components/schemas/messageDirectionEnum'
            to:
              uniqueItems: true
              type: array
              items:
                type: string
              example:
                - '+447975777666'
            from:
              type: string
              example: '+447975777888'
            text:
              type: string
              example: Hello world
            applicationId:
              type: string
              example: sms-link-name
          required:
            - id
            - owner
            - time
            - applicationId
            - segmentCount
            - direction
            - to
            - from
            - text
      required:
        - time
        - type
        - to
        - description
        - message
    messageDeliveredCallback:
      description: Message Delivered Callback
      type: object
      properties:
        time:
          type: string
          format: date-time
          example: 2016-09-14T18:20:16.000Z
        type:
          type: string
          example: message-delivered
        to:
          type: string
          example: '+447975777666'
        description:
          type: string
          example: Message delivered to carrier.
        message:
          type: object
          properties:
            id:
              type: string
              example: 1661365814859loidf7mcwd4qacn7
            owner:
              type: string
              example: '+447975777666'
            time:
              type: string
              format: date-time
              example: 2016-09-14T18:20:16.000Z
            segmentCount:
              type: integer
              example: 1
            direction:
              $ref: '#/components/schemas/messageDirectionEnum'
            to:
              uniqueItems: true
              type: array
              items:
                type: string
              example:
                - '+447975777666'
            from:
              type: string
              example: '+447975777888'
            text:
              type: string
              example: ''
            applicationId:
              type: string
              example: sms-link-name
          required:
            - id
            - owner
            - time
            - applicationId
            - segmentCount
            - direction
            - to
            - from
            - text
      required:
        - time
        - type
        - to
        - description
        - message
    messageFailedCallback:
      description: Message Failed Callback
      type: object
      properties:
        time:
          type: string
          format: date-time
          example: 2016-09-14T18:20:16.000Z
        type:
          type: string
          example: message-failed
        to:
          type: string
          example: '+447975777666'
        description:
          type: string
          example: rejected-unallocated-from-number
        message:
          type: object
          properties:
            id:
              type: string
              example: 1661365814859loidf7mcwd4qacn7
            owner:
              type: string
              example: '+447975777666'
            time:
              type: string
              format: date-time
              example: 2016-09-14T18:20:16.000Z
            segmentCount:
              type: integer
              example: 1
            direction:
              $ref: '#/components/schemas/messageDirectionEnum'
            to:
              uniqueItems: true
              type: array
              items:
                type: string
              example:
                - '+447975777666'
            from:
              type: string
              example: '+447975777888'
            text:
              type: string
              example: ''
            applicationId:
              type: string
              example: sms-link-name
          required:
            - id
            - owner
            - time
            - segmentCount
            - direction
            - to
            - from
            - text
            - applicationId
        errorCode:
          type: integer
          example: 9902
      required:
        - time
        - type
        - to
        - description
        - message
        - errorCode
    fieldError:
      type: object
      properties:
        fieldName:
          type: string
          description: The name of the field that contains the error
          example: from
        description:
          type: string
          description: The error associated with the field
          example: >-
            '+invalid' must be replaced with a valid E164 formatted telephone
            number
    createMessageRequestError:
      title: CreateMessageRequestError
      type: object
      properties:
        type:
          type: string
        description:
          type: string
        fieldErrors:
          type: array
          items:
            $ref: '#/components/schemas/fieldError'
      required:
        - type
        - description
    messagingRequestError:
      title: MessagingRequestError
      type: object
      properties:
        type:
          type: string
        description:
          type: string
      required:
        - type
        - description
    messageDirectionEnum:
      type: string
      description: The direction of the message. One of in out.
      enum:
        - in
        - out
    message:
      title: Message
      type: object
      properties:
        id:
          type: string
          description: The id of the message.
          example: 1589228074636lm4k2je7j7jklbn2
        owner:
          type: string
          description: The Bandwidth phone number associated with the message.
          example: '+447975777888'
        time:
          type: string
          description: The datetime stamp of the message in ISO 8601
          example: 2022-09-14T18:20:16.000Z
        applicationId:
          type: string
          description: The application ID associated with the message.
          example: sms-link-name
        segmentCount:
          type: integer
          description: >-
            The number of segments the original message from the user is broken
            into before sending over to carrier networks.
          example: 2
        direction:
          $ref: '#/components/schemas/messageDirectionEnum'
        to:
          uniqueItems: true
          type: array
          items:
            type: string
          description: >-
            The phone number recipient of the message, strictly supports one
            element.
          example:
            - '+447975777666'
        from:
          type: string
          description: The phone number the message was sent from.
          example: '+447975777888'
        text:
          type: string
          description: The contents of the message.
          example: Hello world
    messageRequest:
      title: MessageRequest
      type: object
      required:
        - to
        - from
        - applicationId
      properties:
        applicationId:
          type: string
          description: >-
            The ID of the Application refers to the name of SMS link provided by your Account Manager on which you want to receive Delivery Receipts.
          example: sms-link-name
        to:
          uniqueItems: true
          type: array
          description: The phone number the message should be sent to in E164 format.
          example:
            - '+447975777666'
          items:
            type: string
        from:
          type: string
          description: >-
            One of your telephone numbers the message should come from in E164
            format.
          example: '+447975777888'
        text:
          type: string
          description: The contents of the text message. Must be 2048 characters or less.
          maxLength: 2048
          example: Hello world
    listMessageDirectionEnum:
      type: string
      description: The direction of the message. One of INBOUND OUTBOUND.
      enum:
        - INBOUND
        - OUTBOUND
    messageStatusEnum:
      type: string
      description: >-
        The status of the message. One of RECEIVED QUEUED SENDING SENT FAILED
        DELIVERED ACCEPTED UNDELIVERED.
      enum:
        - RECEIVED
        - QUEUED
        - SENDING
        - SENT
        - FAILED
        - DELIVERED
        - ACCEPTED
        - UNDELIVERED
      example: RECEIVED
  requestBodies:
    createMessageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messageRequest'
      required: true
  responses:
    createMessageResponse:
      description: Accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/message'
    messagingBadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    createMessageBadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createMessageRequestError'
    messagingUnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    messagingForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    messagingNotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    messagingInvalidMediaTypeError:
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    messagingTooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    messagingInternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
  callbacks:
    callback:
      '{callbackUrl}':
        post:
          requestBody:
            required: true
            description: Callback Payload
            content:
              application/json:
                schema:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/inboundMessageCallback'
                    - $ref: '#/components/schemas/messageDeliveredCallback'
                    - $ref: '#/components/schemas/messageFailedCallback'
          responses:
            '200':
              description: OK
  securitySchemes:
    KeyBasedAuthentication:
      type: apiKey
      description: >
        Authentication to Bandwidth's global API is handled via key based
        authentication. You can request your API key from your Account Manager
      name: apikey
      in: header
security:
  - KeyBasedAuthentication:
      - apiKey
