openapi: 3.0.3
info:
  title: Phone Number Lookup
  version: 1.1.0
  contact:
    name: Bandwidth Support
    email: support@bandwidth.com
    url: https://support.bandwidth.com
  description: >-
    A Bandwidth API to provide carrier information for a telephone number or
    batch of telephone numbers. Currently supports lookups of telephone numbers
    in the mainland United States, Alaska, Hawaii, District of Columbia, and the
    provinces of Canada. Telephone numbers submitted must be in E.164 format to
    be processed.

    ## Base Path

    <code>https://numbers.bandwidth.com/api/v1</code>
servers:
  - url: https://numbers.bandwidth.com/api/v1
    description: Production
paths:
  /accounts/{accountId}/tnlookup:
    post:
      summary: Create Lookup
      description: Create a Phone Number Lookup Request.
      operationId: createLookup
      tags:
        - Phone Number Lookup
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        $ref: '#/components/requestBodies/createLookupRequest'
      responses:
        '202':
          $ref: '#/components/responses/createLookupResponse'
        '400':
          $ref: '#/components/responses/tnLookupBadRequestError'
        '401':
          $ref: '#/components/responses/tnLookupUnauthorizedError'
        '403':
          $ref: '#/components/responses/tnLookupForbiddenError'
        '415':
          $ref: '#/components/responses/tnLookupMediaTypeError'
        '429':
          $ref: '#/components/responses/tnLookupTooManyRequestsError'
        '500':
          $ref: '#/components/responses/tnLookupInternalServerError'
      x-codeSamples:
        - lang: cURL
          source: >
            curl 'https://numbers.bandwidth.com/api/v1/accounts/12345/tnlookup'
            \
                -X POST \
                -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \
                -H 'Content-Type: application/json' \
                -d '{
                    "tns":
                    [
                        "19196104420"
                    ]
                }'
        - lang: C#
          source: |
            using System;
            using System.Collections.Generic;
            using System.Threading.Tasks;
            using Bandwidth.Standard;
            using Bandwidth.Standard.Exceptions;
            using Bandwidth.Standard.PhoneNumberLookup.Models;

            class Program
            {
                static async Task Main(string[] args)
                {
                    var username = "api-username";
                    var password = "api-pasword";
                    var accountId = "12345";

                    var client = new BandwidthClient.Builder()
                        .PhoneNumberLookupBasicAuthCredentials(username, password)
                        .Build();

                    var request = new OrderRequest
                    {
                        Tns = new List<string> { "+15553334444" }
                    };

                    try
                    {
                        var response = await client.PhoneNumberLookup.APIController.CreateLookupRequestAsync(accountId, request);
                        Console.WriteLine(response.Data);
                    }
                    catch (ApiException e)
                    {
                        Console.WriteLine(e.Message);
                    }
                }
            }
        - lang: Java
          source: |
            import com.bandwidth.sdk.ApiClient;
            import com.bandwidth.sdk.ApiException;
            import com.bandwidth.sdk.Configuration;
            import com.bandwidth.sdk.auth.*;
            import com.bandwidth.sdk.models.*;
            import com.bandwidth.sdk.api.PhoneNumberLookupApi;

            public class Example {
                public static void main(String[] args) {
                    ApiClient defaultClient = Configuration.getDefaultApiClient();        

                    // Configure HTTP basic authorization: Basic
                    HttpBasicAuth Basic = (HttpBasicAuth) defaultClient.getAuthentication("Basic");
                    Basic.setUsername("YOUR USERNAME");
                    Basic.setPassword("YOUR PASSWORD");

                    PhoneNumberLookupApi apiInstance = new PhoneNumberLookupApi(defaultClient);
                    String accountId = "9900000"; // String | Your Bandwidth Account ID.
                    LookupRequest lookupRequest = new LookupRequest(); // LookupRequest | Phone number lookup request.
                    try {
                        CreateLookupResponse result = apiInstance.createLookup(accountId, lookupRequest);
                        System.out.println(result);
                    } catch (ApiException e) {
                        System.err.println("Exception when calling PhoneNumberLookupApi#createLookup");
                        System.err.println("Status code: " + e.getCode());
                        System.err.println("Reason: " + e.getResponseBody());
                        System.err.println("Response headers: " + e.getResponseHeaders());
                        e.printStackTrace();
                    }
                }
            }
        - lang: PHP
          source: >
            <?php


            require "vendor/autoload.php";


            api-username = "api-username";

            api-password = "api-pasword";

            12345 = "12345";


            $config = new BandwidthLib\Configuration(
                array(
                    'messagingBasicAuthUserName' => $BW_USERNAME,
                    'messagingBasicAuthPassword' => $BW_PASSWORD,
                )
            );

            $client = new BandwidthLib\BandwidthClient($config);


            $phoneNumberLookupClient =
            $client->getPhoneNumberLookup()->getClient();


            $body = new BandwidthLib\PhoneNumberLookup\Models\OrderRequest();

            $body->tns = array("+15554443333");


            try {
                $response = $phoneNumberLookupClient->createLookupRequest($BW_ACCOUNT_ID, $body);
                print_r($response->getResult()->requestId);
            } catch (BandwidthLib\APIException $e) {
                print_r($e->getResponseCode());
            }
        - lang: Python
          source: >
            from bandwidth.bandwidth_client import BandwidthClient

            from bandwidth.exceptions.api_exception import APIException

            from bandwidth.phonenumberlookup.models.order_request import
            OrderRequest


            import os


            BW_USERNAME = "api-username"

            BW_PASSWORD = "api-password"

            BW_ACCOUNT_ID = "12345"


            bandwidth_client = BandwidthClient(
                phone_number_lookup_basic_auth_user_name=BW_USERNAME,
                phone_number_lookup_basic_auth_password=BW_PASSWORD
            )

            phone_number_lookup_client =
            bandwidth_client.phone_number_lookup_client.client


            body = OrderRequest()

            body.tns = ["+15554443333"]


            try:
                response = phone_number_lookup_client.create_lookup_request(BW_ACCOUNT_ID, body)
                print(response.body.request_id)
            except APIException as e:
                print(e.response_code)
        - lang: Ruby
          source: >
            require 'bandwidth-sdk'


            Bandwidth.configure do |config|
              config.username = 'api-username'
              config.password = 'api-password'
            end


            api_instance = Bandwidth::PhoneNumberLookupApi.new

            account_id = '12345'

            lookup_request = Bandwidth::LookupRequest.new({ tns:
            ['+15554443333'] })


            begin
              result = api_instance.create_lookup(account_id, lookup_request)
              p result.request_id
            rescue Bandwidth::ApiError => e
              p "Error when calling PhoneNumberLookupApi->create_lookup: #{e}"
            end
  /accounts/{accountId}/tnlookup/{requestId}:
    get:
      summary: Get Lookup Request Status
      description: Get an existing Phone Number Lookup Request.
      operationId: getLookupStatus
      tags:
        - Phone Number Lookup
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          $ref: '#/components/responses/getLookupResponse'
        '400':
          $ref: '#/components/responses/tnLookupBadRequestError'
        '401':
          $ref: '#/components/responses/tnLookupUnauthorizedError'
        '403':
          $ref: '#/components/responses/tnLookupForbiddenError'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/tnLookupTooManyRequestsError'
        '500':
          $ref: '#/components/responses/tnLookupInternalServerError'
      x-codeSamples:
        - lang: cURL
          source: >
            curl
            'https://numbers.bandwidth.com/api/v1/accounts/12345/tnlookup/004223a0-8b17-41b1-bf81-20732adf5590'
            \
                -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='
        - lang: C#
          source: |
            using System;
            using System.Collections.Generic;
            using System.Threading.Tasks;
            using Bandwidth.Standard;
            using Bandwidth.Standard.Exceptions;

            class Program
            {
                static async Task Main(string[] args)
                {
                    var username = "api-username";
                    var password = "api-pasword";
                    var accountId = "12345";

                    var client = new BandwidthClient.Builder()
                        .PhoneNumberLookupBasicAuthCredentials(username, password)
                        .Build();

                    var requestId = "8a358296-e188-4a3a-b974-8e4d12001dd8";

                    try
                    {
                        var response = await client.PhoneNumberLookup.APIController.GetLookupRequestStatusAsync(accountId, requestId);
                        Console.WriteLine(response.Data);
                    }
                    catch (ApiException e)
                    {
                        Console.WriteLine(e.Message);
                    }
                }
            }
        - lang: Java
          source: |
            import com.bandwidth.sdk.ApiClient;
            import com.bandwidth.sdk.ApiException;
            import com.bandwidth.sdk.Configuration;
            import com.bandwidth.sdk.auth.*;
            import com.bandwidth.sdk.models.*;
            import com.bandwidth.sdk.api.PhoneNumberLookupApi;

            public class Example {
                public static void main(String[] args) {
                    ApiClient defaultClient = Configuration.getDefaultApiClient();        

                    // Configure HTTP basic authorization: Basic
                    HttpBasicAuth Basic = (HttpBasicAuth) defaultClient.getAuthentication("Basic");
                    Basic.setUsername("YOUR USERNAME");
                    Basic.setPassword("YOUR PASSWORD");

                    PhoneNumberLookupApi apiInstance = new PhoneNumberLookupApi(defaultClient);
                    String accountId = "9900000"; // String | Your Bandwidth Account ID.
                    String requestId = "004223a0-8b17-41b1-bf81-20732adf5590"; // String | The phone number lookup request ID from Bandwidth.
                    try {
                        LookupStatus result = apiInstance.getLookupStatus(accountId, requestId);
                        System.out.println(result);
                    } catch (ApiException e) {
                        System.err.println("Exception when calling PhoneNumberLookupApi#getLookupStatus");
                        System.err.println("Status code: " + e.getCode());
                        System.err.println("Reason: " + e.getResponseBody());
                        System.err.println("Response headers: " + e.getResponseHeaders());
                        e.printStackTrace();
                    }
                }
            }
        - lang: PHP
          source: >
            <?php


            require "vendor/autoload.php";


            api-username = "api-username";

            api-password = "api-pasword";

            12345 = "12345";


            $config = new BandwidthLib\Configuration(
                array(
                    'messagingBasicAuthUserName' => $BW_USERNAME,
                    'messagingBasicAuthPassword' => $BW_PASSWORD,
                )
            );

            $client = new BandwidthLib\BandwidthClient($config);


            $phoneNumberLookupClient =
            $client->getPhoneNumberLookup()->getClient();


            $requestId = "1234-abcd";


            try {
                $response = $phoneNumberLookupClient->getLookupRequestStatus($BW_ACCOUNT_ID, $requestId);
                print_r($response->getResult()->status);
            } catch (BandwidthLib\APIException $e) {
                print_r($e->getResponseCode());
            }
        - lang: Python
          source: >
            from bandwidth.bandwidth_client import BandwidthClient

            from bandwidth.exceptions.api_exception import APIException


            import os


            BW_USERNAME = "api-username"

            BW_PASSWORD = "api-password"

            BW_ACCOUNT_ID = "12345"


            bandwidth_client = BandwidthClient(
                phone_number_lookup_basic_auth_user_name=BW_USERNAME,
                phone_number_lookup_basic_auth_password=BW_PASSWORD
            )

            phone_number_lookup_client =
            bandwidth_client.phone_number_lookup_client.client


            request_id = "1234-abcd"


            try:
                response = phone_number_lookup_client.get_lookup_request_status(BW_ACCOUNT_ID, request_id)
                print(response.body.status)
            except APIException as e:
                print(e.response_code)
        - lang: Ruby
          source: |
            require 'bandwidth-sdk'

            Bandwidth.configure do |config|
              config.username = 'api-username'
              config.password = 'api-password'
            end

            api_instance = Bandwidth::PhoneNumberLookupApi.new
            account_id = '12345'
            request_id = '004223a0-8b17-41b1-bf81-20732adf5590'

            begin
              result = api_instance.get_lookup_status(account_id, request_id)
              p result.status
            rescue Bandwidth::ApiError => e
              p "Error when calling PhoneNumberLookupApi->get_lookup_status: #{e}"
            end
components:
  schemas:
    lookupStatusEnum:
      type: string
      description: >-
        The status of the request (IN_PROGRESS, COMPLETE, PARTIAL_COMPLETE, or
        FAILED).
      enum:
        - IN_PROGRESS
        - COMPLETE
        - PARTIAL_COMPLETE
        - FAILED
      example: COMPLETE
    lookupRequest:
      type: object
      description: Create phone number lookup request.
      properties:
        tns:
          type: array
          items:
            type: string
      required:
        - tns
    createLookupResponse:
      type: object
      description: >-
        The request has been accepted for processing but not yet finished and in
        a terminal state (COMPLETE, PARTIAL_COMPLETE, or FAILED).
      properties:
        requestId:
          type: string
          description: The phone number lookup request ID from Bandwidth.
        status:
          $ref: '#/components/schemas/lookupStatusEnum'
    lookupStatus:
      type: object
      description: >-
        If requestId exists, the result for that request is returned. See the
        Examples for details on the various responses that you can receive.
        Generally, if you see a Response Code of 0 in a result for a TN,
        information will be available for it.  Any other Response Code will
        indicate no information was available for the TN.
      properties:
        requestId:
          type: string
          description: The requestId.
          example: 004223a0-8b17-41b1-bf81-20732adf5590
        status:
          $ref: '#/components/schemas/lookupStatusEnum'
        result:
          type: array
          description: The carrier information results for the specified telephone number.
          items:
            $ref: '#/components/schemas/lookupResult'
        failedTelephoneNumbers:
          type: array
          description: The telephone numbers whose lookup failed.
          items:
            type: string
          example:
            - '+191955512345'
    lookupResult:
      type: object
      description: Carrier information results for the specified telephone number.
      properties:
        Response Code:
          type: integer
          description: Our vendor's response code.
          example: 0
        Message:
          type: string
          description: Message associated with the response code.
          example: NOERROR
        E.164 Format:
          type: string
          description: The telephone number in E.164 format.
          example: '+19195551234'
        Formatted:
          type: string
          description: The formatted version of the telephone number.
          example: (919) 555-1234
        Country:
          type: string
          description: The country of the telephone number.
          example: US
        Line Type:
          type: string
          description: The line type of the telephone number.
          example: Mobile
        Line Provider:
          type: string
          description: The messaging service provider of the telephone number.
          example: Verizon Wireless
        Mobile Country Code:
          type: string
          description: The first half of the Home Network Identity (HNI).
          example: '310'
        Mobile Network Code:
          type: string
          description: The second half of the HNI.
          example: '010'
    tnLookupRequestError:
      type: object
      properties:
        message:
          type: string
          description: A description of what validation error occurred.
          example: example error message
  responses:
    createLookupResponse:
      description: Accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createLookupResponse'
          examples:
            lookupResponseExample:
              $ref: '#/components/examples/lookupInProgressExample'
    getLookupResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/lookupStatus'
          examples:
            lookupInProgressExample:
              $ref: '#/components/examples/lookupInProgressExample'
            lookupFailedExample:
              $ref: '#/components/examples/lookupFailedExample'
            lookupSingleNumberCompleteExample:
              $ref: '#/components/examples/lookupSingleNumberCompleteExample'
            lookupMultipleNumbersCompleteExample:
              $ref: '#/components/examples/lookupMultipleNumbersCompleteExample'
            lookupMultipleNumbersPartialCompleteExample:
              $ref: >-
                #/components/examples/lookupMultipleNumbersPartialCompleteExample
            lookupSingleNumberCompleteNoInfoExample:
              $ref: '#/components/examples/lookupSingleNumberCompleteNoInfoExample'
    tnLookupBadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tnLookupRequestError'
          examples:
            badRequest:
              summary: Example Bad Request Error
              value:
                message: 'Some tns do not match e164 format: 1234'
    tnLookupUnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tnLookupRequestError'
          examples:
            unauthorized:
              summary: Example Unauthorized Error
              value:
                message: Unauthorized
    tnLookupForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tnLookupRequestError'
          examples:
            forbidden:
              summary: Example Forbidden Error
              value:
                message: >-
                  Authorization header requires 'Credential' parameter.
                  Authorization header requires 'Signature' parameter.
                  Authorization header requires 'SignedHeaders' parameter.
                  Authorization header requires existence of either a
                  'X-Amz-Date' or a 'Date' header. Authorization=Basic
                  Y2tvZloPTGhHgywYIzGlcGVlcGvvcGovYTIGIt=='
    tnLookupMediaTypeError:
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tnLookupRequestError'
          examples:
            mediaType:
              summary: Example Unsupported Media Type Error
              value:
                message: Content-Type must be application/json.
    tnLookupTooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tnLookupRequestError'
          examples:
            mediaType:
              summary: Example Too Many Requests Error
              value:
                message: Too many requests.
    tnLookupInternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tnLookupRequestError'
          examples:
            mediaType:
              summary: Example Internal Server Error Error
              value:
                message: Request has not been passed further.
  parameters:
    accountId:
      in: path
      name: accountId
      required: true
      schema:
        type: string
      description: Your Bandwidth Account ID.
      example: '9900000'
    requestId:
      name: requestId
      in: path
      required: true
      schema:
        type: string
      description: The phone number lookup request ID from Bandwidth.
      example: 004223a0-8b17-41b1-bf81-20732adf5590
  examples:
    singleNumberRequestExample:
      summary: Example Number Lookup Request for One Number
      value:
        tns:
          - '+19195551234'
    multipleNumberRequestExample:
      summary: Example Number Lookup Request for Multiple Numbers
      value:
        tns:
          - '+19195551234'
          - '+19195554321'
    lookupInProgressExample:
      summary: Example Lookup In Progress Response
      value:
        requestId: 004223a0-8b17-41b1-bf81-20732adf5590
        status: IN_PROGRESS
    lookupFailedExample:
      summary: Example Lookup Failed Response
      value:
        requestId: 004223a0-8b17-41b1-bf81-20732adf5590
        status: FAILED
        failedTelephoneNumbers:
          - '+191955512345'
    lookupSingleNumberCompleteExample:
      summary: Example Single Number Lookup Complete Response
      value:
        requestId: 004223a0-8b17-41b1-bf81-20732adf5590
        status: COMPLETE
        result:
          - Response Code: 0
            Message: NOERROR
            E.164 Format: '+19195551234'
            Formatted: (919) 555-1234
            Country: US
            Line Type: Mobile
            Line Provider: Verizon Wireless
            Mobile Country Code: '310'
            Mobile Network Code: '010'
    lookupMultipleNumbersCompleteExample:
      summary: Example Multiple Numbers Lookup Complete Response
      value:
        requestId: 004223a0-8b17-41b1-bf81-20732adf5590
        status: COMPLETE
        result:
          - Response Code: 0
            Message: NOERROR
            E.164 Format: '+19195551234'
            Formatted: (919) 555-1234
            Country: US
            Line Type: Mobile
            Line Provider: Verizon Wireless
            Mobile Country Code: '310'
            Mobile Network Code: '010'
          - Response Code: 0
            Message: NOERROR
            E.164 Format: '+19195554321'
            Formatted: (919) 555-4321
            Country: US
            Line Type: Mobile
            Line Provider: T-Mobile USA
            Mobile Country Code: '310'
            Mobile Network Code: '160'
    lookupMultipleNumbersPartialCompleteExample:
      summary: Example Multiple Numbers Lookup Partial Complete Response
      value:
        requestId: 004223a0-8b17-41b1-bf81-20732adf5590
        status: PARTIAL_COMPLETE
        result:
          - Response Code: 0
            Message: NOERROR
            E.164 Format: '+19195551234'
            Formatted: (919) 555-1234
            Country: US
            Line Type: Mobile
            Line Provider: Verizon Wireless
            Mobile Country Code: '310'
            Mobile Network Code: '010'
        failedTelephoneNumbers:
          - '+191955512345'
    lookupSingleNumberCompleteNoInfoExample:
      summary: Example Single Number Lookup Complete with No Information Response
      value:
        requestId: 004223a0-8b17-41b1-bf81-20732adf5590
        status: COMPLETE
        result:
          - Response Code: 3
            Message: NXDOMAIN
            E.164 Format: '+19195550000'
            Formatted: (919) 555-0000
            Country: US
  requestBodies:
    createLookupRequest:
      description: Phone number lookup request.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/lookupRequest'
          examples:
            singleNumberRequestExample:
              $ref: '#/components/examples/singleNumberRequestExample'
            multipleNumberRequestExample:
              $ref: '#/components/examples/multipleNumberRequestExample'
  securitySchemes:
    Basic:
      type: http
      scheme: basic
      description: >-
        Basic authentication is a simple authentication scheme built into the
        HTTP protocol. To use it, send your HTTP requests with an Authorization
        header that contains the word Basic followed by a space and a
        base64-encoded string `username:password`.

        Example: `Authorization: Basic ZGVtbZpwQDU1dzByZA==`
security:
  - Basic: []
tags:
  - name: Phone Number Lookup
