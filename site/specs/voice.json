{
    "openapi": "3.0.0",
    "info": {
        "description": "Bandwidth's HTTP voice platform\n## Base Path\n<code>https://voice.bandwidth.com</code>",
        "version": "3.2.2",
        "title": "Voice",
        "x-server-configuration": {
            "default-environment": "production",
            "default-server": "default",
            "environments": [
                {
                    "name": "production",
                    "servers": [
                        {
                            "name": "default",
                            "url": "https://voice.bandwidth.com"
                        }
                    ]
                },
                {
                    "name": "custom",
                    "servers": [
                        {
                            "name": "default",
                            "url": "{base_url}"
                        }
                    ]
                }
            ],
            "parameters": [
                {
                    "name": "base_url",
                    "description": "",
                    "schema": {
                        "type": "string",
                        "example": "https://www.example.com"
                    }
                }
            ]
        }
    },
    "security": [
        {
            "basicAuth": []
        }
    ],
    "paths": {
        "/api/v2/accounts/{accountId}/calls": {
            "post": {
                "tags": [
                    "Calls"
                ],
                "summary": "Create Call",
                "description": "Creates an outbound phone call.\n\nCalls are created immediately unless your account has outbound call queueing enabled. When enabled, your outbound calls will be queued and initiated at a specific dequeueing rate, enabling your application to \"fire and forget\" when creating calls. Queued calls may not be modified until they are dequeued and placed, but may be removed from your queue on demand.\n\nTo enable call queueing on your account, contact our Account Management team.\n\n<b>Please note: </b> Calls submitted to your queue will be placed approximately in order, but exact ordering is not guaranteed.",
                "operationId": "createCall",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCallRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Call successfully created",
                        "headers": {
                            "Location": {
                                "description": "The URL for further interactions with this call",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCallResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls' \\\r\n    -X POST \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \\\r\n    -H 'Content-Type: application/json' \\\r\n    -d '{\r\n        \"from\": \"+15554443333\",\r\n        \"to\": \"+15553334444, sip:john@doe.com\",\r\n        \"uui\": \"eyJhbGciOiJIUzI1NiJ9.WyJoaSJd.-znkjYyCkgz4djmHUPSXl9YrJ6Nix_XvmlwKGFh5ERM;encoding=jwt,aGVsbG8gd29ybGQ=;encoding=base64\",\r\n        \"callTimeout\": 0,\r\n        \"callbackTimeout\": 0,\r\n        \"answerUrl\": \"http://example.com\",\r\n        \"answerFallbackUrl\": \"http://example.com\",\r\n        \"username\": \"string\",\r\n        \"password\": \"string\",\r\n        \"fallbackUsername\": \"string\",\r\n        \"fallbackPassword\": \"string\",\r\n        \"answerMethod\": \"POST\",\r\n        \"answerFallbackMethod\": \"POST\",\r\n        \"disconnectUrl\": \"http://example.com\",\r\n        \"disconnectMethod\": \"POST\",\r\n        \"tag\": \"string\",\r\n        \"applicationId\": \"string\",\r\n        \"machineDetection\": {\r\n            \"mode\": \"sync\",\r\n            \"detectionTimeout\": 0,\r\n            \"silenceTimeout\": 0,\r\n            \"speechThreshold\": 0,\r\n            \"speechEndThreshold\": 0,\r\n            \"delayResult\": true,\r\n            \"callbackUrl\": \"http://example.com\",\r\n            \"callbackMethod\": \"POST\",\r\n            \"fallbackUrl\": \"http://example.com\",\r\n            \"fallbackMethod\": \"POST\",\r\n            \"username\": \"string\",\r\n            \"password\": \"string\",\r\n            \"fallbackUsername\": \"string\",\r\n            \"fallbackPassword\": \"string\"\r\n        }\r\n    }'\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n        var applicationId = \"1234-qwer\";\r\n        var to = \"+15553334444\";\r\n        var from = \"+15554443333\";\r\n        var baseUrl = \"https://sample.com\";\r\n        var answerUrl = string.Concat(baseUrl, \"/callbacks/answer\");\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        var request = new CreateCallRequest()\r\n        {\r\n            ApplicationId = applicationId,\r\n            To = to,\r\n            From = from,\r\n            AnswerUrl = answerUrl\r\n        };\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.CreateCallAsync(accountId, request);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.CreateCallRequest;\r\nimport com.bandwidth.voice.models.CreateCallResponse;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        String voiceApplicationId = \"1234-qwer\";\r\n        String to = \"+15553334444\";\r\n        String from = \"+15554443333\";\r\n        String baseUrl = \"https://sample.com\";\r\n        String answerUrl = baseUrl.concat(\"/callbacks/answer\");\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        CreateCallRequest request = new CreateCallRequest();\r\n        request.setApplicationId(voiceApplicationId);\r\n        request.setTo(to);\r\n        request.setFrom(from);\r\n        request.setAnswerUrl(answerUrl);\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<CreateCallResponse>> completableFuture = client.getVoiceClient().getAPIController().createCallAsync(ACCOUNT_ID, request);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\nconst BW_VOICE_APPLICATION_ID = \"1234-qwer\";\r\nconst BW_NUMBER = \"+15554443333\";\r\nconst USER_NUMBER = \"+15553334444\";\r\nconst VOICE_CALLBACK_URL = https://sample.com;\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst makeCall = async function() {\r\n  try {\r\n    const response = await controller.createCall(accountId, {\r\n        applicationId: BW_VOICE_APPLICATION_ID,\r\n        to: USER_NUMBER,\r\n        from: BW_NUMBER,\r\n        answerUrl: VOICE_CALLBACK_URL,\r\n        answerMethod: 'POST',\r\n        callTimeout: 30\r\n    });\r\n    console.log(response.body);\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\nmakeCall();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n  \r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n1234-qwer = \"1234-qwer\";\r\n+15554443333 = \"+15554443333\";\r\n+15553334444 = \"+15553334444\";\r\n$VOICE_CALLBACK_URL = \"https://sample.com\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$body = new BandwidthLib\\Voice\\Models\\CreateCallRequest();\r\n$body->from = $BW_NUMBER;\r\n$body->to = $USER_NUMBER;\r\n$body->answerUrl = $VOICE_CALLBACK_URL;\r\n$body->applicationId = $BW_VOICE_APPLICATION_ID;\r\n\r\ntry {\r\n    $response = $voiceClient->createCall($BW_ACCOUNT_ID, $body);\r\n    print_r($response->getResult()->callId);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n} \r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.voice.models.create_call_request import CreateCallRequest\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\nBW_VOICE_APPLICATION_ID = \"1234-qwer\"\r\nBW_NUMBER = \"+15554443333\"\r\nUSER_NUMBER = \"+15553334444\"\r\nVOICE_CALLBACK_URL = https://sample.com\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbody = CreateCallRequest()\r\nbody.application_id = BW_VOICE_APPLICATION_ID\r\nbody.to = USER_NUMBER\r\nbody.mfrom = BW_NUMBER\r\nbody.answer_url = VOICE_CALLBACK_URL\r\ntry:\r\n    response = voice_client.create_call(BW_ACCOUNT_ID, body)\r\n    print(response.body.call_id)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbody = CreateCallRequest.new\r\nbody.from = \"+15554443333\"\r\nbody.to = \"+15553334444\"\r\nbody.answer_url = \"http://www.myapp.com/hello\"\r\nbody.application_id = \"7fc9698a-b04a-468b-9e8f-91238c0d0086\"\r\n\r\nbegin\r\n    result = voice_client.create_call(\"12345\", body)\r\n    puts result.data.call_id\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/calls/{callId}": {
            "get": {
                "tags": [
                    "Calls"
                ],
                "summary": "Get Call Information",
                "description": "Retrieve the current state of a specific call. This information is near-realtime, so it may take a few minutes for your call to be accessible using this endpoint.<br><br>**Note**: Call information is kept for 7 days after the calls are hung up. If you attempt to retrieve information for a call that is older than 7 days, you will get an HTTP 404 response.\n\nThe `disconnectCause` for a call can be:\n- `hangup`: one party hung up the call, a [`<Hangup>`](../../bxml/verbs/hangup.md) verb was executed, or there was no more BXML to execute; it indicates that the call ended normally.\n- `busy`: the callee was busy.\n- `timeout`: the call wasn't answered before the `callTimeout` was reached.\n- `cancel`: the call was cancelled by its originator while it was ringing.\n- `rejected`: the call was rejected by the callee.\n- `callback-error`: a BXML callback couldn't be delivered to your callback server.\n- `invalid-bxml`: invalid BXML was returned in response to a callback.\n- `application-error`: an unsupported action was tried on the call, e.g. trying to play a .ogg audio.\n- `account-limit`: the account rate limits were reached.\n- `node-capacity-exceeded`: the system maximum capacity was reached.\n- `error`: some error not described in any of the other causes happened on the call.\n- `unknown`: some unknown error happened on the call.\n\nNote: this list is not exhaustive and other values can appear in the future.",
                "operationId": "getCall",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Call found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallState"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetCallAsync(accountId, callId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.CallState;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Call id is returned after successfully creating a call.\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<CallState>> completableFuture = client.getVoiceClient().getAPIController().getCallAsync(ACCOUNT_ID, callId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\n\r\nconst getCall = async function() {\r\n  try {\r\n      const response = await controller.getCall(accountId, callId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetCall();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getCall($BW_ACCOUNT_ID, $callId);\r\n    print_r($response->getResult()->state);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\n\r\ntry:\r\n    result = voice_client.get_call(BW_ACCOUNT_ID, call_id)\r\n    print(result.body.state)\r\nexcept APIException as e: \r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\n\r\nbegin\r\n    #result = voice_client.get_call(\"12345\", call_id)\r\n    #puts result.data.state\r\n    puts \"Method broke\"\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Calls"
                ],
                "summary": "Modify Call",
                "description": "Interrupts and replaces an active call's BXML document. Two content types may be used: JSON, which allows hanging up the call or triggering a callback to fetch the new BXML; and XML, which allows sending the new BXML immediately.",
                "operationId": "modifyCall",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyCallRequest"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "string",
                                "description": "A valid BXML document to replace the call's current BXML."
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Call successfully modified"
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d' \\\r\n    -X POST \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \\\r\n    -H 'Content-Type: application/json' \\\r\n    -d '{\r\n        \"state\": \"active\",\r\n        \"redirectUrl\": \"http://example.com\",\r\n        \"redirectFallbackUrl\": \"http://example.com\",\r\n        \"redirectMethod\": \"POST\",\r\n        \"redirectFallbackMethod\": \"POST\",\r\n        \"username\": \"string\",\r\n        \"password\": \"string\",\r\n        \"fallbackUsername\": \"string\",\r\n        \"fallbackPassword\": \"string\",\r\n        \"tag\": \"string\"\r\n    }'\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n        var applicationId = \"1234-qwer\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        var request = new ModifyCallRequest()\r\n        {\r\n            State = StateEnum.Completed\r\n        };\r\n\r\n        try\r\n        {\r\n            await client.Voice.APIController.ModifyCallAsync(accountId, callId, request);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.ModifyCallRequest;\r\nimport com.bandwidth.voice.models.StateEnum;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        ModifyCallRequest request = new ModifyCallRequest();\r\n        request.setState(StateEnum.COMPLETED);\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<Void>> completableFuture = client.getVoiceClient().getAPIController().modifyCallAsync(ACCOUNT_ID, callId, request);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\n\r\nconst modifyCall = async function() {\r\n  try {\r\n      const response = await controller.getCallState(accountId, callId, {\r\n        state: \"active\",\r\n        redirectUrl: \"http://www.myapp.com/new\"\r\n      });\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\nmodifyCall();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n\r\n$body = new BandwidthLib\\Voice\\Models\\ModifyCallRequest();\r\n$body->redirectUrl = \"http://www.myapp.com/new\";\r\n$body->state = \"active\";\r\n\r\ntry {\r\n    $voiceClient->modifyCall($BW_ACCOUNT_ID, $callId, $body);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.voice.models.modify_call_request import ModifyCallRequest\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\n\r\nbody = ModifyCallRequest()\r\nbody.redirect_url = \"http://www.myapp.com/new\"\r\nbody.state = \"active\"\r\n\r\ntry:\r\n    voice_client.modify_call(BW_ACCOUNT_ID, call_id, body)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbody = ModifyCallRequest.new\r\nbody.redirect_url = \"http://www.myapp.com/new\"\r\nbody.state = \"active\"\r\n\r\ncall_id = \"c-1234\"\r\n\r\nbegin\r\n    voice_client.modify_call(\"12345\", call_id, body)\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/statistics": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get Account Statistics",
                "description": "Returns details about the current state of the account.",
                "operationId": "getStatistics",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountStatistics"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/accounts/{accountId}/calls/{callId}/recording": {
            "put": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Update Recording",
                "description": "Pause or resume a recording on an active phone call",
                "operationId": "modifyCallRecordingState",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyCallRecordingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Recording state successfully modified"
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d/recording' \\\r\n    -X PUT \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \\\r\n    -H 'Content-Type: application/json' \\\r\n    -d '{\r\n        \"state\": \"NOT_RECORDING\",\r\n    }'\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        var state = new ModifyCallRecordingRequest\r\n        {\r\n            State = State1Enum.PAUSED\r\n        };\r\n\r\n        try\r\n        {\r\n            await client.Voice.APIController.ModifyCallRecordingStateAsync(accountId, callId, state);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.*;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        ModifyCallRecordingRequest recordingRequest = new ModifyCallRecordingRequest();\r\n        recordingRequest.setState(State1Enum.PAUSED);\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<Void>> completableFuture = client.getVoiceClient().getAPIController().modifyCallRecordingStateAsync(ACCOUNT_ID, callId, recordingRequest);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\n\r\nconst modifyCallRecordingState = async function() {\r\n  try {\r\n      const response = await controller.modifyCallRecordingState(accountId, callId, {\r\n      state: 'PAUSED'\r\n    });\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\nmodifyCallRecordingState();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n  \r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n\r\n$body = new BandwidthLib\\Voice\\Models\\ModifyCallRecordingRequest();\r\n$body->redirectUrl = \"http://www.myapp.com/new\";\r\n$body->state = \"paused\";\r\n\r\ntry {\r\n    $voiceClient->modifyCallRecordingState($BW_ACCOUNT_ID, $callId, $body);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.voice.models.modify_call_recording_request import ModifyCallRecordingRequest\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbody = ModifyCallRecordingRequest()\r\nbody.state = \"paused\"\r\n\r\ncall_id = \"c-1234\"\r\n\r\ntry:\r\n    voice_client.modify_call_recording_state(BW_ACCOUNT_ID, call_id, body)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbody = ModifyCallRecordingRequest.new\r\nbody.state = \"paused\"\r\n\r\ncall_id = \"c-1234\"\r\n\r\nbegin\r\n    voice_client.modify_call_recording_state(\"12345\", call_id, body)\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/calls/{callId}/recordings": {
            "get": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Get Call Recordings",
                "description": "Returns a (potentially empty) list of metadata for the recordings that took place during the specified call.",
                "operationId": "getCallRecordings",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recordings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallRecordingMetadata"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d/recordings' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetCallRecordingsAsync(accountId, callId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.CallRecordingMetadata;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.List;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Call id is returned after successfully creating a call.\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<List<CallRecordingMetadata>>> completableFuture = client.getVoiceClient().getAPIController().getCallRecordingsAsync(ACCOUNT_ID, callId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\n\r\nconst getCallRecordings = async function() {\r\n  try {\r\n      const response = await controller.getCallRecordings(accountId, callId, recordingId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetCallRecordings();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getCallRecordings($BW_ACCOUNT_ID, $callId);\r\n    if (count($response->getResult()) > 0) {\r\n        print_r($response->getResult()[0]->recordingId);\r\n    }\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\n\r\ntry:\r\n    response = voice_client.get_call_recordings(BW_ACCOUNT_ID, call_id)\r\n    if len(response.body) > 0:\r\n        print(response.body[0].recording_id)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\n\r\nbegin\r\n    response = voice_client.get_call_recordings(\"12345\", call_id)\r\n    if response.data.length > 0\r\n        puts response.data[0].media_url\r\n    end\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/calls/{callId}/recordings/{recordingId}": {
            "get": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Get Call Recording",
                "description": "Returns metadata for the specified recording.",
                "operationId": "getCallRecording",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recording found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallRecordingMetadata"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d/recordings/r-d68201ef-d53e-4c6d-a743-1c1283909d41' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        var recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetCallRecordingAsync(accountId, callId, recordingId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.CallRecordingMetadata;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Call id is returned after successfully creating a call.\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        String recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<CallRecordingMetadata>> completableFuture = client.getVoiceClient().getAPIController().getCallRecordingAsync(ACCOUNT_ID, callId, recordingId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst recordingId = 'r-abc12345-6def-abc1-2345-6defabc12345';\r\n\r\nconst getCallRecording = async function() {\r\n  try {\r\n      const response = await controller.getCallRecording(accountId, callId, recordingId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetCallRecording();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n$recordingId = \"r-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getCallRecording($BW_ACCOUNT_ID, $callId, $recordingId);\r\n    print_r($response->getResult()->applicationId);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\ntry:\r\n    response = voice_client.get_call_recording(BW_ACCOUNT_ID, call_id, recording_id)\r\n    print(response.body.application_id)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n  \r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbegin\r\n    response = voice_client.get_call_recording(\"12345\", call_id, recording_id)\r\n    puts response.data.application_id\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Delete Recording",
                "description": "Delete the recording information, media and transcription.\n\nNote: After the deletion is requested and a `204` is returned, neither the recording metadata nor the actual media nor its transcription will be accessible anymore. However, the media of the specified recording is not deleted immediately. This deletion process, while transparent and irreversible, can take an additional 24 to 48 hours.",
                "operationId": "deleteRecording",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The recording was successfully deleted"
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d/recordings/r-d68201ef-d53e-4c6d-a743-1c1283909d41' \\\r\n    -X DELETE \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        var recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            await client.Voice.APIController.DeleteRecordingAsync(accountId, callId, recordingId);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Call id is returned after successfully creating a call.\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        String recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<Void>> completableFuture = client.getVoiceClient().getAPIController().deleteRecordingAsync(ACCOUNT_ID, callId, recordingId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst recordingId = 'r-abc12345-6def-abc1-2345-6defabc12345';\r\n\r\nconst deleteRecording = async function() {\r\n  // Delete the recording information, media and transcription.\r\n  try {\r\n      const response = await controller.deleteRecording(accountId, callId, recordingId);\r\n      console.log(response.body);\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ndeleteRecording();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n$recordingId = \"r-1234\";\r\n\r\ntry {\r\n    $voiceClient->deleteRecording($BW_ACCOUNT_ID, $callId, $recordingId);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\ntry:\r\n    voice_client.delete_recording(BW_ACCOUNT_ID, call_id, recording_id)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n  \r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbegin\r\n    voice_client.delete_recording(\"12345\", call_id, recording_id)\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/calls/{callId}/recordings/{recordingId}/media": {
            "get": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Download Recording",
                "description": "Downloads the specified recording.",
                "operationId": "downloadCallRecording",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media found",
                        "content": {
                            "audio/vnd.wave": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "audio/mpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d/recordings/r-d68201ef-d53e-4c6d-a743-1c1283909d41/media' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        var recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetDownloadCallRecordingAsync(accountId, callId, recordingId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.DynamicResponse;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Call id is returned after successfully creating a call.\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        String recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<DynamicResponse>> completableFuture = client.getVoiceClient().getAPIController().getDownloadCallRecordingAsync(ACCOUNT_ID, callId, recordingId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst recordingId = 'r-abc12345-6def-abc1-2345-6defabc12345';\r\n\r\ntry {\r\n    const response = await controller.getDownloadCallRecording(accountId, callId, recordingId);\r\n    console.log(response);\r\n} catch (error) {\r\n    console.error(error);\r\n}\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n  \r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n$recordingId = \"r-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getDownloadCallRecording($BW_ACCOUNT_ID, $callId, $recordingId);\r\n    $downloaded_recording = $response->getResult();\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\ntry:\r\n    response = voice_client.get_download_call_recording(BW_ACCOUNT_ID, call_id, recording_id)\r\n    downloaded_recording = response.body\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n  \r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: BW_USERNAME,\r\n    voice_basic_auth_password: BW_PASSWORD\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbegin\r\n    result = voice_client.get_download_call_recording(BW_ACCOUNT_ID, call_id, recording_id)\r\n    downloaded_recording = result.data\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Delete Recording Media",
                "description": "Deletes the specified recording's media.",
                "operationId": "deleteRecordingMedia",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The recording media was successfully deleted"
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d/recordings/r-d68201ef-d53e-4c6d-a743-1c1283909d41/media' \\\r\n    -X DELETE \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        var recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            await client.Voice.APIController.DeleteRecordingMediaAsync(accountId, callId, recordingId);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Call id is returned after successfully creating a call.\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        String recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<Void>> completableFuture = client.getVoiceClient().getAPIController().deleteRecordingMediaAsync(ACCOUNT_ID, callId, recordingId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst recordingId = 'r-abc12345-6def-abc1-2345-6defabc12345';\r\n\r\nconst deleteRecordingMedia = async function() {\r\n  // Delete the media of the specified recording.\r\n  try {\r\n      const response = await controller.deleteRecordingMedia(accountId, callId, recordingId);\r\n      console.log(response.body);\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ndeleteRecordingMedia();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n$recordingId = \"r-1234\";\r\n\r\ntry {\r\n    $voiceClient->deleteRecordingMedia($BW_ACCOUNT_ID, $callId, $recordingId);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\ntry:\r\n    voice_client.delete_recording_media(BW_ACCOUNT_ID, call_id, recording_id)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n  \r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbegin\r\n    voice_client.delete_recording_media(\"12345\", call_id, recording_id)\r\nrescue APIException => e\r\n    print(e.response_code)\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/calls/{callId}/recordings/{recordingId}/transcription": {
            "get": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Get Transcription",
                "description": "Downloads the specified transcription.\n\nIf the transcribed recording was multi-channel, then there will be 2 transcripts.\nThe caller/called party transcript will be the first item while [`<PlayAudio>`](/docs/voice/bxml/playAudio) and [`<SpeakSentence>`](/docs/voice/bxml/speakSentence) transcript will be the second item.\nDuring a [`<Transfer>`](/docs/voice/bxml/transfer) the A-leg transcript will be the first item while the B-leg transcript will be the second item.",
                "operationId": "getCallTranscription",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transcription found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TranscriptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d/recordings/r-d68201ef-d53e-4c6d-a743-1c1283909d41/transcription' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        var recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetCallTranscriptionAsync(accountId, callId, recordingId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.TranscriptionResponse;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Call id is returned after successfully creating a call.\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        String recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<TranscriptionResponse>> completableFuture = client.getVoiceClient().getAPIController().getCallTranscriptionAsync(ACCOUNT_ID, callId, recordingId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst recordingId = 'r-abc12345-6def-abc1-2345-6defabc12345';\r\n\r\nconst getCallTranscription = async function() {\r\n  try {\r\n      const response = await controller.getRecordingTranscription(accountId, callId, recordingId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetCallTranscription();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n$recordingId = \"r-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getCallTranscription($BW_ACCOUNT_ID, $callId, $recordingId);\r\n    print_r($response->getResult()->transcripts);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\ntry:\r\n    response = voice_client.get_call_transcription(BW_ACCOUNT_ID, call_id, recording_id)\r\n    print(response.body.transcripts)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n  \r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbegin\r\n    response = voice_client.get_call_transcription(\"12345\", call_id, recording_id)\r\n    puts response.data.transcripts\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Create Transcription Request",
                "description": "Generate the transcription for a specific recording. Transcription can succeed only for recordings of length greater than 500 milliseconds and less than 4 hours.",
                "operationId": "transcribeCallRecording",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TranscribeRecordingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Transcription successfully requested"
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "The media for this recording has been deleted, so we can't transcribe it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d/recordings/r-d68201ef-d53e-4c6d-a743-1c1283909d41/transcription' \\\r\n    -X POST \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \\\r\n    -H 'Content-Type: application/json' \\\r\n    -d '{\r\n        \"callbackUrl\": \"http://example.com\",\r\n        \"callbackMethod\": \"POST\",\r\n        \"username\": \"string\",\r\n        \"password\": \"string\",\r\n        \"tag\": \"string\",\r\n        \"callbackTimeout\": 0\"\r\n    }'\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        var recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        var baseUrl = \"https://sample.com\";\r\n        var transcribeUrl = string.Concat(baseUrl, \"/callbacks/transcribe\");\r\n\r\n        var request = new TranscribeRecordingRequest\r\n        {\r\n            CallbackUrl = transcribeUrl\r\n        };\r\n\r\n        try\r\n        {\r\n            await client.Voice.APIController.CreateTranscribeCallRecordingAsync(accountId, callId, recordingId, request);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.*;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        String recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        TranscribeRecordingRequest request = new TranscribeRecordingRequest();\r\n        request.setCallbackUrl(\"https://sample.com/callbacks/transcribe\");\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<Void>> completableFuture = client.getVoiceClient().getAPIController().createTranscribeCallRecordingAsync(ACCOUNT_ID, callId, recordingId, request);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst recordingId = 'r-abc12345-6def-abc1-2345-6defabc12345';\r\n\r\nconst transcribeRecording = async function() {\r\n  try {\r\n      const response = await controller.createTranscribeRecording(accountId, callId, recordingId, {\r\n        callbackUrl: 'https://www.myapp.com/transcription'\r\n      });\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ntranscribeRecording();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n  \r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n$recordingId = \"r-1234\";\r\n\r\n$body = new BandwidthLib\\Voice\\Models\\TranscribeRecordingRequest();\r\n$body->callbackUrl = \"https://callback-url.com\";\r\n\r\ntry {\r\n    $voiceClient->createTranscribeCallRecording($BW_ACCOUNT_ID, $callId, $recordingId, $body);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.voice.models.transcribe_recording_request import TranscribeRecordingRequest\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbody = TranscribeRecordingRequest()\r\nbody.callback_url = \"https://callback-url.com\"\r\n\r\ntry:\r\n    voice_client.create_transcribe_call_recording(BW_ACCOUNT_ID, call_id, recording_id, body)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n  \r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbody = TranscribeRecordingRequest.new\r\nbody.callback_url = \"https://callback-url.com\"\r\n\r\nbegin\r\n    voice_client.create_transcribe_call_recording(\"12345\", call_id, recording_id, body)\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n\r\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Delete Transcription",
                "description": "Deletes the specified recording's transcription.\n\nNote: After the deletion is requested and a `204` is returned, the transcription will not be accessible anymore. However, it is not deleted immediately. This deletion process, while transparent and irreversible, can take an additional 24 to 48 hours.",
                "operationId": "deleteCallTranscription",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The transcription was successfully deleted"
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/calls/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d/recordings/r-d68201ef-d53e-4c6d-a743-1c1283909d41/transcription' \\\r\n    -X DELETE \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        var recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            await client.Voice.APIController.DeleteCallTranscriptionAsync(accountId, callId, recordingId);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Call id is returned after successfully creating a call.\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        String recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<Void>> completableFuture = client.getVoiceClient().getAPIController().deleteCallTranscriptionAsync(ACCOUNT_ID, callId, recordingId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst callId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst recordingId = 'r-abc12345-6def-abc1-2345-6defabc12345';\r\n\r\nconst deleteTranscription = async function() {\r\n  try {\r\n      const response = await controller.deleteCallTranscription(accountId, callId, recordingId);\r\n      console.log(response.body);\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ndeleteTranscription();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$callId = \"c-1234\";\r\n$recordingId = \"r-1234\";\r\n\r\ntry {\r\n    $voiceClient->deleteCallTranscription($BW_ACCOUNT_ID, $callId, $recordingId);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\ntry:\r\n    voice_client.delete_call_transcription(BW_ACCOUNT_ID, call_id, recording_id)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n  \r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ncall_id = \"c-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbegin\r\n    voice_client.delete_call_transcription(\"12345\", call_id, recording_id)\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/conferences": {
            "get": {
                "tags": [
                    "Conferences"
                ],
                "summary": "Get Conferences",
                "description": "Returns a max of 1000 conferences, sorted by `createdTime` from oldest to newest.\n\n**NOTE:** If the number of conferences in the account is bigger than `pageSize`, a `Link` header (with format `<{url}>; rel=\"next\"`) will be returned in the response. The url can be used to retrieve the next page of conference records.",
                "operationId": "getConferences",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by the `name` field."
                    },
                    {
                        "name": "minCreatedTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results to conferences which have a `createdTime` after or at `minCreatedTime` (in ISO8601 format)."
                    },
                    {
                        "name": "maxCreatedTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results to conferences which have a `createdTime` before or at `maxCreatedTime` (in ISO8601 format)."
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1000
                        },
                        "description": "Specifies the max number of conferences that will be returned. Range: integer values between 1 - 1000. Default value is 1000."
                    },
                    {
                        "name": "pageToken",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Not intended for explicit use. To use pagination, follow the links in the `Link` header of the response, as indicated in the endpoint description."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConferenceState"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/conferences' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetConferencesAsync(accountId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.ConferenceState;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.List;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<List<ConferenceState>>> completableFuture = client.getVoiceClient().getAPIController().getConferencesAsync(ACCOUNT_ID, null, null, null, null, null);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst getConferences = async function() {\r\n  try {\r\n      const response = await controller.getConferencesByAccount(accountId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetConferences();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\ntry {\r\n    $response = $voiceClient->getConferences($BW_ACCOUNT_ID);\r\n    if (count($response->getResult()) > 0) {\r\n        print_r($response->getResult()[0]->id);\r\n    }\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ntry:\r\n    response = voice_client.get_conferences(BW_ACCOUNT_ID)\r\n    if len(response.body) > 0:\r\n        print(response.body[0].id)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbegin\r\n    response = voice_client.get_conferences(\"12345\")\r\n    if response.data.length > 0\r\n        puts response.data[0].id\r\n    end\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/conferences/{conferenceId}": {
            "get": {
                "tags": [
                    "Conferences"
                ],
                "summary": "Get Conference Information",
                "description": "Returns information about the specified conference.",
                "operationId": "getConference",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "conferenceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conference found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConferenceState"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/conferences/conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        var conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetConferenceAsync(accountId, conferenceId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.ConferenceState;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Conference id is returned after successfully creating a conference.\r\n        String conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<ConferenceState>> completableFuture = client.getVoiceClient().getAPIController().getConferenceAsync(ACCOUNT_ID, conferenceId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst conferenceId = 'conf-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\n\r\nconst getConference = async function() {\r\n  try {\r\n      const response = await controller.getConferenceById(accountId, conferenceId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetConference();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$conferenceId = \"conf-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getConference($BW_ACCOUNT_ID, $conferenceId);\r\n    print_r($response->getResult()->name);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\n\r\ntry:\r\n    response = voice_client.get_conference(BW_ACCOUNT_ID, conference_id)\r\n    print(response.body.name)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n  \r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\n\r\nbegin\r\n    response = voice_client.get_conference(\"12345\", conference_id)\r\n    print(response.data.name)\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Conferences"
                ],
                "summary": "Update Conference",
                "description": "Modify the conference state.",
                "operationId": "modifyConference",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "conferenceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyConferenceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Conference successfully modified"
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/conferences/conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8' \\\r\n    -X POST \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \\\r\n    -H 'Content-Type: application/json' \\\r\n    -d '{\r\n        \"status\": \"active\",\r\n        \"redirectUrl\": \"http://example.com\",\r\n        \"redirectFallbackUrl\": \"http://example.com\",\r\n        \"redirectMethod\": \"POST\",\r\n        \"redirectFallbackMethod\": \"POST\",\r\n        \"username\": \"string\",\r\n        \"password\": \"string\",\r\n        \"fallbackUsername\": \"string\",\r\n        \"fallbackPassword\": \"string\"\r\n    }'\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        var conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        var request = new ModifyConferenceRequest\r\n        {\r\n            Status = StatusEnum.Completed\r\n        };\r\n\r\n        try\r\n        {\r\n            await client.Voice.APIController.ModifyConferenceAsync(accountId, conferenceId, request);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.*;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        String conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        ModifyConferenceRequest request = new ModifyConferenceRequest();\r\n        request.setStatus(StatusEnum.COMPLETED);\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<Void>> completableFuture = client.getVoiceClient().getAPIController().modifyConferenceAsync(ACCOUNT_ID, conferenceId, request);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst conferenceId = 'conf-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\n\r\nconst modifyConference = async function() {\r\n  try {\r\n      const response = await controller.modifyConference(accountId, conferenceId, {\r\n        status: 'active',\r\n        redirectUrl: 'http://www.myapp.com/new'\r\n      });\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\nmodifyConference();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n  \r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$conferenceId = \"conf-1234\";\r\n\r\n$body = new BandwidthLib\\Voice\\Models\\ModifyConferenceRequest();\r\n$body->state = \"active\";\r\n\r\ntry {\r\n    $voiceClient->modifyConference($BW_ACCOUNT_ID, $conferenceId, $body);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.voice.models.modify_conference_request import ModifyConferenceRequest\r\nfrom bandwidth.voice.models.status_enum import StatusEnum\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbody = ModifyConferenceRequest()\r\nbody.status = StatusEnum.ACTIVE\r\n\r\nconference_id = \"conf-1234\"\r\n\r\ntry:\r\n    voice_client.modify_conference(BW_ACCOUNT_ID, conference_id, body)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbody = ModifyConferenceRequest.new\r\nbody.status = StatusEnum::ACTIVE\r\n\r\nconference_id = \"conf-1234\"\r\n\r\nbegin\r\n    voice_client.modify_conference(\"12345\", conference_id, body)\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/conferences/{conferenceId}/members/{memberId}": {
            "get": {
                "tags": [
                    "Conferences"
                ],
                "summary": "Get Conference Member",
                "description": "Returns information about the specified conference member.",
                "operationId": "getConferenceMember",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "conferenceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "memberId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conference member found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConferenceMemberState"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/conferences/conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8/members/c-95ac8d8d-b81437f5-4586-4d5b-9b46-29f8b3fe0aaf' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        var conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n        var memberId = \"c-95ac8d8d-b81437f5-4586-4d5b-9b46-29f8b3fe0aaf\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetConferenceMemberAsync(accountId, conferenceId, memberId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.ConferenceMemberState;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        String conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n        String memberId = \"c-95ac8d8d-b81437f5-4586-4d5b-9b46-29f8b3fe0aaf\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<ConferenceMemberState>> completableFuture = client.getVoiceClient().getAPIController().getConferenceMemberAsync(ACCOUNT_ID, conferenceId, memberId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst conferenceId = 'conf-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst memberId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\n\r\nconst getConferenceMember = async function() {\r\n  try {\r\n      const response = await controller.getConferenceMember(accountId, conferenceId, memberId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetConferenceMember();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$conferenceId = \"conf-1234\";\r\n$memberId = \"m-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getConferenceMember($BW_ACCOUNT_ID, $conferenceId, $memberId);\r\n    print_r($response->getResult()->memberUrl);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\nmember_id = \"m-1234\"\r\n\r\ntry:\r\n    response = voice_client.get_conference_member(BW_ACCOUNT_ID, conference_id, member_id)\r\n    print(response.body.member_url)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n  \r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\nmember_id = \"m-1234\"\r\n\r\nbegin\r\n    response = voice_client.get_conference_member(\"12345\", conference_id, member_id)\r\n    puts response.data.member_url\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Conferences"
                ],
                "summary": "Update Conference Member",
                "description": "Updates settings for a particular conference member.",
                "operationId": "modifyConferenceMember",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "conferenceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "memberId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConferenceMemberState"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Conference member successfully modified"
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/conferences/conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8/members/c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d' \\\r\n    -X PUT \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=' \\\r\n    -H 'Content-Type: application/json' \\\r\n    -d '{\r\n        \"callId\": \"string\",\r\n        \"conferenceId\": \"string\",\r\n        \"memberUrl\": \"string\",\r\n        \"mute\": true,\r\n        \"hold\": true,\r\n        \"callIdsToCoach\": [\r\n            \"string\"\r\n        ]\r\n    }'\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        var conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n        // Call id is returned after successfully creating a call.\r\n        var callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        var detail = new ConferenceMemberState\r\n        {\r\n            Mute = true\r\n        };\r\n\r\n        try\r\n        {\r\n            await client.Voice.APIController.ModifyConferenceMemberAsync(accountId, conferenceId, callId, detail);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.*;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        String conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n        String callId = \"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        ConferenceMemberState conferenceMemberState = new ConferenceMemberState();\r\n        conferenceMemberState.setMute(true);\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<Void>> completableFuture = client.getVoiceClient().getAPIController().modifyConferenceMemberAsync(ACCOUNT_ID, conferenceId, callId, conferenceMemberState);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst conferenceId = 'conf-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst memberId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\n\r\nconst modifyConferenceMember = async function() {\r\n  try {\r\n      const response = await controller.modifyConferenceMember(accountId, conferenceId, memberId, {\r\n        mute: true,\r\n        callIdsToCoach : [\"c-95ac8d6e-1a31c52e-b38f-4198-93c1-51633ec68f8d\", \"c-2a913f94-6a486f3a-3cae-4034-bcc3-f0c9fa77ca2f\"]\r\n      });\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\nmodifyConferenceMember();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n  \r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$conferenceId = \"conf-1234\";\r\n$callId = \"c-1234\";\r\n\r\n$body = new BandwidthLib\\Voice\\Models\\ConferenceMemberState();\r\n$body->mute = true;\r\n\r\ntry {\r\n    $voiceClient->modifyConferenceMember($BW_ACCOUNT_ID, $conferenceId, $callId, $body);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.voice.models.conference_member_state import ConferenceMemberState\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbody = ConferenceMemberState()\r\nbody.mute = True\r\n\r\nconference_id = \"conf-1234\"\r\ncall_id = \"c-1234\"\r\n\r\ntry:\r\n    voice_client.modify_conference_member(BW_ACCOUNT_ID, conference_id, call_id, body)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbody = ConferenceMemberState.new\r\nbody.mute = true\r\n\r\nconference_id = \"conf-1234\"\r\ncall_id = \"c-1234\"\r\n\r\nbegin\r\n    voice_client.modify_conference_member(\"12345\", conference_id, call_id, body)\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/conferences/{conferenceId}/recordings": {
            "get": {
                "tags": [
                    "Conferences"
                ],
                "summary": "Get Conference Recordings",
                "description": "Returns a (potentially empty) list of metadata for the recordings that took place during the specified conference.",
                "operationId": "getConferenceRecordings",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "conferenceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recordings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConferenceRecordingMetadata"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/conferences/conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8/recordings' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        var conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetConferenceRecordingsAsync(accountId, conferenceId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.ConferenceRecordingMetadata;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.List;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        String conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<List<ConferenceRecordingMetadata>>> completableFuture = client.getVoiceClient().getAPIController().getConferenceRecordingsAsync(ACCOUNT_ID, conferenceId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst conferenceId = 'c-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\n\r\nconst getConferenceRecordings = async function() {\r\n  try {\r\n      const response = await controller.getQueryMetadataForAccountAndConference(accountId, conferenceId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetConferenceRecordings();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$conferenceId = \"c-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getConferenceRecordings($BW_ACCOUNT_ID, $conferenceId);\r\n    if (count($response->getResult()) > 0) {\r\n        print_r($response->getResult()[0]->name);\r\n    }\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\n\r\ntry:\r\n    response = voice_client.get_conference_recordings(BW_ACCOUNT_ID, conference_id)\r\n    if len(response.body) > 0:\r\n        print(response.body[0].name)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\n\r\nbegin\r\n    response = voice_client.get_conference_recordings(\"12345\", conference_id)\r\n    if response.data.length > 0\r\n        puts response.body[0].name\r\n    end\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/conferences/{conferenceId}/recordings/{recordingId}": {
            "get": {
                "tags": [
                    "Conferences"
                ],
                "summary": "Get Conference Recording Information",
                "description": "Returns metadata for the specified recording.",
                "operationId": "getConferenceRecording",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "conferenceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recording found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallRecordingMetadata"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/conferences/conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8/recordings/r-d68201ef-d53e-4c6d-a743-1c1283909d41' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        var conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n        var recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetConferenceRecordingAsync(accountId, conferenceId, recordingId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.CallRecordingMetadata;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        String conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n        String recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<CallRecordingMetadata>> completableFuture = client.getVoiceClient().getAPIController().getConferenceRecordingAsync(ACCOUNT_ID, conferenceId, recordingId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst conferenceId = 'conf-abc12345-6defabc1-2345-6def-abc1-23456defabc1';\r\nconst recordingId = 'r-abc12345-6def-abc1-2345-6defabc12345';\r\n\r\nconst getConferenceRecording = async function() {\r\n  try {\r\n      const response = await controller.getMetadataForConferenceRecording(accountId, conferenceId, recordingId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetConferenceRecording();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n\r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$conferenceId = \"c-1234\";\r\n$recordingId = \"r-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getConferenceRecording($BW_ACCOUNT_ID, $conferenceId, $recordingId);\r\n    print_r($response->getResult()->applicationId);\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\ntry:\r\n    response = voice_client.get_conference_recording(BW_ACCOUNT_ID, conference_id, recording_id)\r\n    print(response.body.application_id)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbegin\r\n    response = voice_client.get_conference_recording(\"12345\", conference_id, recording_id)\r\n    puts response.body.application_id\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/conferences/{conferenceId}/recordings/{recordingId}/media": {
            "get": {
                "tags": [
                    "Conferences"
                ],
                "summary": "Download Conference Recording",
                "description": "Downloads the specified recording file.",
                "operationId": "downloadConferenceRecording",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "conferenceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recordingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media found",
                        "content": {
                            "audio/vnd.wave": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "audio/mpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/conferences/conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8/recordings/r-d68201ef-d53e-4c6d-a743-1c1283909d41/media' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        var conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        var recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetDownloadConferenceRecordingAsync(accountId, conferenceId, recordingId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.DynamicResponse;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        // Conference id is returned after successfully creating a conference.\r\n        String conferenceId = \"conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8\";\r\n        // Recording id is returned after retrieving a recording from the call.\r\n        String recordingId = \"r-d68201ef-d53e-4c6d-a743-1c1283909d41\";\r\n\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<DynamicResponse>> completableFuture = client.getVoiceClient().getAPIController().getDownloadConferenceRecordingAsync(ACCOUNT_ID, conferenceId, recordingId);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst conferenceId = 'conf-95ac8d8d-28e06798-2afe-434c-b0f4-666a79cd47f8';\r\nconst recordingId = 'r-abc12345-6def-abc1-2345-6defabc12345';\r\n\r\ntry {\r\n    const response = await controller.getDownloadConferenceRecording(accountId, conferenceId, recordingId);\r\n    console.log(response);\r\n} catch (error) {\r\n    console.error(error);\r\n}\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n  \r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\n$conferenceId = \"conf-1234\";\r\n$recordingId = \"r-1234\";\r\n\r\ntry {\r\n    $response = $voiceClient->getDownloadConferenceRecording($BW_ACCOUNT_ID, $conferenceId, $recordingId);\r\n    $downloaded_recording = $response->getResult();\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\ntry:\r\n    response = voice_client.get_download_conference_recording(BW_ACCOUNT_ID, conference_id, recording_id)\r\n    downloaded_recording = response.body\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: BW_USERNAME,\r\n    voice_basic_auth_password: BW_PASSWORD\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nconference_id = \"conf-1234\"\r\nrecording_id = \"r-1234\"\r\n\r\nbegin\r\n    result = voice_client.get_download_conference_recording(BW_ACCOUNT_ID, conference_id, recording_id)\r\n    downloaded_recording = result.data\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        },
        "/api/v2/accounts/{accountId}/recordings": {
            "get": {
                "tags": [
                    "Recordings"
                ],
                "summary": "Get Call Recordings",
                "description": "Returns a list of metadata for the recordings associated with the specified account. The list can be filtered by the optional from, to, minStartTime, and maxStartTime arguments. The list is capped at 1000 entries and may be empty if no recordings match the specified criteria.",
                "operationId": "queryCallRecordings",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by the `from` field."
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by the `to` field."
                    },
                    {
                        "name": "minStartTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results to recordings which have a `startTime` after or including `minStartTime` (in ISO8601 format)."
                    },
                    {
                        "name": "maxStartTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results to recordings which have a `startTime` before `maxStartTime` (in ISO8601 format)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recordings retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallRecordingMetadata"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
                    },
                    "403": {
                        "description": "User unauthorized to perform this action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified cannot be found or does not belong to you.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
                        "headers": {
                            "Retry-After": {
                                "description": "When you should try your request again",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Something unexpected happened. Please try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "source": "curl 'https://voice.bandwidth.com/api/v2/accounts/12345/recordings' \\\r\n    -H 'Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ='\r\n"
                    },
                    {
                        "lang": "C#",
                        "source": "using System;\r\nusing System.Threading.Tasks;\r\nusing Bandwidth.Standard;\r\nusing Bandwidth.Standard.Exceptions;\r\nusing Bandwidth.Standard.Voice.Models;\r\n\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var username = \"api-username\";\r\n        var password = \"api-pasword\";\r\n        var accountId = \"12345\";\r\n\r\n        var client = new BandwidthClient.Builder()\r\n            .VoiceBasicAuthCredentials(username, password)\r\n            .Build();\r\n\r\n        try\r\n        {\r\n            var response = await client.Voice.APIController.GetQueryCallRecordingsAsync(accountId);\r\n            Console.WriteLine(response.Data);\r\n        }\r\n        catch (ApiException e)\r\n        {\r\n            Console.WriteLine(e.Message);\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Java",
                        "source": "import com.bandwidth.BandwidthClient;\r\nimport com.bandwidth.http.response.ApiResponse;\r\nimport com.bandwidth.voice.models.*;\r\n\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.List;\r\n\r\npublic class Sample {\r\n    public static final String USERNAME = \"api-username\";\r\n    public static final String PASSWORD = \"api-password\";\r\n    public static final String ACCOUNT_ID = \"12345\";\r\n\r\n    public static void main(String[] args) {\r\n        BandwidthClient client = new BandwidthClient.Builder()\r\n                .voiceBasicAuthCredentials(USERNAME, PASSWORD)\r\n                .build();\r\n\r\n        try {\r\n            CompletableFuture<ApiResponse<List<CallRecordingMetadata>>> completableFuture = client.getVoiceClient().getAPIController().getQueryCallRecordingsAsync(ACCOUNT_ID, null, null, null, null);\r\n            System.out.println(completableFuture.get().getResult());\r\n        } catch (InterruptedException | ExecutionException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
                    },
                    {
                        "lang": "Node.js",
                        "source": "import { Client, ApiController } from '@bandwidth/voice';\r\n\r\nconst BW_USERNAME = \"api-username\";\r\nconst BW_PASSWORD = \"api-password\";\r\nconst BW_ACCOUNT_ID = \"12345\";\r\n\r\nconst client = new Client({\r\n  basicAuthUserName: BW_USERNAME,\r\n  basicAuthPassword: BW_PASSWORD\r\n});\r\n\r\nconst controller = new ApiController(client);\r\n\r\nconst accountId = BW_ACCOUNT_ID;\r\n\r\nconst getCallRecordings = async function() {\r\n  try {\r\n      const response = await controller.getQueryMetadataForAccount(accountId);\r\n      console.log(response)\r\n  } catch(error) {\r\n      console.error(error);\r\n  }\r\n}\r\n\r\ngetCallRecordings();\r\n"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\r\n  \r\nrequire \"vendor/autoload.php\";\r\n\r\napi-username = \"api-username\";\r\napi-password = \"api-pasword\";\r\n12345 = \"12345\";\r\n\r\n$config = new BandwidthLib\\Configuration(\r\n    array(\r\n        'voiceBasicAuthUserName' => $BW_USERNAME,\r\n        'voiceBasicAuthPassword' => $BW_PASSWORD,\r\n    )\r\n);\r\n$client = new BandwidthLib\\BandwidthClient($config);\r\n\r\n$voiceClient = $client->getVoice()->getClient();\r\n\r\ntry {\r\n    $response = $voiceClient->getQueryCallRecordings($BW_ACCOUNT_ID);\r\n    if (count($response->getResult()) > 0) {\r\n        print_r($response->getResult()[0]->recordingId);\r\n    }\r\n} catch (BandwidthLib\\APIException $e) {\r\n    print_r($e->getResponseCode());\r\n}\r\n"
                    },
                    {
                        "lang": "Python",
                        "source": "from bandwidth.bandwidth_client import BandwidthClient\r\nfrom bandwidth.exceptions.api_exception import APIException\r\n\r\nimport os\r\n\r\nBW_USERNAME = \"api-username\"\r\nBW_PASSWORD = \"api-password\"\r\nBW_ACCOUNT_ID = \"12345\"\r\n\r\nbandwidth_client = BandwidthClient(\r\n    voice_basic_auth_user_name=BW_USERNAME,\r\n    voice_basic_auth_password=BW_PASSWORD\r\n)\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\ntry:\r\n    result = voice_client.get_query_call_recordings(BW_ACCOUNT_ID)\r\n    if len(result.body) > 0:\r\n        print(result.body[0].recording_id)\r\nexcept APIException as e:\r\n    print(e.response_code)\r\n"
                    },
                    {
                        "lang": "Ruby",
                        "source": "require 'bandwidth'\r\n\r\ninclude Bandwidth\r\ninclude Bandwidth::Voice\r\n\r\nbandwidth_client = Bandwidth::Client.new(\r\n    voice_basic_auth_user_name: \"api-username\",\r\n    voice_basic_auth_password: \"api-password\"\r\n)\r\n\r\nvoice_client = bandwidth_client.voice_client.client\r\n\r\nbegin\r\n    result = voice_client.get_query_call_recordings(\"12345\")\r\n    if result.data.length > 0\r\n        puts result.data[0].recording_id\r\n    end\r\nrescue APIException => e\r\n    puts e.response_code\r\nend\r\n"
                    }
                ]
            }
        }
    },
    "servers": [
        {
            "url": "https://voice.bandwidth.com"
        }
    ],
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "schemas": {
            "CreateCallRequest": {
                "type": "object",
                "required": [
                    "answerUrl",
                    "applicationId",
                    "from",
                    "to"
                ],
                "properties": {
                    "from": {
                        "type": "string",
                        "example": "+15555555555",
                        "description": "A Bandwidth phone number on your account the call should come from (must be in E.164 format, like `+15555551212`, or be one of the following strings: `Restricted`, `Anonymous`, `Private`, or `Unavailable`)."
                    },
                    "to": {
                        "type": "string",
                        "example": "+15555555555, sip:john@doe.com",
                        "description": "The destination to call (must be an E.164 formatted number (e.g. `+15555551212`) or a SIP URI (e.g. `sip:user@server.com`))."
                    },
                    "uui": {
                        "nullable": true,
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiJ9.WyJoaSJd.-znkjYyCkgz4djmHUPSXl9YrJ6Nix_XvmlwKGFh5ERM;encoding=jwt,aGVsbG8gd29ybGQ=;encoding=base64",
                        "description": "A comma-separated list of 'User-To-User' headers to be sent in the INVITE when calling a SIP URI. Each value must end with an 'encoding' parameter as described in <a href='https://tools.ietf.org/html/rfc7433'>RFC 7433</a>. Only 'jwt' and 'base64' encodings are allowed. The entire value cannot exceed 350 characters, including parameters and separators."
                    },
                    "callTimeout": {
                        "nullable": true,
                        "type": "number",
                        "format": "double",
                        "description": "The timeout (in seconds) for the callee to answer the call after it starts ringing. If the call does not start ringing within 30s, the call will be cancelled regardless of this value.  Can be any numeric value (including decimals) between 1 and 300.<br>Default: 30"
                    },
                    "callbackTimeout": {
                        "nullable": true,
                        "type": "number",
                        "format": "double",
                        "description": "This is the timeout (in seconds) to use when delivering webhooks for the call. Can be any numeric value (including decimals) between 1 and 25.<br>Default: 15"
                    },
                    "answerUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "The full URL to send the <a href='/docs/voice/webhooks/answer'>Answer</a> event to when the called party answers. This endpoint should return the first <a href='/docs/voice/bxml'>BXML document</a> to be executed in the call."
                    },
                    "answerFallbackUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri",
                        "description": "A fallback url which, if provided, will be used to retry the `answer` webhook delivery in case `answerUrl` fails to respond"
                    },
                    "username": {
                        "nullable": true,
                        "type": "string",
                        "description": "The username to send in the HTTP request to `answerUrl` and `disconnectUrl`."
                    },
                    "password": {
                        "nullable": true,
                        "type": "string",
                        "description": "The password to send in the HTTP request to `answerUrl` and `disconnectUrl`."
                    },
                    "fallbackUsername": {
                        "nullable": true,
                        "type": "string",
                        "description": "The username to send in the HTTP request to `answerFallbackUrl`"
                    },
                    "fallbackPassword": {
                        "nullable": true,
                        "type": "string",
                        "description": "The password to send in the HTTP request to `answerFallbackUrl`"
                    },
                    "answerMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method to use for the request to `answerUrl`. GET or POST. Default value is POST."
                    },
                    "answerFallbackMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method to use to deliver the answer callback to `answerFallbackUrl`. GET or POST. Default value is POST."
                    },
                    "disconnectUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri",
                        "description": "The URL to send the <a href='/docs/voice/webhooks/disconnect'>Disconnect</a> event to when the call ends. This event does not expect a BXML response."
                    },
                    "disconnectMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method to use for the request to `disconnectUrl`. GET or POST. Default value is POST."
                    },
                    "tag": {
                        "nullable": true,
                        "type": "string",
                        "description": "A custom string that will be sent with all webhooks for this call unless overwritten by a future <a href='/docs/voice/bxml/tag'>`<Tag>`</a> verb or `tag` attribute on another verb, or cleared.<br><br>May be cleared by setting `tag=\"\"`<br><br>Max length 256 characters."
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The id of the application to associate this call with, for billing purposes."
                    },
                    "machineDetection": {
                        "$ref": "#/components/schemas/MachineDetectionConfiguration"
                    },
                    "priority": {
                        "nullable": true,
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "default": 5,
                        "description": "The priority of this call over other calls from your account when outbound call queueing is enabled. For example, if during a call your application needs to place a new call and bridge it with the current call, you might want to create the call with priority 1 so that it will be the next call picked off your queue, ahead of other less time sensitive calls.  A lower value means higher priority, so a priority 1 call takes precedence over a priority 2 call.<br>Range: integer values between 1 - 5.<br>Default value is 5."
                    }
                }
            },
            "CreateCallResponse": {
                "type": "object",
                "required": [
                    "accountId",
                    "answerMethod",
                    "answerUrl",
                    "applicationId",
                    "callId",
                    "callUrl",
                    "disconnectMethod",
                    "from",
                    "to"
                ],
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "callId": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "callUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "callTimeout": {
                        "type": "number",
                        "format": "double"
                    },
                    "callbackTimeout": {
                        "type": "number",
                        "format": "double"
                    },
                    "answerUrl": {
                        "type": "string",
                        "format": "uri"
                    },
                    "answerMethod": {
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ]
                    },
                    "answerFallbackUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri"
                    },
                    "answerFallbackMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ]
                    },
                    "disconnectUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri"
                    },
                    "disconnectMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ]
                    },
                    "username": {
                        "nullable": true,
                        "type": "string"
                    },
                    "password": {
                        "nullable": true,
                        "type": "string"
                    },
                    "fallbackUsername": {
                        "nullable": true,
                        "type": "string"
                    },
                    "fallbackPassword": {
                        "nullable": true,
                        "type": "string"
                    },
                    "tag": {
                        "nullable": true,
                        "type": "string"
                    }
                }
            },
            "CallState": {
                "type": "object",
                "properties": {
                    "callId": {
                        "type": "string"
                    },
                    "parentCallId": {
                        "nullable": true,
                        "type": "string",
                        "description": "The A-leg call id, set only if this call is the B-leg of a [`<Transfer>`](/docs/voice/bxml/transfer)."
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The application id associated  with the call."
                    },
                    "accountId": {
                        "type": "string",
                        "description": "The account id associated with the call."
                    },
                    "to": {
                        "type": "string",
                        "description": "The phone number that received the call, in E.164 format (e.g. +15555555555), or if the call was to a SIP URI, the SIP URI"
                    },
                    "from": {
                        "type": "string",
                        "description": "The phone number that made the call, in E.164 format (e.g. +15555555555)."
                    },
                    "direction": {
                        "type": "string",
                        "description": "The direction of the call. Either `inbound` or `outbound`."
                    },
                    "state": {
                        "description": "The current state of the call. Current possible values are 'queued', 'initiated', 'answered' and 'disconnected'. Additional states may be added in the future, so your application must be tolerant of unknown values.",
                        "type": "string"
                    },
                    "identity": {
                        "nullable": true,
                        "type": "string",
                        "description": "The value of the `Identity` header from the inbound invite request. Only present for inbound calls and if the account is configured to forward this header."
                    },
                    "stirShaken": {
                        "nullable": true,
                        "type": "object",
                        "description": "For inbound calls, the Bandwidth STIR/SHAKEN implementation will verify the information provided in the inbound invite request `Identity` header. The verification status is stored in the call state `stirShaken` property as follows.\n\n| Property          | Description |\n|:------------------|:------------|\n| verstat | (optional) The verification status indicating whether the verification was successful or not. Possible values are `TN-Verification-Passed` or `TN-Verification-Failed`. |\n| attestationIndicator | (optional) The attestation level verified by Bandwidth. Possible values are `A` (full), `B` (partial) or `C` (gateway). |\n| originatingId | (optional) A unique origination identifier. |\n\nMore information: [Understanding STIR/SHAKEN](https://www.bandwidth.com/regulations/stir-shaken)\n",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "enqueuedTime": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "If <a href='/docs/voice/rateLimits'>outbound call queueing</a> is enabled and this is an outbound call, the time this call was placed in queue."
                    },
                    "startTime": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the call was initiated, in ISO 8601 format. `null` if the call is still in your queue."
                    },
                    "answerTime": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "Populated once the call has been answered, with the time in ISO 8601 format."
                    },
                    "endTime": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "Populated once the call has ended, with the time in ISO 8601 format."
                    },
                    "disconnectCause": {
                        "nullable": true,
                        "type": "string",
                        "description": "Populated once the call has ended, with the reason the call ended. See above for possible values."
                    },
                    "errorMessage": {
                        "nullable": true,
                        "type": "string",
                        "description": "Populated only if the call ended with an error, with text explaining the reason."
                    },
                    "errorId": {
                        "nullable": true,
                        "type": "string",
                        "description": "Populated only if the call ended with an error, with a Bandwidth internal id that references the error event."
                    },
                    "lastUpdate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The last time the call had a state update, in ISO 8601 format."
                    }
                }
            },
            "ModifyCallRequest": {
                "type": "object",
                "properties": {
                    "state": {
                        "nullable": true,
                        "type": "string",
                        "default": "active",
                        "enum": [
                            "active",
                            "completed"
                        ],
                        "description": "The call state. Possible values:<br>`active` to redirect the call (default)<br>`completed` to hang up the call if it is answered, cancel it if it is an unanswered outbound call, or reject it if it an unanswered inbound call"
                    },
                    "redirectUrl": {
                        "description": "The URL to send the [Redirect](/docs/voice/bxml/redirect) event to which will provide new BXML<br><br>Required if `state` is `active`<br><br>Not allowed if `state` is `completed`",
                        "nullable": true,
                        "type": "string",
                        "format": "uri"
                    },
                    "redirectFallbackUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri",
                        "description": "A fallback url which, if provided, will be used to retry the redirect callback delivery in case `redirectUrl` fails to respond"
                    },
                    "redirectMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method to use for the request to `redirectUrl`. GET or POST. Default value is POST.<br><br>Not allowed if `state` is `completed`"
                    },
                    "redirectFallbackMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method to use to deliver the redirect callback to `redirectFallbackUrl`. GET or POST. Default value is POST."
                    },
                    "username": {
                        "nullable": true,
                        "type": "string",
                        "description": "The username to send in the HTTP request to `redirectUrl`"
                    },
                    "password": {
                        "nullable": true,
                        "type": "string",
                        "description": "The password to send in the HTTP request to `redirectUrl`"
                    },
                    "fallbackUsername": {
                        "nullable": true,
                        "type": "string",
                        "description": "The username to send in the HTTP request to `redirectFallbackUrl`"
                    },
                    "fallbackPassword": {
                        "nullable": true,
                        "type": "string",
                        "description": "The password to send in the HTTP request to `redirectFallbackUrl`"
                    },
                    "tag": {
                        "nullable": true,
                        "type": "string",
                        "description": "A custom string that will be sent with this and all future callbacks unless overwritten by a future `tag` attribute or [`<Tag>`](/docs/voice/bxml/tag) verb, or cleared.<br><br>May be cleared by setting `tag=\"\"`<br><br>Max length 256 characters.<br><br>Not allowed if `state` is `completed`"
                    }
                }
            },
            "ModifyCallRecordingRequest": {
                "type": "object",
                "required": [
                    "state"
                ],
                "properties": {
                    "state": {
                        "type": "string",
                        "enum": [
                            "paused",
                            "recording"
                        ],
                        "description": "The recording state. Possible values: <br><br> `paused` to pause an active recording<br>`recording` to resume a paused recording<br>"
                    }
                }
            },
            "AccountStatistics": {
                "type": "object",
                "properties": {
                    "maxCallQueueSize": {
                        "type": "string",
                        "description": "The maximum size of the queue before outgoing calls start being rejected."
                    },
                    "currentCallQueueSize": {
                        "type": "string",
                        "description": "The number of calls currently enqueued."
                    }
                }
            },
            "CallRecordingMetadata": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The `applicationId` associated with the call"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "The account that placed the call"
                    },
                    "callId": {
                        "type": "string",
                        "description": "The `callId` of the call that created this recording"
                    },
                    "parentCallId": {
                        "nullable": true,
                        "type": "string",
                        "description": "If the call was a transferred leg, this field contains the `callId` of the call that executed the [`<Transfer>`](/docs/voice/bxml/transfer)"
                    },
                    "recordingId": {
                        "type": "string",
                        "description": "The recording's unique ID"
                    },
                    "to": {
                        "type": "string",
                        "description": "The phone number that received the call, in E.164 format (e.g. +15555555555), or if the call was to a SIP URI, the SIP URI"
                    },
                    "from": {
                        "type": "string",
                        "description": "The phone number that made the call, in E.164 format (e.g. +15555555555)."
                    },
                    "transferCallerId": {
                        "nullable": true,
                        "type": "string",
                        "description": "If the call was a transferred leg, the `transferCallerId` field from the [`<Transfer>`](/docs/voice/bxml/transfer), if any."
                    },
                    "transferTo": {
                        "nullable": true,
                        "type": "string",
                        "description": "If the call was a transferred leg, the number that the call was transferred to"
                    },
                    "duration": {
                        "type": "string",
                        "description": "The duration of the recording in ISO-8601 format"
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "inbound",
                            "outbound"
                        ],
                        "description": "The direction of the call."
                    },
                    "channels": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of channels in the recording. Either `1` or `2`"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time that the recording started in ISO 8601 format"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time that the recording ended in ISO 8601 format"
                    },
                    "fileFormat": {
                        "type": "string",
                        "enum": [
                            "mp3",
                            "wav"
                        ],
                        "description": "The format that the recording is stored in"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the recording. Current values are 'processing', 'partial', 'complete', 'deleted' and 'error'. Additional states may be added in the future, so your application must be tolerant of unknown values."
                    },
                    "mediaUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL that can be used to download the audio recording"
                    },
                    "transcription": {
                        "$ref": "#/components/schemas/TranscriptionMetadata"
                    }
                }
            },
            "ModifyConferenceRequest": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "completed"
                        ],
                        "default": "active",
                        "description": "Setting the conference state to `completed` ends the conference and ejects all members"
                    },
                    "redirectUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri",
                        "description": "The URL to send the [conferenceRedirect](/docs/voice/webhooks/conferenceRedirect) event which will provide new BXML. Not allowed if `state` is `completed`, but required if `state` is `active`"
                    },
                    "redirectFallbackUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri",
                        "description": "A fallback url which, if provided, will be used to retry the `conferenceRedirect` webhook delivery in case `redirectUrl` fails to respond.  Not allowed if `state` is `completed`."
                    },
                    "redirectMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method to use for the request to `redirectUrl`. Not allowed if `state` is `completed`."
                    },
                    "redirectFallbackMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method to use for the request to `redirectFallbackUrl`. Not allowed if `state` is `completed`."
                    },
                    "username": {
                        "nullable": true,
                        "type": "string",
                        "description": "The username to send in the HTTP request to `redirectUrl`."
                    },
                    "password": {
                        "nullable": true,
                        "type": "string",
                        "description": "The password to send in the HTTP request to `redirectUrl`."
                    },
                    "fallbackUsername": {
                        "nullable": true,
                        "type": "string",
                        "description": "The username to send in the HTTP request to `redirectFallbackUrl`."
                    },
                    "fallbackPassword": {
                        "nullable": true,
                        "type": "string",
                        "description": "The password to send in the HTTP request to `redirectFallbackUrl`."
                    }
                }
            },
            "ConferenceState": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Bandwidth-generated conference ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the conference, as specified by your application"
                    },
                    "createdTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the conference was initiated, in ISO 8601 format."
                    },
                    "completedTime": {
                        "nullable": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the conference was terminated, in ISO 8601 format."
                    },
                    "conferenceEventUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri",
                        "description": "The URL to send the conference-related events."
                    },
                    "conferenceEventMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method used for the requests to `conferenceEventUrl`."
                    },
                    "tag": {
                        "nullable": true,
                        "type": "string",
                        "description": "The custom string attached to the conference that will be sent with callbacks."
                    },
                    "activeMembers": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/ConferenceMemberState"
                        },
                        "description": "A list of active members of the conference. Omitted if this is a response to the [Get Conferences endpoint](/apis/voice/#operation/getConferences)"
                    }
                }
            },
            "ConferenceMemberState": {
                "type": "object",
                "properties": {
                    "callId": {
                        "type": "string",
                        "description": "The call ID of this conference member"
                    },
                    "conferenceId": {
                        "type": "string",
                        "description": "The Bandwidth-generated conference ID"
                    },
                    "memberUrl": {
                        "type": "string",
                        "description": "A URL that may be used to retrieve information about or update the state of this conference member. This is the URL of this member's [Get Conference Member](/apis/voice/#operation/getConferenceMember) endpoint and [Modify Conference Member](/apis/voice/#operation/modifyConferenceMember) endpoint."
                    },
                    "mute": {
                        "type": "boolean",
                        "description": "Whether or not this member is currently muted. Members who are muted are still able to hear other participants.\n\nIf used in a PUT request, updates this member's mute status. Has no effect if omitted."
                    },
                    "hold": {
                        "type": "boolean",
                        "description": "Whether or not this member is currently on hold. Members who are on hold are not able to hear or speak in the conference.\n\nIf used in a PUT request, updates this member's hold status. Has no effect if omitted."
                    },
                    "callIdsToCoach": {
                        "nullable": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "If this member had a value set for `callIdsToCoach` in its [Conference](/docs/voice/bxml/conference) verb or this list was added with a previous PUT request to modify the member, this is that list of calls.\n\nIf present in a PUT request, modifies the calls that this member is coaching. Has no effect if omitted. See the documentation for the [Conference](/docs/voice/bxml/conference) verb for more details about coaching.\nNote that this will not add the matching calls to the conference; each call must individually execute a Conference verb to join."
                    }
                }
            },
            "ConferenceRecordingMetadata": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your account ID"
                    },
                    "conferenceId": {
                        "type": "string",
                        "description": "The unique, Bandwidth-generated ID of the conference that was recorded"
                    },
                    "name": {
                        "type": "string",
                        "description": "The user-specified name of the conference that was recorded"
                    },
                    "recordingId": {
                        "type": "string",
                        "description": "The unique ID of this recording"
                    },
                    "duration": {
                        "type": "string",
                        "description": "The duration of the recording in ISO-8601 format"
                    },
                    "channels": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Always `1` for conference recordings; multi-channel recordings are not supported on conferences."
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time that the recording started in ISO-8601 format"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time that the recording ended in ISO-8601 format"
                    },
                    "fileFormat": {
                        "type": "string",
                        "enum": [
                            "mp3",
                            "wav"
                        ],
                        "description": "The format that the recording is stored in"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the recording. Current possible values are 'processing', 'partial', 'complete', 'deleted', and 'error'. Additional states may be added in the future, so your application must be tolerant of unknown values."
                    },
                    "mediaUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri",
                        "description": "The URL that can be used to download the recording. Only present if the recording is finished and may be downloaded."
                    }
                }
            },
            "MachineDetectionConfiguration": {
                "description": "The machine detection request used to perform <a href='/docs/voice/guides/machineDetection'>machine detection</a> on the call.<br>(Click arrow to expand machine detection options)",
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string",
                        "description": "The machine detection mode. If set to 'async', the detection result will be sent in a 'machineDetectionComplete' callback. If set to 'sync', the 'answer' callback will wait for the machine detection to complete and will include its result.",
                        "enum": [
                            "sync",
                            "async"
                        ],
                        "default": "async"
                    },
                    "detectionTimeout": {
                        "type": "number",
                        "format": "double",
                        "description": "The timeout used for the whole operation, in seconds. If no result is determined in this period, a callback with a `timeout` result is sent.",
                        "default": 15
                    },
                    "silenceTimeout": {
                        "type": "number",
                        "format": "double",
                        "description": "If no speech is detected in this period, a callback with a 'silence' result is sent.",
                        "default": 10
                    },
                    "speechThreshold": {
                        "type": "number",
                        "format": "double",
                        "description": "When speech has ended and a result couldn't be determined based on the audio content itself, this value is used to determine if the speaker is a machine based on the speech duration. If the length of the speech detected is greater than or equal to this threshold, the result will be 'answering-machine'. If the length of speech detected is below this threshold, the result will be 'human'.",
                        "default": 10
                    },
                    "speechEndThreshold": {
                        "type": "number",
                        "format": "double",
                        "description": "Amount of silence (in seconds) before assuming the callee has finished speaking.",
                        "default": 5
                    },
                    "delayResult": {
                        "type": "boolean",
                        "description": "If set to 'true' and if an answering machine is detected, the 'answering-machine' callback will be delayed until the machine is done speaking or until the 'detectionTimeout' is exceeded. If false, the 'answering-machine' result is sent immediately.",
                        "default": false
                    },
                    "callbackUrl": {
                        "nullable": true,
                        "description": "The URL to send the 'machineDetectionComplete' webhook when the detection is completed. Only for 'async' mode.",
                        "type": "string",
                        "format": "uri"
                    },
                    "callbackMethod": {
                        "nullable": true,
                        "type": "string",
                        "description": "The HTTP method to use for the request to `callbackUrl`. `GET` or `POST`.",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "default": "POST"
                    },
                    "fallbackUrl": {
                        "nullable": true,
                        "type": "string",
                        "format": "uri",
                        "description": "A fallback URL which, if provided, will be used to retry the machine detection complete webhook delivery in case `callbackUrl` fails to respond"
                    },
                    "fallbackMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method to use for the request to fallbackUrl. GET or POST.",
                        "default": "POST"
                    },
                    "username": {
                        "nullable": true,
                        "type": "string",
                        "description": "The username to send in the HTTP request to `callbackUrl`"
                    },
                    "password": {
                        "nullable": true,
                        "type": "string",
                        "description": "The password to send in the HTTP request to `callbackUrl`"
                    },
                    "fallbackUsername": {
                        "nullable": true,
                        "type": "string",
                        "description": "The username to send in the HTTP request to `fallbackUrl`"
                    },
                    "fallbackPassword": {
                        "nullable": true,
                        "type": "string",
                        "description": "The password to send in the HTTP request to `fallbackUrl`"
                    }
                }
            },
            "TranscribeRecordingRequest": {
                "type": "object",
                "properties": {
                    "callbackUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL to send the [TranscriptionAvailable](/docs/voice/webhooks/transcriptionAvailable) event to. You should not include sensitive or personally-identifiable information in the callbackUrl field! Always use the proper username and password fields for authorization."
                    },
                    "callbackMethod": {
                        "nullable": true,
                        "type": "string",
                        "enum": [
                            "POST",
                            "GET"
                        ],
                        "description": "The HTTP method to use for the request to `callbackUrl`. GET or POST. Default value is POST."
                    },
                    "username": {
                        "nullable": true,
                        "type": "string",
                        "description": "The username to send in the HTTP request to `callbackUrl`."
                    },
                    "password": {
                        "nullable": true,
                        "type": "string",
                        "description": "The password to send in the HTTP request to `callbackUrl`."
                    },
                    "tag": {
                        "nullable": true,
                        "type": "string",
                        "description": "A custom string that will be sent with the webhook to `callbackUrl`."
                    },
                    "callbackTimeout": {
                        "nullable": true,
                        "type": "number",
                        "format": "double",
                        "description": "This is the timeout (in seconds) to use when delivering the webhook to `callbackUrl`. Can be any numeric value (including decimals) between 1 and 25.<br>Default: 15"
                    }
                }
            },
            "TranscriptionResponse": {
                "type": "object",
                "properties": {
                    "transcripts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transcript"
                        }
                    }
                }
            },
            "TranscriptionMetadata": {
                "nullable": true,
                "type": "object",
                "description": "If the recording was transcribed, metadata about the transcription",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique transcription ID"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the transcription. Current values are 'none', 'processing', 'available', 'error', 'timeout', 'file-size-too-big', and 'file-size-too-small'. Additional states may be added in the future, so your application must be tolerant of unknown values."
                    },
                    "completedTime": {
                        "type": "string",
                        "description": "The time that the transcription was completed"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL of the [transcription](#operation/getCallTranscription)"
                    }
                }
            },
            "Transcript": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "The transcribed text"
                    },
                    "confidence": {
                        "type": "number",
                        "format": "double",
                        "description": "The confidence on the recognized content, ranging from `0.0` to `1.0` with `1.0` being the highest confidence."
                    }
                }
            },
            "ApiError": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "nullable": true,
                        "type": "string"
                    }
                }
            },
            "CallCallback": {
                "type": "object",
                "description": "This object represents all possible fields that may be included in callbacks related to call events, including events that come from BXML verbs",
                "properties": {
                    "eventType": {
                        "type": "string"
                    },
                    "eventTime": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "callId": {
                        "type": "string"
                    },
                    "callUrl": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "answerTime": {
                        "type": "string"
                    },
                    "transferCallerId": {
                        "type": "string"
                    },
                    "transferTo": {
                        "type": "string"
                    },
                    "cause": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "errorId": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "digit": {
                        "type": "string"
                    },
                    "parentCallId": {
                        "type": "string"
                    },
                    "recordingId": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "fileFormat": {
                        "type": "string"
                    },
                    "mediaUrl": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "channels": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "digits": {
                        "type": "string"
                    },
                    "terminatingDigit": {
                        "type": "string"
                    },
                    "transcription": {
                        "$ref": "#/components/schemas/Transcription"
                    },
                    "diversion": {
                        "$ref": "#/components/schemas/Diversion"
                    }
                }
            },
            "Transcription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "completedTime": {
                        "type": "string"
                    }
                }
            },
            "Diversion": {
                "type": "object",
                "properties": {
                    "reason": {
                        "type": "string"
                    },
                    "privacy": {
                        "type": "string"
                    },
                    "unknown": {
                        "type": "string"
                    },
                    "origTo": {
                        "type": "string"
                    }
                }
            },
            "ConferenceCallback": {
                "type": "object",
                "description": "This object represents all possible fields that may be included in callbacks related to conference events",
                "properties": {
                    "conferenceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "eventType": {
                        "type": "string"
                    },
                    "eventTime": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "callId": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "recordingId": {
                        "type": "string"
                    },
                    "channels": {
                        "type": "integer"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "fileFormat": {
                        "type": "string"
                    },
                    "mediaUrl": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
