openapi: 3.0.3
info:
  title: Messaging
  version: 4.3.0
  contact:
    name: Bandwidth
    url: https://dev.bandwidth.com/apis/messaging/
    email: letstalk@bandwidth.com
  description: |-
    The API Specification for Bandwidth's Messaging Platform

    ## Base URL

    `https://messaging.bandwidth.com/api/v2`
servers:
  - url: https://messaging.bandwidth.com/api/v2
    description: Production
paths:
  /users/{accountId}/media:
    get:
      tags:
        - Media
      summary: List Media
      description: Gets a list of your media files. No query parameters are supported.
      operationId: listMedia
      parameters:
        - name: accountId
          in: path
          required: true
          description: User's account ID
          example: '9900000'
          schema:
            type: string
        - name: Continuation-Token
          in: header
          description: Continuation token used to retrieve subsequent media.
          example: '12345'
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            Continuation-Token:
              description: Continuation token used to retrieve subsequent media.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/media'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '415':
          $ref: '#/components/responses/invalidMediaType'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
  /users/{accountId}/media/{mediaId}:
    get:
      tags:
        - Media
      summary: Get Media
      description: Downloads a media file you previously uploaded.
      operationId: getMedia
      parameters:
        - name: accountId
          in: path
          required: true
          description: User's account ID
          example: '900000'
          schema:
            type: string
        - name: mediaId
          in: path
          required: true
          description: Media ID to retrieve
          example: 0a610655-ba58
          schema:
            pattern: .+
            type: string
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/octet-stream:
              schema:
                type: string
                description: successful operation
                format: binary
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '415':
          $ref: '#/components/responses/invalidMediaType'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
      deprecated: false
    put:
      tags:
        - Media
      summary: Upload Media
      description: >-
        Upload a file. You may add headers to the request in order to provide
        some control to your media-file.
      operationId: uploadMedia
      parameters:
        - name: accountId
          in: path
          required: true
          style: simple
          explode: false
          description: User's account ID
          example: '900000'
          schema:
            type: string
        - name: mediaId
          in: path
          required: true
          style: simple
          explode: false
          description: The user supplied custom media ID
          example: my-media-id
          schema:
            pattern: .+
            type: string
        - name: Content-Type
          in: header
          style: simple
          explode: false
          description: The media type of the entity-body
          example: audio/wav
          schema:
            type: string
        - name: Cache-Control
          in: header
          style: simple
          explode: false
          description: >-
            General-header field is used to specify directives that MUST be
            obeyed by all caching mechanisms along the request/response chain.
          example: no-cache
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: successful operation
          headers: {}
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '415':
          $ref: '#/components/responses/invalidMediaType'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
      deprecated: false
    delete:
      tags:
        - Media
      summary: Delete Media
      description: >-
        Deletes a media file from Bandwidth API server. Make sure you don't have
        any application scripts still using the media before you delete. If you
        accidentally delete a media file you can immediately upload a new file
        with the same name.
      operationId: deleteMedia
      parameters:
        - name: accountId
          in: path
          required: true
          style: simple
          explode: false
          description: User's account ID
          example: '900000'
          schema:
            type: string
        - name: mediaId
          in: path
          required: true
          style: simple
          explode: false
          description: The media ID to delete
          example: tjdla-4562ld
          schema:
            pattern: .+
            type: string
      responses:
        '204':
          description: successful operation
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '415':
          $ref: '#/components/responses/invalidMediaType'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
      deprecated: false
  /users/{accountId}/messages:
    get:
      tags:
        - Messages
      summary: List Messages
      description: Gets a list of messages based on query parameters.
      operationId: listMessages
      parameters:
        - name: accountId
          in: path
          required: true
          description: User's account ID
          example: '900000'
          schema:
            type: string
        - name: messageId
          in: query
          required: false
          description: >-
            The ID of the message to search for. Special characters need to be
            encoded using URL encoding. Message IDs could come in different
            formats, e.g., 9e0df4ca-b18d-40d7-a59f-82fcdf5ae8e6 and
            1589228074636lm4k2je7j7jklbn2 are valid message ID formats.
          example: 9e0df4ca-b18d-40d7-a59f-82fcdf5ae8e6
          schema:
            type: string
        - name: sourceTn
          in: query
          required: false
          description: >-
            The phone number that sent the message. Accepted values are: a
            single full phone number a comma separated list of full phone
            numbers (maximum of 10) or a single partial phone number (minimum of
            5 characters e.g. '%2B1919')
          example: '%2B15554443333'
          schema:
            type: string
        - name: destinationTn
          in: query
          required: false
          description: >-
            The phone number that received the message. Accepted values are: a
            single full phone number a comma separated list of full phone
            numbers (maximum of 10) or a single partial phone number (minimum of
            5 characters e.g. '%2B1919')
          example: '%2B15554443333'
          schema:
            type: string
        - name: messageStatus
          in: query
          required: false
          description: >-
            The status of the message. One of RECEIVED QUEUED SENDING SENT
            FAILED DELIVERED ACCEPTED UNDELIVERED
          example: RECEIVED
          schema:
            type: string
            enum:
              - RECEIVED
              - QUEUED
              - SENDING
              - SENT
              - FAILED
              - DELIVERED
              - ACCEPTED
              - UNDELIVERED
        - name: messageDirection
          in: query
          required: false
          description: The direction of the message. One of INBOUND OUTBOUND
          schema:
            type: string
            enum:
              - OUTBOUND
              - INBOUND
        - name: carrierName
          in: query
          required: false
          description: >-
            The name of the carrier used for this message. Possible values
            include but are not limited to Verizon and TMobile. Special
            characters need to be encoded using URL encoding (i.e. AT&T should
            be passed as AT%26T)
          example: Verizon
          schema:
            type: string
        - name: messageType
          in: query
          required: false
          description: The type of message. Either sms or mms
          schema:
            type: string
            enum:
              - SMS
              - MMS
          example: sms
        - name: errorCode
          in: query
          required: false
          description: The error code of the message
          example: 9902
          schema:
            type: integer
        - name: fromDateTime
          in: query
          required: false
          description: >-
            The start of the date range to search in ISO 8601 format. Uses the
            message receive time. The date range to search in is currently 14
            days.
          example: 2016-09-14T18:20:16.000Z
          schema:
            type: string
        - name: toDateTime
          in: query
          required: false
          description: >-
            The end of the date range to search in ISO 8601 format. Uses the
            message receive time. The date range to search in is currently 14
            days.
          example: 2016-09-14T18:20:16.000Z
          schema:
            type: string
        - name: sort
          in: query
          required: false
          description: >-
            The field and direction to sort by combined with a colon. Direction
            is either asc or desc
          example: sourceTn:desc
          schema:
            type: string
        - name: pageToken
          in: query
          required: false
          description: A base64 encoded value used for pagination of results
          example: gdEewhcJLQRB5
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: >-
            The maximum records requested in search result. Default 100. The sum
            of limit and after cannot be more than 10000
          schema:
            type: integer
          example: 50
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bandwidthMessagesList'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '415':
          $ref: '#/components/responses/invalidMediaType'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
      deprecated: false
    post:
      tags:
        - Messages
      summary: Create Message
      description: >-
        Endpoint for sending text messages and picture messages using V2
        messaging.
      operationId: createMessage
      parameters:
        - name: accountId
          in: path
          required: true
          style: simple
          explode: false
          description: User's account ID
          example: '900000'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/messageRequest'
        required: true
      responses:
        '202':
          description: successful operation
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bandwidthMessage'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '415':
          $ref: '#/components/responses/invalidMediaType'
        '429':
          $ref: '#/components/responses/tooManyRequests'
        '500':
          $ref: '#/components/responses/internalServer'
      deprecated: false
components:
  schemas:
    bandwidthMessagesList:
      title: BandwidthMessagesList
      type: object
      properties:
        totalCount:
          type: integer
          description: Total number of messages matched by the search
          example: 100
        pageInfo:
          $ref: '#/components/schemas/pageInfo'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/bandwidthMessageItem'
    message:
      title: BandwidthMessageItem
      type: object
      properties:
        messageId:
          type: string
          description: The message id
          example: 1589228074636lm4k2je7j7jklbn2
        accountId:
          type: string
          description: The account id of the message
          example: '12345'
        sourceTn:
          type: string
          description: The source phone number of the message
          example: '+15554443333'
        destinationTn:
          type: string
          description: The recipient phone number of the message
          example: '+15554442222'
        messageStatus:
          type: string
          description: The status of the message
          example: DLR_EXPIRED
        messageDirection:
          type: string
          description: >-
            The direction of the message relative to Bandwidth. Either INBOUND
            or OUTBOUND
          enum:
            - OUTBOUND
            - INBOUND
          example: OUTBOUND
        messageType:
          type: string
          description: The type of message. Either sms or mms
          enum:
            - SMS
            - MMS
          example: sms
        segmentCount:
          type: integer
          description: The number of segments the message was sent as
          example: 1
        errorCode:
          type: integer
          description: The numeric error code of the message
          example: 9902
        receiveTime:
          type: string
          description: The ISO 8601 datetime of the message
          example: 2020-04-07T14:03:07.000Z
        carrierName:
          type: string
          description: The name of the carrier. Not currently supported for MMS coming soon
          example: other
        messageSize:
          type: integer
          description: The size of the message including message content and headers
          example: 27
        messageLength:
          type: integer
          description: The length of the message content
          example: 18
        attachmentCount:
          type: integer
          description: The number of attachments the message has
          example: 1
        recipientCount:
          type: integer
          description: The number of recipients the message has
          example: 1
        campaignClass:
          type: string
          description: The campaign class of the message if it has one
          example: T
    pageInfo:
      title: PageInfo
      type: object
      properties:
        prevPage:
          type: string
          description: The link to the previous page for pagination
          example: >-
            https://messaging.bandwidth.com/api/v2/users/accountId/messages?messageStatus=DLR_EXPIRED&nextPage=DLAPE902
        nextPage:
          type: string
          description: The link to the next page for pagination
          example: >-
            https://messaging.bandwidth.com/api/v2/users/accountId/messages?messageStatus=DLR_EXPIRED&prevPage=GL83PD3C
        prevPageToken:
          type: string
          description: The isolated pagination token for the previous page
          example: DLAPE902
        nextPageToken:
          type: string
          description: The isolated pagination token for the next page
          example: GL83PD3C
    messagingException:
      title: MessagingException
      type: object
      properties:
        type:
          type: string
        description:
          type: string
      required:
        - type
        - description
    media:
      title: Media
      type: object
      properties:
        content:
          type: string
        contentLength:
          type: integer
        mediaName:
          type: string
    tag:
      title: Tag
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    deferredResult:
      title: DeferredResult
      type: object
      properties:
        result:
          type: object
        setOrExpired:
          type: boolean
    bandwidthMessage:
      title: BandwidthMessage
      type: object
      properties:
        id:
          type: string
          description: The id of the message
          example: 1589228074636lm4k2je7j7jklbn2
        owner:
          type: string
          description: The Bandwidth phone number associated with the message
          example: '+15554443333'
        applicationId:
          type: string
          description: The application ID associated with the message
          example: 93de2206-9669-4e07-948d-329f4b722ee2
        time:
          type: string
          description: The datetime stamp of the message in ISO 8601
          example: 2016-09-14T18:20:16.000Z
        segmentCount:
          type: integer
          description: >-
            The number of segments the original message from the user is broken
            into before sending over to carrier networks
          example: 2
        direction:
          type: string
          description: The direction of the message relative to Bandwidth. Can be in or out
          enum:
            - IN
            - OUT
          example: in
        to:
          uniqueItems: true
          type: array
          items:
            type: string
          description: The phone number recipients of the message
          example:
            - '+15552223333'
        from:
          type: string
          description: The phone number the message was sent from
          example: '+15553332222'
        media:
          uniqueItems: true
          type: array
          items:
            type: string
          description: >-
            The list of media URLs sent in the message. Including a `filename`
            field in the `Content-Disposition` header of the media linked with a
            URL will set the displayed file name. This is a best practice to
            ensure that your media has a readable file name.
          example:
            - https://dev.bandwidth.com/images/bandwidth-logo.png
        text:
          type: string
          description: The contents of the message
          example: Hello world
        tag:
          type: string
          description: The custom string set by the user
          example: custom tag
        priority:
          type: string
          description: The priority specified by the user
          enum:
            - DEFAULT
            - HIGH
          example: default
    messageRequest:
      title: MessageRequest
      type: object
      required:
        - applicationId
        - to
        - from
      properties:
        applicationId:
          type: string
          description: >-
            The ID of the Application your from number is associated with in the
            Bandwidth Phone Number Dashboard.
          example: 93de2206-9669-4e07-948d-329f4b722ee2
        to:
          uniqueItems: true
          type: array
          description: The phone number(s) the message should be sent to in E164 format
          example:
            - '+15554443333'
            - '+15552223333'
          items:
            type: string
        from:
          type: string
          description: >-
            One of your telephone numbers the message should come from in E164
            format
          example: '+15551113333'
        text:
          type: string
          description: The contents of the text message. Must be '204'8 characters or less.
          example: Hello world
        media:
          type: array
          items:
            type: string
            format: uri
          description: >-
            A list of URLs to include as media attachments as part of the
            message.
          example:
            - https://dev.bandwidth.com/images/bandwidth-logo.png
            - https://dev.bandwidth.com/images/github_logo.png
        tag:
          type: string
          description: >-
            A custom string that will be included in callback events of the
            message. Max 1024 characters
          example: custom string
        priority:
          type: string
          enum:
            - DEFAULT
            - HIGH
          description: >-
            The message's priority, currently for toll-free or short code SMS
            only. Messages with a priority value of `\high\` are given
            preference over your other traffic.
          example: default
        expiration:
          type: string
          description: >-
            A string with the date/time value that the message will
            automatically expire by. This must be a valid RFC-3339 value, e.g.,
            2021-03-14T01:59:26Z or 2021-03-13T20:59:26-05:00.
          example: '2021-02-01T11:29:18-05:00'
  responses:
    badRequest:
      description: 400 Request is malformed or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingException'
    unauthorized:
      description: 401 The specified user does not have access to the account
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingException'
    forbidden:
      description: 403 The user does not have access to this API
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingException'
    notFound:
      description: 404 Path not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingException'
    invalidMediaType:
      description: 415 The content-type of the request is incorrect
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingException'
    tooManyRequests:
      description: 429 The rate limit has been reached
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingException'
    internalServer:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingException'
  securitySchemes:
    Basic:
      type: http
      scheme: basic
      description: >-
        Basic authentication is a simple authentication scheme built into the
        HTTP protocol. To use it, send your HTTP requests with an Authorization
        header that contains the word Basic followed by a space and a
        base64-encoded string `username:password`

        Example: `Authorization: Basic ZGVtbZpwQDU1dzByZA==`
tags:
  - name: Media
  - name: Messages
