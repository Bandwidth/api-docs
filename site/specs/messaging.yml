openapi: 3.0.3
info:
  title: Messaging
  version: 4.3.0
  contact:
    name: Bandwidth
    url: https://support.bandwidth.com
    email: support@bandwidth.com
  description: |-
    The API Specification for Bandwidth's Messaging Platform

    ## Base URL

    `https://messaging.bandwidth.com/api/v2`
servers:
  - url: https://messaging.bandwidth.com/api/v2
    description: Production
paths:
  /users/{accountId}/media:
    get:
      summary: List Media
      description: Gets a list of your media files. No query parameters are supported.
      operationId: listMedia
      tags:
        - Media
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/continuationToken'
      responses:
        '200':
          $ref: '#/components/responses/listMediaResponse'
        '400':
          $ref: '#/components/responses/messagingBadRequestError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/notFoundError'
        '415':
          $ref: '#/components/responses/invalidMediaTypeError'
        '429':
          $ref: '#/components/responses/tooManyRequestsError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /users/{accountId}/media/{mediaId}:
    get:
      summary: Get Media
      description: Downloads a media file you previously uploaded.
      operationId: getMedia
      tags:
        - Media
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/mediaId'
      responses:
        '200':
          $ref: '#/components/responses/getMediaResponse'
        '400':
          $ref: '#/components/responses/messagingBadRequestError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/notFoundError'
        '415':
          $ref: '#/components/responses/invalidMediaTypeError'
        '429':
          $ref: '#/components/responses/tooManyRequestsError'
        '500':
          $ref: '#/components/responses/internalServerError'
    put:
      summary: Upload Media
      description: >-
        Upload a file. You may add headers to the request in order to provide
        some control to your media file.
      operationId: uploadMedia
      tags:
        - Media
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/mediaId'
        - $ref: '#/components/parameters/contentType'
        - $ref: '#/components/parameters/cacheControl'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/messagingBadRequestError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/notFoundError'
        '415':
          $ref: '#/components/responses/invalidMediaTypeError'
        '429':
          $ref: '#/components/responses/tooManyRequestsError'
        '500':
          $ref: '#/components/responses/internalServerError'
    delete:
      summary: Delete Media
      description: >-
        Deletes a media file from Bandwidth API server. Make sure you don't have
        any application scripts still using the media before you delete. If you
        accidentally delete a media file you can immediately upload a new file
        with the same name.
      operationId: deleteMedia
      tags:
        - Media
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/mediaId'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/messagingBadRequestError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/notFoundError'
        '415':
          $ref: '#/components/responses/invalidMediaTypeError'
        '429':
          $ref: '#/components/responses/tooManyRequestsError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /users/{accountId}/messages:
    get:
      summary: List Messages
      description: Returns a list of messages based on query parameters.
      operationId: listMessages
      tags:
        - Messages
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/messageId'
        - $ref: '#/components/parameters/sourceTn'
        - $ref: '#/components/parameters/destinationTn'
        - $ref: '#/components/parameters/messageStatus'
        - $ref: '#/components/parameters/messageDirection'
        - $ref: '#/components/parameters/carrierName'
        - $ref: '#/components/parameters/messageType'
        - $ref: '#/components/parameters/errorCode'
        - $ref: '#/components/parameters/fromDateTime'
        - $ref: '#/components/parameters/toDateTime'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/listMessagesResponse'
        '400':
          $ref: '#/components/responses/messagingBadRequestError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/notFoundError'
        '415':
          $ref: '#/components/responses/invalidMediaTypeError'
        '429':
          $ref: '#/components/responses/tooManyRequestsError'
        '500':
          $ref: '#/components/responses/internalServerError'
    post:
      summary: Create Message
      description: >-
        Endpoint for sending text messages and picture messages using V2
        messaging.
      operationId: createMessage
      tags:
        - Messages
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/messageRequest'
        required: true
      responses:
        '202':
          $ref: '#/components/responses/createMessageResponse'
        '400':
          $ref: '#/components/responses/messagingBadRequestError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/notFoundError'
        '415':
          $ref: '#/components/responses/invalidMediaTypeError'
        '429':
          $ref: '#/components/responses/tooManyRequestsError'
        '500':
          $ref: '#/components/responses/internalServerError'
components:
  parameters:
    accountId:
      in: path
      name: accountId
      required: true
      schema:
        type: string
      description: Your Bandwidth Account ID
      example: '9900000'
    mediaId:
      in: path
      name: mediaId
      required: true
      description: Media ID to retrieve
      example: 14762070468292kw2fuqty55yp2b2/0/bw.png
      schema:
        type: string
    contentType:
      in: header
      name: Content-Type
      style: simple
      explode: false
      description: The media type of the entity-body
      example: audio/wav
      schema:
        type: string
    cacheControl:
      in: header
      name: Cache-Control
      style: simple
      explode: false
      description: >-
        General-header field is used to specify directives that MUST be obeyed
        by all caching mechanisms along the request/response chain.
      example: no-cache
      schema:
        type: string
    continuationToken:
      in: header
      name: Continuation-Token
      description: Continuation token used to retrieve subsequent media.
      example: >-
        1XEi2tsFtLo1JbtLwETnM1ZJ+PqAa8w6ENvC5QKvwyrCDYII663Gy5M4s40owR1tjkuWUif6qbWvFtQJR5/ipqbUnfAqL254LKNlPy6tATCzioKSuHuOqgzloDkSwRtX0LtcL2otHS69hK343m+SjdL+vlj71tT39
      schema:
        type: string
    messageId:
      in: query
      name: messageId
      required: false
      description: >-
        The ID of the message to search for. Special characters need to be
        encoded using URL encoding. Message IDs could come in different formats,
        e.g., 9e0df4ca-b18d-40d7-a59f-82fcdf5ae8e6 and
        1589228074636lm4k2je7j7jklbn2 are valid message ID formats. Note that
        you must include at least one query parameter.
      example: 9e0df4ca-b18d-40d7-a59f-82fcdf5ae8e6
      schema:
        type: string
    sourceTn:
      in: query
      name: sourceTn
      required: false
      description: >-
        The phone number that sent the message. Accepted values are: a single
        full phone number a comma separated list of full phone numbers (maximum
        of 10) or a single partial phone number (minimum of 5 characters e.g.
        '%2B1919')
      example: '%2B15554443333'
      schema:
        type: string
    destinationTn:
      in: query
      name: destinationTn
      required: false
      description: >-
        The phone number that received the message. Accepted values are: a
        single full phone number a comma separated list of full phone numbers
        (maximum of 10) or a single partial phone number (minimum of 5
        characters e.g. '%2B1919')
      example: '%2B15554443333'
      schema:
        type: string
    messageStatus:
      in: query
      name: messageStatus
      required: false
      description: >-
        The status of the message. One of RECEIVED QUEUED SENDING SENT FAILED
        DELIVERED ACCEPTED UNDELIVERED.
      schema:
        $ref: '#/components/schemas/messageStatusEnum'
    messageDirection:
      in: query
      name: messageDirection
      required: false
      description: The direction of the message. One of INBOUND OUTBOUND
      schema:
        $ref: '#/components/schemas/messageDirectionEnum'
    carrierName:
      in: query
      name: carrierName
      required: false
      description: >-
        The name of the carrier used for this message. Possible values include
        but are not limited to Verizon and TMobile. Special characters need to
        be encoded using URL encoding (i.e. AT&T should be passed as AT%26T)
      example: Verizon
      schema:
        type: string
    messageType:
      in: query
      name: messageType
      required: false
      description: The type of message. Either sms or mms
      schema:
        $ref: '#/components/schemas/messageTypeEnum'
    errorCode:
      in: query
      name: errorCode
      required: false
      description: The error code of the message
      example: 9902
      schema:
        type: integer
    fromDateTime:
      in: query
      name: fromDateTime
      required: false
      description: >-
        The start of the date range to search in ISO 8601 format. Uses the
        message receive time. The date range to search in is currently 14 days.
      example: 2016-09-14T18:20:16.000Z
      schema:
        type: string
    toDateTime:
      in: query
      name: toDateTime
      required: false
      description: >-
        The end of the date range to search in ISO 8601 format. Uses the message
        receive time. The date range to search in is currently 14 days.
      example: 2016-09-14T18:20:16.000Z
      schema:
        type: string
    sort:
      in: query
      name: sort
      required: false
      description: >-
        The field and direction to sort by combined with a colon. Direction is
        either asc or desc
      example: sourceTn:desc
      schema:
        type: string
    pageToken:
      in: query
      name: pageToken
      required: false
      description: A base64 encoded value used for pagination of results
      example: gdEewhcJLQRB5
      schema:
        type: string
    limit:
      in: query
      name: limit
      required: false
      description: >-
        The maximum records requested in search result. Default 100. The sum of
        limit and after cannot be more than 10000
      schema:
        type: integer
      example: 50
  schemas:
    priorityEnum:
      type: string
      description: The priority specified by the user
      enum:
        - DEFAULT
        - HIGH
      example: DEFAULT
    messageStatusEnum:
      type: string
      description: >-
        The status of the message. One of RECEIVED QUEUED SENDING SENT FAILED
        DELIVERED ACCEPTED UNDELIVERED.
      enum:
        - RECEIVED
        - QUEUED
        - SENDING
        - SENT
        - FAILED
        - DELIVERED
        - ACCEPTED
        - UNDELIVERED
      example: RECEIVED
    listMessageDirectionEnum:
      type: string
      description: The direction of the message. One of INBOUND OUTBOUND.
      enum:
        - INBOUND
        - OUTBOUND
    messageDirectionEnum:
      type: string
      description: The direction of the message. One of in out.
      enum:
        - in
        - out
    messageTypeEnum:
      type: string
      description: The type of message. Either SMS or MMS.
      enum:
        - sms
        - mms
      example: sms
    messagesList:
      title: MessagesList
      type: object
      properties:
        totalCount:
          type: integer
          description: Total number of messages matched by the search
          example: 100
        pageInfo:
          $ref: '#/components/schemas/pageInfo'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/listMessageItem'
    listMessageItem:
      title: listMessageItem
      type: object
      properties:
        messageId:
          type: string
          description: The message id
          example: 1589228074636lm4k2je7j7jklbn2
        accountId:
          type: string
          description: The account id associated with this message.
          example: '9900000'
        sourceTn:
          type: string
          description: The source phone number of the message.
          example: '+15554443333'
        destinationTn:
          type: string
          description: The recipient phone number of the message.
          example: '+15554442222'
        messageStatus:
          $ref: '#/components/schemas/messageStatusEnum'
        messageDirection:
          $ref: '#/components/schemas/listMessageDirectionEnum'
        messageType:
          $ref: '#/components/schemas/messageTypeEnum'
        segmentCount:
          type: integer
          description: The number of segments the message was sent as
          example: 1
        errorCode:
          type: integer
          description: The numeric error code of the message
          example: 9902
        receiveTime:
          type: string
          description: The ISO 8601 datetime of the message
          example: 2020-04-07T14:03:07.000Z
        carrierName:
          type: string
          description: The name of the carrier. Not currently supported for MMS coming soon
          example: other
        messageSize:
          type: integer
          description: The size of the message including message content and headers
          example: 27
        messageLength:
          type: integer
          description: The length of the message content
          example: 18
        attachmentCount:
          type: integer
          description: The number of attachments the message has
          example: 1
        recipientCount:
          type: integer
          description: The number of recipients the message has
          example: 1
        campaignClass:
          type: string
          description: The campaign class of the message if it has one
          example: T
    pageInfo:
      title: PageInfo
      type: object
      properties:
        prevPage:
          type: string
          description: The link to the previous page for pagination
          example: >-
            https://messaging.bandwidth.com/api/v2/users/accountId/messages?messageStatus=DLR_EXPIRED&nextPage=DLAPE902
        nextPage:
          type: string
          description: The link to the next page for pagination
          example: >-
            https://messaging.bandwidth.com/api/v2/users/accountId/messages?messageStatus=DLR_EXPIRED&prevPage=GL83PD3C
        prevPageToken:
          type: string
          description: The isolated pagination token for the previous page
          example: DLAPE902
        nextPageToken:
          type: string
          description: The isolated pagination token for the next page
          example: GL83PD3C
    messagingRequestError:
      title: MessagingRequestError
      type: object
      properties:
        type:
          type: string
        description:
          type: string
      required:
        - type
        - description
    media:
      title: Media
      type: object
      properties:
        content:
          type: string
        contentLength:
          type: integer
        mediaName:
          type: string
    tag:
      title: Tag
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    deferredResult:
      title: DeferredResult
      type: object
      properties:
        result:
          type: object
        setOrExpired:
          type: boolean
    message:
      title: Message
      type: object
      properties:
        id:
          type: string
          description: The id of the message
          example: 1589228074636lm4k2je7j7jklbn2
        owner:
          type: string
          description: The Bandwidth phone number associated with the message
          example: '+15554443333'
        applicationId:
          type: string
          description: The application ID associated with the message
          example: 93de2206-9669-4e07-948d-329f4b722ee2
        time:
          type: string
          description: The datetime stamp of the message in ISO 8601
          example: 2016-09-14T18:20:16.000Z
        segmentCount:
          type: integer
          description: >-
            The number of segments the original message from the user is broken
            into before sending over to carrier networks
          example: 2
        direction:
          $ref: '#/components/schemas/messageDirectionEnum'
        to:
          uniqueItems: true
          type: array
          items:
            type: string
          description: The phone number recipients of the message
          example:
            - '+15552223333'
        from:
          type: string
          description: The phone number the message was sent from
          example: '+15553332222'
        media:
          uniqueItems: true
          type: array
          items:
            type: string
          description: >-
            The list of media URLs sent in the message. Including a `filename`
            field in the `Content-Disposition` header of the media linked with a
            URL will set the displayed file name. This is a best practice to
            ensure that your media has a readable file name.
          example:
            - https://dev.bandwidth.com/images/bandwidth-logo.png
        text:
          type: string
          description: The contents of the message
          example: Hello world
        tag:
          type: string
          description: The custom string set by the user
          example: custom tag
        priority:
          $ref: '#/components/schemas/priorityEnum'
    messageRequest:
      title: MessageRequest
      type: object
      required:
        - applicationId
        - to
        - from
      properties:
        applicationId:
          type: string
          description: >-
            The ID of the Application your from number is associated with in the
            Bandwidth Phone Number Dashboard.
          example: 93de2206-9669-4e07-948d-329f4b722ee2
        to:
          uniqueItems: true
          type: array
          description: The phone number(s) the message should be sent to in E164 format
          example:
            - '+15554443333'
            - '+15552223333'
          items:
            type: string
        from:
          type: string
          description: >-
            One of your telephone numbers the message should come from in E164
            format
          example: '+15551113333'
        text:
          type: string
          description: The contents of the text message. Must be 2048 characters or less.
          maxLength: 2048
          example: Hello world
        media:
          type: array
          items:
            type: string
            format: uri
          description: >-
            A list of URLs to include as media attachments as part of the
            message.
          example:
            - https://dev.bandwidth.com/images/bandwidth-logo.png
            - https://dev.bandwidth.com/images/github_logo.png
        tag:
          type: string
          description: >-
            A custom string that will be included in callback events of the
            message. Max 1024 characters
          example: custom string
        priority:
          $ref: '#/components/schemas/priorityEnum'
        expiration:
          type: string
          description: >-
            A string with the date/time value that the message will
            automatically expire by. This must be a valid RFC-3339 value, e.g.,
            2021-03-14T01:59:26Z or 2021-03-13T20:59:26-05:00.
          example: '2021-02-01T11:29:18-05:00'
  responses:
    createMessageResponse:
      description: Accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/message'
    listMessagesResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagesList'
    getMediaResponse:
      description: OK
      content:
        application/octet-stream:
          schema:
            type: string
            description: Successful Operation
            format: binary
    listMediaResponse:
      description: OK
      headers:
        Continuation-Token:
          description: Continuation token used to retrieve subsequent media.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/media'
    messagingBadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    unauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    forbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    notFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    invalidMediaTypeError:
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    tooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
    internalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/messagingRequestError'
  securitySchemes:
    Basic:
      type: http
      scheme: basic
      description: >-
        Basic authentication is a simple authentication scheme built into the
        HTTP protocol. To use it, send your HTTP requests with an Authorization
        header that contains the word Basic followed by a space and a
        base64-encoded string `username:password`

        Example: `Authorization: Basic ZGVtbZpwQDU1dzByZA==`
tags:
  - name: Messages
  - name: Media
