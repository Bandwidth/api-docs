openapi: 3.0.0
info:
  title: Subscription API
  version: '1.0'
  description: >-
    Because processing times may vary across all event types, Bandwidth
    recommends the use of subscriptions to receive notifications upon order
    completion, as opposed to polling the resource ID with GET requests until
    the desired state is returned.


    In order to get notified about event updates occurring on your account, you
    must configure a subscription for each eventType. Event notifications will
    be sent to the address that you provide when you configure a subscription.


    Each subscription is account-global and each eventType can have multiple
    subscriptions.
  contact:
    email: support@bandwidth.com
servers:
  - url: http://localhost:3000
tags:
  - name: Subscription
paths:
  /subscriptions:
    parameters: []
    get:
      summary: List Subscriptions
      tags:
        - Subscription
      responses:
        '200':
          $ref: '#/components/responses/Subscription-List-Response'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
      operationId: listSubscriptions
      description: List All Subscriptions for Account
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/AccountId'
        - $ref: '#/components/parameters/SubscriptionSource'
        - $ref: '#/components/parameters/SubscriptionTypes'
        - $ref: '#/components/parameters/UserName'
    post:
      tags:
        - Subscription
      summary: Create Subscription
      operationId: createSubscription
      responses:
        '201':
          $ref: '#/components/responses/Subscription-Response'
        '400':
          description: >-
            Missing Required Information. Please reference the documentation for
            information required to create a subscription
          content:
            application/xml:
              schema:
                type: object
                properties: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
      description: Create New Subscription
      requestBody:
        $ref: '#/components/requestBodies/New-Subscription'
  /subscriptions/{id}:
    get:
      summary: Get Subscription by subscriptionId
      tags:
        - Subscription
      responses:
        '200':
          $ref: '#/components/responses/Subscription-Response'
        '401':
          description: Unauthorized
        '402':
          description: Payment Required
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
      operationId: getSubscription
      description: GET Subscriiption by ID
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      tags:
        - Subscription
      summary: Delete Subscription
      operationId: deleteSubscription
      responses:
        '204':
          description: 'SubscriptionID : X Successfully Deleted'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'SubscriptionId : X Not Found'
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
      description: Delete Subscription
    patch:
      tags:
        - Subscription
      summary: Update Subscription
      operationId: modifySubscription
      responses:
        '200':
          $ref: '#/components/responses/Subscription-Response'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update Subscription
      requestBody:
        $ref: '#/components/requestBodies/Existing-Subscription'
    put:
      tags:
        - Subscription
      summary: Rewrite Subscription
      operationId: replaceSubscription
      responses:
        '200':
          $ref: '#/components/responses/Subscription-Response'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Rewrite Subscription
      requestBody:
        $ref: '#/components/requestBodies/Existing-Subscription'
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Subscription-List-Response:
      description: Example Subscription List Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                links: []
                data:
                  subscriptions:
                    - subscription:
                        subscriptionId: string
                        dateOfLastModification: '2019-08-24T14:15:22Z'
                        source: porting
                        eventType: portin
                        entityId: unique-id-value
                        subscriptionStatus: ACTIVE
                        tags:
                          - tag:
                              name: tag-name
                              value: tag-value
                        notifyStates: []
                        notificationChannels:
                          callbacks:
                            - “callback”:
                                url: some-url
                                publicKey: key
                errors: []
            properties:
              links:
                type: array
                items:
                  type: object
              data:
                type: object
                properties:
                  subscriptions:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        subscription:
                          type: object
                          properties:
                            subscriptionId:
                              type: string
                              minLength: 1
                            dateOfLastModification:
                              type: string
                              minLength: 1
                            source:
                              type: string
                              minLength: 1
                            eventType:
                              type: string
                              minLength: 1
                            entityId:
                              type: string
                              minLength: 1
                            subscriptionStatus:
                              type: string
                              minLength: 1
                            tags:
                              type: array
                              uniqueItems: true
                              minItems: 1
                              items:
                                type: object
                                properties:
                                  tag:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                        minLength: 1
                                      value:
                                        type: string
                                        minLength: 1
                                    required:
                                      - name
                                      - value
                            notifyStates:
                              type: array
                              items:
                                type: object
                            notificationChannels:
                              type: object
                              required:
                                - callbacks
                              properties:
                                callbacks:
                                  type: array
                                  uniqueItems: true
                                  minItems: 1
                                  items:
                                    type: object
                                    properties:
                                      “callback”:
                                        type: object
                                        properties:
                                          url:
                                            type: string
                                            minLength: 1
                                          publicKey:
                                            type: string
                                            minLength: 1
                                        required:
                                          - url
                                          - publicKey
              errors:
                type: array
                items:
                  type: object
          examples:
            Example Subscription List Response:
              value:
                links: []
                data:
                  subscriptions:
                    - subscription:
                        subscriptionId: string
                        dateOfLastModification: '2019-08-24T14:15:22Z'
                        source: porting
                        eventType: portin
                        entityId: unique-id-value
                        subscriptionStatus: ACTIVE
                        tags:
                          - tag:
                              name: tag-name
                              value: tag-value
                        notifyStates: []
                        notificationChannels:
                          callbacks:
                            - “callback”:
                                url: some-url
                                publicKey: key
                errors: []
    Subscription-Response:
      description: Example Subscription Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                links: []
                data:
                  subscriptionId: string
                  dateOfLastModification: '2019-08-24T14:15:22Z'
                  source: porting
                  eventType: portin
                  entityId: unique-id-value
                  subscriptionStatus: ACTIVE
                  tags:
                    - tag:
                        name: tag-name
                        value: tag-value
                  notifyStates: []
                  notificationChannels:
                    callbacks:
                      - “callback”:
                          url: some-url
                          publicKey: key
                errors: []
            properties:
              links:
                type: array
                items:
                  type: object
              data:
                type: object
                properties:
                  subscriptionId:
                    type: string
                    minLength: 1
                  dateOfLastModification:
                    type: string
                    minLength: 1
                  source:
                    type: string
                    minLength: 1
                  eventType:
                    type: string
                    minLength: 1
                  entityId:
                    type: string
                    minLength: 1
                  subscriptionStatus:
                    type: string
                    minLength: 1
                  tags:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        tag:
                          type: object
                          properties:
                            name:
                              type: string
                              minLength: 1
                            value:
                              type: string
                              minLength: 1
                  notifyStates:
                    type: array
                    items:
                      type: object
                  notificationChannels:
                    type: object
                    properties:
                      callbacks:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          type: object
                          properties:
                            “callback”:
                              type: object
                              properties:
                                url:
                                  type: string
                                  minLength: 1
                                publicKey:
                                  type: string
                                  minLength: 1
                              required:
                                - url
                                - publicKey
              errors:
                type: array
                items:
                  type: object
          examples:
            Example Subscription Response:
              value:
                links: []
                data:
                  subscriptionId: string
                  dateOfLastModification: '2019-08-24T14:15:22Z'
                  source: porting
                  eventType: portin
                  entityId: unique-id-value
                  subscriptionStatus: ACTIVE
                  tags:
                    - tag:
                        name: tag-name
                        value: tag-value
                  notifyStates: []
                  notificationChannels:
                    callbacks:
                      - “callback”:
                          url: some-url
                          publicKey: key
                errors: []
  requestBodies:
    New-Subscription:
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                source: porting
                eventType: portin
                entityId: unique-id-value
                subscriptionStatus: ACTIVE
                tags:
                  - tag:
                      name: tag-name
                      value: tag-value
                notifyStates: []
                notificationChannels:
                  callbacks:
                    - “callback”:
                        url: some-url
                        publicKey: key
            properties:
              source:
                type: string
                minLength: 1
              eventType:
                type: string
                minLength: 1
              entityId:
                type: string
                minLength: 1
              subscriptionStatus:
                type: string
                minLength: 1
              tags:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    tag:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        value:
                          type: string
                          minLength: 1
              notifyStates:
                type: array
                items:
                  type: object
              notificationChannels:
                type: object
                properties:
                  callbacks:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        “callback”:
                          type: object
                          properties:
                            url:
                              type: string
                              minLength: 1
                            publicKey:
                              type: string
                              minLength: 1
          examples:
            'Example New Subscription ':
              value:
                source: porting
                eventType: portin
                entityId: unique-id-value
                subscriptionStatus: ACTIVE
                tags:
                  - tag:
                      name: tag-name
                      value: tag-value
                notifyStates: []
                notificationChannels:
                  callbacks:
                    - “callback”:
                        url: some-url
                        publicKey: key
      description: Request Body for New Subscription
    Existing-Subscription:
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                source: porting
                eventType: portin
                entityId: unique-id-value
                subscriptionStatus: ACTIVE
                tags:
                  - tag:
                      name: tag-name
                      value: tag-value
                notifyStates: []
                notificationChannels:
                  callbacks:
                    - “callback”:
                        url: some-url
                        publicKey: key
            properties:
              source:
                type: string
                minLength: 1
              eventType:
                type: string
                minLength: 1
              entityId:
                type: string
                minLength: 1
              subscriptionStatus:
                type: string
                minLength: 1
              tags:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    tag:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        value:
                          type: string
                          minLength: 1
              notifyStates:
                type: array
                items:
                  type: object
              notificationChannels:
                type: object
                required:
                  - callbacks
                properties:
                  callbacks:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        “callback”:
                          type: object
                          properties:
                            url:
                              type: string
                              minLength: 1
                            publicKey:
                              type: string
                              minLength: 1
                          required:
                            - url
                            - publicKey
          examples:
            Example Existing Subscription:
              value:
                source: porting
                eventType: portin
                entityId: unique-id-value
                subscriptionStatus: ACTIVE
                tags:
                  - tag:
                      name: tag-name
                      value: tag-value
                notifyStates: []
                notificationChannels:
                  callbacks:
                    - “callback”:
                        url: some-url
                        publicKey: key
      description: Request Body for Existing Subscription
  parameters:
    SubscriptionId:
      name: SubscriptionId
      in: query
      required: false
      schema:
        type: string
      description: Unique ID of a Subscription
    AccountId:
      name: AccountId
      in: query
      required: false
      schema:
        type: string
      description: Unique ID of an Account
    SubscriptionSource:
      name: SubscriptionSource
      in: query
      required: false
      schema:
        type: string
      description: Source of Event Subscribed to for Notification
    SubscriptionTypes:
      name: SubscriptionTypes
      in: query
      required: false
      schema:
        type: string
    UserName:
      name: UserName
      in: query
      required: false
      schema:
        type: string
      description: System UserName of User
