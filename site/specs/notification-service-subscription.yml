openapi: 3.0.3
info:
  title: Subscription API
  version: '1.0'
  description: >
    Because processing times may vary across all event types, Bandwidth
    recommends the use of subscriptions to receive notifications upon order
    completion, as opposed to polling the resource ID with GET requests until
    the desired state is returned.


    In order to get notified about event updates occurring on your account, you
    must configure a subscription for each eventType. Event notifications will
    be sent to the address that you provide when you configure a subscription.


    Each subscription is account-global and each eventType can have multiple
    subscriptions.
  contact:
    email: support@bandwidth.com
servers:
  - url: http://localhost:3000
tags:
  - name: Subscription
paths:
  /subscriptions:
    get:
      summary: List Subscriptions
      tags:
        - Subscription
      responses:
        '200':
          $ref: '#/components/responses/subscriptionListResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      operationId: listSubscriptions
      description: List All Subscriptions for Account
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/product'
        - $ref: '#/components/parameters/eventType'
        - $ref: '#/components/parameters/userName'
        - $ref: '#/components/parameters/subscriptionStatus'
        - $ref: '#/components/parameters/entityId'
    post:
      tags:
        - Subscription
      summary: Create Subscription
      operationId: createSubscription
      responses:
        '201':
          $ref: '#/components/responses/subscriptionResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      description: Create New Subscription
      requestBody:
        $ref: '#/components/requestBodies/newSubscription'
  /subscriptions/{subscriptionId}:
    get:
      summary: Get Subscription
      tags:
        - Subscription
      responses:
        '200':
          $ref: '#/components/responses/subscriptionResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      operationId: getSubscription
      description: GET Subscriiption by ID
    parameters:
      - schema:
          type: string
        name: subscriptionId
        in: path
        required: true
    delete:
      tags:
        - Subscription
      summary: Delete Subscription
      operationId: deleteSubscription
      responses:
        '204':
          description: 'SubscriptionID : X Successfully Deleted'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '405':
          $ref: '#/components/responses/methodNotAllowedResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      description: Delete Subscription
    patch:
      tags:
        - Subscription
      summary: Update Subscription
      operationId: modifySubscription
      responses:
        '200':
          $ref: '#/components/responses/subscriptionResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '409':
          $ref: '#/components/responses/conflictResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      description: Update Subscription
      requestBody:
        $ref: '#/components/requestBodies/patchSubscription'
    put:
      tags:
        - Subscription
      summary: Rewrite Subscription
      operationId: replaceSubscription
      responses:
        '200':
          $ref: '#/components/responses/subscriptionResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '401':
          $ref: '#/components/responses/unauthorizedResponse'
        '403':
          $ref: '#/components/responses/forbiddenResponse'
        '404':
          $ref: '#/components/responses/notFoundResponse'
        '500':
          $ref: '#/components/responses/internalErrorResponse'
      description: Rewrite Subscription
      requestBody:
        $ref: '#/components/requestBodies/putSubscription'
components:
  schemas:
    callback:
      title: callback
      type: object
      properties:
        url:
          type: string
        publicKey:
          type: string
      example:
        callback:
          url: some-url
          publicKey: key
      description: Callback Object
    subscriptionStatusEnum:
      title: Subscription Status Enum
      type: string
      description: The Status of the Subscription
      enum:
        - ACTIVE
        - INACTIVE
      example: ACTIVE
    subscription:
      title: Subscription
      description: Data representing a Subscription
      type: object
      properties:
        product:
          $ref: '#/components/schemas/productEnum'
        eventType:
          anyOf:
            - $ref: '#/components/schemas/eventTypeEnum'
            - $ref: '#/components/schemas/nullTypeEnum'
        entityId:
          description: >-
            Unique Id of object/action prcessed which generates Event for
            Notification
          type: string
          minLength: 1
          nullable: true
          example: q3434-132414
        subscriptionStatus:
          anyOf:
            - $ref: '#/components/schemas/subscriptionStatusEnum'
            - $ref: '#/components/schemas/nullTypeEnum'
        tags:
          nullable: true
          title: Tag Elements
          type: array
          maxItems: 5
          items:
            $ref: '#/components/schemas/tag'
        notifyStates:
          nullable: true
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/portingPortinEventStatusEnum'
        notificationChannel:
          $ref: '#/components/schemas/notificationChannel'
      required:
        - product
        - notificationChannel
    notificationChannel:
      title: Notification Channel
      type: array
      maxItems: 1
      items:
        anyOf:
          - $ref: '#/components/schemas/callback'
    patchSubscription:
      title: Patch Subscription
      description: Data representing a Patch Subscription
      type: object
      properties:
        eventType:
          anyOf:
            - $ref: '#/components/schemas/eventTypeEnum'
            - $ref: '#/components/schemas/nullTypeEnum'
        entityId:
          nullable: true
          description: >-
            Unique Id of object/action prcessed which generates Event for
            Notification
          type: string
          minLength: 1
          example: q3434-132414
        subscriptionStatus:
          anyOf:
            - $ref: '#/components/schemas/subscriptionStatusEnum'
            - $ref: '#/components/schemas/nullTypeEnum'
        tags:
          nullable: true
          title: Tag Elements
          type: array
          maxItems: 5
          items:
            $ref: '#/components/schemas/tag'
        notifyStates:
          nullable: true
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/portingPortinEventStatusEnum'
        notificationChannel:
          $ref: '#/components/schemas/notificationChannel'
      example:
        eventType: PORTIN_ORDER_STATUS
        entityId: q3434-132414
        subscriptionStatus: ACTIVE
        tags:
          - name: string
            value: string
        notifyStates:
          - ACCEPTED_BY_CARRIER
          - COMPLETED
        notificationChannel:
          - callback:
              url: some-url
              publicKey: key
    responseSubscription:
      title: Subscription Response
      allOf:
        - type: object
          properties:
            subscriptionId:
              type: string
              example: adfaf-134afd
            dateOfLastModification:
              description: Last Modified date
              type: string
              format: date-time
              example: '2022-05-23T12:00:00'
        - $ref: '#/components/schemas/subscription'
    eventTypeEnum:
      title: eventTypeEnum
      type: string
      description: The Event Type of the Subscription
      enum:
        - PORTIN_ORDER_STATUS
      example: PORTIN_ORDER_STATUS
    nullTypeEnum:
      title: Null Type Enum
      description: Null Enum to statisfy nullable
      enum:
        - null
    productEnum:
      title: productEnum
      type: string
      description: The Product of the Subscription
      enum:
        - PORTING
      example: PORTING
    portingPortinEventStatusEnum:
      title: portingPortinEventStatusEnum
      type: string
      description: "The valid Event Status values \n<table>\n  <tr>\n    <th>Status</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>ACCEPTED_BY_CARRIER </td>\n    <td>Good news - your port-in is accepted by our carrier. </td>\n  </tr>\n  <tr>\n    <td>CANCELED </td>\n    <td>Your port-in order is cancelled. </td>\n  </tr>\n  <tr>\n    <td>COMPLETED </td>\n    <td>Your port-in order is completed. </td>\n  </tr>    \n  <tr>\n    <td>DRAFT </td>\n    <td> Your port-in order is created, but not yet submitted. You can change the content of the order or delete it anytime. </td>\n  </tr>\n  <tr>\n    <td>MISSING_DATA </td>\n    <td>Your port-in order has been returned by our LNP team - because the order doesn't contain required information, this can be data or document. Your order has to be amended and resubmitted again. </td>\n  </tr>   \n  </tr>\n  <tr>\n    <td>PENDING_CARRIER_APPROVAL </td>\n    <td> Your port-in order is transmitted to our carrier.</td>\n  </tr>   \n  <tr>\n    <td>PROCESSING_CANCELLATION </td>\n    <td>You are requesting the cancellation of your order. Our LNP team will get back to you shortly </td>\n  </tr>  \n  <tr>\n    <td>READY_FOR_CONFIGURATION</td>\n    <td>Your numbers are ready for configuration. You can now assign your configuration profile to your order. </td>\n  </tr>           \n  <tr>\n    <td>REJECTED </td>\n    <td>\tYour port-in order is rejected by our LNP team/carrier. Please contact our LNP team for further details.Your port-in order is submitted, our LNP team will take care of it shortly. In case you need to change your order, you have to request a cancellation or ask our LNP team to return your order. </td>\n  </tr>  \n  <tr>\n    <td>SUBMITTED </td>\n    <td>Your port-in order is submitted, our LNP team will take care of it shortly. In case you need to change your order, you have to request a cancellation or ask our LNP team to return your order. </td>\n  </tr>                                                                 \n</table>\n"
      enum:
        - ACCEPTED_BY_CARRIER
        - CANCELED
        - COMPLETED
        - DRAFT
        - MISSING_DATA
        - PENDING_CARRIER_APPROVAL
        - PROCESSING_CANCELLATION
        - READY_FOR_CONFIGURATION
        - REJECTED
        - SUBMITTED
    tag:
      description: Tag Information
      title: Tag Element
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 64
        value:
          type: string
          minLength: 1
          maxLength: 64
      example:
        name: string
        value: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    subscriptionListResponse:
      description: Subscription List Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              links:
                type: array
                items:
                  type: object
              data:
                type: object
                properties:
                  subscriptions:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    items:
                      $ref: '#/components/schemas/responseSubscription'
              errors:
                type: array
                items:
                  type: object
          examples:
            Example Subscription List Response:
              value:
                links: []
                data:
                  subscriptions:
                    - product: PORTING
                      subscriptionId: string
                      dateOfLastModification: '2019-08-24T14:15:22Z'
                      eventType: PORTIN_ORDER_STATUS
                      entityId: unique-id-value
                      subscriptionStatus: ACTIVE
                      tags:
                        - name: tag-name
                          value: tag-value
                      notifyStates:
                        - DRAFT
                        - COMPLETED
                      notificationChannel:
                        - callback:
                            url: some-url
                            publicKey: key
                errors: []
    subscriptionResponse:
      description: Subscription Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              links:
                type: array
                items:
                  type: object
              data:
                $ref: '#/components/schemas/responseSubscription'
              errors:
                type: array
                items:
                  type: object
          examples:
            Example Subscription Response:
              value:
                links: []
                data:
                  subscriptionId: string
                  dateOfLastModification: '2019-08-24T14:15:22Z'
                  product: PORTING
                  eventType: PORTIN_ORDER_STATUS
                  entityId: unique-id-value
                  subscriptionStatus: ACTIVE
                  tags:
                    - name: tag-name
                      value: tag-value
                  notifyStates:
                    - COMPLETED
                    - DRAFT
                  notificationChannel:
                    - callback: null
                      url: some-url
                      publicKey: key
                errors: []
    unauthorizedResponse:
      description: 401 Unauthorized Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            example:
              links: []
              data: null
              errors:
                - type: authentication-credentials
                  description: Invalid or missing credentials.
                  code: optional-but-recommended-error-code
                  id: optional-error-id
                  meta: null
            properties:
              links:
                type: array
                items:
                  type: object
              data: {}
              errors:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
                    code:
                      type: string
                      minLength: 1
                    id:
                      type: string
                      minLength: 1
                    meta: {}
                  required:
                    - type
                    - description
                    - code
                    - id
            required:
              - errors
          examples:
            Example 401 Unauthorized Response:
              value:
                links: []
                data: null
                errors:
                  - type: authentication-credentials
                    description: Invalid or missing credentials.
                    code: optional-but-recommended-error-code
                    id: optional-error-id
                    meta: null
    forbiddenResponse:
      description: 403 Forbidden Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            example:
              links: []
              data: null
              errors:
                - type: resource-permissions
                  description: User does not have permissions to access this resource.
                  code: optional-but-recommended-error-code
                  id: optional-error-id
                  meta: null
            properties:
              links:
                type: array
                items:
                  type: object
              data: {}
              errors:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
                    code:
                      type: string
                      minLength: 1
                    id:
                      type: string
                      minLength: 1
                    meta: {}
                  required:
                    - type
                    - description
                    - code
                    - id
            required:
              - errors
          examples:
            Example 403 Forbidden Response:
              value:
                links: []
                data: null
                errors:
                  - type: resource-permissions
                    description: User does not have permissions to access this resource.
                    code: optional-but-recommended-error-code
                    id: optional-error-id
                    meta: null
    conflictResponse:
      description: 409 Conflict Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            example:
              links: []
              data: null
              errors:
                - type: invalid-parameter-value
                  description: Subscription Item is in conflict
                  code: optional-but-recommended-error-code
                  source:
                    parameter: subscriptionId
                  id: optional-error-id
                  meta: null
            properties:
              links:
                type: array
                items:
                  type: object
              data: {}
              errors:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
                    code:
                      type: string
                      minLength: 1
                    source:
                      type: object
                      properties:
                        parameter:
                          type: string
                          minLength: 1
                      required:
                        - parameter
                    id:
                      type: string
                      minLength: 1
                    meta: {}
                  required:
                    - type
                    - description
                    - code
                    - id
            required:
              - errors
          examples:
            Example 409 Conflict Response:
              value:
                links: []
                data: null
                errors:
                  - type: resource-conflict
                    description: Subscription Item is in conflict
                    code: optional-but-recommended-error-code
                    source:
                      parameter: subscriptionId
                    id: optional-error-id
                    meta: null
    badRequestResponse:
      description: 400 Bad Request Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            example:
              links: []
              data: null
              errors:
                - type: invalid-parameter-value
                  description: '''product'' parameter is Invalid.'
                  code: optional-but-recommended-error-code
                  source:
                    parameter: product
                  id: optional-error-id
                  meta: null
            properties:
              links:
                type: array
                items:
                  type: object
              data: {}
              errors:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
                    code:
                      type: string
                      minLength: 1
                    source:
                      type: object
                      properties:
                        parameter:
                          type: string
                          minLength: 1
                      required:
                        - parameter
                    id:
                      type: string
                      minLength: 1
                    meta: {}
                  required:
                    - type
                    - description
                    - code
                    - id
            required:
              - errors
          examples:
            Example 400 Bad Request Response:
              value:
                links: []
                data: null
                errors:
                  - type: invalid-parameter-value
                    description: '''product'' parameter is invalid'
                    code: optional-but-recommended-error-code
                    source:
                      parameter: product
                    id: optional-error-id
                    meta: null
            Example Missing Field Error:
              value:
                links: []
                data: null
                errors:
                  - type: missing-field
                    description: '''product'' is missing from request payload'
                    code: optional-but-recommended-error-code
                    source:
                      parameter: product
                    id: optional-error-id
                    meta: null
    notFoundResponse:
      description: 404 Not Found Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            example:
              links: []
              data: null
              errors:
                - type: resource-not-found
                  description: The resource specified cannot be found.
                  code: optional-but-recommended-error-code
                  source:
                    reference: api.voxbone.com/v1/subscriptions/123465789
                  id: optional-error-id
                  meta:
                    subscriiptionId: '123456789'
            properties:
              links:
                type: array
                items:
                  type: object
              data: {}
              errors:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
                    code:
                      type: string
                      minLength: 1
                    source:
                      type: object
                      properties:
                        reference:
                          type: string
                          minLength: 1
                      required:
                        - reference
                    id:
                      type: string
                      minLength: 1
                    meta:
                      type: object
                      properties:
                        portInOrderId:
                          type: string
                          minLength: 1
                        phoneNumber:
                          type: string
                          minLength: 1
                  required:
                    - type
                    - description
                    - code
                    - id
            required:
              - errors
          examples:
            Example 404 Not Found Response:
              value:
                links: []
                data: null
                errors:
                  - type: resource-not-found
                    description: The resource specified cannot be found.
                    code: optional-but-recommended-error-code
                    source:
                      reference: api.voxbone.com/v1/subscriptions/123465789
                    id: optional-error-id
                    meta:
                      subscriptionId: '123456789'
    internalErrorResponse:
      description: 500 Internal Error Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            example:
              links: []
              data: null
              errors:
                - type: internal-server-error
                  description: >-
                    Unexpected internal server error. Contact Bandwidth Customer
                    Support if this problem persists.
                  code: optional-but-recommended-error-code
                  id: optional-error-id
                  meta:
                    message: An optional metadata field
            properties:
              links:
                type: array
                items:
                  type: object
              data: {}
              errors:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
                    code:
                      type: string
                      minLength: 1
                    id:
                      type: string
                      minLength: 1
                    meta:
                      type: object
                      properties:
                        message:
                          type: string
                          minLength: 1
                      required:
                        - message
                  required:
                    - type
                    - description
                    - code
                    - id
            required:
              - errors
          examples:
            Example 500 Internal Error Response:
              value:
                links: []
                data: null
                errors:
                  - type: internal-server-error
                    description: >-
                      Unexpected internal server error. Contact Bandwidth
                      Customer Support if this problem persists.
                    code: optional-but-recommended-error-code
                    id: optional-error-id
                    meta:
                      message: An optional metadata field
    methodNotAllowedResponse:
      description: 405 Method Not Allowed Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            example:
              links: []
              data: null
              errors:
                - type: http-method-not-supported
                  description: The HTTP method used is not supported by this resource.
                  code: optional-but-recommended-error-code
                  source:
                    method: PATCH
                  id: optional-error-id
                  meta: null
            properties:
              links:
                type: array
                items:
                  type: object
              data: {}
              errors:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
                    code:
                      type: string
                      minLength: 1
                    source:
                      type: object
                      properties:
                        method:
                          type: string
                          minLength: 1
                      required:
                        - method
                    id:
                      type: string
                      minLength: 1
                    meta: {}
                  required:
                    - type
                    - description
                    - code
                    - id
            required:
              - errors
          examples:
            Example 405 Method Not Allowed Response:
              value:
                links: []
                data: null
                errors:
                  - type: http-method-not-supported
                    description: The HTTP method used is not supported by this resource.
                    code: optional-but-recommended-error-code
                    source:
                      method: PATCH
                    id: optional-error-id
                    meta: null
  requestBodies:
    newSubscription:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscription'
          examples:
            'Example New Subscription ':
              value:
                product: PORTING
                eventType: PORTIN_ORDER_STATUS
                entityId: unique-id-value
                subscriptionStatus: ACTIVE
                tags:
                  - name: tag-name
                    value: tag-value
                notifyStates:
                  - DRAFT
                notificationChannel:
                  - callback:
                      url: some-url
                      publicKey: key
      description: Request Body for New Subscription
    patchSubscription:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patchSubscription'
          examples:
            Example Existing Subscription:
              value:
                eventType: PORTIN_ORDER_STATUS
                entityId: unique-id-value
                subscriptionStatus: ACTIVE
                tags:
                  - name: tag-name
                    value: tag-value
                notifyStates:
                  - DRAFT
                  - COMPLETED
                notificationChannel:
                  - $ref: '#/components/schemas/notificationChannel'
      description: Request Body for PATCH Subscription
    putSubscription:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/subscription'
          examples:
            Example PUT Subscription:
              value:
                product: PORTING
                eventType: PORTIN_ORDER_STATUS
                entityId: unique-id-value
                subscriptionStatus: ACTIVE
                tags:
                  - name: tag-name
                    value: tag-value
                notifyStates:
                  - DRAFT
                  - COMPLETED
                notificationChannel:
                  - $ref: '#/components/schemas/notificationChannel'
      description: Request Body for Existing Subscription
  parameters:
    subscriptionId:
      name: subscriptionId
      in: query
      required: false
      schema:
        type: string
      description: Unique ID of a Subscription
    product:
      name: product
      in: query
      required: false
      schema:
        type: string
      description: Product of Event Subscribed to for Notification
    eventType:
      name: eventType
      in: query
      required: false
      schema:
        type: string
      description: EventType Subscribed to
    userName:
      name: userName
      in: query
      required: false
      schema:
        type: string
      description: System userName of User
    subscriptionStatus:
      name: subscriptionStatus
      in: query
      required: false
      schema:
        type: string
      description: Active/Inactive
    entityId:
      name: entityId
      in: query
      required: false
      schema:
        type: string
      description: Unique ID of Event Entity (i.e. OrderId)
