openapi: 3.0.1
info:
  title: Bandwidth Toll Free Verification API
  version: 1.0.0
  contact:
    name: Bandwidth Support
    email: support@bandwidth.com
    url: https://support.bandwidth.com
  description: >-
    Submission, management, and querying of requests to verify toll-free phone
    numbers for message campaigns
servers:
  - url: https://dashboard.bandwidth.com/api/v1
tags:
  - name: Verification Request
    description: Submit a request for verification of a toll-free phone number.
  - name: Verification Information
    description: Get the verification status of an owned toll-free phone number
  - name: Verification Use Cases
    description: Get a list of valid toll-free use cases
security:
  - Basic: []
paths:
  /accounts/{accountId}/tollFreeVerificationRequests:
    post:
      tags:
        - Verification Request
      summary: Submit a toll-free verification request
      description: Submit a request for verification of a toll-free phone number.
      operationId: requestVerification
      parameters:
        - $ref: '#/components/parameters/accountId'
      requestBody:
        $ref: '#/components/requestBodies/verificationRequest'
      responses:
        '202':
          $ref: '#/components/responses/Accepted-202'
        '400':
          $ref: '#/components/responses/BadRequest-400'
        '401':
          $ref: '#/components/responses/Unauthorized-401'
        '403':
          $ref: '#/components/responses/Forbidden-403'
        '405':
          $ref: '#/components/responses/MethodNotAllowed-405'
        '429':
          $ref: '#/components/responses/TooManyRequests-429'
        '500':
          $ref: '#/components/responses/ServerError-500'
        '503':
          $ref: '#/components/responses/ServiceUnavailable-503'
  /accounts/{accountId}/tollFreeVerificationRequests/{phoneNumber}:
    get:
      tags:
        - Verification Information
      summary: Get the verification status of a toll-free phone number
      description: >-
        This API will provide verification status for a phone number that is
        provisioned to your account.
      operationId: getVerificationStatus
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/phoneNumber'
      responses:
        '200':
          $ref: '#/components/responses/Success-200'
        '400':
          $ref: '#/components/responses/BadRequest-400'
        '401':
          $ref: '#/components/responses/Unauthorized-401'
        '403':
          $ref: '#/components/responses/Forbidden-403'
        '404':
          $ref: '#/components/responses/NotFound-404'
        '405':
          $ref: '#/components/responses/MethodNotAllowed-405'
        '429':
          $ref: '#/components/responses/TooManyRequests-429'
        '500':
          $ref: '#/components/responses/ServerError-500'
        '503':
          $ref: '#/components/responses/ServiceUnavailable-503'
  /tollFreeVerificationRequests/useCases:
    get:
      tags:
        - Verification Use Cases
      summary: List valid use cases for toll-free traffic
      description: provides a list of valid toll-free use cases
      operationId: listUseCases
      responses:
        '200':
          $ref: '#/components/responses/Success-200-UseCases'
        '400':
          $ref: '#/components/responses/BadRequest-400-UseCases'
        '401':
          $ref: '#/components/responses/Unauthorized-401'
        '403':
          $ref: '#/components/responses/Forbidden-403'
        '404':
          $ref: '#/components/responses/NotFound-404'
        '405':
          $ref: '#/components/responses/MethodNotAllowed-405'
        '429':
          $ref: '#/components/responses/TooManyRequests-429'
        '500':
          $ref: '#/components/responses/ServerError-500'
        '503':
          $ref: '#/components/responses/ServiceUnavailable-503'
components:
  parameters:
    accountId:
      name: accountId
      in: path
      required: true
      schema:
        type: string
      description: Your Bandwidth Account ID
      example: '9900000'
    phoneNumber:
      name: phoneNumber
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PhoneNumber'
      description: Valid telephone number in E.164 format
      example: '+19194445555'
  requestBodies:
    verificationRequest:
      description: Submit a request for verification of a toll-free phone number.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerificationRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/VerificationRequest'
  schemas:
    PhoneNumber:
      type: string
      minLength: 2
      maxLength: 17
      nullable: false
      pattern: ^\+\d{1,16}$
      example: '+18005555555'
    Email:
      type: string
      minLength: 3
      maxLength: 500
      nullable: false
      pattern: >-
        ^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$
      example: foo@bar.com
    Url:
      type: string
      minLength: 3
      maxLength: 500
      nullable: false
      example: https://www.example.com/path/to/resource
      pattern: ^((https?):\/\/)?(www.)?[a-z0-9]+\.[a-z]+(\/[a-zA-Z0-9#]+\/?)*$
    UsState:
      type: string
      minLength: 2
      maxLength: 500
      nullable: false
      example: NC
    UsZipCode:
      type: string
      minLength: 5
      maxLength: 10
      nullable: false
      example: '27606'
      pattern: ^\d{5}(-\d{4})?$
    String:
      type: string
      minLength: 0
      maxLength: 500
      nullable: false
    NullableString:
      type: string
      minLength: 0
      maxLength: 500
      nullable: true
    Address:
      type: object
      nullable: false
      required:
        - name
        - addressLine1
        - city
        - state
        - zipCode
        - website
      properties:
        name:
          $ref: '#/components/schemas/String'
        addressLine1:
          $ref: '#/components/schemas/String'
        addressLine2:
          $ref: '#/components/schemas/NullableString'
        city:
          $ref: '#/components/schemas/String'
        state:
          $ref: '#/components/schemas/UsState'
        zipCode:
          $ref: '#/components/schemas/UsZipCode'
        website:
          $ref: '#/components/schemas/Url'
    Contact:
      type: object
      nullable: false
      required:
        - firstName
        - lastName
        - email
        - phoneNumber
      properties:
        firstName:
          $ref: '#/components/schemas/String'
        lastName:
          $ref: '#/components/schemas/String'
        email:
          $ref: '#/components/schemas/Email'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
    OptInWorkflow:
      type: object
      nullable: false
      required:
        - description
        - imageUrls
      properties:
        description:
          $ref: '#/components/schemas/String'
        imageUrls:
          type: array
          items:
            $ref: '#/components/schemas/Url'
    VerificationRequest:
      type: object
      required:
        - businessAddress
        - businessContact
        - messageVolume
        - phoneNumbers
        - useCaseCategory
        - useCaseSummary
        - productionMessageContent
        - optInWorkflow
      properties:
        businessAddress:
          $ref: '#/components/schemas/Address'
        businessContact:
          $ref: '#/components/schemas/Contact'
        messageVolume:
          type: integer
          example: 10000
        phoneNumbers:
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/PhoneNumber'
        useCaseCategory:
          $ref: '#/components/schemas/UseCaseCategories'
        useCaseSummary:
          $ref: '#/components/schemas/String'
        productionMessageContent:
          $ref: '#/components/schemas/String'
        optInWorkflow:
          $ref: '#/components/schemas/OptInWorkflow'
        additionalInformation:
          $ref: '#/components/schemas/NullableString'
        internalTicketNumber:
          $ref: '#/components/schemas/NullableString'
        isvReseller:
          $ref: '#/components/schemas/NullableString'
    TfvStatus:
      type: object
      properties:
        phoneNumber:
          type: string
          example: '+18005555555'
        status:
          type: string
          example: Verified
    UseCases:
      type: array
      items:
        type: string
      example:
        - 2FA
        - App Notifications
        - Appointments
        - Auctions
        - Auto Repair Services
        - Bank Transfers
        - Billing
        - Booking Confirmations
        - Business Updates
        - COVID-19 Alerts
    AcceptedContent:
      type: object
      properties:
        status:
          type: number
          example: 202
        message:
          type: string
          example: Request has been accepted
    UseCaseCategories:
      type: string
      example: 2FA
    BadRequestContent:
      type: object
      properties:
        status:
          type: number
          example: 400
        message:
          type: string
          example: Phone Number is not in E.164 format
    BadRequestContentUseCases:
      type: object
      properties:
        status:
          type: number
          example: 400
        message:
          type: string
          example: Bad Request
    ErrorResponse401:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: number
          example: 401
        message:
          type: string
          example: Client must authenticate itself
    ErrorResponse403:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: number
          example: 403
        message:
          type: string
          example: Client is forbidden from accessing this resource
    MethodNotAllowedContent:
      type: object
      properties:
        status:
          type: number
          example: 405
        message:
          type: string
          example: This method is not allowed for the given accountId
    TooManyRequestsContent:
      type: object
      properties:
        status:
          type: number
          example: 429
        message:
          type: string
          example: Client has issued too many requests
    ServerErrorContent:
      type: object
      properties:
        status:
          type: number
          example: 500
        message:
          type: string
          example: Internal server error
    ServiceUnavailableContent:
      type: object
      properties:
        status:
          type: number
          example: 503
        message:
          type: string
          example: Service unavailable
    NotFound:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: number
          example: 404
        message:
          type: string
          example: Resource not found
  securitySchemes:
    Basic:
      type: http
      scheme: basic
      description: >-
        Basic authentication is a simple authentication scheme built into the
        HTTP protocol. To use it, send your HTTP requests with an Authorization
        header that contains the word Basic followed by a space and a
        base64-encoded string `username:password`.

        Example: `Authorization: Basic ZGVtbZpwQDU1dzByZA==`
  responses:
    Success-200:
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TfvStatus'
    Success-200-UseCases:
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UseCases'
    Accepted-202:
      description: Accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcceptedContent'
    BadRequest-400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestContent'
    BadRequest-400-UseCases:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestContentUseCases'
    Unauthorized-401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse401'
    Forbidden-403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse403'
    NotFound-404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
    MethodNotAllowed-405:
      description: Method Not Allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MethodNotAllowedContent'
    TooManyRequests-429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsContent'
    ServerError-500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerErrorContent'
    ServiceUnavailable-503:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceUnavailableContent'
