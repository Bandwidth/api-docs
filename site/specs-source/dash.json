{
  "openapi": "3.0.0",
  "info": {
    "title": "DASH",
    "version": "1.0.0",
    "description": "A Bandwidth API to provision and manage emergency address information associated with telephone numbers.",
    "x-server-configuration": {
      "default-environment": "production",
      "default-server": "default",
      "environments": [
        {
          "name": "production",
          "servers": [
            {
              "name": "default",
              "url": "https://service.dashcs.com/dash-api/xml/emergencyprovisioning/v1"
            }
          ]
        },
        {
          "name": "staging",
          "servers": [
            {
              "name": "default",
              "url": "https://staging-service.dashcs.com/dash-api/xml/emergencyprovisioning/v1"
            }
          ]
        },
        {
          "name": "custom",
          "servers": [
            {
              "name": "default",
              "url": "{base_url}"
            }
          ]
        }
      ],
      "parameters": [
        {
          "name": "base_url",
          "description": "",
          "type": "string",
          "example": "https://www.example.com"
        }
      ]
    }
  },
  "servers": [
    {
      "url": "https://service.dashcs.com/dash-api/xml/emergencyprovisioning/v1",
      "description": "Production",
      "variables": {}
    },
    {
      "url": "https://staging-service.dashcs.com/dash-api/xml/emergencyprovisioning/v1",
      "description": "Staging",
      "variables": {}
    }
  ],
  "paths": {
    "/authenticationCheck": {
      "get": {
        "summary": "Authentication Check",
        "description": "A convenience method that always returns true if credentials passed in the authorization header are valid. You can use this to make sure your authentication is working.",
        "operationId": "authenticationCheck",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationCheckResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns2:getAuthenticationCheckResponse xmlns:ns2=\"http://dashcs.com/api/v1/emergency\">\n    <AuthValid>true</AuthValid>\n</ns2:getAuthenticationCheckResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/uris": {
      "get": {
        "summary": "URIs",
        "description": "Find all of the URIs belonging to the requesting customer that has active emergency services.",
        "operationId": "getUris",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UrisResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns2:getURIsResponse xmlns:ns2=\"http://dashcs.com/api/v1/emergency\">\n    <URIs>\n        <uris>\n            <callername>Caller One</callername>\n            <uri>tel:19195551234</uri>\n        </uris>\n        <uris>\n            <callername>Caller Two</callername>\n            <uri>tel:19195554321</uri>\n        </uris>\n        <uris>\n            <callername>Caller Three</callername>\n            <uri>tel:19195559876</uri>\n        </uris>\n    </URIs>\n</ns2:getURIsResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/locationsByUri/{uri}": {
      "get": {
        "summary": "Locations by URI",
        "description": "Find all the locations associated with the given URI.",
        "operationId": "getLocationsByUri",
        "parameters": [
          {
            "name": "uri",
            "in": "path",
            "required": true,
            "description": "URI Value",
            "schema": {
              "type": "string"
            },
            "example": "13035551234"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationsByUriResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns0:getLocationsByURIResponse xmlns:ns0=\"http://dashcs.com/api/v1/emergency\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Locations>\n        <activatedtime>2014-10-08T16:57:48Z</activatedtime>\n        <address1>1855 BLAKE ST</address1>\n        <address2 xsi:nil=\"true\" />\n        <callername>Bandwidth Test User 1</callername>\n        <comments xsi:nil=\"true\" />\n        <community>DENVER</community>\n        <customerorderid xsi:nil=\"true\" />\n        <latitude>39.75302</latitude>\n        <legacydata>\n            <housenumber>1855</housenumber>\n            <predirectional xsi:nil=\"true\" />\n            <streetname>BLAKE ST</streetname>\n            <suite xsi:nil=\"true\" />\n        </legacydata>\n        <locationid>20914831</locationid>\n        <longitude>-104.996203</longitude>\n        <plusfour>1288</plusfour>\n        <postalcode>80202</postalcode>\n        <state>CO</state>\n        <status>\n            <code>PROVISIONED</code>\n            <description>Location is currently provisioned for URI</description>\n        </status>\n        <type>ADDRESS</type>\n        <updatetime>2014-10-08T17:23:49Z</updatetime>\n    </Locations>\n    <Locations>\n        <activatedtime>2014-10-08T16:57:48Z</activatedtime>\n        <address1>2850 ST LAWERENCE AVE</address1>\n        <address2 xsi:nil=\"true\" />\n        <callername>Bandwidth Test User 1</callername>\n        <comments xsi:nil=\"true\" />\n        <community>READING</community>\n        <customerorderid xsi:nil=\"true\" />\n        <latitude>40.331245</latitude>\n        <legacydata>\n            <housenumber>2850</housenumber>\n            <predirectional xsi:nil=\"true\" />\n            <streetname>ST LAWERENCE AVE</streetname>\n            <suite xsi:nil=\"true\" />\n        </legacydata>\n        <locationid>21018169</locationid>\n        <longitude>-75.849602</longitude>\n        <plusfour xsi:nil=\"true\" />\n        <postalcode>19606</postalcode>\n        <state>PA</state>\n        <status>\n            <code>GEOCODED</code>\n            <description>Location is geocoded</description>\n        </status>\n        <type>ADDRESS</type>\n        <updatetime>2015-04-08T23:45:07Z</updatetime>\n    </Locations>\n</ns0:getLocationsByURIResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/provisionedlocationbyuri/{uri}": {
      "get": {
        "summary": "Provisioned Location by URI",
        "description": "Get the provisioned location associated with a URI. You can have multiple locations associated with a URI but only one can be provisioned at a time.",
        "operationId": "getProvisionedLocationByUri",
        "parameters": [
          {
            "name": "uri",
            "in": "path",
            "required": true,
            "description": "URI Value",
            "schema": {
              "type": "string"
            },
            "example": "13035551234"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProvisionedLocationByUriResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns0:getLocationsByURIResponse xmlns:ns0=\"http://dashcs.com/api/v1/emergency\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Location>\n        <activatedtime>2014-10-08T16:57:48Z</activatedtime>\n        <address1>1855 BLAKE ST</address1>\n        <address2 xsi:nil=\"true\" />\n        <callername>Bandwidth Test User 1</callername>\n        <comments xsi:nil=\"true\" />\n        <community>DENVER</community>\n        <customerorderid xsi:nil=\"true\" />\n        <latitude>39.75302</latitude>\n        <legacydata>\n            <housenumber>1855</housenumber>\n            <predirectional xsi:nil=\"true\" />\n            <streetname>BLAKE ST</streetname>\n            <suite xsi:nil=\"true\" />\n        </legacydata>\n        <locationid>20914831</locationid>\n        <longitude>-104.996203</longitude>\n        <plusfour>1288</plusfour>\n        <postalcode>80202</postalcode>\n        <state>CO</state>\n        <status>\n            <code>PROVISIONED</code>\n            <description>Location is currently provisioned for URI</description>\n        </status>\n        <type>ADDRESS</type>\n        <updatetime>2014-10-08T17:23:49Z</updatetime>\n    </Location>\n</ns0:getLocationsByURIResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/provisionedlocationhistorybyuri/{uri}": {
      "get": {
        "summary": "Provisoned Location History by URI",
        "description": "Given a URI find the provisioned location and histories.",
        "operationId": "getProvisionedLocationHistoryByUri",
        "parameters": [
          {
            "name": "uri",
            "in": "path",
            "required": true,
            "description": "URI Value",
            "schema": {
              "type": "string"
            },
            "example": "13035551234"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProvisionedLocationHistoryByUriResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns2:getProvisionedLocationHistoryByURIResponse xmlns:ns2=\"http://dashcs.com/api/v1/emergency\">\n    <ProvisionedLocations>\n        <activatedtime>2010-11-18T23:19:40Z</activatedtime>\n        <address1>1002 BYRD LN</address1>\n        <address2 xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"></address2>\n        <callername>Larry Reeder</callername>\n        <comments xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"></comments>\n        <community>PLEASANTON</community>\n        <customerorderid xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"></customerorderid>\n        <latitude>37.63894</latitude>\n        <legacydata>\n            <housenumber>1002</housenumber>\n            <predirectional xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"></predirectional>\n            <streetname>BYRD LN</streetname>\n            <suite xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"></suite>\n        </legacydata>\n        <locationid xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"></locationid>\n        <longitude>-121.871018</longitude>\n        <plusfour>9706</plusfour>\n        <postalcode>94566</postalcode>\n        <state>CA</state>\n        <status xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"></status>\n        <type>ADDRESS</type>\n        <updatetime>2010-04-20T15:06:16Z</updatetime>\n    </ProvisionedLocations>\n</ns2:getProvisionedLocationHistoryByURIResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/validatelocation": {
      "post": {
        "summary": "Validate Location",
        "description": "Validate an address.",
        "operationId": "validateLocation",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ValidateLocationRequest"
              },
              "examples": {
                "Payload": {
                  "value": "<validateLocation>\n <location>\n   <address1>2040 Larimer</address1>\n   <community>Denver</community>\n   <state>CO</state>\n   <postalcode>80205</postalcode>\n   <type>ADDRESS</type>\n </location>\n</validateLocation>"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateLocationResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns1:validateLocationResponse xmlns:ns1=”http://dashcs.com/api/v1/emergency”>\n  <Location>\n    <address1>2040 Larimer St</address1>\n    <community>Denver</community>\n    <latitude>39.753439</latitude>\n    <legacydata>\n    <longitude>-104.991949</longitude>\n    <plusfour>2015</plusfour>\n    <postalcode>80205</postalcode>\n    <state>CO</state>\n    <status>\n      <code>GEOCODED</code>\n      <description>Location is geocoded</description>\n    </status>\n    <type>ADDRESS</type>\n </Location>\n</ns1:validateLocationResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/addlocation": {
      "post": {
        "summary": "Add Location",
        "description": "Add a location and associate it with a URI.",
        "operationId": "addLocation",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddLocationRequest"
              },
              "examples": {
                "Payload": {
                  "value": "<addLocation>\n  <uri>\n     <uri>13035551236</uri>\n     <callername>Bandwidth Test User 3</callername>\n  </uri>\n  <location>\n    <address1>1860 Blake St</address1>\n    <address2>Suite 420</address2>\n    <community>Denver</community>\n    <postalcode>80202</postalcode>\n    <plusfour></plusfour>\n    <state>CO</state>\n    <type>ADDRESS</type>\n  </location>\n</addLocation>"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AddLocationResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns0:addLocationResponse xmlns:ns0=\"http://dashcs.com/api/v1/emergency\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Location>\n        <activatedtime>2018-03-12T13:24:26.296Z</activatedtime>\n        <address1>1860 BLAKE ST</address1>\n        <address2>STE 420</address2>\n        <callername>Bandwidth Test User 3</callername>\n        <comments xsi:nil=\"true\" />\n        <community>DENVER</community>\n        <customerorderid xsi:nil=\"true\" />\n        <latitude>39.753095</latitude>\n        <legacydata>\n            <housenumber>1860</housenumber>\n            <predirectional xsi:nil=\"true\" />\n            <streetname>BLAKE ST</streetname>\n            <suite>STE 420</suite>\n        </legacydata>\n        <locationid>67880038</locationid>\n        <longitude>-104.995857</longitude>\n        <plusfour>1228</plusfour>\n        <postalcode>80202</postalcode>\n        <state>CO</state>\n        <status>\n            <code>GEOCODED</code>\n            <description>Location is geocoded</description>\n        </status>\n        <type>ADDRESS</type>\n        <updatetime xsi:nil=\"true\" />\n    </Location>\n</ns0:addLocationResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/provisionlocation": {
      "post": {
        "summary": "Provision Location",
        "description": "Provision a Location with a URI to set it as the address sent to the PSAP when the URI dials 911.",
        "operationId": "provisionLocation",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionLocationRequest"
              },
              "examples": {
                "Payload": {
                  "value": "<provisionLocation>\n   <locationid>67880038</locationid>\n</provisionLocation>"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionLocationResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns0:provisionLocationResponse xmlns:ns0=\"http://dashcs.com/api/v1/emergency\">\n    <LocationStatus>\n        <code>PROVISIONED</code>\n        <description>Location is currently provisioned for URI</description>\n    </LocationStatus>\n</ns0:provisionLocationResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/removelocation": {
      "post": {
        "summary": "Remove Location",
        "description": "Remove a Location.",
        "operationId": "removeLocation",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RemoveLocationRequest"
              },
              "examples": {
                "Payload": {
                  "value": "<removeLocation>\n <locationid>77</locationid>\n</removeLocation>"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveLocationResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns0:removeLocationResponse xmlns:ns0=\"http://dashcs.com/api/v1/emergency\">\n    <LocationStatus>\n        <code>REMOVED</code>\n        <description>Location removed from the system</description>\n    </LocationStatus>\n</ns0:removeLocationResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/removeuri": {
      "post": {
        "summary": "Remove URI",
        "description": "Remove a URI. Also remove all locations that were associated with the URI",
        "operationId": "removeUri",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUriRequest"
              },
              "examples": {
                "Payload": {
                  "value": "<removeUri>\n   <uri>13035551236</uri>\n</removeUri>"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveUriResponse"
                },
                "examples": {
                  "successfulResponse": {
                    "summary": "Successful Response",
                    "value": "<ns0:removeURIResponse xmlns:ns0=\"http://dashcs.com/api/v1/emergency\">\n    <URIStatus>\n        <code>REMOVED</code>\n        <description>URI removed from system</description>\n    </URIStatus>\n</ns0:removeURIResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticationCheckResponse": {
        "title": "getAuthenticationCheckResponse",
        "type": "object",
        "properties": {
          "AuthValid": {
            "type": "boolean",
            "description": "Whether or not credentials are valid"
          }
        }
      },
      "UrisResponse": {
        "title": "getURIsResponse",
        "type": "object",
        "properties": {
          "URIs": {
            "type": "object",
            "properties": {
              "uris": {
                "type": "object",
                "properties": {
                  "callername": {
                    "type": "string"
                  },
                  "uri": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "activatedtime": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "callername": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "community": {
            "type": "string"
          },
          "customerorderid": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "legacydata": {
            "type": "object",
            "properties": {
              "housenumber": {
                "type": "string"
              },
              "predirectional": {
                "type": "string"
              },
              "streetname": {
                "type": "string"
              },
              "suite": {
                "type": "string"
              }
            }
          },
          "locationid": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "plusfour": {
            "type": "string"
          },
          "postalcode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "type": {
            "type": "string"
          },
          "updatetime": {
            "type": "string"
          }
        }
      },
      "Locations": {
        "type": "object",
        "properties": {
          "activatedtime": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "callername": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "community": {
            "type": "string"
          },
          "customerorderid": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "legacydata": {
            "type": "object",
            "properties": {
              "housenumber": {
                "type": "string"
              },
              "predirectional": {
                "type": "string"
              },
              "streetname": {
                "type": "string"
              },
              "suite": {
                "type": "string"
              }
            }
          },
          "locationid": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "plusfour": {
            "type": "string"
          },
          "postalcode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "type": {
            "type": "string"
          },
          "updatetime": {
            "type": "string"
          }
        }
      },
      "ProvisionedLocations": {
        "type": "object",
        "properties": {
          "activatedtime": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "callername": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "community": {
            "type": "string"
          },
          "customerorderid": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "legacydata": {
            "type": "object",
            "properties": {
              "housenumber": {
                "type": "string"
              },
              "predirectional": {
                "type": "string"
              },
              "streetname": {
                "type": "string"
              },
              "suite": {
                "type": "string"
              }
            }
          },
          "locationid": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "plusfour": {
            "type": "string"
          },
          "postalcode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "type": {
            "type": "string"
          },
          "updatetime": {
            "type": "string"
          }
        }
      },
      "GetLocationsByUriResponse": {
        "title": "getLocationsByUriResponse",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Locations"
        }
      },
      "GetProvisionedLocationByUriResponse": {
        "title": "getProvisionedLocationByUriResponse",
        "type": "object",
        "$ref": "#/components/schemas/Location"
      },
      "GetProvisionedLocationHistoryByUriResponse": {
        "title": "getProvisionedLocationHistoryByUriResponse",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProvisionedLocations"
        }
      },
      "ValidateLocationRequest": {
        "title": "validateLocation",
        "type": "object",
        "properties": {
          "location": {
            "type": "object",
            "properties": {
              "address1": {
                "type": "string"
              },
              "community": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "postalcode": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          }
        }
      },
      "ValidateLocationResponse": {
        "title": "validateLocationResponse",
        "type": "object",
        "$ref": "#/components/schemas/Location"
      },
      "AddLocationRequest": {
        "title": "addLocation",
        "type": "object",
        "properties": {
          "uri": {
            "type": "object",
            "properties": {
              "uri": {
                "type": "string"
              },
              "callername": {
                "type": "string"
              }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "address1": {
                "type": "string"
              },
              "address2": {
                "type": "string"
              },
              "community": {
                "type": "string"
              },
              "postalcode": {
                "type": "string"
              },
              "plusfour": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          }
        }
      },
      "AddLocationResponse": {
        "title": "addLocationResponse",
        "type": "object",
        "$ref": "#/components/schemas/Location"
      },
      "ProvisionLocationRequest": {
        "title": "provisionLocation",
        "type": "object",
        "properties": {
          "locationid": {
            "type": "string"
          }
        }
      },
      "ProvisionLocationResponse": {
        "title": "provisionLocationResponse",
        "type": "object",
        "properties": {
          "LocationStatus": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        }
      },
      "RemoveLocationRequest": {
        "title": "removeLocation",
        "type": "object",
        "properties": {
          "locationid": {
            "type": "string"
          }
        }
      },
      "RemoveLocationResponse": {
        "title": "removeLocationResponse",
        "type": "object",
        "properties": {
          "LocationStatus": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        }
      },
      "RemoveUriRequest": {
        "title": "removeUri",
        "type": "object",
        "properties": {
          "locationid": {
            "type": "string"
          }
        }
      },
      "RemoveUriResponse": {
        "title": "removeURIResponse",
        "type": "object",
        "properties": {
          "URIStatus": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "httpBasic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "httpBasic": []
    }
  ],
  "tags": []
}
