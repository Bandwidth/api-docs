{
  "openapi": "3.0.0",
  "info": {
    "description": "Bandwidth's HTTP voice platform\n## Base Path\n<code>https://voice.bandwidth.com</code>",
    "version": "3.2.2",
    "title": "Voice",
    "x-server-configuration": {
      "default-environment": "production",
      "default-server": "default",
      "environments": [
        {
          "name": "production",
          "servers": [
            {
              "name": "default",
              "url": "https://voice.bandwidth.com"
            }
          ]
        },
        {
          "name": "custom",
          "servers": [
            {
              "name": "default",
              "url": "{base_url}"
            }
          ]
        }
      ],
      "parameters": [
        {
          "name": "base_url",
          "description": "",
          "schema": {
            "type": "string",
            "example": "https://www.example.com"
          }
        }
      ]
    }
  },
  "security": [{
    "basicAuth": []
  }],
  "paths": {
    "/api/v2/accounts/{accountId}/calls": {
      "post": {
        "tags": [
          "Calls"
        ],
        "summary": "Create Call",
        "description": "Creates an outbound phone call.\n\nCalls are created immediately unless your account has outbound call queueing enabled. When enabled, your outbound calls will be queued and initiated at a specific dequeueing rate, enabling your application to \"fire and forget\" when creating calls. Queued calls may not be modified until they are dequeued and placed, but may be removed from your queue on demand.\n\n<b>Please note: </b> Calls submitted to your queue will be placed aproximately in order, but exact ordering is not guaranteed.",
        "operationId": "createCall",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCallRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Call successfully created",
            "headers": {
              "Location": {
                "description": "The URL for further interactions with this call",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCallResponse"
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/calls/{callId}": {
      "get": {
        "tags": [
          "Calls"
        ],
        "summary": "Get Call Information",
        "description": "Returns near-realtime metadata about the specified call.",
        "operationId": "getCall",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Call found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallState"
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calls"
        ],
        "summary": "Update Call",
        "description": "Interrupts and replaces an active call's BXML document.",
        "operationId": "modifyCall",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCallRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call successfully modified"
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/calls/{callId}/recording": {
      "put": {
        "tags": [
          "Recordings"
        ],
        "summary": "Update Recording",
        "description": "Pauses or resumes a recording.",
        "operationId": "modifyCallRecordingState",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCallRecordingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recording state successfully modified"
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/calls/{callId}/recordings": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Get Call Recordings",
        "description": "Returns a (potentially empty) list of metadata for the recordings that took place during the specified call.",
        "operationId": "getCallRecordings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recordings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallRecordingMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/calls/{callId}/recordings/{recordingId}": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Get Call Recording",
        "description": "Returns metadata for the specified recording.",
        "operationId": "getCallRecording",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recording found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallRecordingMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recordings"
        ],
        "summary": "Delete Recording",
        "description": "Deletes the specified recording.",
        "operationId": "deleteRecording",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The recording was successfully deleted"
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/calls/{callId}/recordings/{recordingId}/media": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Download Recording",
        "description": "Downloads the specified recording.",
        "operationId": "downloadCallRecording",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media found",
            "content": {
              "audio/vnd.wave": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recordings"
        ],
        "summary": "Delete Recording Media",
        "description": "Deletes the specified recording's media.",
        "operationId": "deleteRecordingMedia",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The recording media was successfully deleted"
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/calls/{callId}/recordings/{recordingId}/transcription": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Get Transcription",
        "description": "Downloads the specified transcription.",
        "operationId": "getCallTranscription",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transcription found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recordings"
        ],
        "summary": "Create Transcription Request",
        "description": "Requests that the specified recording be transcribed.",
        "operationId": "transcribeCallRecording",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscribeRecordingRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Transcription successfully requested"
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "410": {
            "description": "The media for this recording has been deleted, so we can't transcribe it",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recordings"
        ],
        "summary": "Delete Transcription",
        "description": "Deletes the specified recording's transcription.",
        "operationId": "deleteCallTranscription",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The transcription was successfully deleted"
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/conferences": {
      "get": {
        "tags": [
          "Conferences"
        ],
        "summary": "Get Conferences",
        "description": "Returns information about the conferences in the account.",
        "operationId": "getConferences",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minCreatedTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxCreatedTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conferences retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConferenceState"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/conferences/{conferenceId}": {
      "get": {
        "tags": [
          "Conferences"
        ],
        "summary": "Get Conference Information",
        "description": "Returns information about the specified conference.",
        "operationId": "getConference",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conference found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceState"
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Conferences"
        ],
        "summary": "Update Conference",
        "description": "Modify the conference state.",
        "operationId": "modifyConference",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyConferenceRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Conference successfully modified"
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/conferences/{conferenceId}/members/{callId}": {
      "put": {
        "tags": [
          "Conferences"
        ],
        "summary": "Update Member",
        "description": "Updates settings for a particular conference member.",
        "operationId": "modifyConferenceMember",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceMemberState"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Conference member successfully modified"
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/conferences/{conferenceId}/members/{memberId}": {
      "get": {
        "tags": [
          "Conferences"
        ],
        "summary": "Get Member Information",
        "description": "Returns information about the specified conference member.",
        "operationId": "getConferenceMember",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conference member found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceMemberState"
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/conferences/{conferenceId}/recordings": {
      "get": {
        "tags": [
          "Conferences"
        ],
        "summary": "Get Conference Recordings",
        "description": "Returns a (potentially empty) list of metadata for the recordings that took place during the specified conference",
        "operationId": "getConferenceRecordings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recordings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConferenceRecordingMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/conferences/{conferenceId}/recordings/{recordingId}": {
      "get": {
        "tags": [
          "Conferences"
        ],
        "summary": "Get Recording Information",
        "description": "Returns metadata for the specified recording.",
        "operationId": "getConferenceRecording",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recording found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallRecordingMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/conferences/{conferenceId}/recordings/{recordingId}/media": {
      "get": {
        "tags": [
          "Conferences"
        ],
        "summary": "Download Recording",
        "description": "Downloads the specified recording.",
        "operationId": "downloadConferenceRecording",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media found",
            "content": {
              "audio/vnd.wave": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accounts/{accountId}/recordings": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Get Call Recordings",
        "description": "Returns a list of metadata for the recordings associated with the specified account. The list can be filtered by the optional from, to, minStartTime, and maxStartTime arguments. The list is capped at 1000 entries and may be empty if no recordings match the specified criteria.",
        "operationId": "queryCallRecordings",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minStartTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxStartTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recordings retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallRecordingMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Something's not quite right... Your request is invalid. Please fix it before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Your credentials are invalid. Please use your Bandwidth dashboard credentials to authenticate to the API."
          },
          "403": {
            "description": "User unauthorized to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "The resource specified cannot be found or does not belong to you.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "415": {
            "description": "We don't support that media type. If a request body is required, please send it to us as `application/json`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "429": {
            "description": "You're sending requests to this endpoint too frequently. Please slow your request rate down and try again.",
            "headers": {
              "Retry-After": {
                "description": "When you should try your request again",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Something unexpected happened. Please try again.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://voice.bandwidth.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "CreateCallRequest": {
        "type": "object",
        "required": [
          "answerUrl",
          "applicationId",
          "from",
          "to"
        ],
        "properties": {
          "from": {
            "type": "string",
            "example": "+15555555555",
            "description": "Format is E164"
          },
          "to": {
            "type": "string",
            "example": "+15555555555, sip:john@doe.com",
            "description": "Format is E164 or SIP URI"
          },
          "uui": {
            "nullable": true,
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiJ9.WyJoaSJd.-znkjYyCkgz4djmHUPSXl9YrJ6Nix_XvmlwKGFh5ERM;encoding=jwt,aGVsbG8gd29ybGQ=;encoding=base64",
            "description": "A comma-separated list of 'User-To-User' headers to be sent in the INVITE when calling a SIP URI. Each value must end with an 'encoding' parameter as described in https://tools.ietf.org/html/rfc7433. Only 'jwt' and 'base64' encodings are allowed. The entire value cannot exceed 350 characters, including parameters and separators."
          },
          "callTimeout": {
            "nullable": true,
            "type": "number",
            "format": "double"
          },
          "callbackTimeout": {
            "nullable": true,
            "type": "number",
            "format": "double"
          },
          "answerUrl": {
            "type": "string",
            "format": "uri"
          },
          "answerFallbackUrl": {
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "username": {
            "nullable": true,
            "type": "string"
          },
          "password": {
            "nullable": true,
            "type": "string"
          },
          "fallbackUsername": {
            "nullable": true,
            "type": "string"
          },
          "fallbackPassword": {
            "nullable": true,
            "type": "string"
          },
          "answerMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "answerFallbackMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "disconnectUrl": {
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "disconnectMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "tag": {
            "nullable": true,
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "machineDetection": {
            "$ref": "#/components/schemas/MachineDetectionConfiguration"
          },
          "priority": {
            "nullable": true,
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "default": 5,
            "description": "The priority of this call over other calls from your account when outbound call queueing</a> is enabled. For example, if during a call your application needs to place a new call and bridge it with the current call, you might want to create the call with priority 1 so that it will be the next call picked off your queue, ahead of other less time sensitive calls.  A lower value means higher priority, so a priority 1 call takes precedence over a priority 2 call. Range: integer values between 1 - 5. Default value is 5."
          }
        }
      },
      "CreateCallResponse": {
        "type": "object",
        "required": [
          "accountId",
          "answerMethod",
          "answerUrl",
          "applicationId",
          "callId",
          "callUrl",
          "disconnectMethod",
          "from",
          "to"
        ],
        "properties": {
          "accountId": {
            "type": "string"
          },
          "callId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "callUrl": {
            "type": "string",
            "format": "uri"
          },
          "callTimeout": {
            "type": "number",
            "format": "double"
          },
          "callbackTimeout": {
            "type": "number",
            "format": "double"
          },
          "answerUrl": {
            "type": "string",
            "format": "uri"
          },
          "answerMethod": {
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "answerFallbackUrl": {
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "answerFallbackMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "disconnectUrl": {
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "disconnectMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "username": {
            "nullable": true,
            "type": "string"
          },
          "password": {
            "nullable": true,
            "type": "string"
          },
          "fallbackUsername": {
            "nullable": true,
            "type": "string"
          },
          "fallbackPassword": {
            "nullable": true,
            "type": "string"
          },
          "tag": {
            "nullable": true,
            "type": "string"
          }
        }
      },
      "CallState": {
        "type": "object",
        "properties": {
          "callId": {
            "type": "string"
          },
          "parentCallId": {
            "nullable": true,
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "state": {
            "description": "The current state of the call. Current possible values are 'queued', 'initiated', 'answered' and 'disconnected'. Additional states may be added in the future, so your application must be tolerant of unknown values.",
            "type": "string"
          },
          "identity": {
            "nullable": true,
            "type": "string"
          },
          "stirShaken": {
            "nullable": true,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "enqueuedTime": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "description": "If <a href='/docs/voice/rateLimits'>outbound call queueing</a> is enabled, the time this call was placed in queue."
          },
          "startTime": {
            "nullable": true,
            "type": "string",
            "format": "date-time"
          },
          "answerTime": {
            "nullable": true,
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "nullable": true,
            "type": "string",
            "format": "date-time"
          },
          "disconnectCause": {
            "nullable": true,
            "type": "string",
            "description": "The reason the call was disconnected, or null if the call is still active. Current values are 'cancel', 'timeout', 'busy', 'rejected', 'hangup', 'invalid-bxml', 'callback-error', 'application-error', 'error', 'account-limit', 'node-capacity-exceeded' and 'unknown'. Additional causes may be added in the future, so your application must be tolerant of unknown values."
          },
          "errorMessage": {
            "nullable": true,
            "type": "string"
          },
          "errorId": {
            "nullable": true,
            "type": "string"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ModifyCallRequest": {
        "type": "object",
        "properties": {
          "state": {
            "nullable": true,
            "type": "string",
            "default": "active",
            "enum": [
              "active",
              "completed"
            ]
          },
          "redirectUrl": {
            "description": "Required if state is 'active'",
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "redirectFallbackUrl": {
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "redirectMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "redirectFallbackMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "username": {
            "nullable": true,
            "type": "string"
          },
          "password": {
            "nullable": true,
            "type": "string"
          },
          "fallbackUsername": {
            "nullable": true,
            "type": "string"
          },
          "fallbackPassword": {
            "nullable": true,
            "type": "string"
          },
          "tag": {
            "nullable": true,
            "type": "string"
          }
        }
      },
      "ModifyCallRecordingRequest": {
        "type": "object",
        "required": [
          "state"
        ],
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "NOT_RECORDING",
              "PAUSED",
              "RECORDING"
            ]
          }
        }
      },
      "CallRecordingMetadata": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "callId": {
            "type": "string"
          },
          "parentCallId": {
            "nullable": true,
            "type": "string"
          },
          "recordingId": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "transferCallerId": {
            "type": "string"
          },
          "transferTo": {
            "type": "string"
          },
          "duration": {
            "type": "string",
            "description": "Format is ISO-8601"
          },
          "direction": {
            "type": "string",
            "enum": [
              "inbound",
              "outbound"
            ]
          },
          "channels": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "fileFormat": {
            "type": "string",
            "enum": [
              "mp3",
              "wav"
            ]
          },
          "status": {
            "type": "string",
            "description": "The current status of the recording. Current values are 'processing', 'partial', 'complete', 'deleted' and 'error'. Additional states may be added in the future, so your application must be tolerant of unknown values."
          },
          "mediaUrl": {
            "type": "string",
            "format": "uri"
          },
          "transcription": {
            "$ref": "#/components/schemas/TranscriptionMetadata"
          }
        }
      },
      "ModifyConferenceRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "active",
              "completed"
            ]
          },
          "redirectUrl": {
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "redirectFallbackUrl": {
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "redirectMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "redirectFallbackMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "username": {
            "nullable": true,
            "type": "string"
          },
          "password": {
            "nullable": true,
            "type": "string"
          },
          "fallbackUsername": {
            "nullable": true,
            "type": "string"
          },
          "fallbackPassword": {
            "nullable": true,
            "type": "string"
          }
        }
      },
      "ConferenceState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "completedTime": {
            "nullable": true,
            "type": "string",
            "format": "date-time"
          },
          "conferenceEventUrl": {
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "conferenceEventMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "tag": {
            "nullable": true,
            "type": "string"
          },
          "activeMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConferenceMemberState"
            }
          }
        }
      },
      "ConferenceMemberState": {
        "type": "object",
        "properties": {
          "callId": {
            "type": "string"
          },
          "conferenceId": {
            "type": "string"
          },
          "memberUrl": {
            "type": "string"
          },
          "mute": {
            "type": "boolean"
          },
          "hold": {
            "type": "boolean"
          },
          "callIdsToCoach": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ConferenceRecordingMetadata": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "conferenceId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "recordingId": {
            "type": "string"
          },
          "duration": {
            "type": "string",
            "description": "Format is ISO-8601"
          },
          "channels": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "fileFormat": {
            "type": "string",
            "enum": [
              "mp3",
              "wav"
            ]
          },
          "status": {
            "type": "string",
            "description": "The current status of the recording. Current possible values are 'processing', 'partial', 'complete', 'deleted', and 'error'. Additional states may be added in the future, so your application must be tolerant of unknown values."
          },
          "mediaUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "MachineDetectionConfiguration": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "description": "The machine detection mode. If set to 'async', the detection result will be sent in a 'machineDetectionComplete' callback. If set to 'sync', the 'answer' callback will wait for the machine detection to complete and will include its result. Default is 'async'.",
            "enum": [
              "sync",
              "async"
            ]
          },
          "detectionTimeout": {
            "type": "number",
            "format": "double",
            "description": "Total amount of time (in seconds) before giving up."
          },
          "silenceTimeout": {
            "type": "number",
            "format": "double",
            "description": "If no speech is detected in this period, a callback with a 'silence' result is sent. Default is 10 seconds."
          },
          "speechThreshold": {
            "type": "number",
            "format": "double",
            "description": "When speech has ended and a result couldn't be determined based on the audio content itself, this value is used to determine if the speaker is a machine based on the speech duration. If the length of the speech detected is greater than or equal to this threshold, the result will be 'answering-machine'. If the length of speech detected is below this threshold, the result will be 'human'. Default is 10 seconds."
          },
          "speechEndThreshold": {
            "type": "number",
            "format": "double",
            "description": "Amount of silence (in seconds) before assuming the callee has finished speaking."
          },
          "delayResult": {
            "type": "boolean",
            "description": "If set to 'true' and if an answering machine is detected, the 'answering-machine' callback will be delayed until the machine is done speaking or until the 'detectionTimeout' is exceeded. If false, the 'answering-machine' result is sent immediately. Default is 'false'."
          },
          "callbackUrl": {
            "nullable": true,
            "description": "The URL to send the 'machineDetectionComplete' callback when the detection is completed. Only for 'async' mode.",
            "type": "string",
            "format": "uri"
          },
          "callbackMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "fallbackUrl": {
            "nullable": true,
            "type": "string",
            "format": "uri"
          },
          "fallbackMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "username": {
            "nullable": true,
            "type": "string"
          },
          "password": {
            "nullable": true,
            "type": "string"
          },
          "fallbackUsername": {
            "nullable": true,
            "type": "string"
          },
          "fallbackPassword": {
            "nullable": true,
            "type": "string"
          }
        }
      },
      "TranscribeRecordingRequest": {
        "type": "object",
        "properties": {
          "callbackUrl": {
            "type": "string",
            "format": "uri"
          },
          "callbackMethod": {
            "nullable": true,
            "type": "string",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "username": {
            "nullable": true,
            "type": "string"
          },
          "password": {
            "nullable": true,
            "type": "string"
          },
          "tag": {
            "nullable": true,
            "type": "string"
          },
          "callbackTimeout": {
            "nullable": true,
            "type": "number",
            "format": "double"
          }
        }
      },
      "TranscriptionResponse": {
        "type": "object",
        "properties": {
          "transcripts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transcript"
            }
          }
        }
      },
      "TranscriptionMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "The current status of the transcription. Current values are 'none', 'processing', 'available', 'error', 'timeout', 'file-size-too-big', and 'file-size-too-small'. Additional states may be added in the future, so your application must be tolerant of unknown values."
          },
          "completedTime": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Transcript": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "confidence": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "nullable": true,
            "type": "string"
          }
        }
      },
      "CallCallback": {
        "type": "object",
        "description": "This object represents all possible fields that may be included in callbacks related to call events, including events that come from BXML verbs",
        "properties": {
          "eventType": {
            "type": "string"
          },
          "eventTime": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "callId": {
            "type": "string"
          },
          "callUrl": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "answerTime": {
            "type": "string"
          },
          "transferCallerId": {
            "type": "string"
          },
          "transferTo": {
            "type": "string"
          },
          "cause": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errorId": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "digit": {
            "type": "string"
          },
          "parentCallId": {
            "type": "string"
          },
          "recordingId": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "fileFormat": {
            "type": "string"
          },
          "mediaUrl": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "channels": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "digits": {
            "type": "string"
          },
          "terminatingDigit": {
            "type": "string"
          },
          "transcription": {
            "$ref": "#/components/schemas/Transcription"
          },
          "diversion": {
            "$ref": "#/components/schemas/Diversion"
          }
        }
      },
      "Transcription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "completedTime": {
            "type": "string"
          }
        }
      },
      "Diversion": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "privacy": {
            "type": "string"
          },
          "unknown": {
            "type": "string"
          },
          "origTo": {
            "type": "string"
          }
        }
      },
      "ConferenceCallback": {
        "type": "object",
        "description": "This object represents all possible fields that may be included in callbacks related to conference events",
        "properties": {
          "conferenceId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "eventTime": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "callId": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "recordingId": {
            "type": "string"
          },
          "channels": {
            "type": "integer"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "fileFormat": {
            "type": "string"
          },
          "mediaUrl": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      }
    }
  }
}
