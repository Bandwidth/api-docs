{
  "openapi": "3.0.1",
  "info": {
    "title": "DASH Notifications API",
    "description": "An API for managing notifications sent when numbers provisioned on the 911 Access Dashboard make a call to emergecy services",
    "version": "1.0.0",
    "x-server-configuration": {
      "default-environment": "production",
      "default-server": "default",
      "environments": [
        {
          "name": "production",
          "servers": [
            {
              "name": "default",
              "url": "https://evs-api.bandwidth.com/api/v1"
            }
          ]
        },
        {
          "name": "staging",
          "servers": [
            {
              "name": "default",
              "url": "https://test.evs.bandwidth.com/api/v1"
            }
          ]
        },
        {
          "name": "custom",
          "servers": [
            {
              "name": "default",
              "url": "{base_url}"
            }
          ]
        }
      ],
      "parameters": [
        {
          "name": "base_url",
          "description": "",
          "type": "string",
          "example": "https://www.example.com"
        }
      ]
    }
  },
  "servers": [
    {
      "url": "https://evs-api.bandwidth.com/api/v1",
      "description": "Production",
      "variables": {}
    },
    {
      "url": "https://test.evs.bandwidth.com/api/v1",
      "description": "Staging",
      "variables": {}
    }
  ],
  "paths": {
    "/v1/notifications/endpoints/{endpointId}/notificationRecipients/{recipientId}": {
      "delete": {
        "tags": [
          "Notification Recipients"
        ],
        "summary": "Delete Endpoint Notification Recipient Association",
        "description": "Delete a notification recipient association from an endpoint",
        "operationId": "disassociateNotificationRecipientUsingDELETE",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "endpointId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "recipientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification Recipient successfully disassociated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationRecipients"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Access is denied",
            "content": {}
          },
          "404": {
            "description": "Endpoint Id or Notification Recipient Id was not found",
            "content": {}
          },
          "503": {
            "description": "Internal service issues",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Notification Recipients"
        ],
        "summary": "Add Endpoint Notification Recipient Association",
        "description": "Add a notification recipient association to an endpoint",
        "operationId": "associateNotificationRecipientUsingPATCH",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "endpointId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "path",
            "description": "recipientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification Recipient successfully associated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationRecipients"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Access is denied",
            "content": {}
          },
          "404": {
            "description": "Endpoint Id or Notification Recipient Id was not found",
            "content": {}
          },
          "503": {
            "description": "Internal service issues",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/v1/notifications/notificationRecipients": {
      "get": {
        "tags": [
          "Notification Recipients"
        ],
        "summary": "Get Notification Recipients",
        "description": "Returns notification recipients on the account",
        "operationId": "getNotificationRecipientsUsingGET",
        "parameters": [
          {
            "name": "endpointId",
            "in": "query",
            "description": "Endpoint to which the notification recipients belong",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uriSubstr",
            "in": "query",
            "description": "Recipient or type of the notification (accepts recipient substrings). If searching type, it must be all caps (ex: SMS).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page number for results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "description": "Size of the page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Skip this many records from the beginning of the set",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification Recipients successfully returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationRecipients"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Access is denied",
            "content": {}
          },
          "503": {
            "description": "Internal service issues",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Notification Recipients"
        ],
        "summary": "Create Notification Recipient",
        "description": "Create a new notification recipient",
        "operationId": "addNotificationRecipientUsingPOST",
        "requestBody": {
          "description": "The notification recipient to add to the account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRecipient"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Notification Recipient successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationRecipient"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Access is denied",
            "content": {}
          },
          "409": {
            "description": "Notification Recipient already exists",
            "content": {}
          },
          "503": {
            "description": "Internal service issues",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-codegen-request-body-name": "Notification Recipient"
      }
    },
    "/v1/notifications/notificationRecipients/{recipientId}": {
      "get": {
        "tags": [
          "Notification Recipients"
        ],
        "summary": "Get Notification Recipient",
        "description": "Returns notification recipient from given recipient id",
        "operationId": "getNotificationRecipientUsingGET",
        "parameters": [
          {
            "name": "recipientId",
            "in": "path",
            "description": "Recipient Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification Recipient successfully returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationRecipient"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Access is denied",
            "content": {}
          },
          "404": {
            "description": "Notification Recipient for given ID was not found",
            "content": {}
          },
          "503": {
            "description": "Internal service issues",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Notification Recipients"
        ],
        "summary": "Delete Notification Recipient",
        "description": "Delete notification recipient for given recipientId",
        "operationId": "deleteNotificationRecipientUsingDELETE",
        "parameters": [
          {
            "name": "recipientId",
            "in": "path",
            "description": "recipientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Notification Recipient successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Access is denied",
            "content": {}
          },
          "503": {
            "description": "Internal service issues",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Notification Recipients"
        ],
        "summary": "Modify Notification Recipient",
        "description": "Modify an existing notification recipient",
        "operationId": "modifyNotificationRecipientUsingPATCH",
        "parameters": [
          {
            "name": "recipientId",
            "in": "path",
            "description": "recipientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The notification recipient to modify",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRecipient"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Notification Recipient successfully modified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationRecipient"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Access is denied",
            "content": {}
          },
          "404": {
            "description": "Notification Recipient for given ID was not found",
            "content": {}
          },
          "409": {
            "description": "Notification Recipient already exists",
            "content": {}
          },
          "503": {
            "description": "Internal service issues",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-codegen-request-body-name": "Notification Recipient"
      }
    },
    "/v1/notifications/notificationRecipients/{recipientId}/associations": {
      "get": {
        "tags": [
          "Notification Recipients"
        ],
        "summary": "Get Endpoints Associated to a Notification Recipient",
        "description": "Get endpoints associated to a notification recipient",
        "operationId": "getEndpointsAssociatedToANotificationRecipientUsingGET",
        "parameters": [
          {
            "name": "recipientId",
            "in": "path",
            "description": "recipientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Page number for results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "description": "Size of the page",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "From",
            "in": "query",
            "description": "Skip this many records from the beginning of the set",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoints Associated to a Notification Recipient successfully returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointsDto"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Access is denied",
            "content": {}
          },
          "404": {
            "description": "Notification Recipient Id was not found",
            "content": {}
          },
          "503": {
            "description": "Internal service issues",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "EndpointDto": {
        "title": "EndpointDto",
        "type": "object",
        "properties": {
          "activated": {
            "type": "string",
            "format": "date-time"
          },
          "callback": {
            "type": "string"
          },
          "callerIdentifier": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lang": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "primaryLocation": {
            "type": "string"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EndpointsDto": {
        "title": "EndpointsDto",
        "type": "object",
        "properties": {
          "endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EndpointDto"
            }
          }
        }
      },
      "NotificationRecipient": {
        "title": "NotificationRecipient",
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "password": {
            "type": "string"
          },
          "recipient": {
            "type": "string"
          },
          "recipientId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "HTTP",
              "EMAIL",
              "SMS",
              "VOICE"
            ]
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "username": {
            "type": "string"
          }
        }
      },
      "NotificationRecipients": {
        "title": "NotificationRecipients",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/NotificationRecipient"
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}
