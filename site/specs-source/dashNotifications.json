{
   "swagger":"2.0",
   "info":{
      "description":"An API for managing notifications sent when numbers provisioned on the 911 Access Dashboard make a call to emergecy services",
      "version":"1.0.0",
      "title":"DASH Notifications API",
      "x-server-configuration": {
        "default-environment": "production",
        "default-server": "default",
        "environments": [
          {
            "name": "production",
            "servers": [
              {
                "name": "default",
                "url": "https://evs-api.bandwidth.com/api/v1"
              }
            ]
          },
          {
            "name": "staging",
            "servers": [
              {
                "name": "default",
                "url": "https://test.evs.bandwidth.com/api/v1"
              }
            ]
          },
          {
            "name": "custom",
            "servers": [
              {
                "name": "default",
                "url": "{base_url}"
              }
            ]
          }
        ],
        "parameters": [
          {
            "name": "base_url",
            "description": "",
            "type": "string",
            "example": "https://www.example.com"
          }
        ]
      }
    },
    "servers": [
      {
        "url": "https://evs-api.bandwidth.com/api/v1",
        "description": "Production",
        "variables": {}
      },
      {
        "url": "https://test.evs.bandwidth.com/api/v1",
        "description": "Staging",
        "variables": {}
      }
    ],
   "host":"https://evs-api.bandwidth.com/api/v1",
   "basePath":"/evs-api",
   "tags":[
      {
         "name":"notification-controller",
         "description":"Notification Controller"
      }
   ],
   "produces":[
      "application/json"
   ],
   "paths":{
      "/v1/notifications/endpoints/{endpointId}/notificationRecipients/{recipientId}":{
         "delete":{
            "tags":[
               "Notification Recipients"
            ],
            "summary":"Delete Endpoint Notification Recipient Association",
            "description":"Delete a notification recipient association from an endpoint",
            "operationId":"disassociateNotificationRecipientUsingDELETE",
            "parameters":[
               {
                  "name":"endpointId",
                  "in":"path",
                  "description":"endpointId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"recipientId",
                  "in":"path",
                  "description":"recipientId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Notification Recipient successfully disassociated",
                  "schema":{
                     "$ref":"#/definitions/NotificationRecipients"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Access is denied"
               },
               "404":{
                  "description":"Endpoint Id or Notification Recipient Id was not found"
               },
               "503":{
                  "description":"Internal service issues"
               }
            },
            "security":[
               {
                  "basicAuth":[

                  ]
               }
            ]
         },
         "patch":{
            "tags":[
               "Notification Recipients"
            ],
            "summary":"Add Endpoint Notification Recipient Association",
            "description":"Add a notification recipient association to an endpoint",
            "operationId":"associateNotificationRecipientUsingPATCH",
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"endpointId",
                  "in":"path",
                  "description":"endpointId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"recipientId",
                  "in":"path",
                  "description":"recipientId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Notification Recipient successfully associated",
                  "schema":{
                     "$ref":"#/definitions/NotificationRecipients"
                  }
               },
               "400":{
                  "description":"Request is invalid"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Access is denied"
               },
               "404":{
                  "description":"Endpoint Id or Notification Recipient Id was not found"
               },
               "503":{
                  "description":"Internal service issues"
               }
            },
            "security":[
               {
                  "basicAuth":[

                  ]
               }
            ]
         }
      },
      "/v1/notifications/notificationRecipients":{
         "get":{
            "tags":[
               "Notification Recipients"
            ],
            "summary":"Get Notification Recipients",
            "description":"Returns notification recipients on the account",
            "operationId":"getNotificationRecipientsUsingGET",
            "parameters":[
               {
                  "name":"endpointId",
                  "in":"query",
                  "description":"Endpoint to which the notification recipients belong",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"uriSubstr",
                  "in":"query",
                  "description":"Recipient or type of the notification (accepts recipient substrings). If searching type, it must be all caps (ex: SMS).",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"Page",
                  "in":"query",
                  "description":"Page number for results",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"Size",
                  "in":"query",
                  "description":"Size of the page",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"From",
                  "in":"query",
                  "description":"Skip this many records from the beginning of the set",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               }
            ],
            "responses":{
               "200":{
                  "description":"Notification Recipients successfully returned",
                  "schema":{
                     "$ref":"#/definitions/NotificationRecipients"
                  }
               },
               "400":{
                  "description":"Request is invalid"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Access is denied"
               },
               "503":{
                  "description":"Internal service issues"
               }
            },
            "security":[
               {
                  "basicAuth":[

                  ]
               }
            ]
         },
         "post":{
            "tags":[
               "Notification Recipients"
            ],
            "summary":"Create Notification Recipient",
            "description":"Create a new notification recipient",
            "operationId":"addNotificationRecipientUsingPOST",
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"Notification Recipient",
                  "description":"The notification recipient to add to the account",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/NotificationRecipient"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Notification Recipient successfully created",
                  "schema":{
                     "$ref":"#/definitions/NotificationRecipient"
                  }
               },
               "400":{
                  "description":"Request is invalid"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Access is denied"
               },
               "409":{
                  "description":"Notification Recipient already exists"
               },
               "503":{
                  "description":"Internal service issues"
               }
            },
            "security":[
               {
                  "basicAuth":[

                  ]
               }
            ]
         }
      },
      "/v1/notifications/notificationRecipients/{recipientId}":{
         "get":{
            "tags":[
               "Notification Recipients"
            ],
            "summary":"Get Notification Recipient",
            "description":"Returns notification recipient from given recipient id",
            "operationId":"getNotificationRecipientUsingGET",
            "parameters":[
               {
                  "name":"recipientId",
                  "in":"path",
                  "description":"Recipient Id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Notification Recipient successfully returned",
                  "schema":{
                     "$ref":"#/definitions/NotificationRecipient"
                  }
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Access is denied"
               },
               "404":{
                  "description":"Notification Recipient for given ID was not found"
               },
               "503":{
                  "description":"Internal service issues"
               }
            },
            "security":[
               {
                  "basicAuth":[

                  ]
               }
            ]
         },
         "delete":{
            "tags":[
               "Notification Recipients"
            ],
            "summary":"Delete Notification Recipient",
            "description":"Delete notification recipient for given recipientId",
            "operationId":"deleteNotificationRecipientUsingDELETE",
            "parameters":[
               {
                  "name":"recipientId",
                  "in":"path",
                  "description":"recipientId",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "204":{
                  "description":"Notification Recipient successfully deleted"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Access is denied"
               },
               "503":{
                  "description":"Internal service issues"
               }
            },
            "security":[
               {
                  "basicAuth":[

                  ]
               }
            ]
         },
         "patch":{
            "tags":[
               "Notification Recipients"
            ],
            "summary":"Modify Notification Recipient",
            "description":"Modify an existing notification recipient",
            "operationId":"modifyNotificationRecipientUsingPATCH",
            "consumes":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"recipientId",
                  "in":"path",
                  "description":"recipientId",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"Notification Recipient",
                  "description":"The notification recipient to modify",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/NotificationRecipient"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"Notification Recipient successfully modified",
                  "schema":{
                     "$ref":"#/definitions/NotificationRecipient"
                  }
               },
               "400":{
                  "description":"Request is invalid"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Access is denied"
               },
               "404":{
                  "description":"Notification Recipient for given ID was not found"
               },
               "409":{
                  "description":"Notification Recipient already exists"
               },
               "503":{
                  "description":"Internal service issues"
               }
            },
            "security":[
               {
                  "basicAuth":[

                  ]
               }
            ]
         }
      },
      "/v1/notifications/notificationRecipients/{recipientId}/associations":{
         "get":{
            "tags":[
               "Notification Recipients"
            ],
            "summary":"Get Endpoints Associated to a Notification Recipient",
            "description":"Get endpoints associated to a notification recipient",
            "operationId":"getEndpointsAssociatedToANotificationRecipientUsingGET",
            "parameters":[
               {
                  "name":"recipientId",
                  "in":"path",
                  "description":"recipientId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"Page",
                  "in":"query",
                  "description":"Page number for results",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"Size",
                  "in":"query",
                  "description":"Size of the page",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"From",
                  "in":"query",
                  "description":"Skip this many records from the beginning of the set",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               }
            ],
            "responses":{
               "200":{
                  "description":"Endpoints Associated to a Notification Recipient successfully returned",
                  "schema":{
                     "$ref":"#/definitions/EndpointsDto"
                  }
               },
               "400":{
                  "description":"Request is invalid"
               },
               "401":{
                  "description":"Unauthorized"
               },
               "403":{
                  "description":"Access is denied"
               },
               "404":{
                  "description":"Notification Recipient Id was not found"
               },
               "503":{
                  "description":"Internal service issues"
               }
            },
            "security":[
               {
                  "basicAuth":[

                  ]
               }
            ]
         }
      }
   },
   "securityDefinitions":{
      "basicAuth":{
         "type":"basic"
      }
   },
   "definitions":{
      "EndpointDto":{
         "type":"object",
         "properties":{
            "activated":{
               "type":"string",
               "format":"date-time"
            },
            "callback":{
               "type":"string"
            },
            "callerIdentifier":{
               "type":"string"
            },
            "created":{
               "type":"string",
               "format":"date-time"
            },
            "lang":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "primaryLocation":{
               "type":"string"
            },
            "updated":{
               "type":"string",
               "format":"date-time"
            }
         },
         "title":"EndpointDto"
      },
      "EndpointsDto":{
         "type":"object",
         "properties":{
            "endpoints":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/EndpointDto"
               }
            }
         },
         "title":"EndpointsDto"
      },
      "NotificationRecipient":{
         "type":"object",
         "properties":{
            "created":{
               "type":"string",
               "format":"date-time",
               "readOnly":true,
               "allowEmptyValue":false
            },
            "password":{
               "type":"string"
            },
            "recipient":{
               "type":"string"
            },
            "recipientId":{
               "type":"string"
            },
            "type":{
               "type":"string",
               "enum":[
                  "HTTP",
                  "EMAIL",
                  "SMS",
                  "VOICE"
               ]
            },
            "updated":{
               "type":"string",
               "format":"date-time",
               "readOnly":true,
               "allowEmptyValue":false
            },
            "username":{
               "type":"string"
            }
         },
         "title":"NotificationRecipient"
      },
      "NotificationRecipients":{
         "type":"object",
         "properties":{
            "notificationRecipients":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/NotificationRecipient"
               }
            }
         },
         "title":"NotificationRecipients"
      }
   }
}
