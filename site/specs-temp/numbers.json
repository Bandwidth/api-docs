{
  "openapi": "3.0.1",
  "info": {
    "title": "Numbers",
    "description": "Bandwidth's Account and Number Management API\n\nFor the previous documentation visit [v2.dev.bandwidth.com](https://v2.dev.bandwidth.com/numbers/apiReference.html).\n\n## Base Path\n<code>https://dashboard.bandwidth.com/api/</code>",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://dashboard.bandwidth.com/api/",
      "description": "Production",
      "variables": {}
    }
  ],
  "security": [
    {
      "httpBasic": []
    }
  ],
  "paths": {
    "/accounts/{accountId}": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "<p>The account is the root resource for many of the operations in the Bandwidth Dashboard API.</p> <p>The account is represented by an account id, which is the resource that represents a Bandwidth customer, providing a root resource for all of the customer's attributes and services.</p> <p>The API calls that are used to manage the details of a customer account, and to manage the resources that a Bandwidth customer has access to or control over, are accessed through the /accounts resource.</p> <p>This API call retrieves information about the account indicated by the Account ID.</p>",
        "operationId": "GetAccount",
        "summary": "Retrieve account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve Account information.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AccountResponse>\n  <Account>\n    <AccountId>14</AccountId>\n    <AssociatedCatapultAccount>u-ertyhgfd12dcvdhnboklk</AssociatedCatapultAccount>\n    <GlobalAccountNumber>globalAccount</GlobalAccountNumber>\n    <CompanyName>CWI Hosting</CompanyName>\n    <AccountType>Business</AccountType>\n    <NenaId/>\n    <CustomerSegment>Trial</CustomerSegment>\n    <Tiers>\n      <Tier>0</Tier>\n    </Tiers>\n    <Address>\n      <HouseNumber>904</HouseNumber>\n      <HouseSuffix>E</HouseSuffix>\n      <PreDirectional/>\n      <StreetName>Anson</StreetName>\n      <StreetSuffix>St</StreetSuffix>\n      <PostDirectional/>\n      <AddressLine2/>\n      <City>Marshalltown</City>\n      <StateCode>IA</StateCode>\n      <Zip>50158</Zip>\n      <PlusFour/>\n      <County/>\n      <Country>United States</Country>\n      <AddressType>Billing</AddressType>\n    </Address>\n    <Contact>\n      <FirstName>Sanjay</FirstName>\n      <LastName>Rao</LastName>\n      <Phone>9195441234</Phone>\n      <Email>srao@bandwidth.com</Email>\n    </Contact>\n    <AltSpid>X455</AltSpid>\n    <SPID>9999</SPID>\n    <PortCarrierType>WIRELINE</PortCarrierType>\n  </Account>\n</AccountResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountResponseWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "description": "GET is used to retrieve all addresses.",
        "operationId": "GetAllAddresses",
        "summary": "Retrieve all addresses",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "e911locationid",
            "description": "Search criterion for address by its locationid. Cannot be combined with type. Always returns E911 addresses.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "47950147-9c58-407c-bcc4-e88743b20db5"
          },
          {
            "name": "type",
            "description": "Search criterion for addresses by their type.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "e911"
          },
          {
            "name": "page",
            "description": "An ID of the first element in a page.  This value will indicate the first value, not the page number, of the initial entry in the page being requested.<br> It can be an id of address. The initial page is tagged with the ID `1`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "3"
          },
          {
            "name": "size",
            "description": "The number of items to include in a page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500
            },
            "example": 5000
          },
          {
            "name": "suggestions",
            "description": "The text to search simultaneously through e911locationIds.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the addresses retrieval request will return a list of all addresses having specified type.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AddressesResponse>\n  <TotalCount>1</TotalCount>\n  <Links>\n    <first>Link=&lt;http://admin.localhost:8080/api/accounts/8000259/addresses?type=e911&amp;page=1&amp;size=500&gt;;rel=\"first\";</first>\n    <next>Link=&lt;http://localhost:8080/api/accounts/8000259/addresses?type=E911&amp;page=501&amp;size=500&gt;;rel=\"next\";</next>\n  </Links>\n  <Addresses>\n    <Address>\n      <HouseNumber>207</HouseNumber>\n      <HouseSuffix/>\n      <PreDirectional/>\n      <StreetName>Elmastar</StreetName>\n      <StreetSuffix>AlternateStar</StreetSuffix>\n      <PostDirectional/>\n      <AddressLine2/>\n      <City>Carpinteriaaly</City>\n      <StateCode>NY</StateCode>\n      <Zip>93019</Zip>\n      <PlusFour/>\n      <County/>\n      <Country>United States</Country>\n      <AddressType>E911</AddressType>\n      <EndpointCount>2</EndpointCount>\n      <ValidationStatus>VALID</ValidationStatus>\n    </Address>\n  </Addresses>\n</AddressesResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressesResponseWrapper"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or there are no addresses for specified search criteria it will result in a not found.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AddressesResponse>\n  <ResponseStatus>\n    <Description>The resource does not exist</Description>\n  </ResponseStatus>\n</AddressesResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressesResponseNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/aeuis": {
      "get": {
        "tags": [
          "DLR"
        ],
        "description": "GET is used to retrieve all Alternate end user identifiers.",
        "operationId": "GetAllAeuis",
        "summary": "Retrieve all AEUIS",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested.<br> It can be an acid of alternate end user identifier. The initial page is tagged with the ID '1'.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "3, customIdentifier"
          },
          {
            "name": "size",
            "description": "The number of items to include in a page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500
            },
            "example": 5000
          },
          {
            "name": "aeui",
            "description": "The Alternate end user identifier associated with callback using E911 order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "someAcid"
          },
          {
            "name": "callback",
            "description": "Callback telephone number associated with AEUI using E911 oder.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "8042105760"
          },
          {
            "name": "pidfloenabledonly",
            "description": "This parameter allows to retrieve PIDF-LO enabled only AEUIs.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "suggestions",
            "description": "The text to search simultaneously through callbacks, called names and AEUIs.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the AEUIs retrieval request will return a list of all AEUIs.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AlternateEndUserIdentifiersResponse>\n  <TotalCount>2</TotalCount>\n  <AlternateEndUserIdentifiers>\n    <AlternateEndUserIdentifier>\n      <Identifier>DavidAcid</Identifier>\n      <CallbackNumber>8042105760</CallbackNumber>\n      <EmergencyNotificationGroup>\n        <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n        <Description>Building 5, 5th Floor.</Description>\n      </EmergencyNotificationGroup>\n    </AlternateEndUserIdentifier>\n    <AlternateEndUserIdentifier>\n      <Identifier>JohnAcid</Identifier>\n      <CallbackNumber>8042105618</CallbackNumber>\n    </AlternateEndUserIdentifier>\n  </AlternateEndUserIdentifiers>\n</AlternateEndUserIdentifiersResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlternateEndUserIdentifiersResponseWrapper"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or there are no AEUIs for specified search criteria it will result in a \"NOT FOUND\" response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AlternateEndUserIdentifiersResponse>\n  <ResponseStatus>\n    <ErrorCode>12087</ErrorCode>\n    <Description>Alternate End User Identifiers were not found.</Description>\n  </ResponseStatus>\n</AlternateEndUserIdentifiersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlternateEndUserIdentifiersResponseNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/aeuis/{acid}": {
      "get": {
        "tags": [
          "DLR"
        ],
        "description": "GET is used to retrieve a detailed information of Alternate end user identifier by acid.",
        "operationId": "RetrieveAeui",
        "summary": "Retrieve AEUI",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "acid",
            "description": "Alternate caller identity ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - will return full information about AEUI for the specified acid.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AlternateEndUserIdentifierResponse>\n  <AlternateEndUserIdentifier>\n    <Identifier>DavidAcid</Identifier>\n    <CallbackNumber>8042105760</CallbackNumber>\n    <E911>\n      <CallerName>David</CallerName>\n      <Address>\n        <HouseNumber>900</HouseNumber>\n        <HouseSuffix/>\n        <PreDirectional/>\n        <StreetName>MAIN CAMPUS</StreetName>\n        <StreetSuffix>DR</StreetSuffix>\n        <AddressLine2/>\n        <City>RALEIGH</City>\n        <StateCode>NC</StateCode>\n        <Zip>27606</Zip>\n        <PlusFour>5214</PlusFour>\n        <Country>United States</Country>\n        <AddressType>Billing</AddressType>\n      </Address>\n      <EmergencyNotificationGroup>\n        <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n        <Description>Building 5, 5th Floor.</Description>\n      </EmergencyNotificationGroup>\n    </E911>\n  </AlternateEndUserIdentifier>\n</AlternateEndUserIdentifierResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlternateEndUserIdentifierWrapper"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or there are no AEUI that corresponds to specified acid it will result in a \"NOT FOUND\" response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AlternateEndUserIdentifierResponse>\n  <ResponseStatus>\n    <Description>The resource does not exist</Description>\n  </ResponseStatus>\n</AlternateEndUserIdentifierResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AlternateEndUserIdentifierResponseNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "description": "<p>List applications.</p> <p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "ListApplications",
        "summary": "List applications",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve list applications",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <ApplicationList>\n    <Application>\n      <ApplicationId>2cfcb382-161c-46d4-8c67-87ca09a72c85</ApplicationId>\n      <ServiceType>Messaging-V2</ServiceType>\n      <AppName>app1</AppName>\n      <!--DEPRECATED-->\n      <MsgCallbackUrl>http://a.com</MsgCallbackUrl>\n      <InboundCallbackUrl>http://a.com</InboundCallbackUrl>\n    </Application>\n    <Application>\n      <ApplicationId>0cb0112b-5998-4c81-999a-0d3fb5e3f8e2</ApplicationId>\n      <ServiceType>Voice-V2</ServiceType>\n      <AppName>app2</AppName>\n      <CallInitiatedCallbackUrl>http://b.com</CallInitiatedCallbackUrl>\n      <CallbackCreds>\n        <UserId>15jPWZmXdm</UserId>\n        </CallbackCreds>\n      <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n      <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n      <CallInitiatedFallbackCreds>\n        <UserId>login2</UserId>\n      </CallInitiatedFallbackCreds>\n      <CallbackTimeout>20</CallbackTimeout>\n    </Application>\n  </ApplicationList>\n</ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningResponseWrapper"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "description": "<p>Create an Application.</p><p>CallbackUrl and MsgCallbackUrl fields are deprecated instead of use InboundCallbackUrl or OutboundCallbackUrl.</p><p>For more details please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "CreateApplication",
        "summary": "Create application",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "messaging": {
                  "summary": "Messaging application",
                  "value": "<Application>\n  <ServiceType>Messaging</ServiceType>\n  <AppName>EBVICs</AppName>\n  <InboundCallbackUrl>https://example.com</InboundCallbackUrl>\n  <OutboundCallbackUrl>https://example2.com</OutboundCallbackUrl>\n  <InboundCallbackCreds>\n    <UserId>15jPWZmXdm</UserId>\n    <Password>xxv3jPsPR2</Password>\n  </InboundCallbackCreds>\n  <OutboundCallbackCreds>\n    <UserId>15jPWZmXdm</UserId>\n    <Password>xxv3jPsPR2</Password>\n  </OutboundCallbackCreds>\n  <RequestedCallbackTypes>\n    <CallbackType>message-delivered</CallbackType>\n    <CallbackType>message-failed</CallbackType>\n    <CallbackType>message-sending</CallbackType>\n  </RequestedCallbackTypes>\n</Application>\n"
                },
                "voice": {
                  "summary": "Voice application",
                  "value": "<?xml version=\"1.0\" encoding=\"SO-8859-1\" standalone=\"yes\"?>\n<Application>\n  <ServiceType>Voice</ServiceType>\n  <AppName>v1</AppName>\n  <CallInitiatedCallbackUrl>https://a.com</CallInitiatedCallbackUrl>\n  <CallInitiatedMethod>GET</CallInitiatedMethod>\n  <CallStatusCallbackUrl>https://b.com</CallStatusCallbackUrl>\n  <CallStatusMethod>GET</CallStatusMethod>\n  <CallbackCreds>\n    <UserId>login123</UserId>\n    <Password>password123</Password>\n  </CallbackCreds>\n  <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n  <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n  <CallInitiatedFallbackCreds>\n    <UserId>login2</UserId>\n    <Password>Password3</Password>\n  </CallInitiatedFallbackCreds>\n  <CallbackTimeout>20</CallbackTimeout>\n</Application>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "messaging": {
                    "summary": "Messaging application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>d4d1b41d-4c05-47d0-838a-34e4f14e4e3e</ApplicationId>\n      <ServiceType>Messaging-V2</ServiceType>\n      <AppName>EBVICs</AppName>\n      <!--DEPRECATED-->\n      <MsgCallbackUrl>https://example.com</MsgCallbackUrl>\n      <InboundCallbackUrl>https://example.com</InboundCallbackUrl>\n      <OutboundCallbackUrl>https://example2.com</OutboundCallbackUrl>\n      <!--DEPRECATED-->\n      <MsgCallbackCreds>\n        <!--DEPRECATED-->\n        <UserId>15jPWZmXdm</UserId>\n        <!--DEPRECATED-->\n        </MsgCallbackCreds>\n      <InboundCallbackCreds>\n        <UserId>15jPWZmXdm</UserId>\n      </InboundCallbackCreds>\n      <OutboundCallbackCreds>\n        <UserId>15jPWZmXdm</UserId>\n      </OutboundCallbackCreds>\n      <RequestedCallbackTypes>\n        <CallbackType>message-delivered</CallbackType>\n        <CallbackType>message-failed</CallbackType>\n        <CallbackType>message-sending</CallbackType>\n      </RequestedCallbackTypes>\n  </Application>\n</ApplicationProvisioningResponse>"
                  },
                  "voice": {
                    "summary": "Voice application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>d3e418e9-1833-49c1-b6c7-ca1700f79586</ApplicationId>\n      <ServiceType>Voice-V2</ServiceType>\n      <AppName>v1</AppName>\n      <CallInitiatedCallbackUrl>https://a.com</CallInitiatedCallbackUrl>\n      <CallInitiatedMethod>GET</CallInitiatedMethod>\n      <CallStatusCallbackUrl>https://b.com</CallStatusCallbackUrl>\n      <CallStatusMethod>GET</CallStatusMethod>\n      <CallbackCreds>\n        <UserId>login123</UserId>\n      </CallbackCreds>\n      <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n      <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n      <CallInitiatedFallbackCreds>\n        <UserId>login2</UserId>\n      </CallInitiatedFallbackCreds>\n      <CallbackTimeout>20</CallbackTimeout>\n    </Application>\n  </ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningSingleResponseWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/applications/{applicationId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "description": "<p>Retrieve an Application</p><p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "GetApplication",
        "summary": "Retrieve application",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "messaging": {
                    "summary": "Messaging application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Messaging</ServiceType>\n    <AppName>qMmmTT</AppName>\n    <!--DEPRECATED-->\n    <MsgCallbackUrl>https://example.com</MsgCallbackUrl>\n    <InboundCallbackUrl>https://example.com</InboundCallbackUrl>\n    <OutboundCallbackUrl>https://example2.com</OutboundCallbackUrl>\n    <!--DEPRECATED-->\n    <MsgCallbackCreds>\n      <!--DEPRECATED-->\n      <UserId>15jPWZmXdm</UserId>\n      <!--DEPRECATED-->\n    </MsgCallbackCreds>\n    <InboundCallbackCreds>\n      <UserId>15jPWZmXdm</UserId>\n    </InboundCallbackCreds>\n    <OutboundCallbackCreds>\n      <UserId>15jPWZmXdm</UserId>\n    </OutboundCallbackCreds>\n    <RequestedCallbackTypes>\n      <CallbackType>message-delivered</CallbackType>\n      <CallbackType>message-failed</CallbackType>\n      <CallbackType>message-sending</CallbackType>\n    </RequestedCallbackTypes>\n  </Application>\n</ApplicationProvisioningResponse>\n"
                  },
                  "voice": {
                    "summary": "Voice application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Voice</ServiceType>\n    <AppName>qMmmTT</AppName>\n    <CallInitiatedCallbackUrl>http://example.com</CallInitiatedCallbackUrl>\n    <CallbackCreds>\n      <UserId>15jPWZmXdm</UserId>\n    </CallbackCreds>\n    <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n    <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n    <CallInitiatedFallbackCreds>\n      <UserId>login2</UserId>\n    </CallInitiatedFallbackCreds>\n    <CallbackTimeout>20</CallbackTimeout>\n  </Application>\n</ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningSingleResponseWrapper"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "description": "<p>Update an Application.</p><p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "UpdateApplication",
        "summary": "Update application",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "messaging": {
                  "summary": "Messaging application",
                  "value": "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"yes\"?>\n<Application>\n  <ServiceType>Messaging</ServiceType>\n  <AppName>EBVICs</AppName>\n  <InboundCallbackUrl>http://example.com</InboundCallbackUrl>\n  <OutboundCallbackUrl>http://example2.com</OutboundCallbackUrl>\n  <RequestedCallbackTypes>\n    <CallbackType>message-delivered</CallbackType>\n    <CallbackType>message-failed</CallbackType>\n    <CallbackType>message-sending</CallbackType>\n  </RequestedCallbackTypes>\n</Application>"
                },
                "voice": {
                  "summary": "Voice application",
                  "value": "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"yes\"?>\n<Application>\n  <ServiceType>Voice</ServiceType>\n  <AppName>v1</AppName>\n  <CallInitiatedCallbackUrl>https://a.com</CallInitiatedCallbackUrl>\n  <CallInitiatedMethod>GET</CallInitiatedMethod>\n  <CallStatusCallbackUrl>https://b.com</CallStatusCallbackUrl>\n  <CallStatusMethod>GET</CallStatusMethod>\n  <CallbackCreds>\n    <UserId>login123</UserId>\n    <Password>password123</Password>\n  </CallbackCreds>\n  <CallInitiatedFallbackUrl>https://fallback.com</CallInitiatedFallbackUrl>\n  <CallInitiatedFallbackMethod>POST</CallInitiatedFallbackMethod>\n  <CallInitiatedFallbackCreds>\n    <UserId>login2</UserId>\n    <Password>password123</Password>\n  </CallInitiatedFallbackCreds>\n  <CallbackTimeout>20</CallbackTimeout>\n </Application>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "messaging": {
                    "summary": "Messaging application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Messaging</ServiceType>\n    <AppName>EBVICs</AppName>\n    <!-- DEPRECATED -->\n    <MsgCallbackUrl>http://example.com</MsgCallbackUrl>\n    <InboundCallbackUrl>http://example.com</InboundCallbackUrl>\n    <OutboundCallbackUrl>http://example2.com</OutboundCallbackUrl>\n    <RequestedCallbackTypes>\n      <CallbackType>message-delivered</CallbackType>\n      <CallbackType>message-failed</CallbackType>\n      <CallbackType>message-sending</CallbackType>\n    </RequestedCallbackTypes>\n  </Application>\n</ApplicationProvisioningResponse>"
                  },
                  "voice": {
                    "summary": "Voice application",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Voice</ServiceType>\n    <AppName>EBVICs</AppName>\n    <CallInitiatedCallbackUrl>https://example2.com</CallInitiatedCallbackUrl>\n    <CallInitiatedMethod>[GET|POST]</CallInitiatedMethod>\n    <CallStatusCallbackUrl>https://example3.com</CallStatusCallbackUrl>\n    <CallStatusMethod>[GET|POST]</CallStatusMethod>\n  </Application>\n</ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningSingleResponseWrapper"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "description": "<p>Delete an Application.</p><p>An Application cannot be removed from an account if that Application is referenced by any Location associated with the account.</p><p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "DeleteApplication",
        "summary": "Delete application",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "example": "fcb022e2-ea3a-448d-a6af-31dd13aeaa62",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {}
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Applications"
        ],
        "description": "<p>Patch update an Application</p><ul><li>CallStatusCallbackUrl can be removed by settings its value to 'remove'</li></ul><p>Please visit <a href='/docs/account/applications'>Applications management</a></p>",
        "operationId": "PatchApplication",
        "summary": "Patch application",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "example": "fcb022e2-ea3a-448d-a6af-31dd13aeaa62",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Application>\n  <AppName>XgRIdP</AppName>\n</Application>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationProvisioningResponse>\n  <Application>\n    <ApplicationId>e5a9e103-097e-4ec4-87a0-50109fb7b4b1</ApplicationId>\n    <ServiceType>Voice</ServiceType>\n    <AppName>EBVICs</AppName>\n    <CallInitiatedCallbackUrl>https://example2.com</CallInitiatedCallbackUrl>\n    <CallInitiatedMethod>[GET|POST]</CallInitiatedMethod>\n    <CallStatusCallbackUrl>https://example3.com</CallStatusCallbackUrl>\n    <CallStatusMethod>[GET|POST]</CallStatusMethod>\n  </Application>\n</ApplicationProvisioningResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProvisioningSingleResponseWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/applications/{applicationId}/associatedsippeers": {
      "get": {
        "tags": [
          "Applications"
        ],
        "description": "Retrieve a list of sippeers, associated with application",
        "operationId": "ListAssociatedSippeers",
        "summary": "List associated sippeers",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "applicationId",
            "description": "Application ID",
            "in": "path",
            "required": true,
            "example": "fcb022e2-ea3a-448d-a6af-31dd13aeaa62",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AssociatedSipPeersResponse>\n  <AssociatedSipPeers>\n    <AssociatedSipPeer>\n      <SiteId>482</SiteId>\n      <SiteName>site_e867f</SiteName>\n      <PeerId>500018</PeerId>\n      <PeerName>sippeer-e867f</PeerName>\n    </AssociatedSipPeer>\n    <AssociatedSipPeer>\n      <SiteId>483</SiteId>\n      <SiteName>site_e867d</SiteName>\n      <PeerId>500019</PeerId>\n      <PeerName>sippeer-e867d</PeerName>\n    </AssociatedSipPeer>\n  </AssociatedSipPeers>\n</AssociatedSipPeersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AssociatedSipPeersResponseWrapper"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AssociatedSipPeersResponse>\n  <ResponseStatus>\n    <ErrorCode>12103</ErrorCode>\n    <Description>Current 1 Account have no Catapult association</Description>\n  </ResponseStatus>\n</AssociatedSipPeersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AssociatedSipPeersErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AssociatedSipPeersResponse>\n  <ResponseStatus>\n    <ErrorCode>13629</ErrorCode>\n    <Description>Application with id 'non_existing' not found</Description>\n  </ResponseStatus>\n</AssociatedSipPeersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AssociatedSipPeersErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/campaignManagement/10dlc/brands": {
      "get": {
        "tags": [
          "10DLC"
        ],
        "description": "Retrieve a list of campaign registry brands for the account",
        "operationId": "List brands",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "MAIN",
                "CUSTOMER"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BrandsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<BrandsResponse>\n  <Brands>\n    <Brand>\n      <EntityType>PUBLIC_PROFIT</EntityType>\n      <AltBusinessId>111111111</AltBusinessId>\n      <AltBusinessIdType>DUNS</AltBusinessIdType>\n      <BrandRelationship>MEDIUM_ACCOUNT</BrandRelationship>\n      <City>Raleigh</City>\n      <CompanyName>Bandwidth</CompanyName>\n      <Country>US</Country>\n      <DisplayName>Bandwidth</DisplayName>\n      <Ein>123456789</Ein>\n      <Email>user@mail.com</Email>\n      <Phone>+19195551234</Phone>\n      <PostalCode>27616</PostalCode>\n      <State>NC</State>\n      <Street>123 street</Street>\n      <StockExchange>NASDAQ</StockExchange>\n      <StockSymbol>BAND</StockSymbol>\n      <Vertical>TECHNOLOGY</Vertical>\n      <Website>www.my.website.com</Website>\n      <IsMain>false</IsMain>\n    </Brand>\n  </Brands>\n  <TotalCount>1</TotalCount>\n</BrandsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BrandsErrorResponse"
                },
                "examples": {
                  "example": {
                    "value": "<BrandsResponse>\n  <ResponseStatus>\n    <ErrorCode>12055</ErrorCode>\n    <Description>'LONG_CODE' feature is not enabled on account 900000</Description>\n  </ResponseStatus>\n</BrandsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "10DLC"
        ],
        "description": "<p>Create campaign registry brand on the Account</p><p>My Brand Note: Regardless of if you are a DirectCustomer or Reseller, you will need to create a 'My Brand'. You can only create one of these. On the Request Body you can indicate a 'My Brand' by setting the IsMain flag to true.</p><p>Please visit <a href='/docs/messaging/campaign-management/csp/reseller-brand-api/'>Brand and Reseller Management.</a></p>",
        "operationId": "Create brand",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BrandRequest"
              },
              "examples": {
                "My Brand": {
                  "summary": "My Brand",
                  "value": "<Brand>\n  <EntityType>PUBLIC_PROFIT</EntityType>\n  <AltBusinessId>111111111</AltBusinessId>\n  <AltBusinessIdType>DUNS</AltBusinessIdType>\n  <BrandRelationship>MEDIUM_ACCOUNT</BrandRelationship>\n  <City>Raleigh</City>\n  <CompanyName>Bandwidth</CompanyName>\n  <Country>US</Country>\n  <DisplayName>Bandwidth</DisplayName>\n  <Ein>123456789</Ein>\n  <Email>user@mail.com</Email>\n  <Phone>+19195551234</Phone>\n  <PostalCode>27616</PostalCode>\n  <State>NC</State>\n  <Street>123 street</Street>\n  <StockExchange>NASDAQ</StockExchange>\n  <StockSymbol>BAND</StockSymbol>\n  <Vertical>TECHNOLOGY</Vertical>\n  <Website>www.my.website.com</Website>\n  <IsMain>true</IsMain>\n</Brand>"
                },
                "Customer Brand": {
                  "summary": "Customer Brand",
                  "value": "<Brand>\n  <EntityType>PUBLIC_PROFIT</EntityType>\n  <AltBusinessId>111111111</AltBusinessId>\n  <AltBusinessIdType>DUNS</AltBusinessIdType>\n  <BrandRelationship>MEDIUM_ACCOUNT</BrandRelationship>\n  <City>Raleigh</City>\n  <CompanyName>Bandwidth</CompanyName>\n  <Country>US</Country>\n  <DisplayName>Bandwidth</DisplayName>\n  <Ein>123456789</Ein>\n  <Email>user@mail.com</Email>\n  <Phone>+19195551234</Phone>\n  <PostalCode>27616</PostalCode>\n  <State>NC</State>\n  <Street>123 street</Street>\n  <StockExchange>NASDAQ</StockExchange>\n  <StockSymbol>BAND</StockSymbol>\n  <Vertical>TECHNOLOGY</Vertical>\n  <Website>www.my.website.com</Website>\n  <IsMain>false</IsMain>\n</Brand>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BrandResponse"
                },
                "examples": {
                  "example": {
                    "value": "<BrandResponse>\n  <Brand>\n    <BrandId>BJDHM3</BrandId>\n    <CspId>CMHSJ9</CspId>\n    <EntityType>PUBLIC_PROFIT</EntityType>\n    <AltBusinessId>111111111</AltBusinessId>\n    <AltBusinessIdType>DUNS</AltBusinessIdType>\n    <BrandRelationship>MEDIUM_ACCOUNT</BrandRelationship>\n    <City>Raleigh</City>\n    <CompanyName>Bandwidth</CompanyName>\n    <Country>US</Country>\n    <DisplayName>Bandwidth</DisplayName>\n    <Ein>123456789</Ein>\n    <UniversalEin>111111111</UniversalEin>\n    <Email>user@mail.com</Email>\n    <Phone>+19195551234</Phone>\n    <PostalCode>27616</PostalCode>\n    <State>NC</State>\n    <Street>123 street</Street>\n    <StockExchange>NASDAQ</StockExchange>\n    <StockSymbol>BAND</StockSymbol>\n    <Vertical>TECHNOLOGY</Vertical>\n    <Website>www.my.website.com</Website>\n    <IsMain>true</IsMain>\n  </Brand></BrandResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BrandErrorResponse"
                },
                "examples": {
                  "example": {
                    "value": "<BrandResponse>\n  <ResponseStatus>\n    <ErrorCode>1003</ErrorCode>\n    <Description>CompanyName is required</Description>\n    </ResponseStatus>\n </BrandResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/campaignManagement/10dlc/campaigns/imports": {
      "get": {
        "tags": [
          "10DLC"
        ],
        "description": "The GET method returns a list of Campaign Ids that have been imported into the account. The maximum number of Campaigns returned by this query is controlled by the size parameter. The page parameter can be used to fetch additional pages after the first.",
        "operationId": "GetImportedCampaigns",
        "summary": "Retrieve imported campaigns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "The page number of the results to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "size",
            "description": "The maximum number of results to return.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 OK response will contains a list of Imported Campaigns and a count of the total number of Imported Campaigns available to be returned via paging.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LongCodeImportCampaignResponse>\n  <ImportedCampaign>\n    <CampaignId>CA114BN</CampaignId>\n    <Description>Test 1</Description>\n    <MessageClass>Campaign-E</MessageClass>\n    <CreateDate>2021-03-18T12:50:45Z</CreateDate>\n    <Status>ACTIVE</Status>\n    <MnoStatusList>\n      <MnoStatus>\n        <MnoName>ATT</MnoName>\n        <MnoId>10017</MnoId>\n        <Status>APPROVED</Status>\n      </MnoStatus>\n      <MnoStatus>\n        <MnoName>TMO</MnoName>\n        <MnoId>10035</MnoId>\n        <Status>APPROVED</Status>\n      </MnoStatus>\n    </MnoStatusList>\n  </ImportedCampaign>\n</LongCodeImportCampaignResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LongCodeImportCampaignsResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 BAD REQUEST response will be returned if one of the query parameters is invalid. The response body will contain a description of the error.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LongCodeImportCampaignResponse>\n  <ResponseStatus>\n    <ErrorCode>12055</ErrorCode>\n    <Description>10DLCImportCampaign feature is not enabled on account</Description>\n  </ResponseStatus>\n</LongCodeImportCampaignResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LongCodeImportCampaignsErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "10DLC"
        ],
        "description": "The POST method is used to import a previously shared Campaign into the account.",
        "operationId": "ImportCampaign",
        "summary": "Import campaign",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportedCampaign>\n  <CampaignId>CJEUMDK</CampaignId>\n</ImportedCampaign>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ImportedCampaignRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A 201 CREATED if the campaign is successfully imported. The created resource will be returned.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LongCodeImportCampaignResponse>\n  <ImportedCampaign>\n    <CampaignId>CA114BN</CampaignId>\n    <Description>Test 1</Description>\n    <MessageClass>Campaign-E</MessageClass>\n    <CreateDate>2021-03-18T12:50:45Z</CreateDate>\n    <Status>ACTIVE</Status>\n    <MnoStatusList>\n      <MnoStatus>\n        <MnoName>ATT</MnoName>\n        <MnoId>10017</MnoId>\n        <Status>APPROVED</Status>\n      </MnoStatus>\n      <MnoStatus>\n        <MnoName>TMO</MnoName>\n        <MnoId>10035</MnoId>\n        <Status>APPROVED</Status>\n      </MnoStatus>\n    </MnoStatusList>\n  </ImportedCampaign>\n</LongCodeImportCampaignResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LongCodeImportCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 BAD REQUEST will be returned with a descriptive payload if the error contains an ID with an invalid format. The error contains an error code and description.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LongCodeImportCampaignResponse>\n  <ResponseStatus>\n    <ErrorCode>1011</ErrorCode>\n    <Description>CampaignId is too long. Max length 12 characters.</Description>\n  </ResponseStatus>\n</LongCodeImportCampaignResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LongCodeImportCampaignErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "A 404 NOT FOUND will be returned if the campaign cannot be found in the TCR database or if it has not been correctly shared."
          }
        }
      }
    },
    "/accounts/{accountId}/campaignManagement/10dlc/campaigns/imports/{campaignId}": {
      "get": {
        "tags": [
          "10DLC"
        ],
        "description": "The GET method returns a сampaign that have been imported into the account.",
        "operationId": "GetImportedCampaign",
        "summary": "Retrieve imported campaign",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "campaignId",
            "description": "The campaign id.",
            "in": "path",
            "required": true,
            "example": "CA114BN",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieve imported campaign.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LongCodeImportCampaignResponse>\n  <ImportedCampaign>\n    <CampaignId>CA114BN</CampaignId>\n    <Description>Test 1</Description>\n    <MessageClass>Campaign-E</MessageClass>\n    <CreateDate>2021-03-18T12:50:45Z</CreateDate>\n    <Status>ACTIVE</Status>\n    <MnoStatusList>\n      <MnoStatus>\n        <MnoName>ATT</MnoName>\n        <MnoId>10017</MnoId>\n        <Status>APPROVED</Status>\n      </MnoStatus>\n      <MnoStatus>\n        <MnoName>TMO</MnoName>\n        <MnoId>10035</MnoId>\n        <Status>APPROVED</Status>\n      </MnoStatus>\n    </MnoStatusList>\n  </ImportedCampaign>\n</LongCodeImportCampaignResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LongCodeImportCampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LongCodeImportCampaignResponse>\n  <ResponseStatus>\n    <ErrorCode>12055</ErrorCode>\n    <Description>10DLCImportCampaign feature is not enabled on account</Description>\n  </ResponseStatus>\n</LongCodeImportCampaignResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LongCodeImportCampaignErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/availableNpaNxx": {
      "get": {
        "tags": [
          "Available Tns"
        ],
        "description": "Retrieves a list of available Npa-Nxx telephone numbers.",
        "operationId": "GetAvailableNpaNxx",
        "summary": "Retrieves available Npa-Nxx tns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "areaCode",
            "description": "The allowed number ranges are [2-9] for the first digit and [0-9] for both the second and third digits.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 919
          },
          {
            "name": "state",
            "description": "Returns only the NPA NXX information within the specified state.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "NC"
          },
          {
            "name": "quantity",
            "description": "Filters out any Npa-Nxx grouped phone numbers whose quantity falls short of the given quantity.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 150
          }
        ],
        "responses": {
          "200": {
            "description": "The quantity of available phone numbers, grouped by NPA-NXX.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SearchResultForAvailableNpaNxx>\n  <AvailableNpaNxxList>\n  <AvailableNpaNxx>\n    <City>NASHVILLE</City>\n    <Npa>252</Npa>\n    <Nxx>220</Nxx>\n    <Quantity>1</Quantity>\n    <State>NC</State>\n  </AvailableNpaNxx>\n  <AvailableNpaNxx>\n    <City>FARMVILLE</City>\n    <Npa>252</Npa>\n    <Nxx>228</Nxx>\n    <Quantity>1</Quantity>\n    <State>NC</State>\n  </AvailableNpaNxx>\n  </AvailableNpaNxxList>\n</SearchResultForAvailableNpaNxx>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SearchResultForAvailableNpaNxxWrapper"
                }
              }
            }
          },
          "400": {
            "description": "There are no phone numbers within the specified scope.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SearchResultForAvailableNpaNxx>\n  <Error>\n    <Code>4000</Code>\n    <Description>The area code specified 433 is not present as a valid entry in our system</Description>\n    </Error>\n  </SearchResultForAvailableNpaNxx>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SearchResultForAvailableNpaNxxErrorWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/availableNumbers": {
      "get": {
        "tags": [
          "Available Tns"
        ],
        "description": "Retrieves the phone numbers according to the input parameters.\n <p>In this table are presented combinations of path parameters for different type of search:</p> <table><thead><tr><th>Search Type</th><th>Required Parameters</th><th>Combinational Parameters</th><th>Optional Parameters</th></tr></thead><tbody><tr><td>Area Code</td><td>areaCode</td><td>rateCenter (state required), city (state required), state, lata, zip</td><td>quantity, enableTNDetail, protected</td></tr><tr><td>NPA-NXX</td><td>npaNxx</td><td>rateCenter (state required), city (state required), state, lata, zip, orderBy</td><td>quantity, enableTNDetail, protected</td></tr><tr><td>NPA-NXX with Local Calling Area</td><td>npaNxx</td><td></td><td>quantity, LCA, enableTNDetail, protected</td></tr><tr><td>NPA-NXX-X</td><td>npaNxxx</td><td>rateCenter (state required), city (state required), state, lata, zip, orderBy</td><td>quantity, enableTNDetail, protected</td></tr><tr><td>NPA-NXX-X with Local Calling Area</td><td>npaNxxx</td><td>rateCenter (state required), city (state required), state, lata, zip</td><td>quantity, LCA, enableTNDetail, protected</td></tr><tr><td>RateCenter</td><td>rateCenter, state</td><td>city, areaCode/npaNxx/npaNxxx, lata, zip, orderBy</td><td>quantity, enableTNDetail, protected</td></tr><tr><td>RateCenter with Local Calling Area</td><td>rateCenter, state</td><td></td><td>quantity, LCA, enableTNDetail, protected</td></tr><tr><td>State</td><td>state</td><td>rateCenter, city, areaCode/npaNxx/npaNxxx, lata, zip</td><td>quantity, enableTNDetail, protected</td></tr><tr><td>City</td><td>state, city</td><td>rateCenter, state, areaCode/npaNxx/npaNxxx, lata, zip, orderBy</td><td>quantity, enableTNDetail, protected</td></tr><tr><td>Zip Code</td><td>zip</td><td>rateCenter (state required), city (state required), state, areaCode/npaNxx/npaNxxx, lata, orderBy</td><td>quantity, enableTNDetail, protected</td></tr><tr><td>LATA</td><td>lata</td><td>rateCenter (state required), city (state required), state, areaCode/npaNxx/npaNxxx, zip</td><td>quantity, enableTNDetail, protected</td></tr><tr><td>Local Vanity</td><td>localVanity</td><td>state, areaCode</td><td>endsIn, quantity, protected, enableTNdetails</td></tr><tr><td>TollFree Vanity</td><td>tollFreeVanity</td><td>orderBy</td><td>quantity</td></tr><tr><td>TollFree WildCard</td><td>tollFreeWildCardPattern</td><td>orderBy</td><td>quantity</td></tr></tbody></table>",
        "operationId": "GetAvailableTns",
        "summary": "Retrieve available tns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "quantity",
            "description": "The desired quantity of requested numbers.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 5000,
              "default": 5000
            },
            "example": 30
          },
          {
            "name": "enableTNDetail",
            "description": "If set to true, a list of details associated with the telephone number (rate center, abbreviation, city, state, and LATA) will be displayed along with the TN.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "LCA",
            "description": "<p>Values are true or false.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "endsIn",
            "description": "<p>Intended to use with <i>localVanity</i> only. If set to true, the search will look for only numbers which end in specified <i>localVanity</i>, otherwise <i>localVanity</i> sequence can be met anywhere in last 7 number digits. The default is false.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "areaCode",
            "description": "<p>The 3-digit area code associated with the TN.</p><ul><li>Allowed number ranges are [2-9] for the first digit and [0-9] for both the second and third digits.</li></ul>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 435
          },
          {
            "name": "npaNxx",
            "description": "<p>The 6-digit prefix associated with the TN.</p><ul><li>Allowed number ranges for NPA are [2-9] for the first digit and [0-9] for both the second and third digits.</li><li>Allowed number ranges for NXX are [2-9] for the first digit and [0-9] for both the second and third digits.</li></ul>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "npaNxxx",
            "description": "<p>The 7-digit prefix associated with the TN.</p><ul><li>Allowed number ranges for NPA are [2-9] for the first digit and [0-9] for both the second and third digits.</li><li>Allowed number ranges for NXXX are [2-9] for the first digit and [0-9] the rest of the (X) digits.</li></ul>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "lata",
            "description": "<p>A maximum five digit (XXXXX) numeric format</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 244
          },
          {
            "name": "rateCenter",
            "description": "<p>The abbreviation for the rateCenter</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Cary"
          },
          {
            "name": "city",
            "description": "<p>The name of the city.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "RALEIGH"
          },
          {
            "name": "state",
            "description": "<p>The two-letter abbreviation of the state the RateCenter is in</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "NC"
          },
          {
            "name": "tollFreeVanity",
            "description": "<p>The Toll Free requested vanity number. Valid range is 7+ digits alphanumeric.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "NEWCARS"
          },
          {
            "name": "tollFreeWildCardPattern",
            "description": "<p>The Toll Free requested wild card pattern. valid range is 3 digits.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "8**, 80*, 87*"
          },
          {
            "name": "localVanity",
            "description": "<p>Requested vanity number. Valid range is from 4 to 7 alphanumeric characters.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "NEWCARS"
          },
          {
            "name": "zip",
            "description": "<p>A five-digit (XXXXX) or nine-digit (XXXXX-XXXX) format value.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 27607
          },
          {
            "name": "orderBy",
            "description": "<p>The field by which the results should be sorted</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>A list of available numbers is provided.  Additional information is available if the queryParameter enableTNDetail is true. If no numbers are available an empty SearchResult element is returned.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SearchResult>\n  <ResultCount>384</ResultCount>\n  <TelephoneNumberList>\n    <TelephoneNumber>4354776112</TelephoneNumber>\n    <!-- SNIP -->\n    <TelephoneNumber>4357095160</TelephoneNumber>\n  </TelephoneNumberList>\n</SearchResult>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              }
            }
          },
          "400": {
            "description": "<p>Invalid/missing input parameter</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SearchResult>\n  <Error>\n    <Code>4010</Code>\n    <Description>One of more required search parameters are null or empty, please refer to the api documentation</Description>\n    </Error>\n  </SearchResult>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SearchResultErrorWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bdrs": {
      "post": {
        "tags": [
          "Reports"
        ],
        "description": "<p><b>Note - this API is being replaced with the /billingreports API - we strongly recommend that you use that endpoint.</b></p> <p>This API allows the retrieval of a ZIP file containing BDR records for a specified date range. These BDR records are delivered as a ZIP compressed comma separated values (CSV) file. The general flow of the API calls required to retrieve these records is: <ol>  <li>POST a request to the /bdrs resource, describing the date range for which the BDR records are wished. This will initiate the construction of the zip file.</li> <li>Examine the response from the POST. If the payload is understandable and valid then a 202 accepted HTTP result code will be returned indicating that the response file is being created.</li> <li>Retrieve the Location Header from the Response to the POST. This location header will contain the resource ID for the collection of BDRs that will be returned once complete. Note that the fact that the ID has been issued does not mean that the ZIP file is complete.</li> <li>Interrogate the resource ID to check the status of the request. If a 303 See Other response is received then the Location Header will contain the resource path to the file. A typical browser response will be to download the file. If a 200 OK is returned then the request is considered valid, but the file is not ready for distribution.</li> <li>Fetching the file can be done by issuing a GET to the resources path in the Location Header mentioned above</li></ol>",
        "deprecated": true,
        "operationId": "CreateBDR",
        "summary": "Create BDR in range",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Bdr>\n    <StartDate>2015-04-01</StartDate>\n    <EndDate>2015-04-30</EndDate>\n</Bdr>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Bdr"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "A 202 Accepted means that the request has been received and will be processed.  Processing the request takes time, so this does not indicate that the information is available, it simply indicates that the request has started processing. \nThe response also includes header information in the Location Header that can be used for retrieving the state of the request.\nAn informative payload is also included in success and failure cases.\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BdrCreationResponse>\n     <Info>Your BDR archive is currently being constructed</Info>\n</BdrCreationResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BdrCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 response indicates that there was an error in processing the payload, perhaps something like incorrectly formatted or chosen dates.\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BdrCreationResponse>\n    <ResponseStatus>\n        <ErrorCode>15501</ErrorCode>\n        <Description>Invalid date range. Start date 2015-06-01 must be before end date 2015-04-30</Description>\n    </ResponseStatus>\n</BdrCreationResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BdrCreationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bdrs/{bdrid}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "deprecated": true,
        "description": "<p>The bdr id resource will query the status of the bdr file that is being generated. There are essentially two responses...</p><ul><li>not yet ready</li><li>ready, in which case the request is redirected to the URL to actually download the file.</li></ul> <p>A GET on the BDR ID will return a still processing indication if the file creation has not completed, or will redirect to the file to be downloaded.</p>",
        "operationId": "GetBDRStatus",
        "summary": "Retrieve BDR status or redirect to download",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "bdrid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 OK means that the request is valid, but that the file is not yet ready. The payload indicates the status.\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BdrRetrievalResponse>\n     <Info>The requested BDR archive is still being constructed, please check back later</Info>\n</BdrRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BdrRetrievalResponse"
                }
              }
            }
          },
          "303": {
            "description": "A 303 response indicates that the file is ready.  The 303 should redirect the request to the URL in the Location header, which will, in most cases, initiate the file download.\n"
          },
          "400": {
            "description": "A 400 indicates that the BDR id is malformed. </p>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BdrRetrievalResponse>\n    <ResponseStatus>\n        <ErrorCode>1008</ErrorCode>\n        <Description>'44a90e00-a7b6asdfsdafasdfdasf-6659-9112-e7f5dfa48231' is not a valid UUID</Description>\n    </ResponseStatus>\n</BdrRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BdrRetrievalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "A 404 indicates that the BDR id cannot be found.\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BdrRetrievalResponse>\n    <ResponseStatus>\n        <ErrorCode>15001</ErrorCode>\n        <Description>BDR archive was not found</Description>\n    </ResponseStatus>\n</BdrRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BdrRetrievalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bdrs/{bdrid}/file": {
      "get": {
        "tags": [
          "Reports"
        ],
        "deprecated": true,
        "description": "A GET on the /file resource subtending a BDR ID will cause the download of the file.  Executing this resource path within a browser will cause the download of the file.",
        "operationId": "DownloadBDR",
        "summary": "Download BDR",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "bdrid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 OK indicates that the request for the file download was accepted and will be processed.",
            "content": {
              "application/xml": {}
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billingreports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "Retrieve billing report instances within the account scope and billing type. The valid Billing Types are: <table><thead><tr><th>Report Type</th><th>Description</th></tr></thead><tbody><tr><td>BDR</td><td>Billing Detail Records for Voice Services - per call information, available on day to day basis - may not reflect final invoice</td></tr><tr><td>MDR</td><td>Message Detail Records - per message information - may not reflect final invoice</td></tr><tr><td>INVOICE</td><td>A copy of the invoice file or files for the specified date range</td></tr><tr><td>STMTBDR</td><td>BDR records that are aligned with the invoice for Voice Services</td></tr><tr><td>DIDSNAP</td><td>A list of telephone numbers, aligned with invoice</td></tr><tr><td>DIDSNAP_MSG</td><td>A list of telephone numbers that are enabled for messaging, aligned with invoice</td></tr><tr><td>RECORDINGBDR</td><td>Billing Detail Records for Recording Services - per recording information, available on day to day basis</td></tr><tr><td>RECORDINGSTMTBDR</td><td>BDR records that are aligned with the invoice for Recording Services</td></tr><tr><td>TRANSCRIPTIONBDR</td><td>Billing Detail Records for Transcription Services - per call transcription information, available on day to day basis</td></tr><tr><td>TRANSCRIPTIONSTMTBDR</td><td>BDR records that are aligned with the invoice for Recording Services</td></tr><tr><td>CNAMBDR</td><td>Record of CNAM Subscribe and Notify queries/dips, available on day to day basis</td></tr><tr><td>CNAMSTMTBDR</td><td>Record of CNAM Subscribe and Notify queries/dips, aligns with invoices</td></tr><tr><td>CONFBDR</td><td>Billing Detail Records for Transcription Services - per conference information, available on day to day basis</td></tr><tr><td>CONFSTMTBDR</td><td>BDR records that are aligned with the invoice for Conferencing Services</td></tr><tr><td>UNPROVISIONED_CALLS_BDR</td><td>BDR for unprovisioned 911 calls that were routed to the ECC</td></tr></tbody></table>",
        "operationId": "GetBillingReportByType",
        "summary": "Retrieve billing report by billing type",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "kind",
            "description": "One of billing report types DIDSNAP, DIDSNAP_MSG. Empty parameter will return all reports of types DIDSNAP, DIDSNAP_MSG.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "kind=DIDSNAP,DIDSNAP_MSG"
            },
            "example": "DIDSNAP"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of all billing report instances. (Not supported for BDR, MDR, INVOICE, STMTBDR, RECORDINGBDR, RECORDINGSTMTBDR, TRANSCRIPTIONBDR, TRANSCRIPTIONSTMTBDR, CNAMBDR, CNAMSTMTBDR, CONFBDR, CONFSTMTBDR, TFPEERINGSTMTBDR, AMDBDR, AMDSTMTBDR, SIPURIBDR, SIPURISTMTBDR, TTSBDR, TTSSTMTBDR as status history not implemented yet for these billing types)\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReportsRetrievalResponse>\n    <BillingReportList>\n        <BillingReport>\n            <BillingReportId>5f8734f0-d7c3-445c-b1e2-cdbb620e4ff7</BillingReportId>\n            <BillingReportKind>DIDSNAP</BillingReportKind>\n            <UserId>jbm</UserId>\n            <ReportStatus>PROCESSING</ReportStatus>\n            <Description>The requested report archive is still being constructed, please check back later.</Description>\n            <CreatedDate>2017-11-01 14:12:16</CreatedDate>\n            <DateRange>\n                <StartDate>2017-01-01</StartDate>\n                <EndDate>2017-09-30</EndDate>\n            </DateRange>\n        </BillingReport>\n        <BillingReport>\n            <BillingReportId>7680a54a-b1f1-4d43-8af6-bf3a701ad202</BillingReportId>\n            <BillingReportKind>DIDSNAP</BillingReportKind>\n            <UserId>jbm</UserId>\n            <ReportStatus>COMPLETE</ReportStatus>\n            <Description>The requested report archive is failed</Description>\n            <CreatedDate>2017-11-06 14:22:21</CreatedDate>\n            <DateRange>\n                 <StartDate>2017-05-01</StartDate>\n                 <EndDate>2017-10-31</EndDate>\n            </DateRange>\n        </BillingReport>\n    </BillingReportList>\n</BillingReportsRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingReportsRetrievalResponse"
                }
              }
            }
          },
          "204": {
            "description": "Billing report data for requested time frame hasn't been provided yet."
          },
          "400": {
            "description": "A 400 response indicates that report type is incorrect."
          }
        }
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "description": "The payload for the POST declares the date range and type for the desired reports. The valid types are: <ul> <li>BDR - Billing Detail Records - per call information</li> <li>MDR - Message Detail Records - per messagin information</li> <li>INVOICE - A copy of the invoice file or files for the specified date range</li> <li>STMTBDR - BDR records that are aligned with the invoice</li> <li>DIDSNAP - a list of telephone numbers aligned as closely as we can with the billing window</li> <li>DIDSNAP_MSG - a list of telephone numbers with active messaging</li> </ul>\n",
        "operationId": "CreateBillingReport",
        "summary": "Create billing report in range",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReport>\n    <Type>BDR</Type>\n    <DateRange>\n       <StartDate>2013-05-21</StartDate>\n       <EndDate>2013-05-29</EndDate>\n    </DateRange>\n</BillingReport>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/BillingReport"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A 201 response means that the response file is currently being constructed. Constructing the file takes time, so this does not indicate that the information is available.<br>\nThe response also includes header information in the Location Header that can be used for retrieving the state of the report.<br>\nAn informative payload is also included in success and failure cases.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReportCreationResponse>\n    <ReportStatus>RECEIVED</ReportStatus>\n    <Description>The report archive is currently being constructed.</Description>\n</BillingReportCreationResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingReportCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 response indicates that there was an error in processing the payload, perhaps something like incorrectly formatted or chosen dates.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReportCreationResponse>\n    <ResponseStatus>\n        <ErrorCode>15501</ErrorCode>\n        <Description>Invalid date range. Start date 2014-05-21 must be before end date 2013-05-29</Description>\n    </ResponseStatus>\n</BillingReportCreationResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingReportCreationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billingreports/{reportid}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "<p>The resource will query the status of the report that is being generated.</p>\n",
        "operationId": "GetBillingReportStatus",
        "summary": "Retrieve billing report status or redirect to download",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "bdrid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>A 200 indicates that the request is valid. The payload indicates the report status: <br></p>\n\n<ul>\n    <li><b>PROCESSING</b> - The requested report archive is still being constructed, please check back later.</li>\n    <li><b>COMPLETED</b> - The report archive is constructed.</li>\n</ul>\n\n<p>For <b>COMPLETED</b> report, fetching the file can be done by issuing a GET request to the resource path in the Location Header.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReportRetrievalResponse>\n    <ReportStatus>COMPLETED</ReportStatus>\n     <Description>The report archive is constructed.</Description>\n</BillingReportRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingReportRetrievalResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 indicates that the report ID is malformed.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReportRetrievalResponse>\n    <ResponseStatus>\n        <ErrorCode>1008</ErrorCode>\n        <Description>'9b428b4c-159b-465f-9667-' is not a valid UUID</Description>\n    </ResponseStatus>\n</BillingReportRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingReportRetrievalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "A 404 indicates that the requested report cannot be found.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReportRetrievalResponse>\n    <ResponseStatus>\n        <ErrorCode>15603</ErrorCode>\n        <Description>The requested report was not found.</Description>\n    </ResponseStatus>\n</BillingReportRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingReportRetrievalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/billingreports/{reportid}/file": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "<p>A GET on the /file resource subtending a report ID will cause the download of the file.  Executing this resource path within a browser will cause the download of the file.</p>\n",
        "operationId": "DownloadBillingReport",
        "summary": "Download billing report",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "bdrid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 OK indicates that the request for the file download was accepted and will be processed.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReportArchiveRetrievalResponse>\n  <ResponseStatus>COMPLETED</ResponseStatus>\n  <Description>The report archive is constructed</Description>\n</BillingReportArchiveRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingReportArchiveRetrievalResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 indicates that the report ID is malformed.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReportArchiveRetrievalResponse>\n    <ResponseStatus>\n        <ErrorCode>1008</ErrorCode>\n        <Description>'9b428b4c-159b-465f-9667-' is not a valid UUID</Description>\n    </ResponseStatus>\n</BillingReportArchiveRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingReportArchiveRetrievalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "A 404 indicates that the requested report cannot be found.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BillingReportArchiveRetrievalResponse>\n    <ResponseStatus>\n        <ErrorCode>15603</ErrorCode>\n        <Description>The requested report was not found.</Description>\n    </ResponseStatus>\n</BillingReportArchiveRetrievalResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingReportArchiveRetrievalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkPortins": {
      "get": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "Retrieves bulk port-in orders for the specified accountId.\nA maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter is provided, the order results will be limited to the last two years. Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a>",
        "operationId": "ListBulkPortins",
        "summary": "List bulk port-in orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "The full bulk port-in orderId of the first order of the page.  Special value `1` is used\nto indicate the first port-in for the accountId matching any other query parameters.\nIf the number of results exceeds the `size` parameter value, the result includes a header\ncalled `next` that allows you to fetch the next page of the results.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "`ca43d178-8f67-4a08-9a4b-af0ce06b5914`, `1`"
          },
          {
            "name": "size",
            "description": "The maximum number of results to include in the response payload.  The\nvalue should be between 1 and 1000.  Larger values may be specified, but results are\nlimited to a maximum of 1000 entries, regardless.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 30
          },
          {
            "name": "status",
            "description": "Include in the response payload only entries in which the bulk port-in order had the specified ProcessingStatus value.  Note: specifying `draft` will include any of the draft values, including `DRAFT`, `VALIDATE_DRAFT_TNS`, `VALID_DRAFT_TNS`, and `INVALID_DRAFT_TNS`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "in_progress",
                "needs_attention",
                "partial",
                "completed",
                "cancelled"
              ]
            },
            "example": "draft"
          },
          {
            "name": "orderDate",
            "description": "A specific date on which you wish to see modifications to a bulk port-in order.\nFor each bulk port-in order, belonging to the account, that was modified on the specified date/time, only the latest update for that order is included in the results. Date format can be one of: `yyyy-mm-ddThh:mm:ss.sZ`, `yyyy-mm-ddZ`, `yyyy-mm-ddThh:mm:ssTZD`.",
            "in": "query",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "example": "2021-06-21T18:45:00.000Z"
          },
          {
            "name": "modifiedDateFrom",
            "description": "The earliest date from which you want to see modifications to a bulk port-in order.\nThis query parameter must be used together with `modifiedDateTo`.\nThis parameter and modifiedDateTo define a time interval.  For each bulk port-in order,\nbelonging to the account, that was modified in that time interval, only the latest\nupdate for that order is included in the results. Date format can be one of: `yyyy-mm-ddThh:mm:ss.sZ`, `yyyy-mm-ddZ`, `yyyy-mm-ddThh:mm:ssTZD`.",
            "in": "query",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "example": "2021-06-21T18:45:00.000Z"
          },
          {
            "name": "modifiedDateTo",
            "description": "The latest date from which you want to see modifications to a bulk port-in order.\nThis query parameter must be used together with `modifiedDateFrom`.\nThis parameter and modifiedDateFrom define a time interval.  For each bulk\nport-in order, belonging to the account, that was modified in that time interval,\nonly the latest update for that order is included in the results.\nThe modifiedDateTo value may be in the future. Date format can be one of: `yyyy-mm-ddThh:mm:ss.sZ`, `yyyy-mm-ddZ`, `yyyy-mm-ddThh:mm:ssTZD`.",
            "in": "query",
            "required": false,
            "schema": {
              "format": "date",
              "type": "string"
            },
            "example": "2021-06-21T18:45:00.000Z"
          },
          {
            "name": "orderDetails",
            "description": "If set to true, bulk port-in order details will be displayed instead of summary information.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of bulk port-ins have been successfully retrieved.",
            "content": {
              "application/xml": {
                "examples": {
                  "Exclude query params": {
                    "description": "If the orderDetails query parameter was not included, or was set to false, the response will look like the following",
                    "value": "<BulkPortinResponses>\n\t<TotalCount>3</TotalCount>\n\t<Links>\n\t\t<first>Link=&lt;https://dashboard.bandwidth.com:443/v1.0/accounts/9900012/bulkPortins?page=1&amp;size=100&amp;orderDate=2020-06-16&gt;;rel=\\\"first\\\";</first>\n\t</Links>\n\t<BulkPortinResponse>\n\t\t<OrderId>7811bc44-9f34-4c5c-97d5-51e666eb982e</OrderId>\n\t\t<CompanyName>WandEDemo</CompanyName>\n\t\t<LastModifiedBy>marketing</LastModifiedBy>\n\t\t<LastModifiedDate>2020-06-16T20:02:19.156Z</LastModifiedDate>\n\t\t<OrderCreateDate>2020-06-16T19:25:04.482Z</OrderCreateDate>\n\t\t<PortinList>\n\t\t\t<PortinOrderId>24686d19-6c8d-4b8e-9e07-59bdb5dd2782</PortinOrderId>\n\t\t\t<PortinOrderId>5795dff2-b9cf-4989-974a-a74e7fa6a756</PortinOrderId>\n\t\t\t<PortinOrderId>b8fc06b5-36d3-4d86-b015-13d9f994960d</PortinOrderId>\n\t\t\t<PortinOrderId>03442cad-61f5-4777-9299-6527bef523ca</PortinOrderId>\n\t\t</PortinList>\n\t\t<ProcessingStatus>IN_PROGRESS</ProcessingStatus>\n\t\t<RequestedFocDate>2020-06-18T16:30:00.000Z</RequestedFocDate>\n\t</BulkPortinResponse>\n\t<BulkPortinResponse>\n\t\t<OrderId>d8a449c5-d3ea-426e-aa6d-a9cf5393df7e</OrderId>\n\t\t<CompanyName>WandEDemo</CompanyName>\n\t\t<LastModifiedBy>marketing</LastModifiedBy>\n\t\t<LastModifiedDate>2020-06-16T18:58:54.638Z</LastModifiedDate>\n\t\t<OrderCreateDate>2020-06-16T17:26:52.542Z</OrderCreateDate>\n\t\t<PortinList>\n\t\t\t<PortinOrderId>dfda81d4-6a06-4cfc-9b6e-aecf373a16cd</PortinOrderId>\n\t\t\t<PortinOrderId>28ce2db3-8ff6-4151-8dc4-487faf19795b</PortinOrderId>\n\t\t\t<PortinOrderId>3cba78e5-93aa-407a-bcf5-6ebd46b60f77</PortinOrderId>\n\t\t\t<PortinOrderId>aa1bd5ae-d3f9-429a-91e4-34ddfe6dba1c</PortinOrderId>\n\t\t</PortinList>\n\t\t<ProcessingStatus>CANCELLED</ProcessingStatus>\n\t\t<RequestedFocDate>2020-06-19T19:00:00.000Z</RequestedFocDate>\n\t</BulkPortinResponse>\n\t<BulkPortinResponse>\n\t\t<OrderId>555e320c-a093-4e9d-97e2-03d822b78aa4</OrderId>\n\t\t<CompanyName>WandEDemo</CompanyName>\n\t\t<LastModifiedBy>marketing</LastModifiedBy>\n\t\t<LastModifiedDate>2020-06-16T16:10:11.406Z</LastModifiedDate>\n\t\t<OrderCreateDate>2020-06-16T15:52:16.607Z</OrderCreateDate>\n\t\t<PortinList>\n\t\t\t<PortinOrderId>9c01d8d6-24bc-41b3-9afb-4f0b571e0a36</PortinOrderId>\n\t\t\t<PortinOrderId>cb691fcc-fcaf-42bf-ac5d-ed073dc95219</PortinOrderId>\n\t\t\t<PortinOrderId>87abdd51-9aaf-4b0a-8cb6-8f5aaa0a1bb0</PortinOrderId>\n\t\t\t<PortinOrderId>4eeb7bbd-412e-4a53-988e-7190ad5c210f</PortinOrderId>\n\t\t</PortinList>\n\t\t<ProcessingStatus>CANCELLED</ProcessingStatus>\n\t\t<RequestedFocDate>2020-06-18T02:00:00.000Z</RequestedFocDate>\n\t</BulkPortinResponse>\n</BulkPortinResponses>"
                  },
                  "Include query params": {
                    "description": "If the orderDetails query parameter was included with a value of true, the results will look like the following",
                    "value": "<BulkPortinResponses>\n\t<TotalCount>3</TotalCount>\n\t<Links>\n\t\t<first>Link=&lt;https://dashboard.bandwidth.com:443/v1.0/accounts/9900012/bulkPortins?page=1&amp;size=100&amp;orderDate=2020-06-16&amp;orderDetails=true&gt;;rel=\\\"first\\\";</first>\n\t</Links>\n\t<BulkPortinResponse>\n\t\t<accountId>9900012</accountId>\n\t\t<OrderId>7811bc44-9f34-4c5c-97d5-51e666eb982e</OrderId>\n\t\t<OrderType>bulk_port_in</OrderType>\n\t\t<SuppCount>0</SuppCount>\n\t\t<CompanyName>WandEDemo</CompanyName>\n\t\t<CreatedByUser>marketing</CreatedByUser>\n\t\t<LastModifiedBy>marketing</LastModifiedBy>\n\t\t<LastModifiedDate>2020-06-16T20:02:19.156Z</LastModifiedDate>\n\t\t<OrderCreateDate>2020-06-16T19:25:04.482Z</OrderCreateDate>\n\t\t<PeerId>583048</PeerId>\n\t\t<PortinList>\n\t\t\t<PortinOrderId>24686d19-6c8d-4b8e-9e07-59bdb5dd2782</PortinOrderId>\n\t\t\t<PortinOrderId>5795dff2-b9cf-4989-974a-a74e7fa6a756</PortinOrderId>\n\t\t\t<PortinOrderId>b8fc06b5-36d3-4d86-b015-13d9f994960d</PortinOrderId>\n\t\t\t<PortinOrderId>03442cad-61f5-4777-9299-6527bef523ca</PortinOrderId>\n\t\t</PortinList>\n\t\t<ProcessingStatus>IN_PROGRESS</ProcessingStatus>\n\t\t<RequestedFocDate>2020-06-18T16:30:00.000Z</RequestedFocDate>\n\t\t<SiteId>202</SiteId>\n\t</BulkPortinResponse>\n\t<BulkPortinResponse>\n\t\t<accountId>9900012</accountId>\n\t\t<OrderId>d8a449c5-d3ea-426e-aa6d-a9cf5393df7e</OrderId>\n\t\t<OrderType>bulk_port_in</OrderType>\n\t\t<SuppCount>0</SuppCount>\n\t\t<CompanyName>WandEDemo</CompanyName>\n\t\t<CreatedByUser>marketing</CreatedByUser>\n\t\t<LastModifiedBy>marketing</LastModifiedBy>\n\t\t<LastModifiedDate>2020-06-16T18:58:54.638Z</LastModifiedDate>\n\t\t<OrderCreateDate>2020-06-16T17:26:52.542Z</OrderCreateDate>\n\t\t<PeerId>566974</PeerId>\n\t\t<PortinList>\n\t\t\t<PortinOrderId>dfda81d4-6a06-4cfc-9b6e-aecf373a16cd</PortinOrderId>\n\t\t\t<PortinOrderId>28ce2db3-8ff6-4151-8dc4-487faf19795b</PortinOrderId>\n\t\t\t<PortinOrderId>3cba78e5-93aa-407a-bcf5-6ebd46b60f77</PortinOrderId>\n\t\t\t<PortinOrderId>aa1bd5ae-d3f9-429a-91e4-34ddfe6dba1c</PortinOrderId>\n\t\t</PortinList>\n\t\t<ProcessingStatus>CANCELLED</ProcessingStatus>\n\t\t<RequestedFocDate>2020-06-19T19:00:00.000Z</RequestedFocDate>\n\t\t<SiteId>202</SiteId>\n\t</BulkPortinResponse>\n\t<BulkPortinResponse>\n\t\t<accountId>9900012</accountId>\n\t\t<OrderId>555e320c-a093-4e9d-97e2-03d822b78aa4</OrderId>\n\t\t<OrderType>bulk_port_in</OrderType>\n\t\t<SuppCount>0</SuppCount>\n\t\t<CompanyName>WandEDemo</CompanyName>\n\t\t<CreatedByUser>marketing</CreatedByUser>\n\t\t<LastModifiedBy>marketing</LastModifiedBy>\n\t\t<LastModifiedDate>2020-06-16T16:10:11.406Z</LastModifiedDate>\n\t\t<OrderCreateDate>2020-06-16T15:52:16.607Z</OrderCreateDate>\n\t\t<PeerId>583048</PeerId>\n\t\t<PortinList>\n\t\t\t<PortinOrderId>9c01d8d6-24bc-41b3-9afb-4f0b571e0a36</PortinOrderId>\n\t\t\t<PortinOrderId>cb691fcc-fcaf-42bf-ac5d-ed073dc95219</PortinOrderId>\n\t\t\t<PortinOrderId>87abdd51-9aaf-4b0a-8cb6-8f5aaa0a1bb0</PortinOrderId>\n\t\t\t<PortinOrderId>4eeb7bbd-412e-4a53-988e-7190ad5c210f</PortinOrderId>\n\t\t</PortinList>\n\t\t<ProcessingStatus>CANCELLED</ProcessingStatus>\n\t\t<RequestedFocDate>2020-06-18T02:00:00.000Z</RequestedFocDate>\n\t\t<SiteId>202</SiteId>\n\t</BulkPortinResponse>\n</BulkPortinResponses>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BulkPortinResponses"
                }
              }
            }
          },
          "204": {
            "description": "No results matching the specified query parameters were found.",
            "content": {
              "application/xml": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "<p>Creates a bulk port-in order to be used as a template for a collection of child port-in orders.  The template values will be cascaded to child port-ins that result from decomposing a collection of Telephone Numbers that span carriers, RespOrgs, or have attributes that drive the decomposition into a number of individual port-in orders.<p></p> Upon a successfully-submitted payload, the order will have a status of \"DRAFT\", denoting that further modification to the template is expected.  For example, the next step is to use the /tnList endpoint to add a collection of telephone numbers to the bulk port-in order. The only valid value for the ProcessingStatus element in a POST is 'DRAFT', which is the default value. All parameters except for the URL parameter \"accountId\" are optional in the bulk port-in, although the rules for individual child port-ins described in the <a href='/apis/numbers/#operation/CreatePortin'>POST /portins</a> API still apply to the child port-ins that make up the bulk port-in. Enforcement of required fields in the child port-ins occurs when the bulk port-in is submitted (i.e. changed from a DRAFT status to IN_PROGRESS). Enforcement of required fields in the child port-ins occurs when the bulk port-in is submitted (i.e. changed from a DRAFT status to IN_PROGRESS). </p><p>Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a></p>",
        "operationId": "CreateBulkPortin",
        "summary": "Create bulk port-in order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n<BulkPortin> \n\t<CustomerOrderId>Order Id for all child orders</CustomerOrderId> \n\t<RequestedFocDate>2021-06-30Z</RequestedFocDate>\n\t<SiteId>14020</SiteId> \n\t<PeerId>521434</PeerId>\n</BulkPortin>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/BulkPortinRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created with the order ID specified in the response payload\nand in the Location header.  Note that it is possible to create an order that\nhas errors in it.  Very little screening is done, because all fields are\noptional and very little validation is done other than simple syntax checking.\nThe expectation is that the child orders will be updated using the /portins\nAPI prior to submission to fill in port-specific information (e.g. the LOA\nauthorizing person, or subscriber data).",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortinResponse>\n    <BulkPortin>\n        <CustomerOrderId>Order Id for all child orders</CustomerOrderId>\n        <RequestedFocDate>2021-06-30T00:00:00.000Z</RequestedFocDate>\n        <SiteId>14020</SiteId>\n        <PeerId>521434</PeerId>\n        <ProcessingStatus>DRAFT</ProcessingStatus>\n        <AccountId>9900572</AccountId>\n        <CreatedByUser>testuser</CreatedByUser>\n        <LastModifiedBy>testuser</LastModifiedBy>\n        <LastModifiedDate>2021-06-21T19:42:34.760Z</LastModifiedDate>\n        <OrderCreateDate>2021-06-21T19:42:34.760Z</OrderCreateDate>\n        <OrderId>3233e096-1ce5-4a58-ba77-02a5ee1c0ef4</OrderId>\n    </BulkPortin>\n</BulkPortinResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BulkPortinResponse"
                }
              }
            }
          },
          "400": {
            "description": "<p>Order could not be processed and no order ID was created.</p>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortinResponse>\n    <ResponseStatus>\n        <ErrorCode>7333</ErrorCode>\n        <Description>Porting is not enabled on the account.</Description>\n    </ResponseStatus>\n</BulkPortinResponse>\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkPortins/{orderid}": {
      "get": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "Retrieves information associated with the bulk port-in order specified by the orderId URI parameter. Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a>",
        "operationId": "RetrieveBulkOrder",
        "summary": "Retrieve bulk port-in order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortinResponse> \n\t<BulkPortin> \n\t\t<CustomerOrderId>Order Id for all child orders</CustomerOrderId>\n\t\t<RequestedFocDate>2021-06-30T00:00:00.000Z</RequestedFocDate>\n\t\t<SiteId>14020</SiteId> \n\t\t<PeerId>521434</PeerId> \n\t\t<ProcessingStatus>DRAFT</ProcessingStatus> \n\t\t<AccountId>9900572</AccountId> \n\t\t<CreatedByUser>testuser</CreatedByUser> \n\t\t<LastModifiedBy>testuser</LastModifiedBy> \n\t\t<LastModifiedDate>2021-06-21T19:42:34.760Z</LastModifiedDate>\n\t\t<OrderCreateDate>2021-06-21T19:42:34.760Z</OrderCreateDate> \n\t</BulkPortin> \n</BulkPortinResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BulkPortinResponse"
                }
              }
            }
          },
          "404": {
            "description": "The indicated Bulk Port-in order could not be found."
          }
        }
      },
      "put": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "The PUT operation is available only for bulk port-in orders that are not yet associated with subtending orders. Since this only occurs for bulk port-in orders that are in one of the draft states, there are few restrictions on what may be included. As with the POST, any data associated with the bulk port-in will cascade to subtending orders when they are created. (Subtending orders are created after telephone numbers are added to the bulk port-in using the /tnList endpoint.) The PUT completely replaces the existing Bulk Portin order with the payload of the PUT. Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a>.",
        "operationId": "PutBulkOrder",
        "summary": "Update bulk port-in order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortin>\n    <CustomerOrderId>Order Id for all child orders</CustomerOrderId>\n    <RequestedFocDate>2021-06-30Z</RequestedFocDate>\n    <Subscriber>\n        <SubscriberType>BUSINESS</SubscriberType>\n        <BusinessName>Goina B Rich</BusinessName>\n        <ServiceAddress>\n            <HouseNumber>123</HouseNumber>\n            <StreetName>Maple Ave</StreetName>\n            <City>Hometown</City>\n            <StateCode>MO</StateCode>\n            <Zip>54923</Zip>\n        </ServiceAddress>\n    </Subscriber>\n    <SiteId>14020</SiteId>\n    <PeerId>521434</PeerId>\n</BulkPortin>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/BulkPortinRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortinResponse> \n\t<BulkPortin> \n\t\t<CustomerOrderId>Order Id for all child orders</CustomerOrderId> \n\t\t<RequestedFocDate>2021-06-30T00:00:00.000Z</RequestedFocDate> \n\t\t<Subscriber> \n\t\t\t<SubscriberType>BUSINESS</SubscriberType> \n\t\t\t<BusinessName>Goina B Rich</BusinessName> \n\t\t\t<ServiceAddress> \n\t\t\t\t<HouseNumber>123</HouseNumber> \n\t\t\t\t<StreetName>Maple Ave</StreetName> \n\t\t\t\t<City>Hometown</City> \n\t\t\t\t<StateCode>MO</StateCode> \n\t\t\t\t<Zip>54923</Zip> \n\t\t\t\t<Country>United States</Country> \n\t\t\t\t<AddressType>Service</AddressType> \n\t\t\t</ServiceAddress> \n\t\t</Subscriber> \n\t\t<SiteId>14020</SiteId> \n\t\t<PeerId>521434</PeerId> \n\t\t<ProcessingStatus>DRAFT</ProcessingStatus> \n\t\t<AccountId>9900572</AccountId> \n\t\t<CreatedByUser>testuser</CreatedByUser> \n\t\t<LastModifiedBy>testuser</LastModifiedBy> \n\t\t<LastModifiedDate>2021-06-21T20:24:36.616Z</LastModifiedDate>\n\t\t<OrderCreateDate>2021-06-21T19:42:34.760Z</OrderCreateDate> \n\t</BulkPortin> \n</BulkPortinResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortinResponse>\n    <ResponseStatus>\n        <Description>Please check your input parameters.</Description>\n    </ResponseStatus>\n    <PortinListErrors>\n        <PortinErrors>\n            <PortinOrderId>c358cb90-f1e6-4d72-92be-435411d50609</PortinOrderId>\n            <Errors>\n                <Error>\n                    <Description>The order cannot be modified because the order is awaiting a response from the losing carrier</Description>\n                    <ErrorCode>7300</ErrorCode>\n                </Error>\n            </Errors>\n        </PortinErrors>\n        <PortinErrors>\n            <PortinOrderId>cb57e5a0-c70d-4f24-a450-bab62e908cc6</PortinOrderId>\n            <Errors>\n                <Error>\n                    <Description>Unable to modify processing status for AUTOMATED port type</Description>\n                    <ErrorCode>7367</ErrorCode>\n                </Error>\n            </Errors>\n        </PortinErrors>\n    </PortinListErrors>\n</BulkPortinResponse>\n"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The indicated Bulk Port-in order could not be found."
          }
        }
      },
      "delete": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "Delete a bulk port-in order with child port-ins.  Deleting a bulk port-in is allowed for 'DRAFT' state only.  Deleting a bulk port-in will delete all DRAFT child port-ins associated with the bulk port-in.  When the bulk port-in is deleted, any child port-in orders that are not in a draft status are dissociated from the bulk port-in, but not deleted. Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a>",
        "operationId": "DeleteBulkOrder",
        "summary": "Delete bulk port-in order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bulk Port-in order has been successfully deleted."
          },
          "400": {
            "description": "Bad request. Bulk Port-in order not in DRAFT state.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortinResponse>\n    <BulkPortin>\n        <Status>\n            <Code>7709</Code>\n            <Description>Bulk port-in with id d88763f4-8914-4301-bdca-6f409e4cd811 cannot be deleted since it is not in\n                draft status.\n            </Description>\n        </Status>\n    </BulkPortin>\n</BulkPortinResponse>\n"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The indicated Bulk Port-in order could not be found."
          }
        }
      },
      "patch": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "<p>It is possible to change (\"SUPP\" in LNP terms) an existing Bulk Port-in order.  This is done via a PUT or PATCH on the existing order-id.  Since the Bulk Port-in\n  order acts as a template for port-in orders in DRAFT status, any record can be changed at any time.  The PATCH replaces elements of the referenced Bulk Portin order, but it replaces only the records included in the request payload.  Other elements will remain untouched.</p><p>Changing the fields in a Bulk Port-in order causes the system to reapply all changed values to the child port-ins contained in the list of subtending port-in orders. Note that if the port-in orders contained within the Bulk Port are in DRAFT state, any field can be modified. If any child port-in order in the Bulk Port-in is in any other state, normal SUPP rules apply, and the list of appropriate fields is smaller.</p><p>Changing the ProcessingStatus to 'IN_PROGRESS' causes all child port-ins to begin processing. This is only valid if child port-ins exist for the bulk port-in.</p> <p>Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a></p>",
        "operationId": "PatchBulkOrder",
        "summary": "Patch bulk port-in order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "Simple response": {
                  "value": "<BulkPortin>\n\t<CustomerOrderId>Order Id for all child orders</CustomerOrderId>\n\t<RequestedFocDate>2021-06-30Z</RequestedFocDate>\n\t<SiteId>14020</SiteId>\n\t<PeerId>521434</PeerId>\n</BulkPortin>"
                },
                "In progress": {
                  "value": "<BulkPortin>\n\t<ProcessingStatus>IN_PROGRESS</ProcessingStatus>\n</BulkPortin>"
                },
                "Updated requested FOC date": {
                  "value": "<BulkPortin>\n\t<RequestedFocDate>2021-06-22T11:30:00-04:00</RequestedFocDate>\n</BulkPortin>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/BulkPortinPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortinResponse>\n\t<BulkPortin>\n\t\t<CustomerOrderId>Order Id for all child orders</CustomerOrderId>\n\t\t<RequestedFocDate>2021-06-30T00:00:00.000Z</RequestedFocDate>\n\t\t<Subscriber>\n\t\t\t<SubscriberType>BUSINESS</SubscriberType>\n\t\t\t<BusinessName>Goina B Rich</BusinessName>\n\t\t\t<ServiceAddress>\n\t\t\t\t<HouseNumber>123</HouseNumber>\n\t\t\t\t<StreetName>Maple Ave</StreetName>\n\t\t\t\t<City>Hometown</City>\n\t\t\t\t<StateCode>MO</StateCode>\n\t\t\t\t<Zip>54923</Zip>\n\t\t\t\t<Country>United States</Country>\n\t\t\t\t<AddressType>Service</AddressType>\n\t\t\t</ServiceAddress>\n\t\t</Subscriber>\n\t\t<SiteId>14020</SiteId>\n\t\t<PeerId>521434</PeerId>\n\t\t<ProcessingStatus>DRAFT</ProcessingStatus>\n\t\t<AccountId>9900572</AccountId>\n\t\t<CreatedByUser>testuser</CreatedByUser>\n\t\t<LastModifiedBy>testuser</LastModifiedBy>\n\t\t<LastModifiedDate>2021-06-22T14:25:24.487Z</LastModifiedDate>\n\t\t<OrderCreateDate>2021-06-21T19:42:34.760Z</OrderCreateDate>\n\t</BulkPortin>\n</BulkPortinResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortinResponse>\n    <ResponseStatus>\n        <Description>Please check your input parameters.</Description>\n    </ResponseStatus>\n    <PortinListErrors>\n        <PortinErrors>\n            <PortinOrderId>c358cb90-f1e6-4d72-92be-435411d50609</PortinOrderId>\n            <Errors>\n                <Error>\n                    <Description>The order cannot be modified because the order is awaiting a response from the losing carrier</Description>\n                    <ErrorCode>7300</ErrorCode>\n                </Error>\n            </Errors>\n        </PortinErrors>\n        <PortinErrors>\n            <PortinOrderId>cb57e5a0-c70d-4f24-a450-bab62e908cc6</PortinOrderId>\n            <Errors>\n                <Error>\n                    <Description>Unable to modify processing status for AUTOMATED port type</Description>\n                    <ErrorCode>7367</ErrorCode>\n                </Error>\n            </Errors>\n        </PortinErrors>\n    </PortinListErrors>\n</BulkPortinResponse>\n"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The indicated Bulk Port-in order could not be found."
          }
        }
      }
    },
    "/accounts/{accountId}/bulkPortins/{orderid}/portinList": {
      "get": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "Retrieves a list of Port-in Orders that are all associated with the identified Bulk Port-in.   This response is not paginated due to its inherently limited size. Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a>",
        "operationId": "ListBulkChildOrders",
        "summary": "List bulk port-in child orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload. It is possible to receive an empty PortinList if there are no child port-in orders associated with the bulk port-in.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<PortinListResponse>\n    <PortinList>\n        <PortinOrderId>[portin order id]</PortinOrderId>\n        <PortinOrderId>[portin order id]</PortinOrderId>\n        <!-- SNIP -->\n        <PortinOrderId>[portin order id]</PortinOrderId>\n        <PortinOrderId>[portin order id]</PortinOrderId>\n    </PortinList>\n    <Errors>\n        <Error>\n            <ErrorCode>nnnnn</ErrorCode>\n            <portinOrderId>[portin order id]</portinOrderId>\n            <Description>string</Description>\n        </Error>\n        <Error>\n            <ErrorCode>nnnnn</ErrorCode>\n            <portinOrderId>[portin order id]</portinOrderId>\n            <Description>string</Description>\n        </Error>\n    </Errors>\n</PortinListResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PortinListResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "<p>A PUT on a PortinList resource will cause replacement of the list of port-in orders associated with the specified bulk port-in.</p><p>This PUT will completely replace the existing list of port-in orders associated with the bulk port-in.  If all port-in orders in the list are not valid, the PUT request will fail, due to the potential for losing the port-in to bulk port-in relationships.</p><p>Only port-in orders in a draft status may be associated with a bulk port-in order.  And port-in orders may only be added to a bulk port-in order while that bulk port-in order is still in a draft state.</p><p>Child port-in orders may be dissociated from the bulk port-in at any time. </p> <p>Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a></p>",
        "operationId": "UpdateBulkChildList",
        "summary": "Update list of bulk port-in child orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<PortinList>\n    <PortinOrderId>[portin order id]</PortinOrderId>\n    <PortinOrderId>[portin order id]</PortinOrderId>\n    <!-- SNIP -->\n    <PortinOrderId>[portin order id]</PortinOrderId>\n    <PortinOrderId>[portin order id]</PortinOrderId>\n</PortinList>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/PortinList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The list was replaced successfully and no errors were detected.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<PortinListResponse>\n  <PortinList>\n    <PortinOrderId>33d387f8-d60b-4e20-9c31-5b68a4ef4b0a</PortinOrderId>\n    <PortinOrderId>0021cde5-99d7-4be3-afcd-a8803374921a</PortinOrderId>\n    <PortinOrderId>7b0e5e38-ce93-4d29-8882-d3b5c4a37e56</PortinOrderId>\n    <PortinOrderId>c6512b78-d44f-419f-9836-eaae408e3149</PortinOrderId>\n  </PortinList>\n</PortinListResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PortinListResponse"
                }
              }
            }
          },
          "400": {
            "description": "There was an error - one or more of the port-in orders was invalid.  The response payload will indicate the errors that were detected, and no changes will be made to the list of portin orders associated with the bulk order."
          }
        }
      }
    },
    "/accounts/{accountId}/bulkPortins/{orderid}/notes": {
      "get": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "Retrieve all notes associated with the order. Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a>",
        "operationId": "ListBulkNotes",
        "summary": "List bulk port-in order notes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - there are Notes associated with the order, and they have been returned in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Notes>\n    <Note>\n        <Id>87037</Id>\n        <UserId>jbm</UserId>\n        <Description>This is a test note</Description>\n        <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>\n    </Note>\n    <Note>\n        <Id>87039</Id>\n        <UserId>smckinnon</UserId>\n        <Description>This is a second test note</Description>\n        <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>\n    </Note>\n</Notes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Notes"
                }
              }
            }
          },
          "204": {
            "description": "No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier"
          }
        }
      },
      "post": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "Updates the Notes resource by adding a note. Adding a note to a port-in order causes a notification to be sent to Bandwidth Operations, so that they may assist as necessary. A note may be up to 500 characters in length. Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a>",
        "operationId": "CreateBulkNote",
        "summary": "Create bulk port-in order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Note> \n\t<UserId>userId</UserId>      \n\t<!-- note the userId must match the logged-in user --> \n\t<Description>note text</Description> \n</Note>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned"
          },
          "400": {
            "description": "Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkPortins/{orderid}/notes/{noteId}": {
      "put": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "Update a specified note.  Notes may only be updated, not deleted. Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a>",
        "operationId": "UpdateBulkNote",
        "summary": "Update bulk port-in order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noteId",
            "description": "Note ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Note> \n\t<UserId>userId</UserId> \n\t<Description>note text</Description> \n</Note>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - note has been updated.  No body is returned"
          },
          "400": {
            "description": "Bad Request - the note has not been updated because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkPortins/{orderid}/tnList": {
      "get": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "<p>The information returned in the GET /tnList response payload depends on the ProcessingStatus of the bulk port-in order. See the Responses tab for examples of each response payload.</p><table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\">\n        <tbody>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        <strong>ProcessingStatus</strong>\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p>\n                        <strong>Information Returned</strong>\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        DRAFT\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"center\">\n                        In this state, no tnList has been provided, so the response\n                        includes empty portable and non-portable telephone number lists.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        VALIDATE_DRAFT_TNS\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"center\">\n                        In this state, validation of the tnList is still in progress,\n                        so the response includes all of the tnList telephone numbers\n                        in a 'not validated' list.  This is a temporary state until\n                        the validation completes.  Validation takes longer when toll\n                        free numbers are included in the tnList.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        VALID_DRAFT_TNS\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"center\">\n                        In this state, all of the telephone numbers in the tnList have\n                        been determined to be portable.  The response payload includes\n                        a list of the child port-in orders and shows which telephone\n                        numbers are assigned to each child port-in order.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        INVALID_DRAFT_TNS\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"center\">\n                        In this state, at least one of the telephone numbers in the tnList\n                        has been determined to be non-portable.  The response payload includes\n                        a list of portable numbers (if any) and a list of errors showing which\n                        telephone numbers are non-portable as well as the reasons why they\n                        cannot be ported.  Or, if communication errors prevented us from\n                        determining telephone number portability, those errors will be included.\n                    </p>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n <p>Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a></p>",
        "operationId": "ListBulkTns",
        "summary": "List bulk port-in order tns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "DRAFT state": {
                    "value": "<TnListResponse>\n\t<ProcessingStatus>DRAFT</ProcessingStatus>\n\t<OrderId>33b58246-f27c-4b1d-896d-0acc03b3ad8a</OrderId>\n\t<PortableTnList/>\n</TnListResponse>"
                  },
                  "VALIDATE_DRAFT_TNS state": {
                    "value": "<TnListResponse>\n\t<ProcessingStatus>VALIDATE_DRAFT_TNS</ProcessingStatus>\n\t<OrderId>33b58246-f27c-4b1d-896d-0acc03b3ad8a</OrderId>\n\t<NotValidatedTnList>\n\t\t<TN>8772397726</TN>\n\t\t<TN>8006148733</TN>\n\t\t<TN>4047221089</TN>\n\t\t<TN>7013498774</TN>\n\t</NotValidatedTnList>\n</TnListResponse>"
                  },
                  "VALID_DRAFT_TNS state": {
                    "value": "<TnListResponse>\n\t<ProcessingStatus>VALID_DRAFT_TNS</ProcessingStatus>\n\t<OrderId>33b58246-f27c-4b1d-896d-0acc03b3ad8a</OrderId>\n\t<ChildPortinOrderList>\n\t\t<ChildPortinOrder>\n\t\t\t<OrderId>10f48fec-9db0-4f68-8bcb-c8a6a230a2d9</OrderId>\n\t\t\t<TnList>\n\t\t\t\t<Tn>8772397726</Tn>\n\t\t\t</TnList>\n\t\t</ChildPortinOrder>\n\t\t<ChildPortinOrder>\n\t\t\t<OrderId>059cf2d9-a004-4a88-866c-082c97fb7d5f</OrderId>\n\t\t\t<TnList>\n\t\t\t\t<Tn>8006148733</Tn>\n\t\t\t</TnList>\n\t\t</ChildPortinOrder>\n\t\t<ChildPortinOrder>\n\t\t\t<OrderId>092815dc-9ced-4d67-a070-a80eb243b914</OrderId>\n\t\t\t<TnList>\n\t\t\t\t<Tn>4047221089</Tn>\n\t\t\t\t<Tn>7013498774</Tn>\n\t\t\t</TnList>\n\t\t</ChildPortinOrder>\n\t</ChildPortinOrderList>\n</TnListResponse>"
                  },
                  "Non-portable INVALID_DRAFT_TNS state": {
                    "value": "<TnListResponse>\n\t<ProcessingStatus>INVALID_DRAFT_TNS</ProcessingStatus>\n\t<OrderId>33b58246-f27c-4b1d-896d-0acc03b3ad8a</OrderId>\n\t<!-- If at least one TN is portable -->\n\t<PortableTnList>\n\t\t<TN>8772397726</TN>\n\t</PortableTnList>\n\t<ChildPortinOrder>\n\t\t<OrderId>10f48fec-9db0-4f68-8bcb-c8a6a230a2d9</OrderId>\n\t\t<TnList>\n\t\t\t<Tn>8772397726</Tn>\n\t\t</TnList>\n\t</ChildPortinOrder>\n\t<ErrorList>\n\t\t<Error>\n\t\t\t<Code>7642</Code>\n\t\t\t<Description>TN list contains at least one toll free number that cannot be ported due to spare status.</Description>\n\t\t\t<TnList>\n\t\t\t\t<Tn>8005587721</Tn>\n\t\t\t</TnList>\n\t\t</Error>\n\t\t<Error>\n\t\t\t<Code>7643</Code>\n\t\t\t<Description>TN list contains at least one toll free number that cannot be ported due to unavailable status.</Description>\n\t\t\t<TnList>\n\t\t\t\t<Tn>7225098835</Tn>\n\t\t\t</TnList>\n\t\t</Error>\n\t</ErrorList>\n</TnListResponse>"
                  },
                  "Vendor error INVALID_DRAFT_TNS state": {
                    "value": "<TnListResponse>\n\t<ProcessingStatus>INVALID_DRAFT_TNS</ProcessingStatus>\n\t<OrderId>33b58246-f27c-4b1d-896d-0acc03b3ad8a</OrderId>\n\t<PortableTnList/>\n\t<ErrorList>\n\t\t<Error>\n\t\t\t<Code>7628</Code>\n\t\t\t<Description>An unexpected Batch Number Query response was received from our porting vendor. Please contact Bandwidth for assistance with this error.</Description>\n\t\t\t<TnList>\n\t\t\t\t<Tn>8772397726</Tn>\n\t\t\t\t<Tn>8006148733</Tn>\n\t\t\t\t<Tn>4047221089</Tn>\n\t\t\t\t<Tn>7013498774</Tn>\n\t\t\t</TnList>\n\t\t</Error>\n\t</ErrorList>\n</TnListResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnListResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "<p>This operation is used to add telephone numbers to a draft bulk port-in order.\n  The telephone numbers may be a mix of toll free and non-toll free.  Once the\n  telephone numbers are added, they will be checked for portability, and if\n  portable, decomposed into individual child port-in orders.  Both the bulk\n  port-in order and the child port-in orders remain in draft status until you\n  explicitly submit them.</p>\n\n<p>After submitting a tnList with the PUT operation, you will need to poll for\n  completion of the validation and decomposition using the GET /tnList operation\n  or the GET /bulkPortins/orderId operation (both include the order ProcessingStatus).\n  The basic ProcessingStatus flow is as follows:</p>\n\n<ul><li>On submission of the tnList, the bulk port-in order transitions from DRAFT\n  status to VALIDATE_DRAFT_TNS.  The order will remain in this state until validation\n  is complete.  For a tnList that does not contain any toll free telephone numbers, the\n  validation step is very fast.  When the tnList does contain toll free telephone\n  numbers, the time it takes to validate the toll free numbers is roughly proportional\n  to the number of toll free telephone numbers.  If you PUT a new tnList while validation\n  is in progress for a previous tnList, the validation of the previous tnList will be\n  abandoned and replaced by validation of the new tnList.</li>\n  <li>If all of the telephone numbers in the tnList are portable, the bulk port-in\n    transitions to the VALID_DRAFT_TNS state.  At this point, child port-in orders have\n    been created in DRAFT status to meet requirements about which telephone numbers can\n    be ported together in the same port-in order.  The bulk port-in will remain in this\n    state until you use the PATCH operation on the bulk port-in order to change the\n    ProcessingStatus to IN_PROGRESS.  If you PUT an updated tnList, all draft child\n    port-in orders are removed, and the validation process begins again with the new\n    tnList.</li>\n  <li>If at least one of the telephone numbers in the tnList is not portable, the bulk\n    port-in transitions to the INVALID_DRAFT_TNS state.  When this happens, no child\n    port-in orders are created.  You can use the GET operation on /tnList to see reasons\n    why telephone numbers are non-portable.  You’ll need to update the tnList to remove\n    non-portable telephone numbers and PUT the tnList again to restart the validation\n    step.  The goal is to get to the VALID_DRAFT_TNS state, from which you can submit\n    the bulk port-in order.</li></ul>\n <p>Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a></p>",
        "operationId": "UpdateBulkTnList",
        "summary": "Update bulk port-in order tn list",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnList>\n    <TN>[telephone number]</TN>\n    <TN>[telephone number]</TN>\n    <!-- SNIP -->\n    <TN>[telephone number]</TN>\n    <TN>[telephone number]</TN>\n</TnList>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/TnList"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The request to validate telephone numbers and create child port-in orders has been accepted.  Use the GET /tnList to check for status updates on the validation.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnListResponse>\n\t<OrderId>ac2c8ab2-7a63-44da-a307-edcabe0b6c81</OrderId>\n\t<ProcessingStatus>VALIDATE_DRAFT_TNS</ProcessingStatus>\n</TnListResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnListPutResponse"
                }
              }
            }
          },
          "400": {
            "description": "The TN List payload was malformed, and the list could not be processed.  The response payload includes information about why the request failed.  If the request is entirely malformed (e.g. unrecognized elements), the 400 response may have no payload.</p><p>In the example below, the TN values include the country code prefix.The TN values should be 10-digit North American telephone numbers.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnListResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>7339</ErrorCode>\n\t\t<Description>Telephone numbers '[15032241124, 18632167633, 19133648872, 18882889734]' are not valid</Description>\n\t</ResponseStatus>\n\t<OrderId>ac2c8ab2-7a63-44da-a307-edcabe0b6c81</OrderId>\n\t<ProcessingStatus>INVALID_DRAFT_TNS</ProcessingStatus>\n</TnListResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnListPutErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkPortins/{orderid}/history": {
      "get": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "Retrieves the history of the specified bulk port-in order. Obtaining history for a draft bulk port-in is not supported.</p><p>Please visit <a href='/docs/numbers/guides/porting/createBulkPortins'>Guides and Tutorials</a></p>",
        "operationId": "GetBulkHistory",
        "summary": "Retrieve bulk port-in order history",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The history has been successfully retrieved and displayed in the payload. History is not supported for bulk port-ins in draft status.",
            "content": {
              "application/xml": {
                "examples": {
                  "Simple response": {
                    "value": "<OrderHistoryWrapper>\n    <OrderHistory>\n        <OrderDate>2018-06-12T13:44:47.604Z</OrderDate>\n        <Note>Draft order has been created/updated</Note>\n        <Author>systemUser</Author>\n        <Status>DRAFT</Status>\n    </OrderHistory>\n    <OrderHistory>\n        <OrderDate>2018-06-12T13:49:02.328Z</OrderDate>\n        <Note>Draft order has been created/updated</Note>\n        <Author>systemUser</Author>\n        <Status>DRAFT</Status>\n        <Difference>SiteId : 0 --&gt; 743</Difference>\n    </OrderHistory>\n    <OrderHistory>\n        <OrderDate>2018-06-12T13:49:46.350Z</OrderDate>\n        <Note>Order has been submitted/updated</Note>\n        <Author>systemUser</Author>\n        <Status>IN_PROGRESS</Status>\n    </OrderHistory>\n    <OrderHistory>\n        <OrderDate>2018-06-12T13:51:13.855Z</OrderDate>\n        <Note>Order has been submitted/updated</Note>\n        <Author>systemUser</Author>\n        <Status>IN_PROGRESS</Status>\n        <Difference>SubscriberType : \"\" --&gt; residential</Difference>\n    </OrderHistory>\n</OrderHistoryWrapper>"
                  },
                  "Bulk port-in in DRAFT state": {
                    "description": "The following response will be returned when the bulk port-in is in DRAFT state",
                    "value": "<OrderHistoryWrapper>\n    <IrisStatus>\n        <Code>7710</Code>\n        <Description>History is not supported for bulk port-ins or individual port-ins in draft status.</Description>\n    </IrisStatus>\n</OrderHistoryWrapper>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the order id does not exist in the system",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<BulkPortInHistoryResponse>\n    <ResponseStatus>\n        <Description>The resource does not exist</Description>\n    </ResponseStatus>\n</BulkPortInHistoryResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/BulkPortInHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/bulkPortins/{orderid}/loas": {
      "get": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "Retrieves the list of the loa (and other) files associated with the order.",
        "operationId": "ListBulkLoas",
        "summary": "List bulk port-in order loa files",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadata",
            "description": "if true it will return meta-data associated with the file used to describe the file.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The list of all files is being returned.  This response includes the case where the list is empty.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fileListResponse>\n    <fileCount>1</fileCount>\n    <fileData>\n        <FileName>eeceff88-c11e-4bd8-86f3-8e3482888500-1624044440058.pdf</FileName>\n        <FileMetaData>\n            <DocumentType>LOA</DocumentType>\n        </FileMetaData>\n    </fileData>\n    <resultCode>0</resultCode>\n    <resultMessage>LOA file list successfully returned</resultMessage>\n</fileListResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/fileListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bulk Port-In"
        ],
        "description": "<p>POSTing to the /loas resource will enable the upload of the file.  The key attribute to the POST is ensuring that the headers are correctly set to support the file upload.<br>\nQuery parameter or header documentType can be used to specify type of document on upload. Possible values are: LOA, INVOICE, CSR, OTHER.\n    <br>\nHeader settings typical of a valid upload are...<br>\n    <br>\n<code>\nHost: dashboard.bandwidth.com <br>\nAuthorization: Basic xxxxxxxxxxxxxxxxxxxx== <br>\nContent-Type: application/pdf <br>\ndocumentType: [LOA | INVOICE | CSR | OTHER] <br>\nAccept: <em>/</em> <br>\nAccept-Encoding: gzip, deflate <br>\nAccept-Language: en-US,en;q=0.8 <br>\nCache-Control: no-cache <br>\n    <br>\n----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>\nContent-Disposition: form-data; name=\"george\"; filename=\"Bandwidth Dashboard.pdf\" <br>\nContent-Type: application/pdf <br>\n    <br>\n    <br>\n----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>\n</code></p>",
        "operationId": "UploadBulkLoa",
        "summary": "Upload bulk port-in order loa file",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentType",
            "description": "This query parameter allows you to include the document type metadata at the same\ntime you upload the file.  The value may be one of&#58; LOA, INVOICE, CSR, or OTHER.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "documentType=LOA"
          }
        ],
        "responses": {
          "201": {
            "description": "The 201 response indicates the successful creation of a file resource containing the uploaded content.\nThe response header will include a link to the created file as a GET on the identified resource.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fileUploadResponse>\n    <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>\n    <resultCode>0</resultCode>\n    <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage>\n</fileUploadResponse>\n"
                  }
                }
              }
            }
          },
          "400": {
            "description": "A 400 indicates that the requested upload failed."
          }
        },
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/csrs": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the csr orders for the given account ID.\nPlease visit <a href='/docs/numbers/guides/porting/csrLookup'>Guides and Tutorials</a>",
        "summary": "List CSR orders",
        "operationId": "ReadCsrOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "modifiedDateFrom",
            "description": "The earliest date that the order was last modified.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-08-05 00:00:00+00:00"
          },
          {
            "name": "modifiedDateTo",
            "description": "The latest date that the order was last modified. If no modifiedDateTo is specified when a modifiedDateFrom is specified then 'now' will be presumed to be the modifiedDateTo.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-08-05 00:00:00+00:00"
          },
          {
            "name": "page",
            "description": "The CSR order id corresponding to the page that you want to start from. \"1\" is used as a convention for the first CSR order for the account. Defaults to 1, if not provided.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "ca8065d1-ec1a-43da-af40-1dcee43becb5"
          },
          {
            "name": "size",
            "description": "The maximum number of results to retrieve",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 30
          },
          {
            "name": "status",
            "description": "Displays the CSR orders with a given order status.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "complete"
          }
        ],
        "responses": {
          "200": {
            "description": "The response will include all CSR related data.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<CsrResponses>\n    <TotalCount>3</TotalCount>\n    <Links>\n        <first>Link=&lt;https://dashboard.bandwidth.com/api/accounts/1/csrs?page=1&amp;size=3&amp;shortPayload=true&gt;;rel=\"first\";</first>\n    </Links>\n    <CsrResponse>\n        <CustomerOrderId>someValue</CustomerOrderId>\n        <LastModifiedBy>systemUser</LastModifiedBy>\n        <OrderCreateDate>2019-10-25T09:51:17Z</OrderCreateDate>\n        <AccountId>1</AccountId>\n        <OrderId>a2f55ebe-782a-4242-983b-6ae6cfa97833</OrderId>\n        <LastModifiedDate>2019-10-25T12:51:22.139Z</LastModifiedDate>\n        <Status>COMPLETE</Status>\n        <AccountNumber>987654321</AccountNumber>\n        <AccountTelephoneNumber>9196194444</AccountTelephoneNumber>\n        <EndUserName>bandwidthGuy</EndUserName>\n        <AuthorizingUserName>importantAuthGuy</AuthorizingUserName>\n        <CustomerCode>123</CustomerCode>\n        <EndUserPIN>12345</EndUserPIN>\n        <AddressLine1>900 Main Campus Dr</AddressLine1>\n        <City>Raleigh</City>\n        <State>NC</State>\n        <ZIPCode>27612</ZIPCode>\n       <TypeOfService>residential</TypeOfService>\n       <CsrData>\n        <AccountNumber>123456789</AccountNumber>\n        <CustomerName>JOHN SMITH</CustomerName>\n        <ServiceAddress>\n            <UnparsedAddress>900 MAIN CAMPUS DR</UnparsedAddress>\n            <City>RALEIGH</City>\n            <State>NC</State>\n            <Zip>27616</Zip>\n        </ServiceAddress>\n        <WorkingTelephoneNumber>9196191211</WorkingTelephoneNumber>\n        <WorkingTelephoneNumbersOnAccount>\n            <TelephoneNumber>9196191211</TelephoneNumber>\n        </WorkingTelephoneNumbersOnAccount>\n    </CsrData>\n    </CsrResponse>\n    <CsrResponse>\n        <!-- SNIP -->\n    </CsrResponse>\n    <CsrResponse>\n        <!-- SNIP -->\n    </CsrResponse>\n    <!-- SNIP -->\n</CsrResponses>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CsrResponses"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "Creates the csr order",
        "summary": "Create CSR order",
        "operationId": "CreateCsrOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Csr>\n\t<WorkingOrBillingTelephoneNumber>9196191211</WorkingOrBillingTelephoneNumber>\n\t<WorkingTelephoneNumber>9196191211</WorkingTelephoneNumber>\n\t<BillingTelephoneNumber>9196191211</BillingTelephoneNumber>\n\t<CustomerName>name</CustomerName>\n\t<AuthorizingPersonName>name</AuthorizingPersonName>\n\t<AccountNumber>987654321</AccountNumber>\n\t<WorkingTelephoneNumbersOnAccount>\n\t\t<TelephoneNumber>9196191211</TelephoneNumber>\n\t</WorkingTelephoneNumbersOnAccount>\n\t<CsrServiceAddress>\n\t\t<HouseNumber>123</HouseNumber>\n\t\t<StreetName>Maple Ave</StreetName>\n\t\t<City>Hometown</City>\n\t\t<StateCode>MO</StateCode>\n\t\t<Zip>54923</Zip>\n\t\t<Country>United States</Country>\n\t\t<AddressType>Service</AddressType>\n\t</CsrServiceAddress>\n\t<AccountTelephoneNumber>9196194444</AccountTelephoneNumber>\n\t<EndUserName>bandwidthGuy</EndUserName>\n\t<AuthorizingUserName>authorizingUserName</AuthorizingUserName>\n\t<CustomerCode>123</CustomerCode>\n\t<EndUserPIN>12345</EndUserPIN>\n\t<EndUserPassword>password</EndUserPassword>\n\t<AddressLine1>900 Main Campus Dr</AddressLine1>\n\t<City>Raleigh</City>\n\t<State>NC</State>\n\t<ZIPCode>27612</ZIPCode>\n\t<TypeOfService>residential</TypeOfService>\n\t<Status>residential</Status>\n</Csr>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Csr"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<CsrResponse>\n\t<OrderId>93118edd-9874-41b6-89a3-d8c783fe83cf</OrderId>\n\t<Status>RECEIVED</Status>\n</CsrResponse>"
                  }
                },
                "schema": {
                  "title": "CsrResponse",
                  "type": "object",
                  "properties": {
                    "OrderId": {
                      "type": "string"
                    },
                    "Status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Response - there were errors in evaluating the body of the request",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<CsrOrderResponse>\n    <Errors>\n        <Error>\n            <Code>54321</Code>\n            <Description>Some error description</Description>\n        </Error>\n    </Errors>\n</CsrOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CsrErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/csrs/{orderId}": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the csr order for the given account ID by order id</a>",
        "summary": "Get CSR order",
        "operationId": "ReadCsrOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The response will include all CSR related data.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <CsrResponse>\n        <CustomerOrderId>someValue</CustomerOrderId>\n        <LastModifiedBy>systemUser</LastModifiedBy>\n        <OrderCreateDate>2019-10-25T09:51:17Z</OrderCreateDate>\n        <AccountId>1</AccountId>\n        <OrderId>a2f55ebe-782a-4242-983b-6ae6cfa97833</OrderId>\n        <LastModifiedDate>2019-10-25T12:51:22.139Z</LastModifiedDate>\n        <Status>COMPLETE</Status>\n        <AccountNumber>987654321</AccountNumber>\n        <AccountTelephoneNumber>9196194444</AccountTelephoneNumber>\n        <EndUserName>bandwidthGuy</EndUserName>\n        <AuthorizingUserName>importantAuthGuy</AuthorizingUserName>\n        <CustomerCode>123</CustomerCode>\n        <EndUserPIN>12345</EndUserPIN>\n        <AddressLine1>900 Main Campus Dr</AddressLine1>\n        <City>Raleigh</City>\n        <State>NC</State>\n        <ZIPCode>27612</ZIPCode>\n       <TypeOfService>residential</TypeOfService>\n       <CsrData>\n        <AccountNumber>123456789</AccountNumber>\n        <CustomerName>JOHN SMITH</CustomerName>\n        <ServiceAddress>\n            <UnparsedAddress>900 MAIN CAMPUS DR</UnparsedAddress>\n            <City>RALEIGH</City>\n            <State>NC</State>\n            <Zip>27616</Zip>\n        </ServiceAddress>\n        <WorkingTelephoneNumber>9196191211</WorkingTelephoneNumber>\n        <WorkingTelephoneNumbersOnAccount>\n            <TelephoneNumber>9196191211</TelephoneNumber>\n        </WorkingTelephoneNumbersOnAccount>\n    </CsrData>\n    </CsrResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CsrGetResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "Update csr order",
        "summary": "Update CSR order",
        "operationId": "UpdateCsrOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Csr>\n\t<WorkingOrBillingTelephoneNumber>9196191211</WorkingOrBillingTelephoneNumber>\n\t<WorkingTelephoneNumber>9196191211</WorkingTelephoneNumber>\n\t<BillingTelephoneNumber>9196191211</BillingTelephoneNumber>\n\t<CustomerName>name</CustomerName>\n\t<AuthorizingPersonName>name</AuthorizingPersonName>\n\t<AccountNumber>987654321</AccountNumber>\n\t<WorkingTelephoneNumbersOnAccount>\n\t\t<TelephoneNumber>9196191211</TelephoneNumber>\n\t</WorkingTelephoneNumbersOnAccount>\n\t<CsrServiceAddress>\n\t\t<HouseNumber>123</HouseNumber>\n\t\t<StreetName>Maple Ave</StreetName>\n\t\t<City>Hometown</City>\n\t\t<StateCode>MO</StateCode>\n\t\t<Zip>54923</Zip>\n\t\t<Country>United States</Country>\n\t\t<AddressType>Service</AddressType>\n\t</CsrServiceAddress>\n\t<AccountTelephoneNumber>9196194444</AccountTelephoneNumber>\n\t<EndUserName>bandwidthGuy</EndUserName>\n\t<AuthorizingUserName>authorizingUserName</AuthorizingUserName>\n\t<CustomerCode>123</CustomerCode>\n\t<EndUserPIN>12345</EndUserPIN>\n\t<EndUserPassword>password</EndUserPassword>\n\t<AddressLine1>900 Main Campus Dr</AddressLine1>\n\t<City>Raleigh</City>\n\t<State>NC</State>\n\t<ZIPCode>27612</ZIPCode>\n\t<TypeOfService>residential</TypeOfService>\n\t<Status>residential</Status>\n</Csr>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Csr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The order has been updated.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <CsrResponse>\n        <CustomerOrderId>someValue</CustomerOrderId>\n        <LastModifiedBy>systemUser</LastModifiedBy>\n        <OrderCreateDate>2019-10-25T09:51:17Z</OrderCreateDate>\n        <AccountId>1</AccountId>\n        <OrderId>a2f55ebe-782a-4242-983b-6ae6cfa97833</OrderId>\n        <LastModifiedDate>2019-10-25T12:51:22.139Z</LastModifiedDate>\n        <Status>COMPLETE</Status>\n        <AccountNumber>987654321</AccountNumber>\n        <AccountTelephoneNumber>9196194444</AccountTelephoneNumber>\n        <EndUserName>bandwidthGuy</EndUserName>\n        <AuthorizingUserName>importantAuthGuy</AuthorizingUserName>\n        <CustomerCode>123</CustomerCode>\n        <EndUserPIN>12345</EndUserPIN>\n        <AddressLine1>900 Main Campus Dr</AddressLine1>\n        <City>Raleigh</City>\n        <State>NC</State>\n        <ZIPCode>27612</ZIPCode>\n       <TypeOfService>residential</TypeOfService>\n       <CsrData>\n        <AccountNumber>123456789</AccountNumber>\n        <CustomerName>JOHN SMITH</CustomerName>\n        <ServiceAddress>\n            <UnparsedAddress>900 MAIN CAMPUS DR</UnparsedAddress>\n            <City>RALEIGH</City>\n            <State>NC</State>\n            <Zip>27616</Zip>\n        </ServiceAddress>\n        <WorkingTelephoneNumber>9196191211</WorkingTelephoneNumber>\n        <WorkingTelephoneNumbersOnAccount>\n            <TelephoneNumber>9196191211</TelephoneNumber>\n        </WorkingTelephoneNumbersOnAccount>\n    </CsrData>\n    </CsrResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CsrGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Response - there were errors in evaluating the body of the request",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CsrErrorResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<CsrOrderResponse>\n    <Errors>\n        <Error>\n            <Code>54321</Code>\n            <Description>Some error description</Description>\n        </Error>\n    </Errors>\n</CsrOrderResponse>\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/csrs/{orderId}/notes": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieve all notes associated with the Csrs order. ",
        "operationId": "ReadCsrsOrderNotes",
        "summary": "List Csrs order notes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - there are Notes associated with the order, and they have been returned in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Notes>\n    <Note>\n        <Id>87037</Id>\n        <UserId>jbm</UserId>\n        <Description>This is a test note</Description>\n        <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>\n    </Note>\n    <Note>\n        <Id>87039</Id>\n        <UserId>smckinnon</UserId>\n        <Description>This is a second test note</Description>\n        <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>\n    </Note>\n</Notes>\n"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier"
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "Updates the Notes resource by adding a note. Adding a note to a Csrs \n order causes a notification to be sent to Bandwidth Operations, so that they may assist as necessary. A note may be up to 500 characters in length",
        "operationId": "CreateCsrsOrderNote",
        "summary": "Add Csrs order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Note>\n <UserId>userId</UserId>\n      <!-- note the userId must match the logged-in user -->\n <Description>note text</Description>\n </Note>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned"
          },
          "400": {
            "description": "Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/csrs/{orderId}/notes/{noteId}": {
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "Update a specified note.  Notes may only be updated, not deleted",
        "operationId": "UpdateCsrsOrderNote",
        "summary": "Update Csrs order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "csrsId",
            "description": "Csrs Order ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          },
          {
            "name": "noteId",
            "description": "Note ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Note>\n <UserId>userId</UserId>\n <Description>note text</Description>\n </Note>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - note has been updated.  No body is returned"
          },
          "400": {
            "description": "Bad Request - the note has not been updated because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/discnumbers": {
      "get": {
        "tags": [
          "Disconnecting Numbers"
        ],
        "description": "Retrieves a list of disconnected numbers associated with the account. There are optional search parameters to limit the discNumbers payload",
        "operationId": "GetDisconnectedTns",
        "summary": "Retrieve disconnected tns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "The first disconnected number on the desired page. `1` is used as a convention for the first disconnected number in the collection.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "size",
            "description": "The number of records that should be returned by the query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 30
          },
          {
            "name": "startdate",
            "description": "<p>The starting date of a search. startdate and enddate <strong>must</strong> be used as a pair.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "yy-mm-dd"
          },
          {
            "name": "enddate",
            "description": "<p>The ending date of a search. startdate and enddate <strong>must</strong> be used as a pair.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "yy-mm-dd"
          }
        ],
        "responses": {
          "200": {
            "description": "<p>The disconnected numbers have been retrieved successfully.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TNs>\n  <TotalCount>4</TotalCount>\n  <TelephoneNumbers>\n    <Count>2</Count>\n    <TelephoneNumber>4158714245</TelephoneNumber>\n    <TelephoneNumber>4352154439</TelephoneNumber>\n  </TelephoneNumbers>\n</TNs>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TNs"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/discnumbers/totals": {
      "get": {
        "tags": [
          "Disconnecting Numbers"
        ],
        "description": "Retrieves a total number of disconnects.",
        "operationId": "GetTotalNumberDisconnects",
        "summary": "Retrieve total number of disconnects",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "startdate",
            "description": "The starting date of a search. startdate and enddate <strong>must</strong> be used as a pair.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "yy-mm-dd"
          },
          {
            "name": "enddate",
            "description": "The end date of a search. startdate and enddate <strong>must</strong> be used as a pair.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "yy-mm-dd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Quantity>\n  <Count>4</Count>\n  </Quantity>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Quantity"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/disconnects": {
      "get": {
        "tags": [
          "Disconnecting Numbers"
        ],
        "description": "Retrieve a list of disconnect orders that is associated with an account.\nPlease visit <a href='/docs/numbers/guides/disconnectNumbers'>Guides and Tutorials</a>",
        "summary": "Read disconnect orders",
        "operationId": "ReadDisconnectOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "The disconnect order-id of the first record on the page.   \"1\" is used as a convention for the first disconnect order in the collection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          },
          {
            "name": "size",
            "description": "The number of records that should be returned by the query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 30
          },
          {
            "name": "userid",
            "description": "The user ID associated with disconnected phone numbers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "jbm"
          },
          {
            "name": "status",
            "description": "The status of the order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "complete"
          },
          {
            "name": "startdate",
            "description": "Retrieves all phone numbers disconnected after this date. The start date also requires the end date to be specified.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "yy-mm-dd"
          },
          {
            "name": "enddate",
            "description": "Retrieves all phone numbers disconnected before this date. The end date also requires the start date to be specified.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "yy-mm-dd"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Disconnect orders",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ResponseSelectWrapper>\n    <ListOrderIdUserIdDate>\n        <TotalCount>7</TotalCount>\n        <Links>\n                           <!-- SNIP -->\n        </Links>\n        <OrderIdUserIdDate>\n            <CountOfTNs>1</CountOfTNs>\n            <userId>smckinnon</userId>\n            <lastModifiedDate>2014-01-10T17-34-15Z</lastModifiedDate>\n            <OrderId>6d7da966-e071-4741-b31c-1d8932f4b8da</OrderId>\n            <OrderType>disconnect</OrderType>\n            <OrderDate>2014-01-10T17-34-15.797Z</OrderDate>\n            <OrderStatus>COMPLETE</OrderStatus>\n            <TelephoneNumberDetails>\n                            <!-- SNIP -->\n            </TelephoneNumberDetails>\n        </OrderIdUserIdDate>\n        <OrderIdUserIdDate>\n            <CountOfTNs>1</CountOfTNs>\n            <userId>jbm</userId>\n            <lastModifiedDate>2013-12-04T21-59-32Z</lastModifiedDate>\n            <OrderId>4ffe9262-1965-4479-a1d5-b8584440667d</OrderId>\n            <OrderType>disconnect</OrderType>\n            <OrderDate>2013-12-04T21-59-32.243Z</OrderDate>\n            <OrderStatus>COMPLETE</OrderStatus>\n            <TelephoneNumberDetails>\n                              <!-- SNIP -->\n            </TelephoneNumberDetails>\n        </OrderIdUserIdDate>\n    </ListOrderIdUserIdDate>\n</ResponseSelectWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ResponseSelectWrapper"
                }
              }
            }
          },
          "404": {
            "description": "No disconnect orders are present on the indicated account",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Links>\n    <first>   Link description  </first>\n</Links>\n"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Use this method to disconnect telephone numbers from the account. Please visit <a href='/docs/numbers/guides/disconnectNumbers'>Guides and Tutorials</a>",
        "tags": [
          "Disconnecting Numbers"
        ],
        "summary": "Disconnect numbers from account",
        "operationId": "CreateDisconnectOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<DisconnectTelephoneNumberOrder>\n    <name>training run</name>\n    <DisconnectTelephoneNumberOrderType>\n        <TelephoneNumberList>\n            <TelephoneNumber>4158714245</TelephoneNumber>\n            <TelephoneNumber>4352154439</TelephoneNumber>\n            <TelephoneNumber>4352154466</TelephoneNumber>\n        </TelephoneNumberList>\n        <Protected>UNCHANGED</Protected>\n    </DisconnectTelephoneNumberOrderType>\n</DisconnectTelephoneNumberOrder>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/DisconnectTelephoneNumberOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created as described in the payload <br>\nThe Location header contains the url of the disconnect order that has been created.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<DisconnectTelephoneNumberOrderResponse>\n    <orderRequest>\n        <CustomerOrderId/>\n        <id>ba05e04b-192a-47cb-b182-b1bf6cfef0d7</id>\n        <OrderCreateDate>2014-07-03T14-12-57.840Z</OrderCreateDate>\n        <DisconnectTelephoneNumberOrderType>\n            <TelephoneNumberList>\n                <TelephoneNumber>4158714245</TelephoneNumber>\n                <TelephoneNumber>4352154439</TelephoneNumber>\n                <TelephoneNumber>4352154466</TelephoneNumber>\n            </TelephoneNumberList>\n            <DisconnectMode>normal</DisconnectMode>\n            <Protected>UNCHANGED</Protected>\n        </DisconnectTelephoneNumberOrderType>\n    </orderRequest>\n</DisconnectTelephoneNumberOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DisconnectTelephoneNumberOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Response - there were errors in evaluating the body of the request.\nPotential errors include: <ul>\n  <li> Protected attribute is invalid. Valid values: TRUE, FALSE, UNCHANGED.</li>\n</ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<DisconnectTelephoneNumberOrderResponse>\n    <ErrorList>\n        <Error>\n            <Code>54321</Code>\n            <Description>Some error description</Description>\n        </Error>\n    </ErrorList>\n    <orderRequest>\n        <OrderCreateDate>2019-11-19T14:06:57.254Z</OrderCreateDate>\n        <DisconnectTelephoneNumberOrderType>\n            <TelephoneNumberList>\n                <TelephoneNumber>4158714245</TelephoneNumber>\n            </TelephoneNumberList>\n        </DisconnectTelephoneNumberOrderType>\n    </orderRequest>\n</DisconnectTelephoneNumberOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DisconnectTelephoneNumberOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/disconnects/{disconnectid}": {
      "get": {
        "tags": [
          "Disconnecting Numbers"
        ],
        "description": "Retrieves the information associated with the disconnect order specified.\nPlease visit <a href='/docs/numbers/guides/disconnectNumbers#get-disconnect-info'>Guides and Tutorials</a>",
        "operationId": "ReadDisconnectOrder",
        "summary": "Fetching Disconnect Order Status",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "disconnectid",
            "description": "Disconnect Order ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          },
          {
            "name": "tndetail",
            "description": "If set to true, displays the disconnect order's telephone order information in greater detail",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "False"
            },
            "example": "true/false"
          }
        ],
        "responses": {
          "200": {
            "description": "The disconnect order's information has been successfully retrieved.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<DisconnectTelephoneNumberOrderResponse>\n  <DisconnectedTelephoneNumberList>\n    <TelephoneNumber>9199998830</TelephoneNumber>\n  </DisconnectedTelephoneNumberList>\n  <orderRequest>\n    <id>4ffe9262-1965-4479-a1d5-b8584440667d</id>\n    <OrderCreateDate>2013-12-04T21:59:32.243Z</OrderCreateDate>\n    <DisconnectTelephoneNumberOrderType>\n      <TelephoneNumberList>\n        <TelephoneNumber>9199998830</TelephoneNumber>\n      </TelephoneNumberList>\n      <DisconnectMode>normal</DisconnectMode>\n      <Protected>UNCHANGED</Protected>\n    </DisconnectTelephoneNumberOrderType>\n  </orderRequest>\n  <OrderStatus>COMPLETE</OrderStatus>\n</DisconnectTelephoneNumberOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DisconnectTelephoneNumberOrderFetchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/disconnects/{disconnectid}/notes": {
      "get": {
        "tags": [
          "Disconnecting Numbers"
        ],
        "description": "Retrieve all notes associated with the disconnect order. Please visit <a href='/docs/numbers/guides/disconnectNumbers'>Guides and Tutorials</a>",
        "operationId": "ReadDisconnectOrderNotes",
        "summary": "List disconnect order notes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "disconnectid",
            "description": "Disconnect Order ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - there are Notes associated with the order, and they have been returned in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Notes>\n    <Note>\n        <Id>87037</Id>\n        <UserId>jbm</UserId>\n        <Description>This is a test note</Description>\n        <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>\n    </Note>\n    <Note>\n        <Id>87039</Id>\n        <UserId>smckinnon</UserId>\n        <Description>This is a second test note</Description>\n        <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>\n    </Note>\n</Notes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Notes"
                }
              }
            }
          },
          "204": {
            "description": "No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier"
          }
        }
      },
      "post": {
        "tags": [
          "Disconnecting Numbers"
        ],
        "description": "Updates the Notes resource by adding a note. Adding a note to a disconnect \n order causes a notification to be sent to Bandwidth Operations, so that they may assist as necessary. A note may be up to 500 characters in length. Please visit <a href='/docs/numbers/guides/disconnectNumbers'>Guides and Tutorials</a>",
        "operationId": "CreateDisconnectOrderNote",
        "summary": "Add disconnect order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "disconnectid",
            "description": "Disconnect Order ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Note>\n <UserId>userId</UserId>\n      <!-- note the userId must match the logged-in user -->\n <Description>note text</Description>\n </Note>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned"
          },
          "400": {
            "description": "Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/disconnects/{disconnectid}/notes/{noteId}": {
      "put": {
        "tags": [
          "Disconnecting Numbers"
        ],
        "description": "Update a specified note.  Notes may only be updated, not deleted. Please visit <a href='/docs/numbers/guides/disconnectNumbers'>Guides and Tutorials</a>\n",
        "operationId": "UpdateDisconnectOrderNote",
        "summary": "Update disconnect order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "disconnectid",
            "description": "Disconnect Order ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          },
          {
            "name": "noteId",
            "description": "Note ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Note>\n  <UserId>userId</UserId>\n  <Description>note text</Description>\n</Note>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - note has been updated.  No body is returned"
          },
          "400": {
            "description": "Bad Request - the note has not been updated because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/dldas": {
      "get": {
        "tags": [
          "DLDA"
        ],
        "description": "Retrieve a list of the DLDA orders that are associated with the account. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.",
        "operationId": "ReadDldaOrders",
        "summary": "List DLDA orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "lastModifiedAfter",
            "description": "Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find DLDA Orders that were modified within the date range.  It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find DLDA Orders that were modified within the date range.  It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - indicates that there are DLDA orders associated with the account.\nThe 200 OK response payload provides a list of all DLDA orders that have been issued against that account.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ResponseSelectWrapper>\n   <ListOrderIdUserIdDate>\n      <TotalCount>3</TotalCount>\n      <OrderIdUserIdDate>\n         <accountId>14</accountId>\n         <CountOfTNs>2</CountOfTNs>\n         <userId>team_ua</userId>\n         <lastModifiedDate>2014-07-07T10:06:43.427Z</lastModifiedDate>\n         <OrderType>dlda</OrderType>\n         <OrderDate>2014-07-07T10:06:43.427Z</OrderDate>\n         <orderId>37a6447c-1a0b-4be9-ba89-3f5cb0aea142</orderId>\n         <OrderStatus>FAILED</OrderStatus>\n      </OrderIdUserIdDate>\n      <OrderIdUserIdDate>\n         <accountId>14</accountId>\n         <CountOfTNs>2</CountOfTNs>\n         <userId>team_ua</userId>\n         <lastModifiedDate>2014-07-07T10:05:56.595Z</lastModifiedDate>\n         <OrderType>dlda</OrderType>\n         <OrderDate>2014-07-07T10:05:56.595Z</OrderDate>\n         <orderId>743b0e64-3350-42e4-baa6-406dac7f4a85</orderId>\n         <OrderStatus>RECEIVED</OrderStatus>\n      </OrderIdUserIdDate>\n      <OrderIdUserIdDate>\n         <accountId>14</accountId>\n         <CountOfTNs>2</CountOfTNs>\n         <userId>team_ua</userId>\n         <lastModifiedDate>2014-07-07T09:32:17.234Z</lastModifiedDate>\n         <OrderType>dlda</OrderType>\n         <OrderDate>2014-07-07T09:32:17.234Z</OrderDate>\n         <orderId>f71eb4d2-bfef-4384-957f-45cd6321185e</orderId>\n         <OrderStatus>RECEIVED</OrderStatus>\n      </OrderIdUserIdDate>\n   </ListOrderIdUserIdDate>\n</ResponseSelectWrapper>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ResponseSelectWrapper"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored."
          }
        }
      },
      "post": {
        "tags": [
          "DLDA"
        ],
        "description": "Create DLDA order to associate the street address with the telephone number.<br><b>Business Listings</b> <br>Business Listings sort differently than Residential Listings, and must be submitted accordingly.  Since Business Listings sort starting at the beginning of the name, where Residential Listings sort on Last Name, the parts of the business name that will govern the sorting need to be entered in the LastName field.  For example, Joe's Pizza sorts starting with Joe, so the entire business name would be entered in the LastName field, and the Firstname could be left blank.  If there was a portion of the name that was not important from a sorting perspective (perhaps \"the best pizza in town\"), that portion could be placed in the FirstName field.",
        "operationId": "CreateDldaOrder",
        "summary": "Create DLDA order - associate the street address with the telephone number.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<DldaOrder>\n    <CustomerOrderId>[String]</CustomerOrderId>\n    <DldaTnGroups>\n        <DldaTnGroup>\n            <TelephoneNumbers>\n                <TelephoneNumber>5202217754</TelephoneNumber>\n            </TelephoneNumbers>\n            <SubscriberType>RESIDENTIAL</SubscriberType>\n            <ListingType>LISTED</ListingType>\n            <ListingName>\n                <FirstName>John</FirstName>\n                <FirstName2/>\n                <LastName>Smith</LastName>\n                <Designation/>\n                <TitleOfLineage/>\n                <TitleOfAddress/>\n                <TitleOfAddress2/>\n                <TitleOfLineageName2/>\n                <TitleOfAddressName2/>\n                <TitleOfAddress2Name2/>\n                <PlaceListingAs/>\n            </ListingName>\n            <ListAddress>true</ListAddress>\n            <Address>\n                <HousePrefix/>\n                <HouseNumber>915</HouseNumber>\n                <HouseSuffix/>\n                <PreDirectional/>\n                <StreetName>Elm</StreetName>\n                <StreetSuffix>Ave</StreetSuffix>\n                <PostDirectional/>\n                <AddressLine2/>\n                <City>Carpinteria</City>\n                <StateCode>CA</StateCode>\n                <Zip>93013</Zip>\n                <PlusFour/>\n                <County/>\n                <AddressType>DLDA</AddressType>\n            </Address>\n        </DldaTnGroup>\n    </DldaTnGroups>\n</DldaOrder>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/DldaOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - indicates that an order has been created.\nThe <b>location</b> header points to /accounts/<account-id>/dldas/<order-id> and can be used to retrive the status of the DLDA order.<br>\nErrors in processing the request will be articulated in the ErrorList component of the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<DldaOrderResponse>\n   <DldaOrder>\n      <CustomerOrderId>[String]</CustomerOrderId>\n      <OrderCreateDate>2014-07-16T07:59:08.065Z</OrderCreateDate>\n      <AccountId>14</AccountId>\n      <CreatedByUser>team_ua</CreatedByUser>\n      <OrderId>f2ac3343-5bff-424a-b8ca-975f5e7b159e</OrderId>\n      <LastModifiedDate>2014-07-16T07:59:08.065Z</LastModifiedDate>\n      <ErrorList />\n      <ProcessingStatus>RECEIVED</ProcessingStatus>\n      <DldaTnGroups>\n         <DldaTnGroup>\n            <TelephoneNumbers>\n               <TelephoneNumber>5202217754</TelephoneNumber>\n            </TelephoneNumbers>\n            <AccountType>RESIDENCE</AccountType>\n            <ListingType>LISTED</ListingType>\n            <ListingName>\n               <FirstName>John</FirstName>\n               <FirstName2 />\n               <LastName>Smith</LastName>\n               <Designation />\n               <TitleOfLineage />\n               <TitleOfAddress />\n               <TitleOfAddress2 />\n               <TitleOfLineageName2 />\n               <TitleOfAddressName2 />\n               <TitleOfAddress2Name2 />\n               <PlaceListingAs />\n            </ListingName>\n            <ListAddress>true</ListAddress>\n            <Address>\n               <HousePrefix />\n               <HouseNumber>915</HouseNumber>\n               <HouseSuffix />\n               <PreDirectional />\n               <StreetName>Elm</StreetName>\n               <StreetSuffix>Ave</StreetSuffix>\n               <PostDirectional />\n               <AddressLine2 />\n               <City>Carpinteria</City>\n               <StateCode>CA</StateCode>\n               <Zip>93013</Zip>\n               <PlusFour />\n               <County />\n               <Country>United States</Country>\n               <AddressType>Dlda</AddressType>\n            </Address>\n         </DldaTnGroup>\n      </DldaTnGroups>\n   </DldaOrder>\n</DldaOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DldaOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - indicates that the order could not be created.\nError text and an error code will be provided in the ErrorList element.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<DldaOrderResponse>\n   <ResponseStatus>\n      <ErrorCode>16104</ErrorCode>\n      <Description>No numbers for processing</Description>\n   </ResponseStatus>\n   <DldaOrder>\n      <CustomerOrderId>REST Site</CustomerOrderId>\n      <OrderCreateDate>2014-07-17T10:06:55.204Z</OrderCreateDate>\n      <AccountId>14</AccountId>\n      <CreatedByUser>team_ua</CreatedByUser>\n      <LastModifiedDate>2014-07-17T10:06:55.204Z</LastModifiedDate>\n      <ErrorList>\n         <Error>\n            <Code>5070</Code>\n            <Description>Telephone number is invalid.</Description>\n            <TelephoneNumber />\n         </Error>\n      </ErrorList>\n      <ProcessingStatus>FAILED</ProcessingStatus>\n      <DldaTnGroups>\n         <DldaTnGroup>\n            <TelephoneNumbers>\n               <TelephoneNumber />\n            </TelephoneNumbers>\n            <AccountType>RESIDENCE</AccountType>\n            <ListingType>LISTED</ListingType>\n            <ListingName>\n               <FirstName>John</FirstName>\n               <FirstName2 />\n               <LastName>Smith</LastName>\n               <Designation />\n               <TitleOfLineage />\n               <TitleOfAddress />\n               <TitleOfAddress2 />\n               <TitleOfLineageName2 />\n               <TitleOfAddressName2 />\n               <TitleOfAddress2Name2 />\n               <PlaceListingAs />\n            </ListingName>\n            <ListAddress>true</ListAddress>\n            <Address>\n               <HousePrefix />\n               <HouseNumber>915</HouseNumber>\n               <HouseSuffix />\n               <PreDirectional />\n               <StreetName>Elm</StreetName>\n               <StreetSuffix>Ave</StreetSuffix>\n               <PostDirectional />\n               <AddressLine2 />\n               <City>Carpinteria</City>\n               <StateCode>CA</StateCode>\n               <Zip>93013</Zip>\n               <PlusFour />\n               <County />\n               <Country>United States</Country>\n               <AddressType>DLDA</AddressType>\n            </Address>\n         </DldaTnGroup>\n      </DldaTnGroups>\n   </DldaOrder>\n</DldaOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DldaOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/dldas/{orderid}": {
      "get": {
        "tags": [
          "DLDA"
        ],
        "description": "Retrieve information about a DLDA Order with specified ID.",
        "operationId": "ReadDldaOrder",
        "summary": "Fetching DLDA order status",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "DLDA order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ea9e90c2-77a4-4f82-ac47-e1c5bb1311f4"
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the Lidb Orders query provides a broad range of information about the DLDA Order identified in the URL.  Included amongst the information is:\n<ul>\n<li>ErrorList - the errors discovered with codes and explanations</li>\n<li>various dates</li>\n<li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, CANCELLED) - the overall status of the order</li>\n<li>DldaTnGroups - list of DldaTnGroup elements that contains list of TNs with Directory Listing and Directory Assistance information, AccountType(RESIDENCE or BUSINESS), ListingType(LISTED, NON_LISTED or NON_PUBLISHED)</li>\n</ul>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<DldaOrderResponse>\n   <DldaOrder>\n      <CustomerOrderId>5a88d16d-f8a9-45c5-a5db-137d700c6a22</CustomerOrderId>\n      <OrderCreateDate>2014-07-10T12:38:11.833Z</OrderCreateDate>\n      <AccountId>14</AccountId>\n      <CreatedByUser>jbm</CreatedByUser>\n      <OrderId>ea9e90c2-77a4-4f82-ac47-e1c5bb1311f4</OrderId>\n      <LastModifiedDate>2014-07-10T12:38:11.833Z</LastModifiedDate>\n      <ErrorList>\n         <Error>\n            <Code>16103</Code>\n            <Description>DL/DA information cannot be changed because the number is already being processed</Description>\n            <TelephoneNumber>2053778335</TelephoneNumber>\n         </Error>\n      </ErrorList>\n      <ProcessingStatus>RECEIVED</ProcessingStatus>\n      <DldaTnGroups>\n         <DldaTnGroup>\n            <TelephoneNumbers>\n               <TelephoneNumber>2053778335</TelephoneNumber>\n               <TelephoneNumber>2053865784</TelephoneNumber>\n            </TelephoneNumbers>\n            <AccountType>BUSINESS</AccountType>\n            <ListingType>LISTED</ListingType>\n            <ListingName>\n               <FirstName>Joe</FirstName>\n               <LastName>Smith</LastName>\n            </ListingName>\n            <ListAddress>true</ListAddress>\n            <Address>\n               <HouseNumber>12</HouseNumber>\n               <StreetName>ELM</StreetName>\n               <City>New York</City>\n               <StateCode>NY</StateCode>\n               <Zip>10007</Zip>\n               <Country>United States</Country>\n               <AddressType>Dlda</AddressType>\n            </Address>\n         </DldaTnGroup>\n      </DldaTnGroups>\n   </DldaOrder>\n</DldaOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DldaOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the order id does not exist in the system",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<DldaOrderResponse>\n   <ResponseStatus>\n      <Description>The resource does not exist</Description>\n   </ResponseStatus>\n</DldaOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DldaOrderErrorNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DLDA"
        ],
        "description": "Update DLDA order to associate the street address with the telephone number.",
        "operationId": "UpdateDldaOrder",
        "summary": "Update DLDA order - associate the street address with the telephone number",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "DLDA order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f179237b-c1cb-449d-9590-aaa9d0bf3ca4"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<DldaOrder>\n    <CustomerOrderId>[String]</CustomerOrderId>\n    <DldaTnGroups>\n        <DldaTnGroup>\n            <TelephoneNumbers>\n                <TelephoneNumber>5202217754</TelephoneNumber>\n            </TelephoneNumbers>\n            <AccountType>RESIDENCE</AccountType>\n            <ListingType>LISTED</ListingType>\n            <ListingName>\n                <FirstName>John</FirstName>\n                <FirstName2/>\n                <LastName>Smith</LastName>\n                <Designation/>\n                <TitleOfLineage/>\n                <TitleOfAddress/>\n                <TitleOfAddress2/>\n                <TitleOfLineageName2/>\n                <TitleOfAddressName2/>\n                <TitleOfAddress2Name2/>\n                <PlaceListingAs/>\n            </ListingName>\n            <ListAddress>true</ListAddress>\n            <Address>\n                <HousePrefix/>\n                <HouseNumber>915</HouseNumber>\n                <HouseSuffix/>\n                <PreDirectional/>\n                <StreetName>Elm</StreetName>\n                <StreetSuffix>Ave</StreetSuffix>\n                <PostDirectional/>\n                <AddressLine2/>\n                <City>Carpinteria</City>\n                <StateCode>CA</StateCode>\n                <Zip>93013</Zip>\n                <PlusFour/>\n                <County/>\n                <AddressType>DLDA</AddressType>\n            </Address>\n        </DldaTnGroup>\n    </DldaTnGroups>\n</DldaOrder>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/DldaOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - a 200 response indicates that an order has been updated.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<DldaOrderResponse>\n   <DldaOrder>\n      <CustomerOrderId>[String]</CustomerOrderId>\n      <OrderCreateDate>2014-07-10T12:38:11.833Z</OrderCreateDate>\n      <AccountId>14</AccountId>\n      <CreatedByUser>team_ua</CreatedByUser>\n      <OrderId>f179237b-c1cb-449d-9590-aaa9d0bf3ca4</OrderId>\n      <LastModifiedDate>2014-07-17T12:21:02.644Z</LastModifiedDate>\n      <ErrorList />\n      <ProcessingStatus>RECEIVED</ProcessingStatus>\n      <DldaTnGroups>\n         <DldaTnGroup>\n            <TelephoneNumbers>\n               <TelephoneNumber>2199347436</TelephoneNumber>\n            </TelephoneNumbers>\n            <AccountType>RESIDENCE</AccountType>\n            <ListingType>NON_LISTED</ListingType>\n            <ListingName>\n               <FirstName>John</FirstName>\n               <FirstName2 />\n               <LastName>Smith</LastName>\n               <Designation />\n               <TitleOfLineage />\n               <TitleOfAddress />\n               <TitleOfAddress2 />\n               <TitleOfLineageName2 />\n               <TitleOfAddressName2 />\n               <TitleOfAddress2Name2 />\n               <PlaceListingAs />\n            </ListingName>\n            <ListAddress>true</ListAddress>\n            <Address>\n               <HousePrefix />\n               <HouseNumber>915</HouseNumber>\n               <HouseSuffix />\n               <PreDirectional />\n               <StreetName>Elm</StreetName>\n               <StreetSuffix>Ave</StreetSuffix>\n               <PostDirectional />\n               <AddressLine2 />\n               <City>Carpinteria</City>\n               <StateCode>CA</StateCode>\n               <Zip>93013</Zip>\n               <PlusFour />\n               <County />\n               <Country>United States</Country>\n               <AddressType>Dlda</AddressType>\n            </Address>\n         </DldaTnGroup>\n      </DldaTnGroups>\n   </DldaOrder>\n</DldaOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DldaOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - a 400 response Indicates that the order could not be modified. The payload is echoed with the Errors identified.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<DldaOrderResponse>\n   <ResponseStatus>\n      <ErrorCode>16105</ErrorCode>\n      <Description>Order cannot be changed or cancelled because it is already being processed</Description>\n   </ResponseStatus>\n</DldaOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DldaOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/dldas/{orderid}/history": {
      "get": {
        "tags": [
          "DLDA"
        ],
        "description": "Retrieve the history information associated with a named DLDA order.  This indicates the various states that the order has passed through, as well as the current state of the order as the last entry.",
        "operationId": "ReadDldaOrderHistory",
        "summary": "Fetch DLDA order history",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "DLDA order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "f179237b-c1cb-449d-9590-aaa9d0bf3ca4"
          }
        ],
        "responses": {
          "200": {
            "description": "The history payload is a set of history records, each of which contains:\n    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n        <tbody>\n            <tr>\n                <td>OrderDate</td>\n                <td>The date that the order history event happened</td>\n            </tr>\n            <tr>\n                <td>Status</td>\n                <td>The new state of the DLDA order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED</td>\n            </tr>\n            <tr>\n                <td>Note</td>\n                <td>A Note or additional information included with the state change </td>\n           </tr>\n           <tr>\n                <td>Author</td>\n                <td>The user id that implemented the state change</td>\n            </tr>\n        </tbody>\n    </table>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<OrderHistoryWrapper>\n   <OrderHistory>\n      <OrderDate>2014-09-04T16:28:11.320Z</OrderDate>\n      <Note>The DL/DA request has been received</Note>\n      <Author>jbm</Author>\n      <Status>RECEIVED</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2014-09-04T16:28:18.742Z</OrderDate>\n      <Note>The DL/DA request is being processed by our 3rd party supplier</Note>\n      <Author>jbm</Author>\n      <Status>PROCESSING</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2014-09-05T19:00:17.968Z</OrderDate>\n      <Note>The DL/DA request is complete for all TNs</Note>\n      <Author>jbm</Author>\n      <Status>COMPLETE</Status>\n   </OrderHistory>\n</OrderHistoryWrapper>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the order id does not exist in the system",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<DldaOrderReportResponse>\n   <ResponseStatus>\n      <Description>The resource does not exist</Description>\n   </ResponseStatus>\n</DldaOrderReportResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/DldaOrderReportErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/e911s": {
      "get": {
        "tags": [
          "DLR"
        ],
        "description": "Retrieve a list of the E911 orders that are associated with the account. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years. \nPlease visit <a href='/docs/numbers/guides/e911s'>Guides and Tutorials</a>",
        "operationId": "ListE911Orders",
        "summary": "List E911 orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The status of the E911 order being searched for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "PROCESSING"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "callBack",
            "description": "A callback Telephone Number (TN) used for 911 purposes.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "aeui",
            "description": "Alternate End-user Identifier used to identify the calling party for 911 purposes.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Alter12345"
          },
          {
            "name": "customerOrderId",
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the E911 order.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find E911 Orders that were modified within the date range.  It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find E911 Orders that were modified within the date range.  It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "lastModifiedAfter",
            "description": "Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "lastModifiedBy",
            "description": "This is the user-name of the user that last modified the E911 Order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "smckinnon"
          },
          {
            "name": "orderIdFragment",
            "description": "This search parameter represents the internal Bandwidth Dashboard API ID that has been assigned to the E911 Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ed1c0bed-e2"
          },
          {
            "name": "orderDetails",
            "description": "If set to true, a list of order details will be displayed instead the summary information.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the E911 Orders query provides a broad range of information about the E911  Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.",
            "content": {
              "application/xml": {
                "examples": {
                  "orderDetails = false": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<E911Orders>\n   <TotalCount>2</TotalCount>\n   <E911OrderSummary>\n      <accountId>1</accountId>\n      <CountOfTNs>1</CountOfTNs>\n      <userId>admin</userId>\n      <lastModifiedDate>2015-08-03T14:41:01.769Z</lastModifiedDate>\n      <OrderDate>2015-08-03T14:41:00.815Z</OrderDate>\n      <OrderType>e911</OrderType>\n      <OrderStatus>COMPLETE</OrderStatus>\n      <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId>\n   </E911OrderSummary>\n   <E911OrderSummary>\n      <accountId>1</accountId>\n      <CountOfTNs>1</CountOfTNs>\n      <userId>admin</userId>\n      <lastModifiedDate>2015-08-03T14:40:19.008Z</lastModifiedDate>\n      <OrderDate>2015-08-03T14:40:17.864Z</OrderDate>\n      <OrderType>e911</OrderType>\n      <OrderStatus>ADJUSTED_COMPLETE</OrderStatus>\n      <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId>\n   </E911OrderSummary>\n</E911Orders>"
                  },
                  "orderDetails = true": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<E911Orders>\n   <TotalCount>2</TotalCount>\n   <E911Order>\n      <OrderCreateDate>2015-08-03T14:41:00.815Z</OrderCreateDate>\n      <AccountId>1</AccountId>\n      <CreatedByUser>admin</CreatedByUser>\n      <OrderId>6dae2a67-b8f5-4bf2-9bf7-5216277b9be3</OrderId>\n      <LastModifiedDate>2015-08-03T14:41:01.769Z</LastModifiedDate>\n      <Address>\n         <HouseNumber>800</HouseNumber>\n         <HouseSuffix />\n         <PreDirectional />\n         <StreetName>PENNSYLVANIA AVE</StreetName>\n         <StreetSuffix>NW</StreetSuffix>\n         <AddressLine2 />\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20004</Zip>\n         <PlusFour />\n         <Country>United States</Country>\n         <Latitude>35.848359</Latitude>\n         <Longitude>-75.000000</Longitude>\n      </Address>\n      <CallerName>0931180f-4</CallerName>\n      <ErrorList />\n      <ProcessingStatus>COMPLETE</ProcessingStatus>\n      <TelephoneNumbers>\n         <TelephoneNumber>9142971000</TelephoneNumber>\n      </TelephoneNumbers>\n   </E911Order>\n   <E911Order>\n      <OrderCreateDate>2015-08-03T14:40:17.864Z</OrderCreateDate>\n      <AccountId>1</AccountId>\n      <CreatedByUser>admin</CreatedByUser>\n      <OrderId>6a97b54f-459e-4683-a79c-0de52acf7c6b</OrderId>\n      <LastModifiedDate>2015-08-03T14:40:19.008Z</LastModifiedDate>\n      <Address>\n         <HouseNumber>1600</HouseNumber>\n         <HouseSuffix />\n         <PreDirectional />\n         <StreetName>PENNSYLVANIA AVE</StreetName>\n         <StreetSuffix>NW</StreetSuffix>\n         <AddressLine2 />\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20500</Zip>\n         <PlusFour>0003</PlusFour>\n         <Country>United States</Country>\n         <Latitude>35.848359</Latitude>\n         <Longitude>-75.000000</Longitude>\n      </Address>\n      <CallerName>0931180f-4</CallerName>\n      <ErrorList />\n      <ProcessingStatus>ADJUSTED_COMPLETE</ProcessingStatus>\n      <TelephoneNumbers>\n         <TelephoneNumber>9142971000</TelephoneNumber>\n      </TelephoneNumbers>\n   </E911Order>\n</E911Orders>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/E911Orders"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored."
          }
        }
      },
      "post": {
        "tags": [
          "DLR"
        ],
        "description": "<p>The E911Orders endpoint resource represents the requests made to the Bandwidth Dashboard API to add or otherwise manage a request to associate a postal address with an endpoint (a telephone number, ACID (alternate caller identifier), or some other unique identifier. This API allows the creation and observation of a \"E911\" work order that causes an update of a address information in a network database.</p><p>The E911 order processing model is consistent with the overall model of creating an order or request with the initial POST, and then checking on the status of that order using callbacks and / or GET while that order progresses through the various steps in the process.</p><h4>The E911 order supports several 911 use cases:</h4><ol><li>CONVENTIONAL E911: Telephone number/address combination. For UC Trunking and most applicable wholesale customers, this method associates a telephone number in the customer’s Bandwidth Dashboard API TN inventory to a postal address. Caller name can also be specified in the request. At 911 call time, the address that is associated with the telephone number in the SIP 'from' header will be seen by the Public Safety Answering Point (PSAP).</li><br><li>PIDF-LO (Presence Information Data Format-Location Object or Dynamic Location Routing) Endpoints and Addresses: For customers utilizing Bandwidth’s Dynamic Routing capability, addresses are first added to an \"address pool\", then endpoints are provisioned using one of the addresses as a default for taxation purposes. Each endpoint is represented by an Alternate End User Identifier consisting of a unique identifier (could be TN, ACID, or other identifier), callback number and caller name (if not being passed in at 911 call time), and preferred language (French or English, with English as the default). At 911 call time, the customer can pass any address in the SIP header of the call and the sip 'from' header will contain the identifier of the endpoint. If the address in the call matches an address in the address pool, then the call is routed to the PSAP. Otherwise, the call is routed to an Emergency Call Center.</li><br><li><p>SIMPLE AEUI: This is similar to telephone number/address combination in that there is a 1 to 1 mapping between endpoint and address. Each endpoint is represented by an Alternate End User Identifier(AEUI) consisting of a unique identifier and callback number. At 911 call time, the endpoint identifier is passed in the SIP from header and the address that is associated with that endpoint will be seen by the PSAP.</p><p>The states that the order may reside in are RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED, ADJUSTED_COMPLETE, and ADJUSTED_PARTIAL. \"ADJUSTED\" indicates that the provisioning was successful, but that the street address was subtly changed to reflect a geocodable address. As with other order types, PARTIAL indicates that there were some errors detected, but that all elements of the order that could be processed were processed. In this case, the order record will need to be examined to determine the items that failed.</p></o></li></ol><h4>The key data elements in the submission are as follows.</h4><table><tr><th>Parameter</th><th>Description</th></tr><tr><td>TelephoneNumbers</td><td>A list of telephone numbers you need link to the street address</td></tr><tr><td>CallerName</td><td>\tCallerName that will be linked to TNs. This field is required in the case of a new address assignment</td></tr><tr><td>Address</td><td>This field is required in the case of a new address assignment. Inner fields: HousePrefix, HouseNumber, HouseSuffix, PreDirectional, StreetName, StreetSuffix, PostDirectional, AddressLine2, City, StateCode, Zip, PlusFour. Streetname, City, and State are required. House Number is currently required, although this enforcement may be relaxed in the future. Depending on the type of E911 service, the Location ID may be updated by the Bandwidth Dashboard API</td></tr><tr><td>DeleteTNSpecificE911Address</td><td>Can be true or false. If value is true then Address and CallerName should not be specified</td></tr><tr><td>AlternateEndUserIdentifiers</td><td>A list of AEUIs acts as a replacement for the list of telephone numbers. It replaces the TelephoneNumbers and AdditionalAddress payload element. If ACID exists in external system it will be updated with given values</td></tr><tr><td>AdditionalAddresses</td><td>A list of Address sections. This address information for all potential endpoints which will be provisioned to the Bandwidth 911 system. At call time, the customer will submit this address information within the SIP header and, if a match is determined, the call will be routed to the PSAP nearest to that address. Otherwise, the call will be routed to an ECC. These Address sections will be the same in format to the Address section in the top-level of the E911Order payload. It replaces the TelephoneNumbers and AlternateEndUserIdentifiers payload element</td></tr><tr><td>CustomerOrderId</td><td>The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. The element is optional. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters</td></tr></table>",
        "operationId": "CreateE911Order",
        "summary": "Create E911 order - associate the address with the telephone number",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "description": "<h5>1. CONVENTIONAL E911. TN/Address-provisioning order:</h5><p>TN/Address-provisioning order.</p><h5>2. CONVENTIONAL E911. TN/address-deletion order:</h5><p>TelephoneNumbers and TelephoneNumber are required. DeleteTNSpecificE911Address is required and must be set to 'true'.</p><h5>3. PIDF-LO. AEUI endpoint-provisioning order with additional address provisioning and without pre-defined location id:</h5><p>AlternateEndUserIdentifiers, AlternateEndUserIdentifier, Address, and Identifier are required. Identifier can only contain alphanumeric characters and must be between 1 and 30 characters. PIDFLOEnabled is required and must be 'true'. Default value of PreferredLanguage is 'en'.</p><h5>4. PIDF-LO. AEUI endpoint-provisioning order with additional address provisioning and with pre-defined location id</h5><p>AlternateEndUserIdentifiers, AlternateEndUserIdentifier, Address, and Identifier are required. Identifier can only contain alphanumeric characters and must be between 1 and 30 characters. PIDFLOEnabled is required and must be 'true'. Default value of PreferredLanguage is 'en'.</p><h5>5. PIDF-LO. AEUI endpoint-provisioning order with provisioned location id</h5><p>AlternateEndUserIdentifiers, AlternateEndUserIdentifier, LocationId, and Identifier are required. Identifier can only contain alphanumeric characters and must be between 1 and 30 characters. PIDFLOEnabled is required and must be 'true'. Default value of PreferredLanguage is 'en'.</p><h5>6. PIDF-LO and SIMPLE AEUI. Mixed PIDF-LO AEUI and Non-PIDF-LO AEUI endpoint-provisioning order</h5><p>AlternateEndUserIdentifiers, AlternateEndUserIdentifier, Address, and Identifier are required. Default value of PreferredLanguage is 'en'. Non-PIDF-LO: CallbackNumber is required. Identifier can only contain alphanumeric characters and must be between 6 and 30 characters. PIDF-LO: PIDFLOEnabled is required and must be 'true'. Identifier can only contain alphanumeric characters and must be between 1 and 30 characters.</p><h5>7. PIDF-LO and SIMPLE AEUI. PIDF-LO and Non-PIDF-LO endpoint-deletion order</h5><p>AlternateEndUserIdentifiers, AlternateEndUserIdentifier, and Identifier are required. DeleteTNSpecificE911Address is required and must be 'true'. Non-PIDF-LO: CallbackNumber is required. Identifier can only contain alphanumeric characters 6 and 30 characters. PIDF-LO: PIDFLOEnabled is required and must be 'true'. Identifier can only contain alphanumeric characters and must be between 1 and 30 characters.</p><h5>8. PIDF-LO. address-provisioning order</h5><p>AdditionalAddresses and Address are required.</p><h5>9. PIDF-LO. address-editing order</h5><p>Address and LocationId are required. Allows a user to update all address fields except PlusFour and Country.</p><h5>10. PIDF-LO. address-deletion order</h5><p>AdditionalAddresses, Address, and LocationId are required. DeleteTNSpecificE911Address is required and must be 'true'.</p><h5>11. SIMPLE AEUI. Non-PIDF-LO endpoint-provisioning order</h5><p>AlternateEndUserIdentifiers, AlternateEndUserIdentifier, Address, CallbackNumber, and Identifier are required Identifier can only contain alphanumeric characters, must contain at least one letter, and must be between 6 and 30 characters.</p>",
          "content": {
            "application/xml": {
              "examples": {
                "ConventionalAddressProvisioningE911Order": {
                  "summary": "CONVENTIONAL E911. TN/Address-provisioning order",
                  "value": "<E911Order>\n  <TelephoneNumbers>\n    <TelephoneNumber>9706542332</TelephoneNumber>\n    <TelephoneNumber>9706542333</TelephoneNumber>\n  </TelephoneNumbers>\n  <CallerName>OptionalCallerName</CallerName>\n  <Address>\n    <HouseNumber>915</HouseNumber>\n    <HouseSuffix/>\n    <PreDirectional/>\n    <StreetName>Elm</StreetName>\n    <StreetSuffix>Ave</StreetSuffix>\n    <PostDirectional/>\n    <AddressLine2/>\n    <City>Carpinteria</City>\n    <StateCode>CA</StateCode>\n    <Zip>93013</Zip>\n    <PlusFour/>\n    <County/>\n    <Country>United States</Country>\n    <Latitude>35.848359</Latitude>\n    <Longitude>-75.000000</Longitude>\n  </Address>\n</E911Order>"
                },
                "ConventionalAddressDeletionE911Order": {
                  "summary": "CONVENTIONAL E911. TN/address-deletion order",
                  "value": "<E911Order>\n  <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n  <TelephoneNumbers>\n    <TelephoneNumber>9706542332</TelephoneNumber>\n    <TelephoneNumber>9706542333</TelephoneNumber>\n  </TelephoneNumbers>\n  <DeleteTNSpecificE911Address>true</DeleteTNSpecificE911Address>\n</E911Order>"
                },
                "PidfloAeuiWithAdditionalAddressWithoutLocationIdE911Order": {
                  "summary": "PIDF-LO. AEUI endpoint-provisioning order with additional address provisioning and without pre-defined location id",
                  "value": "<E911Order>\n  <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n  <Address>\n    <HouseNumber>901</HouseNumber>\n    <StreetName>MAIN CAMPUS</StreetName>\n    <StreetSuffix>DR</StreetSuffix>\n    <City>RALEIGH</City>\n    <StateCode>NC</StateCode>\n    <Zip>27606</Zip>\n    <PlusFour>5244</PlusFour>\n    <Country>United States</Country>\n    <Latitude>35.848359</Latitude>\n    <Longitude>-75.000000</Longitude>\n    <AddressType>E911</AddressType>\n  </Address>\n  <AlternateEndUserIdentifiers>\n    <AlternateEndUserIdentifier>\n      <CallerName>OptionalCallerName</CallerName>\n      <CallbackNumber>9706542333</CallbackNumber>\n      <Identifier>blep123</Identifier>\n      <PIDFLOEnabled>true</PIDFLOEnabled>\n      <PreferredLanguage>en</PreferredLanguage>\n    </AlternateEndUserIdentifier>\n  </AlternateEndUserIdentifiers>\n</E911Order>"
                },
                "PidfloAeuiWithAdditionalAddressWithLocationIdE911Order": {
                  "summary": "PIDF-LO. AEUI endpoint-provisioning order with additional address provisioning and with pre-defined location id",
                  "value": "<E911Order>\n  <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n  <Address>\n    <LocationId>Some32CharacterOrLessString</LocationId>\n    <HouseNumber>901</HouseNumber>\n    <StreetName>MAIN CAMPUS</StreetName>\n    <StreetSuffix>DR</StreetSuffix>\n    <City>RALEIGH</City>\n    <StateCode>NC</StateCode>\n    <Zip>27606</Zip>\n    <PlusFour>5244</PlusFour>\n    <Country>United States</Country>\n    <Latitude>35.848359</Latitude>\n    <Longitude>-75.000000</Longitude>\n    <AddressType>E911</AddressType>\n  </Address>\n  <AlternateEndUserIdentifiers>\n    <AlternateEndUserIdentifier>\n      <CallerName>OptionalCallerName</CallerName>\n      <CallbackNumber>9706542333</CallbackNumber>\n      <Identifier>blep123</Identifier>\n      <PIDFLOEnabled>true</PIDFLOEnabled>\n      <PreferredLanguage>en</PreferredLanguage>\n    </AlternateEndUserIdentifier>\n  </AlternateEndUserIdentifiers>\n</E911Order>"
                },
                "PidfloAeuiWithLocationIdE911Order": {
                  "summary": "PIDF-LO. AEUI endpoint-provisioning order with provisioned location id",
                  "value": "<E911Order>\n  <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n  <AlternateEndUserIdentifiers>\n    <AlternateEndUserIdentifier>\n      <CallerName>OptionalCallerName</CallerName>\n      <LocationId>Some32CharacterOrLessString</LocationId>\n      <CallbackNumber>9706542333</CallbackNumber>\n      <Identifier>blep123</Identifier>\n      <PIDFLOEnabled>true</PIDFLOEnabled>\n      <PreferredLanguage>en</PreferredLanguage>\n    </AlternateEndUserIdentifier>\n  </AlternateEndUserIdentifiers>\n</E911Order>"
                },
                "PidfloAndSimpleAeuiMixedPidfloAeuiAndNonPidloAeuiProvisioning911Order": {
                  "summary": "PIDF-LO and SIMPLE AEUI. Mixed PIDF-LO AEUI and Non-PIDF-LO AEUI endpoint-provisioning order",
                  "value": "<E911Order>\n  <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n  <CallerName>OptionalCallerName</CallerName>\n  <Address>\n    <LocationId>Some32CharacterOrLessString</LocationId>\n    <HouseNumber>901</HouseNumber>\n    <StreetName>MAIN CAMPUS</StreetName>\n    <StreetSuffix>DR</StreetSuffix>\n    <City>RALEIGH</City>\n    <StateCode>NC</StateCode>\n    <Zip>27606</Zip>\n    <PlusFour>5244</PlusFour>\n    <Country>United States</Country>\n    <Latitude>35.848359</Latitude>\n    <Longitude>-75.000000</Longitude>\n    <AddressType>E911</AddressType>\n  </Address>\n  <AlternateEndUserIdentifiers>\n    <AlternateEndUserIdentifier>\n      <CallerName>OptionalCallerName</CallerName>\n      <LocationId>Some32CharacterOrLessString</LocationId>\n      <CallbackNumber>9706542333</CallbackNumber>\n      <Identifier>blep123</Identifier>\n      <PIDFLOEnabled>true</PIDFLOEnabled>\n      <PreferredLanguage>en</PreferredLanguage>\n    </AlternateEndUserIdentifier>\n    <AlternateEndUserIdentifier>\n      <CallbackNumber>9706542334</CallbackNumber>\n      <Identifier>blepblop</Identifier>\n      <PIDFLOEnabled>false</PIDFLOEnabled>\n    </AlternateEndUserIdentifier>\n  </AlternateEndUserIdentifiers>\n</E911Order>"
                },
                "PidfloAndSimpleAeuiMixedPidfloAeuiAndNonPidloAeuiDeleting911Order": {
                  "summary": "PIDF-LO and SIMPLE AEUI. PIDF-LO and Non-PIDF-LO endpoint-deletion order",
                  "value": "<E911Order>\n  <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n  <AdditionalAddresses>\n    <Address>\n      <LocationId>Some32CharacterOrLessString</LocationId>\n      <HouseNumber>901</HouseNumber>\n      <StreetName>MAIN CAMPUS</StreetName>\n      <StreetSuffix>DR</StreetSuffix>\n      <City>RALEIGH</City>\n      <StateCode>NC</StateCode>\n      <Zip>27606</Zip>\n      <PlusFour>5244</PlusFour>\n      <Country>United States</Country>\n      <Latitude>35.848359</Latitude>\n      <Longitude>-75.000000</Longitude>\n      <AddressType>E911</AddressType>\n    </Address>\n    <Address>\n      <LocationId>Some32CharacterOrLessString</LocationId>\n      <HouseNumber>645</HouseNumber>\n      <PreDirectional>E</PreDirectional>\n      <StreetName>MANCHESTER</StreetName>\n      <StreetSuffix>AVE</StreetSuffix>\n      <City>LOS ANGELES</City>\n      <StateCode>United States</StateCode>\n      <Zip>90001</Zip>\n      <Country>United States</Country>\n    </Address>\n  </AdditionalAddresses>\n</E911Order>"
                },
                "PidfloAddressProvisioning911Order": {
                  "summary": "PIDF-LO. address-provisioning order",
                  "value": "<E911Order>\n  <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n  <AdditionalAddresses>\n    <Address>\n      <LocationId>Some32CharacterOrLessString</LocationId>\n      <HouseNumber>901</HouseNumber>\n      <StreetName>MAIN CAMPUS</StreetName>\n      <StreetSuffix>DR</StreetSuffix>\n      <City>RALEIGH</City>\n      <StateCode>NC</StateCode>\n      <Zip>27606</Zip>\n      <PlusFour>5244</PlusFour>\n      <Country>United States</Country>\n      <Latitude>35.848359</Latitude>\n      <Longitude>-75.000000</Longitude>\n      <AddressType>E911</AddressType>\n    </Address>\n    <Address>\n      <LocationId>Some32CharacterOrLessString</LocationId>\n      <HouseNumber>645</HouseNumber>\n      <PreDirectional>E</PreDirectional>\n      <StreetName>MANCHESTER</StreetName>\n      <StreetSuffix>AVE</StreetSuffix>\n      <City>LOS ANGELES</City>\n      <StateCode>United States</StateCode>\n      <Zip>90001</Zip>\n      <Country>United States</Country>\n    </Address>\n  </AdditionalAddresses>\n</E911Order>"
                },
                "PidfloAddressEditing911Order": {
                  "summary": "PIDF-LO. address-editing order",
                  "value": "<E911Order>\n  <AdditionalAddresses>\n    <Address>\n      <HouseNumber>645</HouseNumber>\n      <PreDirectional>E</PreDirectional>\n      <HouseSuffix>1/2</HouseSuffix>\n      <PostDirectional>S</PostDirectional>\n      <StreetName>Manchester</StreetName>\n      <StreetSuffix>AVE</StreetSuffix>\n      <AddressLine2>test address line 2</AddressLine2>\n      <City>Los Angeles</City>\n      <StateCode>CA</StateCode>\n      <Zip>90001</Zip>\n      <Latitude>35.848359</Latitude>\n      <Longitude>-75.000000</Longitude>\n      <LocationId>Some32CharacterOrLessString</LocationId>\n    </Address>\n  </AdditionalAddresses>\n</E911Order>"
                },
                "PidfloAddressDeleting911Order": {
                  "summary": "PIDF-LO. address-deletion order",
                  "value": "<E911Order>\n  <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n  <AdditionalAddresses>\n    <Address>\n      <LocationId>Some32CharacterOrLessString1</LocationId>\n    </Address>\n    <Address>\n      <LocationId>Some32CharacterOrLessString1</LocationId>\n    </Address>\n  </AdditionalAddresses>\n  <DeleteTNSpecificE911Address>true</DeleteTNSpecificE911Address>\n</E911Order>"
                },
                "SimpleAeuiNonPidfloProvisioning911Order": {
                  "summary": "SIMPLE AEUI. Non-PIDF-LO endpoint-provisioning order",
                  "value": "<E911Order>\n  <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n  <CallerName>OptionalCallerName</CallerName>\n  <Address>\n    <LocationId>Some32CharacterOrLessString</LocationId>\n    <HouseNumber>901</HouseNumber>\n    <StreetName>MAIN CAMPUS</StreetName>\n    <StreetSuffix>DR</StreetSuffix>\n    <City>RALEIGH</City>\n    <StateCode>NC</StateCode>\n    <Zip>27606</Zip>\n    <PlusFour>5244</PlusFour>\n    <Country>United States</Country>\n    <Latitude>35.848359</Latitude>\n    <Longitude>-75.000000</Longitude>\n    <AddressType>E911</AddressType>\n  </Address>\n  <AlternateEndUserIdentifiers>\n    <AlternateEndUserIdentifier>\n      <CallbackNumber>9706542333</CallbackNumber>\n      <Identifier>abc123</Identifier>\n      <PIDFLOEnabled>false</PIDFLOEnabled>\n    </AlternateEndUserIdentifier>\n  </AlternateEndUserIdentifiers>\n</E911Order>"
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ConventionalAddressProvisioningE911Order"
                  },
                  {
                    "$ref": "#/components/schemas/ConventionalAddressDeletionE911Order"
                  },
                  {
                    "$ref": "#/components/schemas/PidfloAeuiWithAdditionalAddressWithoutLocationIdE911Order"
                  },
                  {
                    "$ref": "#/components/schemas/PidfloAeuiWithAdditionalAddressWithLocationIdE911Order"
                  },
                  {
                    "$ref": "#/components/schemas/PidfloAeuiWithLocationIdE911Order"
                  },
                  {
                    "$ref": "#/components/schemas/PidfloAndSimpleAeuiMixedPidfloAeuiAndNonPidloAeuiProvisioning911Order"
                  },
                  {
                    "$ref": "#/components/schemas/PidfloAndSimpleAeuiMixedPidfloAeuiAndNonPidloAeuiDeleting911Order"
                  },
                  {
                    "$ref": "#/components/schemas/PidfloAddressProvisioning911Order"
                  },
                  {
                    "$ref": "#/components/schemas/PidfloAddressEditing911Order"
                  },
                  {
                    "$ref": "#/components/schemas/PidfloAddressDeleting911Order"
                  },
                  {
                    "$ref": "#/components/schemas/SimpleAeuiNonPidfloProvisioning911Order"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - a 201 response indicates that an order has been created.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<E911OrderResponse>\n   <E911Order>\n      <CustomerOrderId>CustomOrderId1</CustomerOrderId>\n      <orderId>1d863522-c9bf-430c-8e79-cc63cad04a1d</orderId>\n      <ProcessingStatus>RECEIVED</ProcessingStatus>\n      <TelephoneNumbers>\n         <TelephoneNumber>9706542332</TelephoneNumber>\n         <TelephoneNumber>9706542333</TelephoneNumber>\n      </TelephoneNumbers>\n      <CallerName>CustomCallerName</CallerName>\n      <Address>\n         <HouseNumber>915</HouseNumber>\n         <HouseSuffix />\n         <PreDirectional />\n         <StreetName>Elm</StreetName>\n         <StreetSuffix>Ave</StreetSuffix>\n         <PostDirectional />\n         <AddressLine2 />\n         <City>Carpinteria</City>\n         <StateCode>CA</StateCode>\n         <Zip>93013</Zip>\n         <PlusFour />\n         <County />\n         <Country />\n         <Latitude>35.848359</Latitude>\n         <Longitude>-75.000000</Longitude>\n      </Address>\n   </E911Order>\n</E911OrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/E911OrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - a 400 response indicates that the order could not be created.<br>\nError text and an error code will be provided in the ErrorList element.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<E911OrderResponse>\n   <ResponseStatus>\n      <ErrorCode>5070</ErrorCode>\n      <Description>Telephone number is invalid.</Description>\n   </ResponseStatus>\n</E911OrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/e911s/{orderid}": {
      "get": {
        "tags": [
          "DLR"
        ],
        "description": "Retrieve information about a E911 Order with specified ID. \nPlease visit <a href='/docs/numbers/guides/e911s'>Guides and Tutorials</a>",
        "operationId": "ReadE911Order",
        "summary": "Fetch E911 order status",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "E911 order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the E911 Orders query provides a broad range of information about the E911 Order identified in the URL.  Included amongst the information is:\n<ul>\n<li>ErrorList - the errors discovered with codes and explanations</li>\n<li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>\n</ul>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<E911Order>\n   <OrderCreateDate>2015-06-16T14:03:10.199Z</OrderCreateDate>\n   <AccountId>111</AccountId>\n   <CreatedByUser>admin</CreatedByUser>\n   <OrderId>8578086b-f73d-4a0f-bba6-d20399c7de31</OrderId>\n   <LastModifiedDate>2015-06-16T14:03:10.789Z</LastModifiedDate>\n   <Address>\n      <HouseNumber>901</HouseNumber>\n      <StreetName>Main Campus Drive</StreetName>\n      <City>Raleigh</City>\n      <StateCode>NC</StateCode>\n      <Zip>27606</Zip>\n      <Country>United States</Country>\n      <Latitude>35.848359</Latitude>\n      <Longitude>-75.000000</Longitude>\n   </Address>\n   <CallerName>testName111111</CallerName>\n   <CustomerOrderId>test</CustomerOrderId>\n   <ProcessingStatus>PARTIAL</ProcessingStatus>\n   <TelephoneNumbers>\n      <TelephoneNumber>3172000218</TelephoneNumber>\n      <TelephoneNumber>3172000000</TelephoneNumber>\n   </TelephoneNumbers>\n   <ErrorList>\n      <Error>\n         <Code>8003</Code>\n         <Description>Telephone numbers does not belong to this account.</Description>\n         <TelephoneNumbers>\n            <TelephoneNumber>3172000000</TelephoneNumber>\n         </TelephoneNumbers>\n      </Error>\n      <Error>\n         <Code>8009</Code>\n         <Description>Telephone numbers not in 'Inservice'</Description>\n         <TelephoneNumbers>\n            <TelephoneNumber>3172000000</TelephoneNumber>\n         </TelephoneNumbers>\n      </Error>\n   </ErrorList>\n   <!-- or, instead of TelephoneNumbers, a list of Alternative identifiers can be returned -->\n   <AlternateEndUserIdentifiers>\n      <AlternateEndUserIdentifier>\n         <PIDFLOEnabled>true</PIDFLOEnabled>\n         <Identifier>alphanumeric characters only, 1 character minimum, 30 characters maximum</Identifier>\n         <CallbackNumber>9706542332</CallbackNumber>\n         <CallerName>Eli</CallerName>\n         <PreferredLanguage>en</PreferredLanguage>\n         <LocationId>Some32CharacterOrLessString</LocationId>\n         <Address>\n            <LocationId>Some32CharacterOrLessString</LocationId>\n            <HouseNumber>915</HouseNumber>\n            <HouseSuffix />\n            <PreDirectional />\n            <StreetName>Elm</StreetName>\n            <StreetSuffix>Ave</StreetSuffix>\n            <PostDirectional />\n            <AddressLine2 />\n            <City>Carpinteria</City>\n            <StateCode>CA</StateCode>\n            <Zip>93013</Zip>\n            <PlusFour />\n            <County />\n            <Country>United States</Country>\n            <Latitude>35.848359</Latitude>\n            <Longitude>-75.000000</Longitude>\n         </Address>\n      </AlternateEndUserIdentifier>\n      <AlternateEndUserIdentifier>\n         <PIDFLOEnabled>true</PIDFLOEnabled>\n         <Identifier>alphanumeric characters only, 1 character minimum, 30 characters maximum</Identifier>\n         <CallbackNumber>9706542333</CallbackNumber>\n         <CallerName>Ethan</CallerName>\n         <PreferredLanguage>en</PreferredLanguage>\n      </AlternateEndUserIdentifier>\n   </AlternateEndUserIdentifiers>\n   <!-- or, instead of the TelephoneNumbers and Alternative identifiers, a list of Additional Addresses can be returned -->\n   <AdditionalAddresses>\n      <Address>\n         <LocationId>Some32CharacterOrLessString</LocationId>\n         <HouseNumber>915</HouseNumber>\n         <HouseSuffix />\n         <PreDirectional />\n         <StreetName>Elm</StreetName>\n         <StreetSuffix>Ave</StreetSuffix>\n         <PostDirectional />\n         <AddressLine2 />\n         <City>Carpinteria</City>\n         <StateCode>CA</StateCode>\n         <Zip>93013</Zip>\n         <PlusFour />\n         <County />\n         <Country>United States</Country>\n         <Latitude>35.848359</Latitude>\n         <Longitude>-75.000000</Longitude>\n      </Address>\n   </AdditionalAddresses>\n   <OrderType>e911</OrderType>\n</E911Order>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/E911OrderFetchResponse"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the order id does not exist in the system",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<E911OrderReportResponse>\n   <ResponseStatus>\n      <Description>The resource does not exist</Description>\n   </ResponseStatus>\n</E911OrderReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/e911s/{orderid}/history": {
      "get": {
        "tags": [
          "DLR"
        ],
        "description": "Retrieve the history information associated with an order. \nPlease visit <a href='/docs/numbers/guides/e911s'>Guides and Tutorials</a>",
        "operationId": "ReadE911OrderHistory",
        "summary": "Read E911 order history",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "E911 order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "8578086b-f73d-4a0f-bba6-d20399c7de31"
          }
        ],
        "responses": {
          "200": {
            "description": "The history payload is a set of history records, each of which contains:\n    <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n        <tbody>\n            <tr>\n                <td>OrderModifiedDate</td>\n                <td>The date that the order history event happened</td>\n            </tr>\n            <tr>\n                <td>Status</td>\n                <td>The new state of the E911 order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED </td>\n            </tr>\n            <tr>\n                <td>Note</td>\n                <td>A Note or additional information included with the state change </td>\n           </tr>\n           <tr>\n                <td>Author</td>\n                <td>The user id that implemented the state change</td>\n            </tr>\n        </tbody>\n    </table>",
            "content": {
              "application/xml": {
                "examples": {
                  "application/xml": {
                    "description": "application/xml",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<OrderHistoryWrapper>\n   <OrderHistory>\n      <OrderDate>2014-09-04T16:28:11.320Z</OrderDate>\n      <Note>...</Note>\n      <Author>jbm</Author>\n      <Status>RECEIVED</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2014-09-04T16:28:18.742Z</OrderDate>\n      <Note>...</Note>\n      <Author>jbm</Author>\n      <Status>PROCESSING</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2014-09-05T19:00:17.968Z</OrderDate>\n      <Note>...</Note>\n      <Author>jbm</Author>\n      <Status>COMPLETE</Status>\n   </OrderHistory>\n</OrderHistoryWrapper>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the order id does not exist in the system",
            "content": {
              "application/xml": {
                "examples": {
                  "application/xml": {
                    "description": "application/xml",
                    "value": null
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencyNotificationRecipients": {
      "get": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "Retrieve a list of emergency notification recipients configured for this account. <br>\n Results can be paginated and filtered using the following query parameters.",
        "operationId": "ListEmergencyNotificationRecipients",
        "summary": "List emergency notification recipients",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "modifiedByUser",
            "description": "Include results only for orders last modified by the user specified in this parameter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "testuser"
          },
          {
            "name": "enrNotificationType",
            "description": "The type of notification specified for Emergency Notification Recipients returned",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "EMAIL",
                "SMS",
                "TTS",
                "CALLBACK"
              ]
            },
            "example": "EMAIL"
          },
          {
            "name": "enrRecipient",
            "description": "The notification recipient: either a Message Service telephone number, a Voice telephone number, an email address, or a callback URL. (Returns all Notification Recipients that start with the specified recipient value)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "9195551212"
          },
          {
            "name": "enrCallbackUsername",
            "description": "The callback username in all CALLBACK type Emergency Notification Recipients returned",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "testuser"
          },
          {
            "name": "page",
            "description": "This represents the position in the data set from which you want your output to begin. If this parameter is omitted, results will include Emergency Notification Recipients last modified on or before the current date and time. If a date and time is provided, results will include Emergency Notification Recipients last modified on or before that date and time. Date/time format is YYYY-MM-DDTHH:MM:SS.mmmZ, where the Z indicate UTC time, or YYYY-MM-DDTHH:MM:SS.mmm-hh:mm, where \"-hh:mm\" represents the local time offset, plus or minus, from UTC time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "now",
              "format": "date-time"
            },
            "example": "2020-03-15T14:00:00.000-04:00"
          },
          {
            "name": "size",
            "description": "The maximum number of Emergency Notification Recipient results to include in the response payload. This value may be between 1 and 500",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1,
              "maximum": 500
            },
            "example": 250
          },
          {
            "name": "groupCount",
            "description": "If GroupCount is true, each notification recipient in the response will include a GroupCount representing how many notification groups it is associated with",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "example": "true"
          },
          {
            "name": "uriSubstring",
            "description": "Returns all Emergency Notification Recipients that contain this value, whether that value is a substring or partial value of the recipient or a recipient TYPE",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "foo"
          }
        ],
        "responses": {
          "200": {
            "description": "<p>Successful response</p> <br> The \"Links\" element includes two links.  The link called \"first\" is the link to the first set of results for the query that was submitted.  If there are more than \"Size\" results, a link called \"next\" is included to help you retrieve the next set of results up to \"Size\" elements. If the results of the query, filtered by the query parameters, do not return any results, the payload will contain empty tag \"EmergencyNotificationRecipients\"",
            "content": {
              "application/xml": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientsResponseWithCallback"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientsResponseWithEmail"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientsResponseWithSms"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientsResponseWithTts"
                    }
                  ]
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<Links>\n\t\t<!-- The 'first' link always gets the most recent results. -->\n\t\t<first> -- link to first page of results -- </first>\n\t\t<!-- If the 'next' link is present, there are more than 'size' results. -->\n\t\t<!-- Use the 'next' link to fetch the next set of results. -->\n\t\t<next> -- link to next page of results -- </next>\n\t</Links>\n\t<EmergencyNotificationRecipients>\n\t\t<EmergencyNotificationRecipient>\n\t\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t\t<CreatedDate>2020-03-18T21:26:47.403Z</CreatedDate>\n\t\t\t<LastModifiedDate>2020-03-18T21:26:47.403Z</LastModifiedDate>\n\t\t\t<ModifiedByUser>testuser</ModifiedByUser>\n\t\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t\t<Type>CALLBACK</Type>\n\t\t\t<Callback>\n\t\t\t\t<Url>https://foo.bar/baz</Url>\n\t\t\t\t<Credentials>\n\t\t\t\t\t<Username>testuser</Username>\n\t\t\t\t\t<!-- CallbackPassword is omitted for security -->\n\t\t\t\t</Credentials>\n\t\t\t</Callback>\n\t\t</EmergencyNotificationRecipient>\n\t\t<EmergencyNotificationRecipient>\n\t\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t\t<CreatedDate>2020-03-22T12:13:25.782Z</CreatedDate>\n\t\t\t<LastModifiedDate>2020-03-22T12:13:25.782Z</LastModifiedDate>\n\t\t\t<ModifiedByUser>gfranklin</ModifiedByUser>\n\t\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t\t<Type>EMAIL</Type>\n\t\t\t<EmailAddress>fred@gmail.com</EmailAddress>\n\t\t</EmergencyNotificationRecipient>\n\t\t<EmergencyNotificationRecipient>\n\t\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t\t<CreatedDate>2020-03-25T17:04:53.042Z</CreatedDate>\n\t\t\t<LastModifiedDate>2020-03-25T17:04:53.042Z</LastModifiedDate>\n\t\t\t<ModifiedByUser>msimpson</ModifiedByUser>\n\t\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t\t<Type>SMS</Type>\n\t\t\t<Sms>\n\t\t\t\t<TelephoneNumber>12015551212</TelephoneNumber>\n\t\t\t</Sms>\n\t\t</EmergencyNotificationRecipient>\n\t\t<EmergencyNotificationRecipient>\n\t\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t\t<CreatedDate>2020-03-29T20:14:01.736Z</CreatedDate>\n\t\t\t<LastModifiedDate>2020-03-29T20:17:53.294Z</LastModifiedDate>\n\t\t\t<ModifiedByUser>lsimpson</ModifiedByUser>\n\t\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t\t<Type>TTS</Type>\n\t\t\t<Tts>\n\t\t\t\t<TelephoneNumber>12015551212</TelephoneNumber>\n\t\t\t</Tts>\n\t\t</EmergencyNotificationRecipient>\n\t</EmergencyNotificationRecipients>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "<p>Bad request </p><br> <p><b>Condition:</b> Unrecognized query parameter <br> <b>Error Description:</b>Query parameter xxx is not recognized. </p> <br> <p><b>Condition:</b>Unsupported value for query parameter <br> <b>Error Description:</b>Invalid value xxx for query parameter yyy. Supported values are aaa, bbb, etc. </p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b>User does not have permission to view emergency notification recipients, either due to Role/Permission or because the account is not configured for Emergency Notification Config.<br> <b>Error Description:</b>Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied </Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "Create a new emergency notification recipient.",
        "summary": "Create emergency notification recipient",
        "operationId": "CreateEmergencyNotificationRecipient",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientCallback"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientSms"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientTts"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientEmail"
                  }
                ]
              },
              "examples": {
                "email": {
                  "description": "Sample request payload for an EMAIL recipient",
                  "value": "<EmergencyNotificationRecipient>\n\t<Description>Email to Bldg. 3 Front Desk</Description>\n\t<Type>EMAIL</Type>\n\t<EmailAddress>foo@bar.com</EmailAddress>\n</EmergencyNotificationRecipient>"
                },
                "sms": {
                  "description": "Sample request payload for an SMS recipient",
                  "value": "<EmergencyNotificationRecipient>\n\t<Description>Text message to guard shack</Description>\n\t<Type>SMS</Type>\n\t<Sms> \n\t\t<TelephoneNumber>12015551212</TelephoneNumber>\n\t</Sms>\n</EmergencyNotificationRecipient>"
                },
                "tts": {
                  "description": "Sample request payload for an TTS recipient",
                  "value": "<EmergencyNotificationRecipient>\n\t<Description>Voice call notification to Susan Jones</Description>\n\t<Type>TTS</Type>\n\t<Tts>\n\t\t<TelephoneNumber>12015551212</TelephoneNumber>\n\t</Tts>\n</EmergencyNotificationRecipient>"
                },
                "callback": {
                  "description": "Sample request payload for an CALLBACK recipient",
                  "value": "<EmergencyNotificationRecipient>\n<Description>Callback to property management system</Description>\n\t<Type>CALLBACK</Type>\n\t<Callback>\n\t\t<Url>https://foo.bar/baz</Url>\n\t\t<Credentials>\n\t\t\t<Username>testuser</Username>\n\t\t\t<Password>x23388%SLHss</Password>\n\t\t</Credentials>\n\t</Callback>\n</EmergencyNotificationRecipient>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "<p>Successful response </p><br> <p> <b>Emergency notification recipient response elements</b> <br> The following fields are present only in the success response.  For request fields, please see the request tab. </p> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Parameter</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Identifier </p> </td> <td width=\"351\" valign=\"top\"> <p> a system-assigned unique identifier for the Emergency Notification Recipient. This field is not present in the request, but mandatory in the success response.  This identifier can be used as a key to fetch the emergency notification recipient instance later.  This value will be used as the EVS Notification ID. </p> </td> </tr> <tr> <td valign=\"top\"> <p> CreatedDate </p> </td> <td width=\"351\" valign=\"top\"> <p> the date and time in UTC when the emergency notification recipient was created. </p> </td> </tr> <tr> <td valign=\"top\"> <p> LastModifiedDate </p> </td> <td width=\"351\" valign=\"top\"> <p> the date and time in UTC when the emergency notification recipient was last modified.  If this date and time is the same as the CreatedDate, the recipient has never been modified. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ModifiedByUser </p> </td> <td width=\"351\" valign=\"top\"> <p> the Bandwidth Dashboard username of the last person to create or modify this emergency notification recipient. </p> </td> </tr> </tbody> </table>",
            "content": {
              "application/xml": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithEmail"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithCallback"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithSms"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithTts"
                    }
                  ]
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<EmergencyNotificationRecipient>\n\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t<CreatedDate>2020-03-18T21:26:47.403Z</CreatedDate>\n\t\t<LastModifiedDate>2020-03-18T21:26:47.403Z</LastModifiedDate>\n\t\t<ModifiedByUser>testuser</ModifiedByUser>\n\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t<Type>CALLBACK</Type>\n\t\t<Callback>\n\t\t\t<Url>https://foo.bar/baz</Url>\n\t\t\t<Credentials>\n\t\t\t\t<Username>testuser</Username>\n\t\t\t\t<!-- CallbackPassword is omitted for security -->\n\t\t\t</Credentials>\n\t\t</Callback>\n\t</EmergencyNotificationRecipient>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing or empty description </p> </td> <td width=\"351\" valign=\"top\"> <p> Description must be present and non-empty. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing type </p> </td> <td width=\"351\" valign=\"top\"> <p> Type is a mandatory element. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Unrecognized type value </p> </td> <td width=\"351\" valign=\"top\"> <p> Type value must be one of 'EMAIL', 'SMS', 'TTS', or 'CALLBACK'. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing data required for type - for example, type is EMAIL, but no EmailAddress element is present. </p> </td> <td width=\"351\" valign=\"top\"> <p> When Type xxx is specified, yyy must be included., where xxx is one of the type values and yyy is the element that is missing. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed email </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid EmailAddress.  Format should be foo@bar.com.  Max length is 254 characters. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed telephone number </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid TelephoneNumber.  Telephone number must be 11 digits in format 1NPANXXXXXX. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed url </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Url.  Format should be https://foo.bar[?param=val]. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed username </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Username.  Username must be between 1 and 32 characters. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed password </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Password.  Password must be between 1 and 256 characters. </p> </td> </tr> </tbody> </table>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure emergency notification recipients, either due to Role/Permission or because the account is not enabled for Emergency Notifications. <br> <b>Error Description:</b> Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied </Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "409": {
            "description": "<p>Conflict <br> <p> <b>Condition:</b> Duplicate entry <br> <b>Error Description:</b> An entry with an identical recipient already exists. Identifier xxx., where xxx is replaced with the emergency notification recipient Identifier of the existing entry.</p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>An entry with an identical recipient already exists. Identifier xxx., where xxx is replaced with the emergency notification recipient Identifier of the existing entry.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencyNotificationRecipients/{enrId}": {
      "get": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "The GET operation is used to fetch the emergency notification recipient specified by its identifier. <br>\nURI parameters:</p>\n\n<ul>\n  <li>\n  <b>accountId</b> - the account id of the account to which the emergency notification recipient belongs\n  </li>\n  <li>\n  <b>enrId</b> - the identifier assigned to the emergency notification recipient when it was created\n  </li>\n</ul>",
        "operationId": "RetrieveEmergencyNotificationRecipient",
        "summary": "Retrieve emergency notification recipient",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "enrId",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "23c4b891513e48c6a7ede53abd3449"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/xml": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithEmail"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithCallback"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithSms"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithTts"
                    }
                  ]
                },
                "examples": {
                  "email": {
                    "description": "For an EMAIL type emergency notification recipient",
                    "value": "<EmergencyNotificationRecipientsResponse>\n\t<EmergencyNotificationRecipient>\n\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t<CreatedDate>2020-03-20T14:04:28.778Z</CreatedDate>\n\t\t<LastModifiedDate>2020-03-20T14:04:28.778Z</LastModifiedDate>\n\t\t<ModifiedByUser>wchurchill</ModifiedByUser>\n\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t<Type>EMAIL</Type>\n\t\t<EmailAddress>fred@gmail.com</EmailAddress>\n\t</EmergencyNotificationRecipient>\n</EmergencyNotificationRecipientsResponse>"
                  },
                  "sms": {
                    "description": "For an SMS type emergency notification recipient",
                    "value": "<EmergencyNotificationRecipientsResponse>\n\t<EmergencyNotificationRecipient>\n\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t<CreatedDate>2020-03-28T15:45:01.371Z</CreatedDate>\n\t\t<LastModifiedDate>2020-03-29T18:59:42.220Z</LastModifiedDate>\n\t\t<ModifiedByUser>deisenhower</ModifiedByUser>\n\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t<Type>SMS</Type>\n\t\t<Sms>\n\t\t\t<TelephoneNumber>12015551212</TelephoneNumber>\n\t\t</Sms>\n\t</EmergencyNotificationRecipient>\n</EmergencyNotificationRecipientsResponse>"
                  },
                  "tts": {
                    "description": "For an TTS type emergency notification recipient",
                    "value": "<EmergencyNotificationRecipientsResponse>\n\t<EmergencyNotificationRecipient>\n\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t<CreatedDate>2020-03-30T22:14:30.443Z</CreatedDate> \n\t\t<LastModifiedDate>2020-03-30T22:14:30.443Z</LastModifiedDate>\n\t\t<ModifiedByUser>frooseveldt</ModifiedByUser>\n\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t<Type>TTS</Type>\n\t\t<Tts>\n\t\t\t<TelephoneNumber>12015551212</TelephoneNumber>\n\t\t</Tts>\n\t</EmergencyNotificationRecipient>\n</EmergencyNotificationRecipientsResponse>"
                  },
                  "callback": {
                    "description": "For an CALLBACK type emergency notification recipient",
                    "value": "<EmergencyNotificationRecipientsResponse>\n\t<EmergencyNotificationRecipient>\n\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t<CreatedDate>2020-03-18T21:26:47.403Z</CreatedDate>\n\t\t<LastModifiedDate>2020-04-01T18:32:22.316Z</LastModifiedDate>\n\t\t<ModifiedByUser>testuser</ModifiedByUser>\n\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t<Type>CALLBACK</Type>\n\t\t<Callback>\n\t\t\t<Url>https://foo.bar/baz</Url>\n\t\t\t<Credentials>\n\t\t\t\t<Username>testuser</Username>\n\t\t\t\t<!-- CallbackPassword is omitted for security -->\n\t\t\t</Credentials>\n\t\t</Callback>\n\t</EmergencyNotificationRecipient>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b> User does not have permission to view emergency notification recipients, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>Access Denied </Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "<p>The resource does not exist <br> <p><b>Condition:</b> The emergency notification recipient identifier does not exist, or does not exist for the specified account id. <br> <b>Error Description:</b> The resource does not exist </p> <br></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>The resource does not exist</Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "The PUT operation is used to replace an emergency notification recipient without changing its identifier value.  All emergency notification recipient fields must be specified, even if they are not changing.",
        "operationId": "UpdateEmergencyNotificationRecipient",
        "summary": "Update emergency notification recipient",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "enrId",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "23c4b891513e48c6a7ede53abd3449"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientCallback"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientSms"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientTts"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientEmail"
                  }
                ]
              },
              "examples": {
                "email": {
                  "description": "Sample request payload for an EMAIL recipient:",
                  "value": "<EmergencyNotificationRecipient>\n\t<Description>Email to Bldg. 3 Front Desk</Description>\n\t<Type>EMAIL</Type>\n\t<EmailAddress>foo@bar.com</EmailAddress>\n</EmergencyNotificationRecipient>"
                },
                "sms": {
                  "description": "Sample request payload for an SMS recipient:",
                  "value": "<EmergencyNotificationRecipient>\n\t<Description>Text message to guard shack</Description>\n\t<Type>SMS</Type>\n\t<Sms>\n\t\t<TelephoneNumber>12015551212</TelephoneNumber>\n\t</Sms>\n</EmergencyNotificationRecipient>"
                },
                "tts": {
                  "description": "Sample request payload for an TTS recipient:",
                  "value": "<EmergencyNotificationRecipient>\n\t<Description>Voice call notification to Susan Jones</Description>\n\t<Type>TTS</Type>\n\t<Tts>\n\t\t<TelephoneNumber>12015551212</TelephoneNumber>\n\t</Tts>\n</EmergencyNotificationRecipient>"
                },
                "callback": {
                  "description": "Sample request payload for an CALLBACK recipient:",
                  "value": "<EmergencyNotificationRecipient>\n\t<Description>Callback to property management system</Description>\n\t<Type>CALLBACK</Type>\n\t<Callback>\n\t\t<Url>https://foo.bar/baz</Url>\n\t\t<Credentials>\n\t\t\t<Username>testuser</Username>\n\t\t\t<Password>x23388%SLHss</Password>\n\t\t</Credentials>\n\t</Callback>\n</EmergencyNotificationRecipient>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/xml": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithEmail"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithCallback"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithSms"
                    },
                    {
                      "$ref": "#/components/schemas/EmergencyNotificationRecipientResponseWithTts"
                    }
                  ]
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<EmergencyNotificationRecipient>\n\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t<CreatedDate>2020-03-18T21:26:47.403Z</CreatedDate>\n\t\t<LastModifiedDate>2020-04-01T18:32:22.316Z</LastModifiedDate>\n\t\t<ModifiedByUser>testuser</ModifiedByUser>\n\t\t<Description>This is a description of the emergency notification recipient.</Description>\n\t\t<Type>CALLBACK</Type>\n\t\t<Callback>\n\t\t\t<Url>https://foo.bar/baz</Url>\n\t\t\t<Credentials>\n\t\t\t\t<Username>testuser</Username>\n\t\t\t\t<!-- CallbackPassword is omitted for security -->\n\t\t\t</Credentials>\n\t\t</Callback>\n\t</EmergencyNotificationRecipient>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "<p>Bad request <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing or empty description </p> </td> <td width=\"351\" valign=\"top\"> <p> Description must be present and non-empty. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing type </p> </td> <td width=\"351\" valign=\"top\"> <p> Type is a mandatory element. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Unrecognized type value </p> </td> <td width=\"351\" valign=\"top\"> <p> Type value must be one of 'EMAIL', 'SMS', 'TTS', or 'CALLBACK'. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing data required for type - for example, type is EMAIL, but no EmailAddress element is present. </p> </td> <td width=\"351\" valign=\"top\"> <p> When Type xxx is specified, yyy must be included., where xxx is one of the type values and yyy is the element that is missing. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed email </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid EmailAddress.  Format should be foo@bar.com.  Max length is 254 characters. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed telephone number </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid TelephoneNumber.  Telephone number must be 11 digits in format 1NPANXXXXXX. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed url </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Url.  Format should be https://foo.bar[?param=val]. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed username </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Username.  Username must be between 1 and 32 characters. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Malformed password </p> </td> <td width=\"351\" valign=\"top\"> <p> Invalid Password.  Password must be between 1 and 256 characters. </p> </td> </tr> </tbody> </table></p>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure emergency notification recipients, either due to Role/Permission or because the account is not enabled for Emergency Notifications. <br> <b>Error Description:</b> Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>Access Denied </Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "<p>The resource does not exist</p> <br> <p> <b>Condition:</b> Specified emergency notification recipient ID does not exist for this account <br> <b>Error Description:</b> The resource does not exist </p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>The resource does not exist</Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "409": {
            "description": "<p>Conflict</p><p> <b>Condition:</b> Duplicate entry <br> <b>Error Description:</b> An entry with an identical recipient already exists. Identifier xxx., where xxx is replaced with the emergency notification recipient Identifier of the existing entry. </p>"
          }
        }
      },
      "delete": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "The DELETE operation is used to remove the emergency notification recipient specified by its identifier. <br><br>\nAn emergency notification recipient cannot be removed if it is still used by an emergency notification group.\n If you wish to remove an emergency notification recipient that is associated with an emergency notificaiton group, use the /account/{accountId}/emergencyNotificationGroupOrders endpoint to remove the group or modify the group to no longer use this emergency notification recipient.\nURI parameters:\n    <ul>\n      <li>\n      <b>accountId</b> - the account id of the account to which the emergency notification recipient belongs\n      </li>\n      <li>\n      <b>enrId</b> - the identifier assigned to the emergency notification recipient when it was created\n      </li>\n    </ul>",
        "operationId": "DeleteEmergencyNotificationRecipient",
        "summary": "Delete emergency notification recipient",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "enrId",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "23c4b891513e48c6a7ede53abd3449"
          }
        ],
        "responses": {
          "200": {
            "description": "<p>Sussessful response</p> <br> The DELETE request has no payload. The 200 response also has no payload"
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure emergency notification recipients, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied </Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "<p>The resource does not exist <br> <p><b>Condition:</b> The emergency notification recipient identifier does not exist, or does not exist for the specified account id. <br> <b>Error Description:</b> The resource does not exist </p> <br></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>The resource does not exist</Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          },
          "409": {
            "description": "<p>Conflict <br> <p> <b>Condition:</b> Attempt to delete an emergency notification recipient that is referenced by an emergency notification group. <br> <b>Error Description:</b> Emergency notification recipient with identifier xxx is being used by emergency notification group with identifier yyy. Please remove the recipient reference from the group prior to removing the recipient., where xxx is replaced by the emergency notification recipient ID and yyy is replaced by the emergency notification group ID. </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationRecipientsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>Emergency notification recipient with identifier xxx is being used by emergency notification group with identifier yyy. Please remove the recipient reference from the group prior to removing the recipient., where xxx is replaced by the emergency notification recipient ID and yyyis replaced by the emergency notification group ID. </Description>\n\t</ResponseStatus>\n</EmergencyNotificationRecipientsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencyNotificationGroupOrders": {
      "get": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "The GET operation provides a means of fetching all of the emergency notification group order history for an account",
        "operationId": "ListEmergencyNotificationGroupOrders",
        "summary": "List emergency notification group orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "createdAfterDate",
            "description": "Include results only for orders having order creation date and time after the date and time specified in this parameter. Note that inclusion of this parameter reverses the default sort order of the results to ascending in date/time (i.e. from oldest to newest). If you are looking for the `createdBeforeDate` query parameter, please see the Page parameter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-03-15T14:00:00.000-04:00"
          },
          {
            "name": "createdByUser",
            "description": "Include results only for orders created by the user specified in this parameter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "testuser"
          },
          {
            "name": "processingStatus",
            "description": "Include results only for orders with specified status in this parameter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "FAILED",
                "COMPLETED"
              ]
            },
            "example": "COMPLETED"
          },
          {
            "name": "customerOrderId",
            "description": "Include results only for orders having the specified customer order id value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "j3jljkd8"
          },
          {
            "name": "engId",
            "description": "The Identifier of an Emergency Notification Group that was altered by an order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "63865500-0904-46b1-9b4f-7bd237a26363"
          },
          {
            "name": "engDescription",
            "description": "A substring that will exist in the emergency notification group Description for all returned Emergency Notification Endpoint Orders",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "3rd floor"
          },
          {
            "name": "eepTns",
            "description": "Include results only for orders having EepTns that start with the specified digit string",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minLength": 1,
              "maxLength": 11
            },
            "example": "404"
          },
          {
            "name": "eepAeuiIds",
            "description": "Include results only for orders having EepAeuiIds that start with the specified character string",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 30
            },
            "example": "Joe"
          },
          {
            "name": "page",
            "description": "This represents the position in the data set from which you want your output to begin. If this parameter is omitted, results will include Emergency Notification Endpoint Orders created on or before the current date and time. If a date and time is provided, results will include Emergency Notification Endpoint Orders created on or before that date and time. Date/time format is YYYY-MM-DDTHH:MM:SS.mmmZ, where the Z indicate UTC time, or YYYY-MM-DDTHH:MM:SS.mmm-hh:mm, where \"-hh:mm\" represents the local time offset, plus or minus, from UTC time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "now",
              "format": "date-time"
            },
            "example": "2020-03-15T14:00:00.000-04:00"
          },
          {
            "name": "size",
            "description": "The maximum number of Emergency Notification Endpoint Order results to include in the response payload",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1,
              "maximum": 500
            },
            "example": 250
          }
        ],
        "responses": {
          "200": {
            "description": "<p>Successful response </p> <br> The \"Links\" element includes two links.  The link called \"first\" is the link to the first set of results for the query that was submitted. If there are more than \"Size\" results, a link called \"next\" is included to help you retrieve the next set of results up to \"Size\" elements. <br> If the results of the query, filtered by the query parameters, do not return any results, the payload will contain empty tag \"EmergencyNotificationGroupOrders\"",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyNotificationGroupOrdersResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<Links>\n\t\t<first>Link=&lt;https://dashboard.bandwidth.com/api/accounts/12346371/emergencyNotificationGroupOrders&gt;;rel=\"first\";</first>\n\t</Links>\n\t<EmergencyNotificationGroupOrders>\n\t\t<EmergencyNotificationGroupOrder>\n\t\t\t<OrderId>092815dc-9ced-4d67-a070-a80eb243b914</OrderId>\n\t\t\t<OrderCreatedDate>2020-04-29T15:40:01.449Z</OrderCreatedDate>\n\t\t\t<CreatedBy>systemUser</CreatedBy>\n\t\t\t<ProcessingStatus>COMPLETED</ProcessingStatus>\n\t\t\t<CustomerOrderId>QTWeKMys</CustomerOrderId>\n\t\t\t<AddedEmergencyNotificationGroup>\n\t\t\t\t<Identifier>6daa55e1-e499-4cf0-9f3d-9524215f1bee</Identifier>\n\t\t\t\t<Description>enr test description 3</Description>\n\t\t\t\t<AddedEmergencyNotificationRecipients>\n\t\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t\t<Identifier>44f203915ca249b7b69bbc084af09a</Identifier>\n\t\t\t\t\t\t<Description>TestDesc SEHsbDMM</Description>\n\t\t\t\t\t\t<Type>SMS</Type>\n\t\t\t\t\t\t<Sms>\n\t\t\t\t\t\t\t<TelephoneNumber>15638765448</TelephoneNumber>\n\t\t\t\t\t\t</Sms>\n\t\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t\t</AddedEmergencyNotificationRecipients>\n\t\t\t</AddedEmergencyNotificationGroup>\n\t\t</EmergencyNotificationGroupOrder>\n\t<EmergencyNotificationGroupOrder>\n\t\t<OrderId>89b4e0a1-2789-43fb-b948-38d368159142</OrderId>\n\t\t<OrderCreatedDate>2020-04-29T15:39:59.325Z</OrderCreatedDate>\n\t\t<CreatedBy>systemUser</CreatedBy>\n\t\t<ProcessingStatus>COMPLETED</ProcessingStatus>\n\t\t<CustomerOrderId>SDWupQpf</CustomerOrderId>\n\t\t<AddedEmergencyNotificationGroup>\n\t\t\t<Identifier>b49fa543-5bb3-4b9d-9213-96c8b63e77f5</Identifier>\n\t\t\t<Description>enr test description 2</Description>\n\t\t\t<AddedEmergencyNotificationRecipients>\n\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t<Identifier>c719e060a6ba4212a2c0642b87a784</Identifier>\n\t\t\t\t\t\t<Description>TestDesc zscxcAGG</Description>\n\t\t\t\t\t\t<Type>SMS</Type>\n\t\t\t\t\t\t<Sms>\n\t\t\t\t\t\t\t<TelephoneNumber>15678765448</TelephoneNumber>\n\t\t\t\t\t</Sms>\n\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t<Identifier>93ad72dfe59c4992be6f8aa625466d</Identifier>\n\t\t\t\t\t<Description>TestDesc RTflsKBz</Description>\n\t\t\t\t\t<Type>TTS</Type>\n\t\t\t\t\t<Tts>\n\t\t\t\t\t\t<TelephoneNumber>17678765449</TelephoneNumber>\n\t\t\t\t\t</Tts>\n\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t</AddedEmergencyNotificationRecipients>\n\t\t</AddedEmergencyNotificationGroup>\n\t</EmergencyNotificationGroupOrder>\n\t<EmergencyNotificationGroupOrder>\n\t\t<OrderId>247d1425-4247-4b27-99d8-83ce30038b14</OrderId>\n\t\t\t<OrderCreatedDate>2020-04-29T15:39:57.058Z</OrderCreatedDate>\n\t\t\t<CreatedBy>systemUser</CreatedBy>\n\t\t\t<ProcessingStatus>COMPLETED</ProcessingStatus>\n\t\t\t<CustomerOrderId>vgshuNMB</CustomerOrderId>\n\t\t\t<AddedEmergencyNotificationGroup>\n\t\t\t\t<Identifier>69a3d588-f314-42ca-8726-faa824bdf4be</Identifier>\n\t\t\t\t<Description>eng test description</Description>\n\t\t\t\t<AddedEmergencyNotificationRecipients>\n\t\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t\t<Identifier>aab78f87074940f1aaaf1c9658be4b</Identifier>\n\t\t\t\t\t\t<Description>enr test description</Description>\n\t\t\t\t\t\t<Type>EMAIL</Type>\n\t\t\t\t\t\t<EmailAddress>testEmail@gmail.com</EmailAddress>\n\t\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t\t<Identifier>852e9eee161b4da6823c91173b05c4</Identifier>\n\t\t\t\t\t\t<Description>TestDesc WkHqpnNH</Description>\n\t\t\t\t\t\t<Type>TTS</Type>\n\t\t\t\t\t\t<Tts>\n\t\t\t\t\t\t\t<TelephoneNumber>15678765449</TelephoneNumber>\n\t\t\t\t\t\t</Tts>\n\t\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t\t</AddedEmergencyNotificationRecipients>\n\t\t\t</AddedEmergencyNotificationGroup>\n\t\t</EmergencyNotificationGroupOrder>\n\t</EmergencyNotificationGroupOrders>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "<p>Bad request</p> <br> <p><b>Condition:</b> Unrecognized query parameter <br> <b>Error Description:</b>Query parameter xxx is not recognized. </p> <br> <p><b>Condition:</b>Unsupported value for query parameter <br> <b>Error Description:</b>Invalid value xxx for query parameter yyy. Supported values are aaa, bbb, etc. </p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b>User does not have permission to view emergency notification group orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config.<br> <b>Error Description:</b>Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "The POST operation is used to create an order to create, update, or delete an emergency notification group.",
        "operationId": "CreateEmergencyNotificationGroupOrder",
        "summary": "Create emergency notification group order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationGroupOrderForAddGroup"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationGroupOrderForDeleteGroup"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationGroupOrderForUpdateGroup"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationGroupOrderForUpdateGroupByAddingRecipient"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationGroupOrderForUpdateGroupByRemovingRecipient"
                  }
                ]
              },
              "examples": {
                "Simple response": {
                  "value": "<EmergencyNotificationGroupOrder>\n\t<CustomerOrderId>UbOxhMnp</CustomerOrderId>\n\t<AddedEmergencyNotificationGroup>\n\t\t<Description>JgHzUzIchD</Description>\n\t\t<AddedEmergencyNotificationRecipients>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>c7f74671edd8410d9a4c0f8e985e0a</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>74ac30535b414d29bc36d50572f553</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>b910df3245ce4192aee052f583259f</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t</AddedEmergencyNotificationRecipients>\n\t</AddedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrder>"
                },
                "Deleting group": {
                  "description": "Deleting an emergency notification group",
                  "value": "<EmergencyNotificationGroupOrder>\n\t<CustomerOrderId>JvvEOKOP</CustomerOrderId>\n\t<DeletedEmergencyNotificationGroup>\n\t\t<Identifier>52897b97-3592-43fe-aa3f-857cf96671ee</Identifier>\n\t</DeletedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrder>"
                },
                "Updating description": {
                  "description": "Updating an emergency notification group by changing its description",
                  "value": "<EmergencyNotificationGroupOrder>\n\t<ModifiedEmergencyNotificationGroup>\n\t\t<Identifier>38ba2379-b4e6-452b-a350-1fa524b6f75a</Identifier>\n\t\t<Description>new Desc</Description>\n\t</ModifiedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrder>"
                },
                "Adding recipients": {
                  "description": "Updating an emergency notification group by adding emergency notification recipients",
                  "value": "<EmergencyNotificationGroupOrder>\n\t<ModifiedEmergencyNotificationGroup>\n\t\t<Identifier>a6d00a2d-94ee-4ecb-9bd8-7c2dde258863</Identifier>\n\t\t<AddedEmergencyNotificationRecipients>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>d81dcc9526d54cad9dbf076c4e6461</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t</AddedEmergencyNotificationRecipients>\n\t</ModifiedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrder>"
                },
                "Removing recipients": {
                  "description": "Updating an emergency notification group by removing emergency notification recipients",
                  "value": "<EmergencyNotificationGroupOrder>\n\t<ModifiedEmergencyNotificationGroup>\n\t\t<Identifier>a97149dc-586c-419d-a054-6b3d352ea8af</Identifier>\n\t\t<DeletedEmergencyNotificationRecipients>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>ebce6adfb6e94a8a80bc16841b4697</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t</DeletedEmergencyNotificationRecipients>\n\t</ModifiedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrder>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "<p>Successfull response </p> <br> <p> <b>Emergency notification group order response elements:</b> <br> </p> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Parameter</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> OrderId </p> </td> <td width=\"351\" valign=\"top\"> <p> A system-assigned unique identifier assigned to this order.  Use this order id to fetch the status of the order. </p> </td> </tr> <tr> <td valign=\"top\"> <p> OrderCreatedDate </p> </td> <td width=\"351\" valign=\"top\"> <p> The UTC date and time at which this order was created. </p> </td> </tr> <tr> <td valign=\"top\"> <p> CreatedBy </p> </td> <td width=\"351\" valign=\"top\"> <p> The username of the user that created this order. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ProcessingStatus </p> </td> <td width=\"351\" valign=\"top\"> <p>The processing status of this order. Values may be:<b></b> PROCESSING, COMPLETED, FAILED.  PROCESSING means that the system is still processing the order.  COMPLETED means that the order has been successfully completed.  FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Identifier </p> </td> <td width=\"351\" valign=\"top\"> <p>A system-assigned unique identifier for the Emergency Notification Group.  This field is not present in the request, but mandatory in the success response.  This identifier can be used as a key to fetch the emergency notification group instance later. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ErrorList </p> </td> <td width=\"351\" valign=\"top\"> <p>A list, possibly empty, of errors affecting emergency notification group updates.  The ErrorList will be empty for orders that are COMPLETED.  It will be non-empty for orders that FAILED. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ErrorList Description </p> </td> <td width=\"351\" valign=\"top\"> <p> If an emergency notification group operation failed for some reason, this text describes the reason for the failure. </p> </td> </tr> </tbody> </table>",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyNotificationGroupOrderResponse"
                },
                "examples": {
                  "Simple response": {
                    "value": "<EmergencyNotificationGroupOrderResponse>\n<OrderId>900b3646-18df-4626-b237-3a8de648ebf6</OrderId>\n\t<OrderCreatedDate>2020-04-29T15:27:16.151</OrderCreatedDate>\n\t<CreatedBy>systemUser</CreatedBy>\n\t<ProcessingStatus>PROCESSING</ProcessingStatus>\n\t<CustomerOrderId>UbOxhMnp</CustomerOrderId>\n\t<AddedEmergencyNotificationGroup>\n\t\t<Identifier>52897b97-3592-43fe-aa3f-857cf96671ee</Identifier>\n\t\t<Description>JgHzUzIchD</Description>\n\t\t<AddedEmergencyNotificationRecipients>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>c7f74671edd8410d9a4c0f8e985e0a</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>74ac30535b414d29bc36d50572f553</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>b910df3245ce4192aee052f583259f</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t</AddedEmergencyNotificationRecipients>\n\t</AddedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrderResponse>"
                  },
                  "201 for delete group": {
                    "description": "A sample 201 response to an order payload for deleting an emergency notification group looks like the following",
                    "value": "<EmergencyNotificationGroupOrderResponse>\n\t<OrderId>7d424c13-f9b1-4fb5-b7c1-f9a9de5847ed</OrderId>\n\t<OrderCreatedDate>2020-04-29T15:27:16.358</OrderCreatedDate>\n\t<CreatedBy>systemUser</CreatedBy>\n\t<ProcessingStatus>PROCESSING</ProcessingStatus>\n\t<CustomerOrderId>JvvEOKOP</CustomerOrderId>\n\t<DeletedEmergencyNotificationGroup>\n\t\t<Identifier>52897b97-3592-43fe-aa3f-857cf96671ee</Identifier>\n\t</DeletedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrderResponse>"
                  },
                  "201 for updated description": {
                    "description": "A sample 201 response to an order payload for updating an emergency notification group description looks like the following",
                    "value": "<EmergencyNotificationGroupOrderResponse>\n\t<OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId>\n\t<OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate>\n\t<CreatedBy>testuser</CreatedBy>\n\t<ProcessingStatus>PROCESSING</ProcessingStatus> \n\t<CustomerOrderId>ALG-31233884</CustomerOrderId>\n\t<UpdatedEmergencyNotificationGroup>\n\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t<Description> This is an updated description of the emergency notification Group. </Description>\n\t</UpdatedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrderResponse>"
                  },
                  "201 for adding recipients": {
                    "description": "A sample 201 response to an order payload for updating an emergency notification group by adding emergency notification recipients looks like the following",
                    "value": "<EmergencyNotificationGroupOrderResponse>\n\t<OrderId>31e4be80-e816-432e-a554-1219ed4fc5e9</OrderId>\n\t<OrderCreatedDate>2020-04-29T15:34:32.799</OrderCreatedDate>\n\t<CreatedBy>systemUser</CreatedBy>\n\t<ProcessingStatus>PROCESSING</ProcessingStatus>\n\t<ModifiedEmergencyNotificationGroup>\n\t\t<Identifier>5da0859b-2af8-42a3-85dd-dad4ba5f7503</Identifier>\n\t\t<Description>oXHGGVKwmd</Description>\n\t\t<AddedEmergencyNotificationRecipients>\n\t\t\t<EmergencyNotificationRecipient> \n\t\t\t\t<Identifier>f2eaa7be771241af9b031584875a60</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t</AddedEmergencyNotificationRecipients>\n\t</ModifiedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrderResponse>"
                  },
                  "201 for removing recipients": {
                    "description": "A sample 201 response to an order payload for updating an emergency notification group by removing emergency notification recipients looks like the following",
                    "value": "<EmergencyNotificationGroupOrderResponse>\n\t<OrderId>31e4be80-e816-432e-a554-1219ed4fc5e9</OrderId>\n\t<OrderCreatedDate>2020-04-29T15:34:32.799</OrderCreatedDate>\n\t<CreatedBy>systemUser</CreatedBy>\n\t<ProcessingStatus>PROCESSING</ProcessingStatus>\n\t<ModifiedEmergencyNotificationGroup>\n\t\t<Identifier>5da0859b-2af8-42a3-85dd-dad4ba5f7503</Identifier>\n\t\t<Description>oXHGGVKwmd</Description>\n\t\t<DeletedEmergencyNotificationRecipients>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>f2eaa7be771241af9b031584875a60</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t</DeletedEmergencyNotificationRecipients>\n\t</ModifiedEmergencyNotificationGroup>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "<p>Bad request <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"451\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order payload does not indicate whether the emergency notification group is being created, modified, or deleted </p> </td> <td width=\"451\" valign=\"top\"> <p> Order payload must include one of \"AddedEmergencyNotificationGroup\", \"DeletedEmergencyNotificationGroup\", or \"ModifiedEmergencyNotificationGroup\". </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order is creating a new emergency notification group, but does not indicate that emergency notification recipients are being added </p> </td> <td width=\"451\" valign=\"top\"> <p> When creating an emergency notification group, \"AddedEmergencyNotificationRecipients\" must be included to indicate that emergency notification recipients are being added. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Missing or empty emergency notification group description </p> </td> <td width=\"451\" valign=\"top\"> <p> Emergency Notification Group Description must be present and non-empty. </p> </td> </tr> <tr> <td valign=\"top\"> <p> No emergency notification recipients listed </p> </td> <td width=\"451\" valign=\"top\"> <p> An Emergency Notification Group must have 1, 2, or 3 Emergency Notification Recipients.  Note:<b></b> This can be used for missing list or empty list. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Too many emergency notification recipients listed </p> </td> <td width=\"451\" valign=\"top\"> <p> An Emergency Notification Group must have 1, 2, or 3 Emergency Notification Recipients. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order does not include an emergency notification group </p> </td> <td width=\"451\" valign=\"top\"> <p> </p> </td> </tr> <tr> <td valign=\"top\"> <p> The specified emergency notification group does not exist </p> </td> <td width=\"451\" valign=\"top\"> <p> ENG Identifier xxx does not exist., where xxx is replaced by the emergency notification group identifier supplied in the request. </p> </td> </tr> <tr> <td valign=\"top\"> <p> The specified emergency notification recipient identifier does not exist </p> </td> <td width=\"451\" valign=\"top\"> <p> ENR Identifier xxx does not exist., where xxx is replaced by the emergency notification recipient identifier supplied in the request. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to update an emergency notification group, but none of \"Description\", \"AddedEmergencyNotificationRecipients\", or \"DeletedEmergencyNotificationRecipients\" included </p> </td> <td width=\"451\" valign=\"top\"> <p> Update of ENG did not specify any of:<b></b> new description, added ENRs, or deleted ENRs. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to update an emergency notification group with both \"AddedEmergencyNotificationRecipients\" and \"DeletedEmergencyNotificationRecipients\" included </p> </td> <td width=\"451\" valign=\"top\"> <p> Update of ENG supports added ENRs or deleted ENRs, but not both. </p> </td> </tr> </tbody> </table></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n<ResponseStatus>\n\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure emergency notification group orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "409": {
            "description": "<p>Conflict <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"451\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Invalid emergency notification recipient identifier </p> </td> <td width=\"451\" valign=\"top\"> <p> Emergency Notification Recipient Identifier xxx does not exist., where xxx is replaced by the emergency notification recipient identifier supplied in the request.  Note:<b></b> This error can be used also for the case where the emergency notification recipient ID exists, but not for this Iris account. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Specified emergency notification recipient is already associated with another emergency notification group </p> </td> <td width=\"451\" valign=\"top\"> <p> The Emergency Notification Recipient with identifier xxx is already associated with Emergency Notification Group with identifier yyy., where xxx is replaced with the emergency notification recipient ID supplied in the request, and yyy is replaced by the emergency notification group ID of the emergency notification group that the supplied emergency notification recipient ID is associated with.  Note:<b></b> The emergency notification group must also belong to this account. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to remove an emergency notification group that has emergency endpoints associated with it </p> </td> <td width=\"451\" valign=\"top\"> <p> ENG xxx cannot be removed until emergency endpoint associations are removed., where xxx is replaced by the emergency notification group identifier supplied in the request. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Removal of ENRs would leave the emergency notification group with no emergency notification recipient associations </p> </td> <td width=\"451\" valign=\"top\"> <p> An Emergency Notification Group must have 1, 2, or 3 Emergency Notification Recipients. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Addition of emergency notification recipients would leave the emergency notification group with too many emergency notification recipient associations </p> </td> <td width=\"451\" valign=\"top\"> <p> An Emergency Notification Group must have 1, 2, or 3 Emergency Notification Recipients. </p> </td> </tr> </tbody> </table></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencyNotificationGroupOrders/{orderId}": {
      "get": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "This endpoint is used to query the status of a specified emergency notification group order, using the order-id that was assigned in the 201 response to the order creation. <br>\nWhen you query an order-id, look for the \"ProcessingStatus\" element in the 200 response.  Values may be: PROCESSING, COMPLETED, or FAILED.  PROCESSING means that the system is still processing the order.  Please wait a couple of minutes and fetch the order results again.  COMPLETED means that the order has been successfully completed.  FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system.  Look for the \"ErrorList\" element to see what type of error occurred. <br>\nURI parameters:</p>\n\n<ul>\n  <li>\n  <b>accountId</b> - the account id of the account to which the emergency notification group order belongs.\n  </li>\n  <li>\n  <b>orderId</b> - the order identifier assigned to the emergency notification group order when it was created.\n  </li>\n</ul>",
        "operationId": "RetrieveEmergencyNotificationGroupOrder",
        "summary": "Retrieve emergency notification group order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "28ef2b1a-dd03-4641-a362-c6d238c3dfc0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyNotificationGroupOrderResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<EmergencyNotificationGroup>\n\t\t<OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId>\n\t\t<OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate>\n\t\t<CreatedBy>testuser</CreatedBy>\n\t\t<ProcessingStatus>COMPLETED</ProcessingStatus>\n\t\t<CustomerOrderId>ALG-31233884</CustomerOrderId>\n\t\t<AddedEmergencyNotificationGroup>\n\t\t\t<EmergencyNotificationGroup>\n\t\t\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t\t\t<Description>Building 5, 5th Floor.</Description>\n\t\t\t\t<AddedEmergencyNotificationRecipients>\n\t\t\t\t\t<EmergencyNotificationRecipients>\n\t\t\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t\t\t\t\t\t<Description>Building 5 front desk email</Description>\n\t\t\t\t\t\t\t<Type>EMAIL</Type>\n\t\t\t\t\t\t\t<EmailAddress>Bldg5Reception@company.com</EmailAddress>\n\t\t\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t\t\t<Identifier>ef47eb61-e3b1-449d-834b-0fbc5a11da30</Identifier>\n\t\t\t\t\t\t\t<Description>Building 5 5th floor responder text</Description>\n\t\t\t\t\t\t\t<Type>SMS</Type>\n\t\t\t\t\t\t\t<Sms>\n\t\t\t\t\t\t\t\t<TelephoneNumber>12124487782</TelephoneNumber>\n\t\t\t\t\t\t\t</Sms>\n\t\t\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t\t\t<Identifier>c9a2f068-e1b0-4454-9c0b-74c4113f6141</Identifier>\n\t\t\t\t\t\t\t<Description>Callback for MyCompany</Description>\n\t\t\t\t\t\t\t<Type>CALLBACK</Type>\n\t\t\t\t\t\t\t<Url>https://foo.bar/baz</Url>\n\t\t\t\t\t\t\t<Credentials>\n\t\t\t\t\t\t\t\t<Username>testuser</Username>\n\t\t\t\t\t\t\t</Credentials>\n\t\t\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t\t\t</EmergencyNotificationRecipients>\n\t\t\t\t</AddedEmergencyNotificationRecipients>\n\t\t\t\t<ErrorList/>\n\t\t\t</EmergencyNotificationGroup>\n\t\t</AddedEmergencyNotificationGroup>\n\t</EmergencyNotificationGroup>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b> User does not have permission to view emergency notification group orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p></p>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "<p>The resource does not exist </p><br> <p><b>Condition:</b> Specified emergency notification group order-id does not exist for this account. <br> <b>Error Description:</b> The resource does not exist </p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencyNotificationGroups": {
      "get": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "Fetch emergency notification groups that are currently configured on the account.  Use the provided query parameters to filter the results. <br>\nURI Parameters: <b>accountId</b> - the account id of the account to which the emergency notification group belongs </p>\n<p><b>Query parameters:</b><br>\nThe GET operation has no request payload, but the accountId must be specified in the URI parameter.\nResults are returned in the order of newest to oldest modification date of the Emergency Notification Group.\nQuery parameters act as filters on the data. If more than one query parameter is provided, the results will be the intersection of the results from each query parameter. In other words, the query parameters are logically ANDed.\nQuery parameters are appended to the end of the endpoint, separated by a '?' and in the format parameter=value.  If you wish to specify more than one query parameter, separate them using an '&' character.\n  The order of query parameters does not matter",
        "operationId": "ListEmergencyNotificationGroups",
        "summary": "List emergency notification groups",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "engId",
            "description": "The Identifier of an Emergency Notification Recipient that is associated with the Emergency Notification Groups returned",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "63865500-0904-46b1-9b4f-7bd237a26363"
          },
          {
            "name": "enrDetails",
            "description": "If set to true, the results will include full details about each Emergency Notification Recipient associated with the Emergency Notification Groups satisfying the query. Otherwise, only Emergency Notification Recipient identifiers are included",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": "true"
          },
          {
            "name": "endpointCount",
            "description": "If set to true, the results will include the current number of all Emergency Endpoints associated with each Emergency Notification Group",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": "true"
          },
          {
            "name": "engName",
            "description": "Returns all Emergency Notification Groups that contain the group description value passed in (substrings accepted)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "foo"
          },
          {
            "name": "enrRecipient",
            "description": "Returns all Emergency Notification Groups that contain the recipient value passed in (substrings accepted)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "foo"
          },
          {
            "name": "page",
            "description": "This represents the position in the data set from which you want your output to begin. If this parameter is omitted, results will include Emergency Notification Groups last modified on or before the current date and time. If a date and time is provided, results will include Emergency Notification Groups last modified on or before that date and time. Date/time format is YYYY-MM-DDTHH:MM:SS.mmmZ, where the Z indicate UTC time, or YYYY-MM-DDTHH:MM:SS.mmm-hh:mm, where \"-hh:mm\" represents the local time offset, plus or minus, from UTC time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "now",
              "format": "date-time"
            },
            "example": "2020-04-07T00:00:00Z"
          },
          {
            "name": "size",
            "description": "The maximum number of Emergency Notification Group results to include in the response payload. This value may be between 1 and 500",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1,
              "maximum": 500
            },
            "example": 250
          }
        ],
        "responses": {
          "200": {
            "description": "<p>Successful response </p> <br> The \"Links\" element includes two links.  The link called \"first\" is the link to the first set of results for the query that was submitted.  If there are more than \"Size\" results, a link called \"next\" is included to help you retrieve the next set of results up to \"Size\" elements. If the results of the query, filtered by the query parameters, do not return any results, the payload will contain empty tag \"EmergencyNotificationGroups\"",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyNotificationGroupsResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupsResponse>\n\t<Links>\n\t\t<!-- The 'first' link always gets the most recent results. -->\n\t\t<first> -- link to first page of results -- </first>\n\t\t<!-- If the 'next' link is present, there are more than 'size' results. -->\n\t\t<!-- Use the 'next' link to fetch the next set of results. -->\n\t\t<next> -- link to next page of results -- </next>\n\t</Links>\n\t<EmergencyNotificationGroups>\n\t\t<EmergencyNotificationGroup>\n\t\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t\t<CreatedDate>2020-01-23T18:34:17.284Z</CreatedDate>\n\t\t\t<ModifiedBy>testuser</ModifiedBy>\n\t\t\t<ModifiedDate>2020-01-23T18:34:17.284Z</ModifiedDate>\n\t\t\t<Description>This is a description of the emergency notification group.</Description>\n\t\t\t<EmergencyNotificationRecipients>\n\t\t\t\t<!-- Specify the 'EnrDetails' query parameter to see full details for the emergency notification recipients -->\n\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t<Identifier>ef47eb61-e3b1-449d-834b-0fbc5a11da30</Identifier>\n\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t</EmergencyNotificationRecipients>\n\t\t</EmergencyNotificationGroup>\n\t\t<EmergencyNotificationGroup>\n\t\t\t<Identifier>29477382-23947-23c-2349-aa8238b22743</Identifier>\n\t\t\t<CreatedDate>2020-01-23T18:36:51.987Z</CreatedDate>\n\t\t\t<ModifiedBy>testuser</ModifiedBy>\n\t\t\t<ModifiedDate>2020-01-23T18:36:51.987Z</ModifiedDate>\n\t\t\t<Description>This is a description of the emergency notification group.</Description>\n\t\t\t<EmergencyNotificationRecipients>\n\t\t\t\t<!-- Specify the 'EnrDetails' query parameter to see full details for the emergency notification recipients -->\n\t\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t\t<Identifier>37742335-8722-3abc-8722-e2434f123a4d</Identifier>\n\t\t\t\t</EmergencyNotificationRecipient>\n\t\t\t</EmergencyNotificationRecipients>\n\t\t</EmergencyNotificationGroup>\n\t</EmergencyNotificationGroups>\n</EmergencyNotificationGroupsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "<p>Bad request </p><br> <p><b>Condition:</b> Unrecognized query parameter <br> <b>Error Description:</b>Query parameter xxx is not recognized. </p> <br> <p><b>Condition:</b>Unsupported value for query parameter <br> <b>Error Description:</b>Invalid value xxx for query parameter yyy. Supported values are aaa, bbb, etc. </p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b>User does not have permission to view emergency notification orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config.<br> <b>Error Description:</b>Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencyNotificationGroups/{engId}": {
      "get": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "This endpoint allows you to fetch the configuration of a current emergency notification group by identifier.",
        "operationId": "RetrieveEmergencyNotificationGroup",
        "summary": "Retrieve emergency notification group",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "engId",
            "description": "The emergency notification group identifier assigned to the emergency notification group when it was created",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "28ef2b1a-dd03-4641-a362-c6d238c3dfc0"
          },
          {
            "name": "includeEndpoints",
            "description": "Set this optional parameter to true, if you wish to include a list of all Emergency Endpoints (with AEUI or conventional TN identifiers) associated with this Emergency Notification Group",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "endpointId",
            "description": "This parameter, which may only be specified if the `includeEndpoints` parameter is set to true, indicates the starting digits of the emergency endpoint TN for conventional endpoints or starting letters / digits of AEUI endpoint identifier that you wish to begin with in the list of emergency endpoints associated with the emergency notification group. At least 3 digits must be supplied",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "203208110"
          },
          {
            "name": "endpointSize",
            "description": "This parameter, which may only be specified, if the `includeEndpoints` parameter is set to true, indicates the maximum number of associated emergency endpoints you wish to include for each emergency notification group that is returned in the query results",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 5000,
              "minimum": 1,
              "default": 20
            },
            "example": "200"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyNotificationGroupResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupResponse>\n\t<EmergencyNotificationGroup>\n\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t<CreatedDate>2020-01-23T18:34:17.284Z</CreatedDate>\n\t\t<ModifiedBy>testuser</ModifiedBy>\n\t\t<ModifiedDate>2020-01-23T18:34:17.284Z</ModifiedDate>\n\t\t<Description>This is a description of the emergency notification group.</Description>\n\t\t<EmergencyNotificationRecipients>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t\t<EmergencyNotificationRecipient>\n\t\t\t\t<Identifier>ef47eb61-e3b1-449d-834b-0fbc5a11da30</Identifier>\n\t\t\t</EmergencyNotificationRecipient>\n\t\t</EmergencyNotificationRecipients>\n\t\t<EepToEngAssociations>\n\t\t\t<Endpoints>\n\t\t\t\t<Identifier>19152431000</Identifier>\n\t\t\t\t<Identifier>ACIDIdentifier12345</Identifier>\n\t\t\t</Endpoints>\n\t\t</EepToEngAssociations>\n\t</EmergencyNotificationGroup>\n</EmergencyNotificationGroupResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b> User does not have permission to view emergency notification groups, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p></p>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied </Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "<p>The resource does not exist </p><br> <p><b>Condition:</b> Specified emergency notification group id does not exist for this account <br> <b>Error Description:</b> The resource does not exist </p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationGroupsResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>The resource does not exist</Description>\n\t</ResponseStatus>\n</EmergencyNotificationGroupsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencyNotificationEndpointOrders": {
      "get": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "The GET operation provides a means to query any Emergency Notification Endpoint Order associated with the account. This endpoint is for querying \"orders\", not the emergency endpoint to emergency notification group associations themselves. \n<p>The GET operation has no payload, although the accountId URI parameter is mandatory and a number of optional query parameters may be added. The query parameters are described in this section.\n   Results are returned by default in the order of newest to oldest creation date of the Emergency Notification Endpoint Order. This default order is reversed from oldest to newest when the CreatedAfterDate query parameter is included in the query.\n   Query parameters act as filters on the data. If more than one query parameter is provided, the results will be the intersection of the results from each query parameter. In other words, the query parameters are logically ANDed.\n   Query parameters are appended to the end of the endpoint, separated by a '?' and in the format parameter=value. If you wish to specify more than one query parameter, separate them using an '&' character. The order of query parameters does not matter",
        "operationId": "ListEmergencyNotificationEndpointOrders",
        "summary": "List emergency notification endpoint orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "createdAfterDate",
            "description": "Include results only for orders having order creation date and time after the date and time specified in this parameter. Note that inclusion of this parameter reverses the default sort order of the results to ascending in date/time (i.e. from oldest to newest). If you are looking for the `createdBeforeDate` query parameter, please see the `page` parameter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-03-30T14:00:00Z"
          },
          {
            "name": "createdByUser",
            "description": "Include results only for orders created by the user specified in this parameter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "testuser"
          },
          {
            "name": "processingStatus",
            "description": "Include results only for orders with specified status in this parameter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "FAILED",
                "COMPLETED"
              ]
            },
            "example": "COMPLETED"
          },
          {
            "name": "customerOrderId",
            "description": "Include results only for orders having the specified customer order id value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "j3jljkd8"
          },
          {
            "name": "engId",
            "description": "The Identifier of an Emergency Notification Group that was altered by an order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "63865500-0904-46b1-9b4f-7bd237a26363"
          },
          {
            "name": "engDescription",
            "description": "A substring that will exist in the emergency notification group Description for all returned Emergency Notification Endpoint Orders",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "3rd floor"
          },
          {
            "name": "eepTns",
            "description": "Include results only for orders having EepTns that start with the specified digit string",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minLength": 1,
              "maxLength": 11
            },
            "example": "404"
          },
          {
            "name": "eepAeuiIds",
            "description": "Include results only for orders having EepAeuiIds that start with the specified character string",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 30
            },
            "example": "Joe"
          },
          {
            "name": "page",
            "description": "This represents the position in the data set from which you want your output to begin. If this parameter is omitted, results will include Emergency Notification Endpoint Orders created on or before the current date and time. If a date and time is provided, results will include Emergency Notification Endpoint Orders created on or before that date and time. Date/time format is YYYY-MM-DDTHH:MM:SS.mmmZ, where the Z indicate UTC time, or YYYY-MM-DDTHH:MM:SS.mmm-hh:mm, where \"-hh:mm\" represents the local time offset, plus or minus, from UTC time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "now",
              "format": "date-time"
            },
            "example": "2020-03-15T14:00:00.000-04:00"
          },
          {
            "name": "size",
            "description": "The maximum number of Emergency Notification Endpoint Order results to include in the response payload",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1,
              "maximum": 500
            },
            "example": 250
          }
        ],
        "responses": {
          "200": {
            "description": "<p> Successful response </p> <br> If no order matching the query exists, GET responds with a 200 and an empty array of orders",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyNotificationEndpointOrdersResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationEndpointOrderResponse>\n\t<Links>\n\t\t<!-- The 'first' link always gets the most recent results. -->\n\t\t<first> -- link to first page of results -- </first>\n\t\t<!-- If the 'next' link is present, there are more than 'size' results. -->\n\t\t<!-- Use the 'next' link to fetch the next set of results. -->\n\t\t<next> -- link to next page of results -- </next>\n\t</Links>\n\t<EmergencyNotificationEndpointOrders>\n\t\t<EmergencyNotificationEndpointOrder>\n\t\t\t<OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId>\n\t\t\t<OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate>\n\t\t\t<CreatedBy>testuser</CreatedBy>\n\t\t\t<ProcessingStatus>COMPLETED</ProcessingStatus>\n\t\t\t<CustomerOrderId>ALG-31233884</CustomerOrderId>\n\t\t\t<EmergencyNotificationEndpointAssociations>\n\t\t\t\t<EmergencyNotificationGroup>\n\t\t\t\t\t<Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier>\n\t\t\t\t</EmergencyNotificationGroup>\n\t\t\t\t<!-- If the order created emergency endpoint to emergency notification group associations -->\n\t\t\t\t<AddedAssociations>\n\t\t\t\t\t<EepToEngAssociations>\n\t\t\t\t\t\t<EepTns>\n\t\t\t\t\t\t\t<TelephoneNumber>2248838829</TelephoneNumber>\n\t\t\t\t\t\t\t<TelephoneNumber>4052397735</TelephoneNumber>\n\t\t\t\t\t\t</EepTns>\n\t\t\t\t\t\t<EepAeuiIds>\n\t\t\t\t\t\t\t<Identifier>Fred992834</Identifier>\n\t\t\t\t\t\t\t<Identifier>Bob00359</Identifier>\n\t\t\t\t\t\t</EepAeuiIds>\n\t\t\t\t\t</EepToEngAssociations>\n\t\t\t\t\t<ErrorList/>\n\t\t\t\t</AddedAssociations>\n\t\t\t</EmergencyNotificationEndpointAssociations>\n\t\t</EmergencyNotificationEndpointOrder>\n\t\t<EmergencyNotificationEndpointOrder>\n\t\t\t<!-- Snip -->\n\t\t</EmergencyNotificationEndpointOrder>\n\t\t<EmergencyNotificationEndpointOrder>\n\t\t\t<!-- Snip -->\n\t\t</EmergencyNotificationEndpointOrder>\n\t</EmergencyNotificationEndpointOrders>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "<p>Bad request </p><br> <p><b>Condition:</b> Unrecognized query parameter <br> <b>Error Description:</b>Query parameter xxx is not recognized. </p> <br> <p><b>Condition:</b>Unsupported value for query parameter <br> <b>Error Description:</b>Invalid value xxx for query parameter yyy. Supported values are aaa, bbb, etc. </p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationEndpointOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b>User does not have permission to view Endpoint orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config.<br> <b>Error Description:</b>Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationEndpointOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied</Description>\n\t</ResponseStatus>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "The POST operation creates a new order to request that an emergency endpoint be added to or removed from an emergency notification group.  A given order may either add or remove associations, not both in one order.<br>\n    If the order is successfully created, a 201 response is returned, including an order-id that is used to query for completion of the order. <br>\n    The order's ProcessingStatus is set to PROCESSING when the request is successfully created.  When processing of all emergency endpoint to emergency notification group associations has been attempted, the software\n    will update the order's processing status to either COMPLETED or FAILED.",
        "operationId": "CreateEmergencyNotificationEndpointOrder",
        "summary": "Create emergency notification endpoint order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationEndpointOrderForAddAssociation"
                  },
                  {
                    "$ref": "#/components/schemas/EmergencyNotificationEndpointOrderForRemoveAssociation"
                  }
                ]
              },
              "examples": {
                "Simple response": {
                  "value": "<EmergencyNotificationEndpointOrder>\n\t<CustomerOrderId>ALG-31233884</CustomerOrderId>\n\t<EmergencyNotificationEndpointAssociations>\n\t\t<EmergencyNotificationGroup>\n\t\t\t<Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier>\n\t\t</EmergencyNotificationGroup>\n\t\t<AddedAssociations>\n\t\t\t<EepToEngAssociations>\n\t\t\t\t<EepTns>\n\t\t\t\t\t<TelephoneNumber>2248838829</TelephoneNumber>\n\t\t\t\t\t<TelephoneNumber>4052397735</TelephoneNumber>\n\t\t\t\t</EepTns>\n\t\t\t\t<EepAeuiIds>\n\t\t\t\t\t<Identifier>Fred992834</Identifier>\n\t\t\t\t\t<Identifier>Bob00359</Identifier>\n\t\t\t\t</EepAeuiIds>\n\t\t\t</EepToEngAssociations>\n\t\t</AddedAssociations>\n\t</EmergencyNotificationEndpointAssociations>\n</EmergencyNotificationEndpointOrder>"
                },
                "Remove order response": {
                  "description": "The payload for creating an order to remove emergency endpoint associations from an emergency notification group looks like the following",
                  "value": "<EmergencyNotificationEndpointAssociation>\n\t<CustomerOrderId>ALG-31233885</CustomerOrderId>\n\t<EmergencyNotificationGroup>\n\t\t<Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier>\n\t</EmergencyNotificationGroup>\n\t<DeletedAssociations> \n\t\t<EepToEngAssociations>\n\t\t\t<EepTns>\n\t\t\t\t<TelephoneNumber>2248838829</TelephoneNumber>\n\t\t\t\t<TelephoneNumber>4052397735</TelephoneNumber>\n\t\t\t</EepTns>\n\t\t\t<EepAeuiIds> \n\t\t\t\t<Identifier>Fred992834</Identifier> \n\t\t\t\t<Identifier>Bob00359</Identifier> \n\t\t\t</EepAeuiIds>\n\t\t</EepToEngAssociations>\n\t</DeletedAssociations>\n</EmergencyNotificationEndpointAssociation>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "<p>Successful response <br> <p> <b>The response payload may include the following payload elements in addition to information added in the request payload:</b> <br> </p> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"624\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Parameter</strong> </p> </td> <td width=\"351\" valign=\"top\"> <p> <strong>Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> OrderId </p> </td> <td width=\"351\" valign=\"top\"> <p> A system-assigned unique identifier assigned to this order.  Use this order id to fetch the status of the order. </p> </td> </tr> <tr> <td valign=\"top\"> <p> OrderCreatedDate </p> </td> <td width=\"351\" valign=\"top\"> <p> The UTC date and time at which this order was created. </p> </td> </tr> <tr> <td valign=\"top\"> <p> CreatedBy </p> </td> <td width=\"351\" valign=\"top\"> <p> The username of the user that created this order. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ProcessingStatus </p> </td> <td width=\"351\" valign=\"top\"> <p>The processing status of this order. Values may be:<b></b> PROCESSING, COMPLETED, FAILED.  PROCESSING means that the system is still processing the order.  COMPLETED means that the order has been successfully completed.  FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ErrorList </p> </td> <td width=\"351\" valign=\"top\"> <p>A list, possibly empty, of errors affecting emergency notification group updates.  The ErrorList will be empty for orders that are COMPLETED.  It will be non-empty for orders that FAILED. </p> </td> </tr> <tr> <td valign=\"top\"> <p> ErrorList Description </p> </td> <td width=\"351\" valign=\"top\"> <p> If an emergency notification group operation failed for some reason, this text describes the reason for the failure. </p> </td> </tr> </tbody> </table></p>\n",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyNotificationEndpointOrderResponse"
                },
                "examples": {
                  "add endpoint": {
                    "description": "The 201 response payload for creating an order to add emergency endpoint associations to an emergency notification group",
                    "value": "<EmergencyNotificationEndpointOrderResponse>\n\t<EmergencyNotificationEndpointOrder> \n\t\t<OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId>\n\t\t<OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate>\n\t\t<CreatedBy>testuser</CreatedBy> \n\t\t<ProcessingStatus>COMPLETED</ProcessingStatus> \n\t\t<CustomerOrderId>ALG-31233884</CustomerOrderId> \n\t\t<EmergencyNotificationEndpointAssociations> \n\t\t\t<EmergencyNotificationGroup> \n\t\t\t\t<Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier>\n\t\t\t</EmergencyNotificationGroup>\n\t\t\t<!-- If the order created emergency endpoint to emergency notification group associations -->\n\t\t\t<AddedAssociations>\n\t\t\t\t<EepToEngAssociations>\n\t\t\t\t\t<EepTns>\n\t\t\t\t\t\t<TelephoneNumber>2248838829</TelephoneNumber>\n\t\t\t\t\t\t<TelephoneNumber>4052397735</TelephoneNumber> \n\t\t\t\t\t</EepTns>\n\t\t\t\t\t<EepAeuiIds>\n\t\t\t\t\t\t<Identifier>Fred992834</Identifier>\n\t\t\t\t\t\t<Identifier>Bob00359</Identifier>\n\t\t\t\t\t</EepAeuiIds>\n\t\t\t\t</EepToEngAssociations>\n\t\t\t\t<ErrorList />\n\t\t\t</AddedAssociations> \n\t\t</EmergencyNotificationEndpointAssociations>\n\t</EmergencyNotificationEndpointOrder>\n</EmergencyNotificationEndpointOrderResponse>"
                  },
                  "remove endpoint": {
                    "description": "The 201 response payload for creating an order to remove emergency endpoint associations from an emergency notification group",
                    "value": "<EmergencyNotificationEndpointOrderResponse>\n\t<EmergencyNotificationEndpointAssociation>\n\t\t<OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId>\n\t\t<OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate>\n\t\t<CreatedBy>testuser</CreatedBy>\n\t\t<ProcessingStatus>PROCESSING</ProcessingStatus>\n\t\t<CustomerOrderId>ALG-31233884</CustomerOrderId>\n\t\t<EmergencyNotificationGroup>\n\t\t\t<Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier>\n\t\t</EmergencyNotificationGroup>\n\t\t<!-- If the order removed emergency endpoint to emergency notification group associations -->\n\t\t<DeletedAssociations>\n\t\t\t<EepToEngAssociations>\n\t\t\t<EepTns>\n\t\t\t\t<TelephoneNumber>9152877649</TelephoneNumber>\n\t\t\t</EepTns>\n\t\t\t<EepAeuiIds>\n\t\t\t\t<Identifier>Sally88744</Identifier>\n\t\t\t</EepAeuiIds>\n\t\t\t</EepToEngAssociations>\n\t\t<ErrorList />\n\t\t</DeletedAssociations>\n\t</EmergencyNotificationEndpointAssociation>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "<p>Bad request <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"451\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order payload does not indicate whether the endpoints are being added or deleted </p> </td> <td width=\"451\" valign=\"top\"> <p> Order payload must include one of \"AddedAssociations\" or \"DeletedAssociations\". </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to both add and delete endpoint associations in one request </p> </td> <td width=\"451\" valign=\"top\"> <p> Order payload must include one of \"AddedAssociations\" or \"DeletedAssociations\", but not both in one request. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Order payload does not specify any endpoints to be added </p> </td> <td width=\"451\" valign=\"top\"> <p> Order payload must include at least one Emergency Enpoint value. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Too many emergency endpoints listed </p> </td> <td width=\"451\" valign=\"top\"> <p> Please limit the total number of emergency endpoints to 5000 per request. </p> </td> </tr> </tbody> </table></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationEndpointOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b> User does not have permission to configure associations between emergency endpoints and an emergency notification group, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationEndpointOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied</Description>\n\t</ResponseStatus>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "409": {
            "description": "<p>Conflict <br> <table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"724\"> <tbody> <tr> <td valign=\"top\"> <p> <strong>Condition</strong> </p> </td> <td width=\"451\" valign=\"top\"> <p> <strong>Error Description</strong> </p> </td> </tr> <tr> <td valign=\"top\"> <p> Invalid emergency notification group identifier </p> </td> <td width=\"451\" valign=\"top\"> <p> Emergency Notification Group Identifier xxx does not exist., where xxx is replaced by the emergency notification group identifier supplied in the request.  Note:<b></b> This error can be used also for the case where the emergency notification group ID exists, but not for this Iris account. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to add invalid emergency endpoint identifier </p> </td> <td width=\"451\" valign=\"top\"> <p> Emergency Endpoint Identifier being added does not exist.  Note:<b></b> This error can also be used for the case where the emergency endpoint ID exists, but not for this Iris account. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to remove invalid emergency endpoint identifier, for the case where the emergency endpoint does not exist for the specified Iris account </p> </td> <td width=\"451\" valign=\"top\"> <p>Warning:<b></b> Emergency Endpoint Identifier specified for removal does not exist. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to remove a valid emergency endpoint identifier that is associated with an emergency notification group other than the one specified in the request </p> </td> <td width=\"451\" valign=\"top\"> <p> Error:<b></b> Emergency Endpoint Identifier specified for removal is not associated with Emergency Notification Group xxx., where xxx is replaced by the emergency notification group identifier. </p> </td> </tr> <tr> <td valign=\"top\"> <p> Attempt to add an endpoint, but specified emergency endpoint is already associated with another emergency notification group                                </p> </td> <td width=\"451\" valign=\"top\"> <p> The Emergency Endpoint with identifier xxx is already associated with Emergency Notification Group with identifier yyy., where xxx is replaced with the TN or AEUI supplied in the request, and yyy is replaced by the emergency notification group ID of the emergency notification group that the supplied endpoint ID is associated with. </p> </td> </tr> </tbody> </table></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationEndpointOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>A description of what went wrong.</Description>\n\t</ResponseStatus>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/emergencyNotificationEndpointOrders/{orderId}": {
      "get": {
        "tags": [
          "Emergency Notification"
        ],
        "description": "This endpoint is used to fetch the status of an emergency notification endpoint order, using the order-id assigned when the order was created. <br>\nIf the order is still being processed, the ProcessingStatus will be PROCESSING.  If the order has completed successfully, the ProcessingStatus will be COMPLETED.  Otherwise the ProcessingStatus will be FAILED.  If the ProcessingStatus is FAILED, look for the ErrorList in the payload to see reasons for the failure.\nURI parameters:</p>\n\n<ul>\n  <li>\n  <b>accountId</b> - the account id of the account to which the emergency notification endpoint order belongs.\n  </li>\n  <li>\n  <b>orderId</b> - the order-id assigned to the emergency notification endpoint order when it was created.\n  </li>\n</ul>",
        "operationId": "RetrieveEmergencyNotificationEndpointOrder",
        "summary": "Retrieve emergency notification endpoint order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "28ef2b1a-dd03-4641-a362-c6d238c3dfc0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyNotificationEndpointOrderResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationEndpointOrderResponse>\n\t<EmergencyNotificationEndpointOrder>\n\t\t<OrderId>3e9a852e-2d1d-4e2d-84c3-87223a78cb70</OrderId>\n\t\t<OrderCreatedDate>2020-01-23T18:34:17.284Z</OrderCreatedDate>\n\t\t<CreatedBy>testuser</CreatedBy>\n\t\t<ProcessingStatus>COMPLETED</ProcessingStatus>\n\t\t<CustomerOrderId>ALG-31233884</CustomerOrderId>\n\t\t<EmergencyNotificationEndpointAssociations>\n\t\t\t<EmergencyNotificationGroup>\n\t\t\t\t<Identifier>3e9a852e-2d1d-4e2d-84c3-04595ba2eb93</Identifier>\n\t\t\t</EmergencyNotificationGroup>\n\t\t\t<AddedAssociations>\n\t\t\t\t<EepToEngAssociations>\n\t\t\t\t\t<EepTns>\n\t\t\t\t\t\t<TelephoneNumber>2248838829</TelephoneNumber>\n\t\t\t\t\t\t<TelephoneNumber>4052397735</TelephoneNumber>\n\t\t\t\t\t</EepTns>\n\t\t\t\t\t<EepAeuiIds>\n\t\t\t\t\t\t<Identifier>Fred992834</Identifier>\n\t\t\t\t\t\t<Identifier>Bob00359</Identifier>\n\t\t\t\t\t</EepAeuiIds>\n\t\t\t\t</EepToEngAssociations>\n\t\t\t\t<ErrorList/>\n\t\t\t</AddedAssociations>\n\t\t</EmergencyNotificationEndpointAssociations>\n\t</EmergencyNotificationEndpointOrder>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "<p>Access Denied <br> <p> <b>Condition:</b> User does not have permission to view emergency notification endpoint orders, either due to Role/Permission or because the account is not configured for Emergency Notification Config. <br> <b>Error Description:</b> Access Denied </p></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationEndpointOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>1001</ErrorCode>\n\t\t<Description>Access Denied </Description>\n\t</ResponseStatus>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "<p>The resource does not exist </p><br> <p><b>Condition:</b> Specified emergency notification endpoint order id does not exist for this account <br> <b>Error Description:</b> The resource does not exist </p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<EmergencyNotificationEndpointOrderResponse>\n\t<ResponseStatus>\n\t\t<ErrorCode>nnnn</ErrorCode>\n\t\t<Description>The resource does not exist</Description>\n\t</ResponseStatus>\n</EmergencyNotificationEndpointOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/externalTns": {
      "get": {
        "tags": [
          "External Tn"
        ],
        "description": "<p>Retrieve a list of the externalTns orders that are associated with the account.</p><p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId": "ListExternalTnsOrder",
        "summary": "List external tns orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The status of the TN Option order being searched for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "PARTIAL"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "customerOrderId",
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the TN Option order.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "orderIdFragment",
            "description": "This search parameter represents the internal Bandwidth Dashboard API ID that has been assigned to the TN Option Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ed1c0bed-e2"
          },
          {
            "name": "action",
            "description": "Whether or not the results should be restricted to IMPORT or REMOVE orders.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "REMOVE"
          },
          {
            "name": "loaType",
            "description": "Whether or not the results should be restricted to CARRIER or SUBSCRIBER orders.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ALL"
            },
            "example": "SUBSCRIBER"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find External Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find External Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the externalTns Orders query provides information about the externalTns Orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully uploaded Telephone Numbers, and descriptions of any encountered errors.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ExternalTnsOrders>\n  <TotalCount>2</TotalCount>\n  <ExternalTnsOrder>\n    <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate>\n    <AccountId>9900012</AccountId>\n    <CreatedByUser>sjm</CreatedByUser>\n    <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId>\n    <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate>\n    <SiteId>65487</SiteId>\n    <TelephoneNumbers>\n      <TelephoneNumber>2106078250</TelephoneNumber>\n      <TelephoneNumber>2109678273</TelephoneNumber>\n      <TelephoneNumber>2109678331</TelephoneNumber>\n      <TelephoneNumber>2109678337</TelephoneNumber>\n      <TelephoneNumber>2266401468</TelephoneNumber>\n    </TelephoneNumbers>\n    <Action>IMPORT</Action>\n    <LoaType>SUBSCRIBER</LoaType>\n    <ProcessingStatus>PARTIAL</ProcessingStatus>\n    <Errors>\n      <Error>\n        <Code>13552</Code>\n        <Description>Telephone numbers already exist.</Description>\n        <TelephoneNumbers>\n          <TelephoneNumber>2262665583</TelephoneNumber>\n        </TelephoneNumbers>\n      </Error>\n    </Errors>\n    <SipPeerId>885544</SipPeerId>\n  </ExternalTnsOrder>\n  <ExternalTnsOrder>\n    <OrderCreateDate> 2018-01-09T02:58:04.609Z</OrderCreateDate>\n    <AccountId>9900012</AccountId>\n    <CreatedByUser>sjm</CreatedByUser>\n    <OrderId>b63d342b-9400-4da9-1111-ca7a3889e5ec</OrderId>\n    <LastModifiedDate>2018-01-09T02:58:04.962Z</LastModifiedDate>\n    <SiteId>12345</SiteId>\n    <TelephoneNumbers>\n      <TelephoneNumber>3068035413</TelephoneNumber>\n      <TelephoneNumber>3068035414</TelephoneNumber>\n      <TelephoneNumber>3437003595</TelephoneNumber>\n      <TelephoneNumber>4387977665</TelephoneNumber>\n    </TelephoneNumbers>\n    <Action>IMPORT</Action>\n    <ProcessingStatus>PARTIAL</ProcessingStatus>\n    <Errors>\n      <Error>\n        <Code>13552</Code>\n        <Description>Telephone numbers already exist.</Description>\n        <TelephoneNumbers>\n          <TelephoneNumber>4387977665</TelephoneNumber>\n          <TelephoneNumber>5817036252</TelephoneNumber>\n        </TelephoneNumbers>\n      </Error>\n    </Errors>\n    <SipPeerId>666555</SipPeerId>\n  </ExternalTnsOrder>\n</ExternalTnsOrders>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExternalTnsOrders"
                }
              }
            }
          },
          "404": {
            "description": "No externalTns orders can be found that match the query parameters.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalTnsOrdersError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "External Tn"
        ],
        "description": "<p>Create a externalTns order to add or remove telephone numbers provided by the customer from the Bandwidth network.</p><p>Note: the attempt to import a telephone number that is already present in the account will <em>not</em> create an error, but will reset all of the  attributes of that telephone number in the Dashboard system as if the telephone number was being imported for the first time.</p>",
        "operationId": "CreateExternalTnsOrder",
        "summary": "Create external tns order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ExternalTnsOrder>\n  <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n  <SiteId>743</SiteId>\n  <SipPeerId>303716</SipPeerId>\n  <Action>[ IMPORT | REMOVE ]</Action>\n  <LoaType>[ CARRIER | SUBSCRIBER ]</LoaType>\n  <TelephoneNumbers>\n    <TelephoneNumber>9199918388</TelephoneNumber>\n    <TelephoneNumber>4158714245</TelephoneNumber>\n    <TelephoneNumber>4352154439</TelephoneNumber>\n    <TelephoneNumber>4352154466</TelephoneNumber>\n  </TelephoneNumbers>\n</ExternalTnsOrder>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ExternalTnsOrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A 201 response indicates that an order has been created.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ExternalTnsOrderResponse>\n  <ExternalTnsOrder>\n    <CustomerOrderId>SJM000001</CustomerOrderId>\n    <OrderCreateDate>2018-01-20T02:59:54.000Z</OrderCreateDate>\n    <AccountId>9900012</AccountId>\n    <CreatedByUser>smckinnon</CreatedByUser>\n    <OrderId>b05de7e6-0cab-4c83-81bb-9379cba8efd0</OrderId>\n    <LastModifiedDate>2018-01-20T02:59:54.000Z</LastModifiedDate>\n    <SiteId>202</SiteId>\n    <SipPeerId>520565</SipPeerId>\n    <TelephoneNumbers>\n      <TelephoneNumber>9199918388</TelephoneNumber>\n      <TelephoneNumber>4158714245</TelephoneNumber>\n      <TelephoneNumber>4352154439</TelephoneNumber>\n      <TelephoneNumber>4352154466</TelephoneNumber>\n    </TelephoneNumbers>\n    <Action>IMPORT</Action>\n    <LoaType>CARRIER</LoaType>\n    <ProcessingStatus>RECEIVED</ProcessingStatus>\n    <Errors/>\n  </ExternalTnsOrder>\n</ExternalTnsOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExternalTnsOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Indicates that the order could not be created. Error text and an error code will be provided in the ErrorList element.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ExternalTnsOrderResponse>\n  <ResponseStatus>\n    <ErrorCode>5081</ErrorCode>\n    <Description>Action is absent or invalid. Possible values  IMPORT, REMOVE</Description>\n  </ResponseStatus>\n</ExternalTnsOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExternalTnsOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/externalTns/{orderid}": {
      "get": {
        "tags": [
          "External Tn"
        ],
        "description": "<p>Retrieve information about a externalTns order with specified ID.</p>",
        "operationId": "GetExternalTnsOrder",
        "summary": "Retrieve external tns order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>The descriptive payload for the externalTns query provides a broad range of information about the externalTns order identified in the URL.  Included amongst the information is...</p><ul><li>ErrorList - the errors discovered with codes and explanations</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ExternalTnsOrder>\n  <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>\n  <AccountId>1</AccountId>\n  <CreatedByUser>jbm</CreatedByUser>\n  <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>\n  <LastModifiedDate>2018-01-10T05:20:47.661Z</LastModifiedDate>\n  <ProcessingStatus>PARTIAL</ProcessingStatus>\n  <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n  <SiteId>743</SiteId>\n  <SipPeerId>303716</SipPeerId>\n  <Action>[ IMPORT | REMOVE ]</Action>\n  <LoaType>[ CARRIER | SUBSCRIBER ]</LoaType>\n  <TelephoneNumbers>\n    <TelephoneNumber>9199918388</TelephoneNumber>\n    <TelephoneNumber>4158714245</TelephoneNumber>\n    <TelephoneNumber>4352154439</TelephoneNumber>\n    <TelephoneNumber>4352154466</TelephoneNumber>\n  </TelephoneNumbers>\n  <Errors>\n    <Error>\n      <Code>[int]</Code>\n      <Description>[string]</Description>\n      <TelephoneNumbers>\n        <TelephoneNumber>9199918388</TelephoneNumber>\n      </TelephoneNumbers>\n      </Error>\n    </Errors>\n</ExternalTnsOrder>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExternalTnsOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "<p>NOT FOUND - the order id does not exist in the system</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ExternalTnsOrderResponse>\n  <ResponseStatus>\n <Description>The resource does not exist</Description>\n </ResponseStatus>\n </ExternalTnsOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExternalTnsOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/geocodeRequest": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "description": "POST is used to validate address as geocode-able one. Request payload is the address to geocode. If decomposed elements are provided for AddressLine 1 then AddressLine1 is ignored. At least HouseNumber and StreetName are required to use them as replacement of AddressLine1. If at least HouseNumber or StreetName is absent then AddressLine1 is used.",
        "operationId": "CreateGeocodeRequest",
        "summary": "Validate address",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RequestAddress>\n  <AddressLine1>904 E Ansun Str</AddressLine1>\n  <HousePrefix/>\n  <HouseNumber>904</HouseNumber>\n  <HouseSuffix>E</HouseSuffix>\n  <PreDirectional/>\n  <StreetName>Ansun</StreetName>\n  <StreetSuffix>Str</StreetSuffix>\n  <PostDirectional/>\n  <AddressLine2/>\n  <City>Marshalltown</City>\n  <StateCode>IA</StateCode>\n  <Zip>50158</Zip>\n  <PlusFour/>\n  <County/>\n  <Country/>\n</RequestAddress>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GeocodeRequestAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "<p>OK - service validates address perfectly.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<GeocodeRequestResponse>\n  <GeocodedAddress>\n    <AddressLine1>904 E ANSON ST</AddressLine1>\n    <HouseNumber>904</HouseNumber>\n    <PreDirectional>E</PreDirectional>\n    <StreetName>ANSON</StreetName>\n    <StreetSuffix>ST</StreetSuffix>\n    <City>MARSHALLTOWN</City>\n    <StateCode>IA</StateCode>\n    <Zip>50158</Zip>\n    <PlusFour>3522</PlusFour>\n    <Country>US</Country>\n  </GeocodedAddress>\n  <RequestAddress>\n    <HouseNumber>904</HouseNumber>\n    <HouseSuffix>E</HouseSuffix>\n    <StreetName>Anson</StreetName>\n    <StreetSuffix>St</StreetSuffix>\n    <City>Marshalltown</City>\n    <StateCode>IA</StateCode>\n    <Zip>50158</Zip>\n    <Country>US</Country>\n    <AddressLine1>904 E Anson St</AddressLine1>\n  </RequestAddress>\n</GeocodeRequestResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GeocodeRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "<p>Bad request - service cannot geocode address or validation rules were violated.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<GeocodeRequestResponse>\n  <ResponseStatus>\n    <ErrorCode>12110</ErrorCode>\n    <Description>This address could not be validated / geocoded</Description>\n  </ResponseStatus>\n</GeocodeRequestResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GeocodeRequestErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "<p>Conflict - address is close to one that can be geocoded.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<GeocodeRequestResponse>\n  <ErrorMessage>Some adjustments are required to allow the address to pass geocoding: Specified value - Street Name : \"ANSUN\" Valid value - \"ANSON\" Specified value - Street Suffix : \"STR\" Valid value - \"ST\"  </ErrorMessage>\n  <GeocodedAddress>\n    <AddressLine1>904 E ANSON ST</AddressLine1>\n    <HouseNumber>904</HouseNumber>\n    <PreDirectional>E</PreDirectional>\n    <StreetName>ANSON</StreetName>\n    <StreetSuffix>ST</StreetSuffix>\n    <City>MARSHALLTOWN</City>\n    <StateCode>IA</StateCode>\n    <Zip>50158</Zip>\n    <PlusFour>3522</PlusFour>\n    <Country>US</Country>\n  </GeocodedAddress>\n  <RequestAddress>\n    <HouseNumber>904</HouseNumber>\n    <HouseSuffix>E</HouseSuffix>\n    <StreetName>Ansun</StreetName>\n    <StreetSuffix>Str</StreetSuffix>\n    <City>Marshalltown</City>\n    <StateCode>IA</StateCode>\n    <Zip>50158</Zip>\n    <Country>US</Country>\n    <AddressLine1>904 E Ansun Str</AddressLine1>\n  </RequestAddress>\n</GeocodeRequestResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GeocodeRequestConflictResponse"
                }
              }
            }
          },
          "500": {
            "description": "<p>System error - internal error which cannot be fixed by changing payload etc.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<GeocodeRequestResponse>\n  <ResponseStatus>\n    <ErrorCode>12111</ErrorCode>\n    <Description>Error during E911 Geocoding API response handling</Description>\n  </ResponseStatus>\n</GeocodeRequestResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GeocodeRequestErrorResponse"
                }
              }
            }
          },
          "503": {
            "description": "<p>Service unavailable - for some reason service is temporary unavailable.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<GeocodeRequestResponse>\n  <ResponseStatus>\n    <ErrorCode>12109</ErrorCode>\n    <Description>E911 Geocoding Service is temporary unavailable</Description>\n  </ResponseStatus>\n</GeocodeRequestResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/GeocodeRequestErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/hosts": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve information about the hosts of account, as guided by optional search parameters.",
        "operationId": "GetHosts",
        "summary": "List hosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "host",
            "description": "<p>An IP address or subnet (CIDR format) associated with the account. Filter for subnet applies by exact match.</p>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "47.16.211.63 or 69.22.181.68/30"
          },
          {
            "name": "type",
            "description": "<p>A status value to filter the hosts returned in the payload.  Values that can be accepted include:</p><ul><li>SMS</li><li>TERMINATION</li><li>ORIGINATION</li></ul>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "TERMINATION"
          }
        ],
        "responses": {
          "200": {
            "description": "<p>A successful result that contains the response data</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteHostsResponse>\n  <SiteHosts>\n    <SiteHost>\n      <SiteId>5</SiteId>\n      <SipPeerHosts>\n        <SipPeerHost>\n          <SipPeerId>500146</SipPeerId>\n          <SmsHosts/>\n          <VoiceHosts>\n            <Host>\n              <HostName>47.16.211.63</HostName>\n            </Host>\n          </VoiceHosts>\n          <TerminationHosts/>\n        </SipPeerHost>\n      </SipPeerHosts>\n    </SiteHost>\n  </SiteHosts>\n</SiteHostsResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteHostsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importTnChecker": {
      "post": {
        "tags": [
          "Import Tn"
        ],
        "description": "<p>Request portability information on a set of TNs. SipPeerId is an optional value. If SipPeerId is not specified, the id of the default Sip-Peer for the provided SiteId will be used.</p>",
        "operationId": "CreateRequestImportTnChecker",
        "summary": "Check Tns portability",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportTnCheckerPayload>\n  <TelephoneNumbers>\n    <TelephoneNumber>3032281000</TelephoneNumber>\n    <TelephoneNumber>4109235436</TelephoneNumber>\n    <TelephoneNumber>4104685864</TelephoneNumber>\n  </TelephoneNumbers>\n  <SiteId>486</SiteId>\n  <SipPeerId>500025</SipPeerId>\n</ImportTnCheckerPayload>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ImportTnCheckerPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "<p>A successful check has been performed.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportTnCheckerResponse>\n  <ImportTnCheckerPayload>\n    <TelephoneNumbers>\n      <TelephoneNumber>3032281000</TelephoneNumber>\n    </TelephoneNumbers>\n    <ImportTnErrors>\n      <ImportTnError>\n        <Code>19006</Code>\n        <Description>Bandwidth numbers cannot be imported by this account at this time.</Description>\n        <TelephoneNumbers>\n          <TelephoneNumber>4109235436</TelephoneNumber>\n          <TelephoneNumber>4104685864</TelephoneNumber>\n        </TelephoneNumbers>\n      </ImportTnError>\n    </ImportTnErrors>\n  </ImportTnCheckerPayload>\n</ImportTnCheckerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportTnCheckerResponse"
                }
              }
            }
          },
          "400": {
            "description": "<p>Bad Response - there were errors in evaluating the body of the request.</p> <p>Potential errors include:</p><ul><li> List of TNs is empty.<li> List of TNs is more than 5000 TNs.<li> The account does not have the necessary (IMPORT_TNS) flag.<li> TNs are invalid (they are not actual TNs, and there are duplicates).</ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportTnCheckerResponse>\n<Errors>\n  <Code>7201</Code>\n    <Description>61746052083 is not a valid NANPA telephone number.</Description>\n  </Errors>\n  <Errors>\n    <Code>7201</Code>\n    <Description>61746052082 is not a valid NANPA telephone number.</Description>\n  </Errors>\n</ImportTnCheckerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportTnCheckerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importTnOrders": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the importtnorders requests for the given account ID. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.\n",
        "summary": "List Import Tn orders",
        "operationId": "ReadImportTnOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The status of the importTnOrder being searched for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "PARTIAL"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "customerOrderId",
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the importTnOrder.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find Import Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find Import Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "loaType",
            "description": "Indentify the LoaType on TNs.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SUBSCRIBER",
                "CARRIER"
              ],
              "default": "ALL"
            },
            "example": "SUBSCRIBER"
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the importTnOrders query provides information about the orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully imported Telephone Numbers, and descriptions of any encountered errors.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ImportTnOrders>\n   <TotalCount>2</TotalCount>\n   <ImportTnOrderSummary>\n      <accountId>14</accountId>\n      <CountOfTNs>1</CountOfTNs>\n      <CustomerOrderId>CustomerOrderId</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2019-01-24T11:08:09.770Z</lastModifiedDate>\n      <OrderDate>2019-01-24T11:08:09.770Z</OrderDate>\n      <OrderType>import_tn_orders</OrderType>\n      <OrderStatus>COMPLETE</OrderStatus>\n      <OrderId>211a103c-5f9c-4117-8833-c574bdc390fd</OrderId>\n   </ImportTnOrderSummary>\n   <ImportTnOrderSummary>\n      <accountId>14</accountId>\n      <CountOfTNs>2</CountOfTNs>\n      <CustomerOrderId>CustomerOrderId</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2019-01-24T10:43:16.934Z</lastModifiedDate>\n      <OrderDate>2019-01-24T10:43:16.934Z</OrderDate>\n      <OrderType>import_tn_orders</OrderType>\n      <OrderStatus>PARTIAL</OrderStatus>\n      <OrderId>8dc32f09-2329-4c73-b702-526f46b02712</OrderId>\n   </ImportTnOrderSummary>\n</ImportTnOrders>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportTnOrdersResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Import Tn"
        ],
        "description": "Creates an importTnOrders request to add numbers under the given site ID and sippeer ID as specified in the body.\nA successfully submitted order will have a status of \"RECEIVED\". A successfully completed order will have a status of \"COMPLETE\" if all of the telephone numbers were successfully imported and  \"PARTIAL\" if some of the telephone numbers were imported. A failed order with will have a staus of \"FAILED\" and no telephone numbers would have been imported.",
        "summary": "Import Tn order",
        "operationId": "CreateImportTnOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ImportTnOrderRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportTnOrder>\n\t    <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n\t<SiteId>743</SiteId>\n\t   <SipPeerId>303716</SipPeerId>\n\t    <Subscriber>\n\t\t        <Name>ABC Inc.</Name>\n\t\t       <ServiceAddress>\n\t\t\t            <HouseNumber>11235</HouseNumber>\n\t\t\t            <StreetName>Back</StreetName>\n\t\t\t           <City>Denver</City>\n\t\t\t            <StateCode>CO</StateCode>\n\t\t\t            <Zip>27541</Zip>\n\t\t\t            <County>Canyon</County>\n\t\t        </ServiceAddress>\n\t    </Subscriber>\n\t    <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>\n\t    <LoaType>CARRIER</LoaType>\n\t    <TelephoneNumbers>\n\t\t        <TelephoneNumber>9199918388</TelephoneNumber>\n\t\t        <TelephoneNumber>4158714245</TelephoneNumber>\n\t\t        <TelephoneNumber>4352154439</TelephoneNumber>\n\t\t        <TelephoneNumber>4352154466</TelephoneNumber>\n\t    </TelephoneNumbers>\n</ImportTnOrder>\n"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created and an order ID will be specified in the payload and in the header.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportTnOrderResponse>\n\t <ImportTnOrder>\n\t\t<CustomerOrderId>SJM000001</CustomerOrderId>\n\t\t <OrderCreateDate>2018-01-20T02:59:54.000Z</OrderCreateDate>\n\t\t <AccountId>9900012</AccountId>\n\t\t <CreatedByUser>smckinnon</CreatedByUser>\n\t\t <OrderId>b05de7e6-0cab-4c83-81bb-9379cba8efd0</OrderId>\n\t\t <LastModifiedDate>2018-01-20T02:59:54.000Z</LastModifiedDate>\n\t\t <SiteId>202</SiteId>\n\t\t <SipPeerId>520565</SipPeerId>\n\t\t <Subscriber>\n\t\t\t <Name>ABC Inc.</Name>\n\t\t\t <ServiceAddress>\n\t\t\t\t <HouseNumber>11235</HouseNumber>\n\t\t\t\t <StreetName>Back</StreetName>\n\t\t\t\t <City>Denver</City>\n\t\t\t\t <StateCode>CO</StateCode>\n\t\t\t\t <Zip>27541</Zip>\n\t\t\t\t <County>Canyon</County>\n\t\t\t\t </ServiceAddress>\n\t\t\t </Subscriber>\n\t\t <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>\n\t\t <LoaType>CARRIER</LoaType>\n\t\t <TelephoneNumbers>\n\t\t\t <TelephoneNumber>9199918388</TelephoneNumber>\n\t\t\t <TelephoneNumber>4158714245</TelephoneNumber>\n\t\t\t <TelephoneNumber>4352154439</TelephoneNumber>\n\t\t\t <TelephoneNumber>4352154466</TelephoneNumber>\n\t\t </TelephoneNumbers>\n\t\t <ProcessingStatus>PROCESSING</ProcessingStatus>\n\t\t <Errors/>\n\t </ImportTnOrder>\n </ImportTnOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportTnOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "The order failed; one of the input parameters is invalid. The error text and an error code will be provided in the ErrorList element.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportTnOrderResponse>\n\t <ProcessingStatus>FAILED</ProcessingStatus>\n\t <Errors>\n\t\t <Code>7309</Code>\n\t\t <Description>The site id was not supplied or is invalid.</Description>\n\t </Errors>\n\t <Errors>\n\t\t <Code>7312</Code>\n\t\t <Description>The sippeer id is invalid.</Description>\n\t </Errors>\n </ImportTnOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportTnOrderError"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importTnOrders/{orderId}": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieve information about a importTnOrder with specified ID.",
        "summary": "Fetch Import Tn order status",
        "operationId": "ReadImportTnOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportTnOrder>\n\t <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate>\n\t <AccountId>9900012</AccountId>\n\t <CreatedByUser>sjm</CreatedByUser>\n\t <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId>\n\t <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate>\n\t <SiteId>65487</SiteId>\n\t <SipPeerId>885544</SipPeerId>\n\t <Subscriber>\n\t\t <Name>First</Name>\n\t\t <ServiceAddress>\n\t\t\t <HouseNumber>11235</HouseNumber>\n\t\t\t <StreetName>Back</StreetName>\n\t\t\t <City>Denver</City>\n\t\t\t <StateCode>CO</StateCode>\n\t\t\t <Zip>27541</Zip>\n\t\t\t <County>Canyon</County>\n\t\t </ServiceAddress>\n\t </Subscriber>\n\t <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>\n\t <LoaType>CARRIER</LoaType>\n\t <TelephoneNumbers>\n\t\t <TelephoneNumber>2106078250</TelephoneNumber>\n\t\t <TelephoneNumber>2109678273</TelephoneNumber>\n\t\t <TelephoneNumber>2109678331</TelephoneNumber>\n\t\t <TelephoneNumber>2109678337</TelephoneNumber>\n\t\t <TelephoneNumber>2266401468</TelephoneNumber>\n\t </TelephoneNumbers>\n\t <ProcessingStatus>PARTIAL</ProcessingStatus>\n\t <Errors>\n\t\t <Error>\n\t\t\t <Code>7518</Code>\n\t\t\t <Description>Telephone Number Not Active.</Description>\n\t\t\t <TelephoneNumbers>\n\t\t\t\t <TelephoneNumber>2262665583</TelephoneNumber>\n\t\t\t </TelephoneNumbers>\n\t\t </Error>\n\t </Errors>\n </ImportTnOrder>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportTnOrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importTnOrders/{orderId}/history": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the history of the specified importTnOrder.",
        "summary": "Fetch Import Tn order history",
        "operationId": "ReadImportTnOrderHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          }
        ],
        "responses": {
          "200": {
            "description": "The history has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderHistoryWrapper>\n\t <OrderHistory>\n\t\t <OrderDate>2015-06-16T14:03:10.225Z</OrderDate>\n\t\t <Note>Import TN order is received.</Note>\n\t\t <Author>admin</Author>\n\t\t <Status>RECEIVED</Status>\n\t </OrderHistory>\n\t <OrderHistory>\n\t\t <OrderDate>2015-06-16T14:03:10.330Z</OrderDate>\n\t\t <Note>Import TN order is processing.</Note>\n\t\t <Author>admin</Author>\n\t\t <Status>PROCESSING</Status>\n\t </OrderHistory>\n\t <OrderHistory>\n\t\t <OrderDate>2015-06-16T14:03:10.789Z</OrderDate>\n\t\t <Note>Import TN order is partial.</Note>\n\t\t <Author>admin</Author>\n\t\t <Status>PARTIAL</Status>\n\t </OrderHistory>\n </OrderHistoryWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importTnOrders/{orderId}/loas": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the list of the loa (and other) files associated with the order.",
        "summary": "Fetch Import Tn order loas",
        "operationId": "ReadImportTnOrderLoas",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          },
          {
            "name": "metadata",
            "description": "if true it will return meta-data associated with the file used to describe the file.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The list of all files is being returned.  This response includes the case where the list is empty.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fileListResponse>\n\t    <fileCount>1</fileCount>\n\t    <fileData>\n\t        <FileName>eeceff88-c11e-4bd8-86f3-8e3482888500-1624044440058.pdf</FileName>\n\t        <FileMetaData>\n\t\t            <DocumentType>LOA</DocumentType>\n\t        </FileMetaData>\n\t    </fileData>\n\t    <resultCode>0</resultCode>\n\t    <resultMessage>LOA file list successfully returned</resultMessage>\n</fileListResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FileListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Import Tn"
        ],
        "description": "POSTing to the /loas resource will enable the upload of the file.  The key attribute to the POST is ensuring that the headers are correctly set to support the file upload.<br>\nQuery parameter or header documentType can be used to specify type of document on upload.",
        "summary": "Import Tn order loas",
        "operationId": "CreateImportTnOrderLoas",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          },
          {
            "name": "documentType",
            "description": "This query parameter allows you to include the document type metadata\nat the same time you upload the file.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "LOA",
                "INVOICE",
                "CSR",
                "OTHER"
              ]
            },
            "example": "documentType=LOA"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The 201 response indicates the successful creation of a file resource containing the uploaded content.\nThe response header will include a link to the created file as a GET on the identified resource.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fileUploadResponse>\n\t    <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>\n\t    <resultCode>0</resultCode>\n\t    <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage>\n</fileUploadResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 indicates that the requested upload failed."
          }
        }
      }
    },
    "/accounts/{accountId}/importTnOrders/{orderId}/loas/{fileId}": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the file associated with the order.",
        "summary": "Fetch Import Tn order loas file",
        "operationId": "ReadImportTnOrderLoasFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          },
          {
            "name": "fileId",
            "description": "File id with format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4.pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 OK  indicates a successful download request.<br>\nThe response to the get on a filename will result in the file being prepared and delivered in a manner consistent with browser download.  The Response headers include the content-disposition header describing the file download."
          },
          "404": {
            "description": "a 404 indicates that the indicated file was not found in conjunction with the order id."
          }
        }
      },
      "put": {
        "tags": [
          "Import Tn"
        ],
        "description": "A PUT on the filename will update / replace the identified file id.  The format of the PUT is identical to that of the POST.",
        "summary": "Updating Import Tn order loas file",
        "operationId": "UpdateImportTnOrderLoasFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          },
          {
            "name": "fileId",
            "description": "File id with format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4.pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 response indicates the successful replacement of a file resource containing the uploaded content.\nThe response header will include a link to the created file as a GET on the identified resource.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fileUploadResponse>\n\t    <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>\n\t    <resultCode>0</resultCode>\n\t    <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage>\n</fileUploadResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 indicates that the requested upload failed."
          },
          "404": {
            "description": "A 404 indicates that the file was not available for replacement."
          }
        }
      },
      "delete": {
        "tags": [
          "Import Tn"
        ],
        "description": "Deletes the file associated with the order",
        "summary": "Removing Import Tn order loas file",
        "operationId": "DeleteImportTnOrderLoasFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          },
          {
            "name": "fileId",
            "description": "File id with format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4.pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 OK  indicates a successful deletion of the identified file."
          },
          "404": {
            "description": "a 404 indicates that the indicated file was not found in conjunction with the order id."
          }
        }
      }
    },
    "/accounts/{accountId}/importTnOrders/{orderId}/loas/{fileId}/metadata": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the metadata associated with the file.",
        "summary": "Fetch Import Tn order loas file metadata",
        "operationId": "ReadImportTnOrderLoasFileMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          },
          {
            "name": "fileId",
            "description": "File id with format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4.pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "The Metatdata has been successfully retrieved.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<FileMetaData>\n\t   <DocumentName> [string] </DocumentName>\n\t   <DocumentType> [LOA | INVOICE | CSR | OTHER] </DocumentType>\n</FileMetaData>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FileMetaData"
                }
              }
            }
          },
          "404": {
            "description": "a 404 indicates that the indicated file was not found in conjunction with the order id."
          }
        }
      },
      "put": {
        "tags": [
          "Import Tn"
        ],
        "description": "Associate metadata with the file named in the resource path.  This will describe the file, and declare the data that is contained in the file, selected from a list of [LOA | INVOICE | CSR | OTHER].",
        "summary": "Updating Import Tn order loas file metadata",
        "operationId": "UpdateImportTnOrderLoasFileMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          },
          {
            "name": "fileId",
            "description": "File id with format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4.pdf"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<FileMetaData>\n\t   <DocumentName>fileName</DocumentName>\n\t   <DocumentType>LOA</DocumentType>\n</FileMetaData>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/FileMetaDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update of the metadata associated with the identified file.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileMetaData"
                }
              }
            }
          },
          "400": {
            "description": "Some error has occured as a result of the attempt."
          }
        }
      },
      "delete": {
        "tags": [
          "Import Tn"
        ],
        "description": "Deletes the metadata previously associated with the identified file.",
        "summary": "Removing Import Tn order loas file metadata",
        "operationId": "RemoveImportTnOrderLoasFileMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import Tn order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          },
          {
            "name": "fileId",
            "description": "File id with format",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4.pdf"
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 OK  indicates a successful deletion of the identified metadata."
          },
          "404": {
            "description": "A 404 indicates that the indicated file was not found in conjunction with the order id.cd"
          }
        }
      }
    },
    "/accounts/{accountId}/importTnOrders/voice": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the ImportVoiceTnOrder requests for the given account ID. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.\n",
        "summary": "List Import Voice Tn orders",
        "operationId": "ReadImportVoiceTnOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/StatusQueryParam"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "customerOrderId",
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the importVoiceTnOrder.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find Import Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find Import Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "sipPeerId",
            "description": "A Sip Peer Id that is referenced in the order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": "50139"
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the importVoiceTnOrders query provides information about the orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully imported Telephone Numbers, and descriptions of any encountered errors.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportVoiceTnOrders>\n   <TotalCount>2</TotalCount>\n   <ImportVoiceTnOrderSummary>\n      <accountId>14</accountId>\n      <CountOfTNs>1</CountOfTNs>\n      <CustomerOrderId>CustomerOrderId</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2019-01-24T11:08:09.770Z</lastModifiedDate>\n      <OrderDate>2019-01-24T11:08:09.770Z</OrderDate>\n      <OrderType>import_voice_tn_orders</OrderType>\n      <OrderStatus>COMPLETE</OrderStatus>\n      <OrderId>211a103c-5f9c-4117-8833-c574bdc390fd</OrderId>\n   </ImportVoiceTnOrderSummary>\n   <ImportVoiceTnOrderSummary>\n      <accountId>14</accountId>\n      <CountOfTNs>2</CountOfTNs>\n      <CustomerOrderId>CustomerOrderId</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2019-01-24T10:43:16.934Z</lastModifiedDate>\n      <OrderDate>2019-01-24T10:43:16.934Z</OrderDate>\n      <OrderType>import_voice_tn_orders</OrderType>\n      <OrderStatus>PARTIAL</OrderStatus>\n      <OrderId>8dc32f09-2329-4c73-b702-526f46b02712</OrderId>\n   </ImportVoiceTnOrderSummary>\n</ImportVoiceTnOrders>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportVoiceTnOrdersResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Import Tn"
        ],
        "description": "Creates an ImportVoiceTnOrders request to add numbers under the given site ID and sipPeer ID as specified in the body.\nA successfully submitted order will have a status of \"RECEIVED\". A successfully completed order will have a status of \"COMPLETE\" if all of the telephone numbers were successfully imported and  \"PARTIAL\" if some of the telephone numbers were imported. A failed order with will have a staus of \"FAILED\" and no telephone numbers would have been imported.",
        "summary": "Import Voice Tn order",
        "operationId": "CreateVoiceImportTnOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ImportVoiceTnOrderRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportVoiceTnOrder>\n   <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n   <SiteId>743</SiteId>\n   <SipPeerId>303716</SipPeerId>\n   <TelephoneNumbers>\n      <TelephoneNumber>9199918388</TelephoneNumber>\n      <TelephoneNumber>4158714245</TelephoneNumber>\n      <TelephoneNumber>4352154439</TelephoneNumber>\n      <TelephoneNumber>4352154466</TelephoneNumber>\n   </TelephoneNumbers>\n</ImportVoiceTnOrder>\n"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created and an order ID will be specified in the payload and in the header.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportVoiceTnOrderResponse>\n   <ImportVoiceTnOrder>\n      <CustomerOrderId>SJM000001</CustomerOrderId>\n      <OrderCreateDate>2018-01-20T02:59:54.000Z</OrderCreateDate>\n      <AccountId>9900012</AccountId>\n      <CreatedByUser>smckinnon</CreatedByUser>\n      <OrderId>b05de7e6-0cab-4c83-81bb-9379cba8efd0</OrderId>\n      <LastModifiedDate>2018-01-20T02:59:54.000Z</LastModifiedDate>\n      <SiteId>202</SiteId>\n      <SipPeerId>520565</SipPeerId>\n      <TelephoneNumbers>\n         <TelephoneNumber>9199918388</TelephoneNumber>\n         <TelephoneNumber>4158714245</TelephoneNumber>\n         <TelephoneNumber>4352154439</TelephoneNumber>\n         <TelephoneNumber>4352154466</TelephoneNumber>\n      </TelephoneNumbers>\n      <ProcessingStatus>PROCESSING</ProcessingStatus>\n      <Errors/>\n   </ImportVoiceTnOrder>\n</ImportVoiceTnOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportVoiceTnOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "The order failed; one of the input parameters is invalid. The error text and an error code will be provided in the ErrorList element.</p> <table cellspacing=\"0\" cellpadding=\"0\" width=\"624\">\n        <tbody>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        <strong>ErrorCode</strong>\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p>\n                        <strong>Description</strong>\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        25010\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        The account does not have permission to use the endpoint requested, please contact support if you believe you should have permission.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5052\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        Customer order ID is invalid. Only alphanumeric values, dashes and spaces are allowed. Max length is 255 characters.\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        1003\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        SiteId is required.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5073\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        Telephone number is required.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5095\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        The count of telephone numbers in order exceeds the maximum size of 5000.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        1003\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        TelephoneNumbers is required.\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5070\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        Telephone number is invalid.\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5093\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        Order cannot contain duplicate telephone numbers.\n                </td>\n            </tr>            \n        </tbody>\n    </table>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportVoiceTnOrderResponse>\n   <ProcessingStatus>FAILED</ProcessingStatus>\n   <Errors>\n      <Code>7309</Code>\n      <Description>The site id was not supplied or is invalid.</Description>\n   </Errors>\n   <Errors>\n      <Code>7312</Code>\n      <Description>The sippeer id is invalid.</Description>\n   </Errors>\n</ImportVoiceTnOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportVoiceTnOrderError"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importTnOrders/voice/{orderId}": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieve information about a importVoiceTnOrder with specified ID.",
        "summary": "Fetch Import Voice Tn order status",
        "operationId": "ReadImportVoiceTnOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload. <table cellspacing=\"0\" cellpadding=\"0\" width=\"624\">\n        <tbody>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        <strong>ErrorCode</strong>\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p>\n                        <strong>Description</strong>\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        19014\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        Numbers cannot be imported by this account at this time.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5061\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        The SiteId submitted is invalid.\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5023\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        SIP peer submitted is invalid.\n                    </p>\n                </td>\n            </tr>            \n        </tbody>\n    </table>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportTnOrder>\n   <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate>\n   <AccountId>9900012</AccountId>\n   <CreatedByUser>sjm</CreatedByUser>\n   <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId>\n   <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate>\n   <SiteId>65487</SiteId>\n   <SipPeerId>885544</SipPeerId>\n   <TelephoneNumbers>\n      <TelephoneNumber>2106078250</TelephoneNumber>\n      <TelephoneNumber>2109678273</TelephoneNumber>\n      <TelephoneNumber>2109678331</TelephoneNumber>\n      <TelephoneNumber>2109678337</TelephoneNumber>\n      <TelephoneNumber>2266401468</TelephoneNumber>\n      </TelephoneNumbers>\n   <ProcessingStatus>PARTIAL</ProcessingStatus>\n   <Errors>\n      <Error>\n         <Code>7518</Code>\n         <Description>Telephone Number Not Active.</Description>\n         <TelephoneNumbers>\n            <TelephoneNumber>2262665583</TelephoneNumber>\n         </TelephoneNumbers>\n      </Error>\n   </Errors>\n</ImportTnOrder>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportVoiceTnOrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importTnOrders/voice/{orderId}/history": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the history of the specified importVoiceTnOrder.",
        "summary": "Fetch Import Voice Tn order history",
        "operationId": "ReadImportVoiceTnOrderHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The history has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderHistoryWrapper>\n   <OrderHistory>\n      <OrderDate>2015-06-16T14:03:10.225Z</OrderDate>\n      <Note>Import Voice TN order is received.</Note>\n      <Author>admin</Author>\n      <Status>RECEIVED</Status>\n      </OrderHistory>\n      <OrderHistory>\n      <OrderDate>2015-06-16T14:03:10.330Z</OrderDate>\n      <Note>Import TN order is processing.</Note>\n      <Author>admin</Author>\n      <Status>PROCESSING</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2015-06-16T14:03:10.789Z</OrderDate>\n      <Note>Import Voice TN order is partial.</Note>\n      <Author>admin</Author>\n      <Status>PARTIAL</Status>\n   </OrderHistory>\n</OrderHistoryWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importToAccount": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieve a list of the Import to Account orders that have previously performed on the account.  The query must always specify pagination parameters (size, page).  The results can also be optionally limited with start date and end date .\n",
        "summary": "List Import to Account orders",
        "operationId": "ReadImportToAccountOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "All Order retrievals must be paginated, using page and size indicators.  The page parameter contains the `<orderId>` that is to start the page, or \"1\" in the case of the first page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "cbdcfc94-81b1-4ce9-8b6d-f8d6b85381ba"
          },
          {
            "name": "size",
            "description": "The size parameter indicates the number of orders to return in the payload",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 20
          },
          {
            "name": "startdate",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "enddate",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          }
        ],
        "responses": {
          "200": {
            "description": "The response provides a list of all of the orders in the date range that have been issued against the account.\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ResponseSelectWrapper>\n   <ListOrderIdUserIdDate>\n      <TotalCount>3</TotalCount>\n      <OrderIdUserIdDate>\n         <accountId>14</accountId>\n         <CountOfTNs>2</CountOfTNs>\n         <userId>team_ua</userId>\n         <lastModifiedDate>2014-07-07T10:06:43.427Z</lastModifiedDate>\n         <OrderType>import_to_account</OrderType>\n         <OrderDate>2014-07-07T10:06:43.427Z</OrderDate>\n         <orderId>37a6447c-1a0b-4be9-ba89-3f5cb0aea142</orderId>\n         <OrderStatus>FAILED</OrderStatus>\n      </OrderIdUserIdDate>\n      <OrderIdUserIdDate>\n         <accountId>14</accountId>\n         <CountOfTNs>2</CountOfTNs>\n         <userId>team_ua</userId>\n         <lastModifiedDate>2014-07-07T10:05:56.595Z</lastModifiedDate>\n         <OrderType>import_to_account</OrderType>\n         <OrderDate>2014-07-07T10:05:56.595Z</OrderDate>\n         <orderId>743b0e64-3350-42e4-baa6-406dac7f4a85</orderId>\n         <OrderStatus>RECEIVED</OrderStatus>\n      </OrderIdUserIdDate>\n      <OrderIdUserIdDate>\n         <accountId>14</accountId>\n         <CountOfTNs>2</CountOfTNs>\n         <userId>team_ua</userId>\n         <lastModifiedDate>2014-07-07T09:32:17.234Z</lastModifiedDate>\n         <OrderType>import_to_account</OrderType>\n         <OrderDate>2014-07-07T09:32:17.234Z</OrderDate>\n         <orderId>f71eb4d2-bfef-4384-957f-45cd6321185e</orderId>\n         <OrderStatus>RECEIVED</OrderStatus>\n      </OrderIdUserIdDate>\n   </ListOrderIdUserIdDate>\n</ResponseSelectWrapper>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ResponseSelectWrapper"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Import Tn"
        ],
        "description": "Import a large number of previously ported or otherwise acquired numbers into the account\n",
        "summary": "Import to Account order",
        "operationId": "CreateImportToAccountOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ImportToAccountOrderRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\"?>\n<ImportToAccountNumberOrder>\n\t<ImportToAccountNumberOrderType>\n\t\t<NumberFormat>10D</NumberFormat>\n\t\t<TelephoneNumberList>\n\t\t\t<TelephoneNumber>4158714244</TelephoneNumber>\n\t\t\t<TelephoneNumber>6105330709</TelephoneNumber>\n\t\t</TelephoneNumberList>\n\t\t<BillingType>NOCHARGE</BillingType>\n\t\t<InitialStatus>Available</InitialStatus>\n\t\t<TnAttributes>\n\t\t\t<TnAttribute>Protected</TnAttribute>\n\t\t</TnAttributes>\n\t\t<VendorName>Level 3</VendorName>\n\t\t<BatchId>TestId1234</BatchId>\n\t\t<BatchSize>2</BatchSize>\n\t</ImportToAccountNumberOrderType>\n\t<SiteId>1</SiteId>\n\t<PeerId>12345</PeerId>\n\t</ImportToAccountNumberOrder>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created and an order ID will be specified in the payload and in the header.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportToAccountNumberOrderResponse>\n\t<OrderRequest>\n\t\t<id>c5986599-3a7c-4eed-a5c4-9121c17d54ab</id>\n\t\t<OrderCreateDate>2014-04-01T21:54:18.796Z</OrderCreateDate>\n\t\t<ImportToAccountNumberOrderType>\n\t\t\t<BatchId>SJM00001</BatchId>\n\t\t\t<BatchSize>2</BatchSize>\n\t\t\t<BillingType>NOCHARGE</BillingType>\n\t\t\t<NumberFormat>10D</NumberFormat>\n\t\t\t<InitialStatus>Available</InitialStatus>\n\t\t\t<TnAttributes>\n\t\t\t\t<TnAttribute>Protected</TnAttribute>\n\t\t\t</TnAttributes>\n\t\t\t<TelephoneNumberList>\n\t\t\t\t<TelephoneNumber>4158714245</TelephoneNumber>\n\t\t\t\t<TelephoneNumber>6105330710</TelephoneNumber>\n\t\t\t</TelephoneNumberList>\n\t\t\t<VendorName>Level 3</VendorName>\n\t\t</ImportToAccountNumberOrderType>\n\t\t<SiteId>743</SiteId>\n\t\t<PeerId>12345</PeerId>\n\t</OrderRequest>\n\t</ImportToAccountNumberOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportToAccountNumberOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "The order failed; one of the input parameters is invalid. The error text and an error code will be provided in the ErrorList element.</p>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportToAccountNumberOrderResponse>\n\t <ErrorList>\n\t\t <Error>\n\t\t\t <Code>7309</Code>\n\t\t\t <Description>The site id was not supplied or is invalid.</Description>\n\t\t </Error>\n\t\t <Error>\n\t\t\t <Code>7312</Code>\n\t\t\t <Description>The sippeer id is invalid.</Description>\n\t\t </Error>\n\t </ErrorList>\n </ImportToAccountNumberOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportToAccountNumberOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importToAccount/{orderId}": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieve information about a import to account order with specified ID.",
        "summary": "Fetch Import To Account order status",
        "operationId": "ReadImportToAccountOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import To Account order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ImportToAccountNumberOrderResponse>\n\t<ErrorList/>\n\t<ImportedTelephoneNumberList>\n\t\t<TelephoneNumber>9199918393</TelephoneNumber>\n\t\t<TelephoneNumber>9199918394</TelephoneNumber>\n\t</ImportedTelephoneNumberList>\n\t<orderRequest>\n\t\t<OrderCreateDate>2014-04-18T16:38:05.001Z</OrderCreateDate>\n\t\t<PeerId>303716</PeerId>\n\t\t<ImportToAccountNumberOrderType>\n\t\t\t<BatchId>TestId1234</BatchId>\n\t\t\t<BatchSize>2</BatchSize>\n\t\t\t<OverridePortFees>false</OverridePortFees>\n\t\t\t<PortedIn>false</PortedIn>\n\t\t\t<InitialStatus>Available</InitialStatus>\n\t\t\t<TnAttributes>\n\t\t\t\t<TnAttribute>Protected</TnAttribute>\n\t\t\t</TnAttributes>\n\t\t\t<TelephoneNumberList>\n\t\t\t\t<TelephoneNumber>9199918393</TelephoneNumber>\n\t\t\t\t<TelephoneNumber>9199918394</TelephoneNumber>\n\t\t\t</TelephoneNumberList>\n\t\t\t<VendorName>Bandwidth CLEC</VendorName>\n\t\t</ImportToAccountNumberOrderType>\n\t\t<SiteId>743</SiteId>\n\t</orderRequest>\n\t<OrderStatus>COMPLETE</OrderStatus>\n\t<ImportedTelephoneNumberDetailList>\n\t\t<TelephoneNumberDetail>\n\t\t\t<FullNumber>9199918393</FullNumber>\n\t\t</TelephoneNumberDetail>\n\t\t<TelephoneNumberDetail>\n\t\t\t<FullNumber>9199918394</FullNumber>\n\t\t</TelephoneNumberDetail>\n\t</ImportedTelephoneNumberDetailList>\n</ImportToAccountNumberOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ImportToAccountNumberOrderResponseForGet"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importToAccount/{orderId}/history": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the history of the specified importToAccount order.",
        "summary": "Fetch Import to Account order history",
        "operationId": "ReadImportToAccountOrderHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Import to Account order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          }
        ],
        "responses": {
          "200": {
            "description": "The history has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderHistoryWrapper>\n\t <OrderHistory>\n\t\t <OrderDate>2015-06-16T14:03:10.225Z</OrderDate>\n\t\t <Note>Import to Account is received.</Note>\n\t\t <Author>admin</Author>\n\t\t <Status>RECEIVED</Status>\n\t </OrderHistory>\n\t </OrderHistory>\n\t <OrderHistory>\n\t\t <OrderDate>2015-06-16T14:03:10.789Z</OrderDate>\n\t\t <Note>Import to Account is partial.</Note>\n\t\t <Author>admin</Author>\n\t\t <Status>PARTIAL</Status>\n\t </OrderHistory>\n </OrderHistoryWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importToAccount/batches": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "The batches resource enumerates all of the batches that have been used for importing numbers into an account.\n If there is the need to import a large number of Telephone Numbers into an account, the import is submitted as a <b>batch</b>, which is a collection of submissions that are held together by a batch id.  This batch of orders can subsequently be retrieved by retrieving all of the orders that share a batch id.",
        "summary": "List Import to Account orders batches",
        "operationId": "ReadImportToAccountOrdersBatches",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The response provides a list of batches that have been processed in importing numbers into the account.\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Batches>\n\t<Batch>\n\t\t<BatchId>phnpwrblk4</BatchId>\n\t\t<OrderCreateDate>2014-05-02T15-27-25.090Z</OrderCreateDate>\n\t\t<OrderId>4928ab9d-6bf6-4035-ac01-38a061d0f5d9</OrderId>\n\t\t<OrderStatus>IMPORT_COMPLETE</OrderStatus>\n\t\t<SubmittedTnCount>5000</SubmittedTnCount>\n\t\t<SuccessfulTnCount>5000</SuccessfulTnCount>\n\t\t<BatchSize>5000</BatchSize>\n\t</Batch>\n\t<Batch>\n\t\t<BatchId>1111111111</BatchId>\n\t\t<OrderCreateDate>2013-10-10T15-25-16.952Z</OrderCreateDate>\n\t\t<OrderId>8ce7c80b-d1ce-46f1-a3a1-56a08373b576</OrderId>\n\t\t<OrderStatus>VALIDATION_FAILED</OrderStatus>\n\t\t<SubmittedTnCount>4670</SubmittedTnCount>\n\t\t<SuccessfulTnCount>0</SuccessfulTnCount>\n\t\t<BatchSize>4670</BatchSize>\n\t</Batch>\n\t<Batch>\n\t\t<BatchId>8177974679</BatchId>\n\t\t<OrderCreateDate>2014-04-10T16-54-04.001Z</OrderCreateDate>\n\t\t<OrderId>26afaae3-2a8b-4405-96aa-1c38fe1fb74b</OrderId>\n\t\t<OrderStatus>IMPORT_COMPLETE</OrderStatus>\n\t\t<SubmittedTnCount>2358</SubmittedTnCount>\n\t\t<SuccessfulTnCount>2358</SuccessfulTnCount>\n\t\t<BatchSize>2358</BatchSize>\n\t</Batch>\n</Batches>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Batches"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/importToAccount/batches/{batchId}": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "A batchid identifies a specific batch of one or more orders that constitute a complete import of a (potentially large number of) Telephone Numbers.  Retrieving the information associated with a specific batch id describes the orders that were included in that batch, and the status and id of those orders.",
        "summary": "Fetch Import To Account orders status by batch id",
        "operationId": "ReadImportToAccountOrdersByBatchId",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "batchId",
            "description": "Import To Account order's batch ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Batches>\n\t<Batch>\n\t\t<BatchId>1111111111</BatchId>\n\t\t<OrderCreateDate>2014-05-02T15-27-25.090Z</OrderCreateDate>\n\t\t<OrderId>4928ab9d-6bf6-4035-ac01-38a061d0f5d9</OrderId>\n\t\t<OrderStatus>IMPORT_COMPLETE</OrderStatus>\n\t\t<SubmittedTnCount>5000</SubmittedTnCount>\n\t\t<SuccessfulTnCount>5000</SuccessfulTnCount>\n\t\t<BatchSize>5000</BatchSize>\n\t</Batch>\n\t<Batch>\n\t\t<BatchId>1111111111</BatchId>\n\t\t<OrderCreateDate>2013-10-10T15-25-16.952Z</OrderCreateDate>\n\t\t<OrderId>8ce7c80b-d1ce-46f1-a3a1-56a08373b576</OrderId>\n\t\t<OrderStatus>VALIDATION_FAILED</OrderStatus>\n\t\t<SubmittedTnCount>4670</SubmittedTnCount>\n\t\t<SuccessfulTnCount>0</SuccessfulTnCount>\n\t\t<BatchSize>4670</BatchSize>\n\t</Batch>\n\t<Batch>\n\t\t<BatchId>1111111111</BatchId>\n\t\t<OrderCreateDate>2014-04-10T16-54-04.001Z</OrderCreateDate>\n\t\t<OrderId>26afaae3-2a8b-4405-96aa-1c38fe1fb74b</OrderId>\n\t\t<OrderStatus>IMPORT_COMPLETE</OrderStatus>\n\t\t<SubmittedTnCount>2358</SubmittedTnCount>\n\t\t<SuccessfulTnCount>2358</SuccessfulTnCount>\n\t\t<BatchSize>2358</BatchSize>\n\t</Batch>\n</Batches>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Batches"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/inserviceNumbers": {
      "get": {
        "tags": [
          "In-service Numbers"
        ],
        "description": "Retrieves a list of in-service phone numbers associated with the account ID",
        "summary": "Fetch in-service phone numbers",
        "operationId": "ReadInserviceTns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "The `page` to fetch in a paginated collection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "example": 1
          },
          {
            "name": "size",
            "description": "The number of TNs to retrieve",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 300
          },
          {
            "name": "areacode",
            "description": "An Area Code search filter - all returned TNs will be in the entered Area Code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 919
          },
          {
            "name": "npanxx",
            "description": "An NPA NXX search filter - all returned TNs will be in the entered NPA NXX dial plan",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 919859
          },
          {
            "name": "lata",
            "description": "A Rate Center search filter - all returned TNs will be in the entered Rate Center.  Typically this is a 3 or 5 digit value.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 435
          },
          {
            "name": "state",
            "description": "A State search filter - all returned TNs will be in the entered State.  This is a 2-character State or Province abbreviation.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "TX"
          },
          {
            "name": "ratecenter",
            "description": "A Rate Center search filter - all returned TNs will be in the entered Rate Center.  This `ratecenter` must be combined with a `state` in the query.  If State is not included in the query then the query will fail.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "PLANO"
          },
          {
            "name": "startdate",
            "description": "The starting date of a date range that will filter numbers based on activation or other change date.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "yy-mm-dd"
          },
          {
            "name": "enddate",
            "description": "The ending date of a date range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "yy-mm-dd"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TNs>\n\t    <TotalCount>59</TotalCount>\n\t    <Links>\n\t\t        <first> ( a link goes here ) </first>\n\t    </Links>\n\t    <TelephoneNumbers>\n\t\t        <Count>59</Count>\n\t\t        <TelephoneNumber>8043024183</TelephoneNumber>\n\t\t        <TelephoneNumber>8042121778</TelephoneNumber>\n\t\t        <TelephoneNumber>8042146066</TelephoneNumber>\n\t\t        <TelephoneNumber>8043814903</TelephoneNumber>\n\t\t        <TelephoneNumber>8043814905</TelephoneNumber>\n\t\t        <TelephoneNumber>8043814864</TelephoneNumber>\n\t\t        <TelephoneNumber>8043326094</TelephoneNumber>\n\t\t        <TelephoneNumber>8042121771</TelephoneNumber>\n\t\t        <TelephoneNumber>8043024182</TelephoneNumber>\n\t\t        <!-- SNIP -->        \n\t\t        <TelephoneNumber>8043814900</TelephoneNumber>\n\t\t        <TelephoneNumber>8047672642</TelephoneNumber>\n\t\t        <TelephoneNumber>8043024368</TelephoneNumber>\n\t\t        <TelephoneNumber>8042147950</TelephoneNumber>\n\t\t        <TelephoneNumber>8043169931</TelephoneNumber>\n\t\t        <TelephoneNumber>8043325302</TelephoneNumber>\n\t    </TelephoneNumbers>\n</TNs>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountTelephoneNumbersHistoryResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content - there are no numbers found using the search parameters",
            "content": {
              "application/xml": {}
            }
          },
          "404": {
            "description": "Not Found - The search parameters are invalid and prevent finding any content",
            "content": {
              "application/xml": {}
            }
          }
        }
      }
    },
    "/accounts/{accountId}/inserviceNumbers/totals": {
      "get": {
        "tags": [
          "In-service Numbers"
        ],
        "description": "Returns the total number of in-service numbers for the given account.",
        "summary": "Fetch in-service phone numbers count",
        "operationId": "ReadInserviceTnsCount",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Quantity>\n\t    <Count>62</Count>\n</Quantity>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumberTotalsHistory"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/inserviceNumbers/{tn}": {
      "get": {
        "tags": [
          "In-service Numbers"
        ],
        "description": "A GET on the number desired will return a 200 OK if the number is in-service on the account, or a 404 not found.",
        "summary": "Fetch in-service phone number.",
        "operationId": "ReadInserviceTn",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "tn",
            "description": "The telephone number to check",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "8043024183"
          }
        ],
        "responses": {
          "200": {
            "description": "The telephone number is currently in-service. NOTE that there is no payload; a 200 status simply means that the phone is indeed an in-service number."
          },
          "404": {
            "description": "The telephone number is not currently in-service."
          }
        }
      }
    },
    "/accounts/{accountId}/lidbs": {
      "get": {
        "tags": [
          "LIDB"
        ],
        "description": "The LIDBs Resource represents the requests made to the Bandwidth Dashboard API to add or otherwise manage a request to add Calling Line Information with a telephone number. This API allows the creation and observation of a \"Line Information Data Base (LIDB)\" work order that causes an update of a person's calling name identification in a network Database. The entry of this information in the network database in turn causes the display of their name on the phone of the people that they call.\n\nGET /accounts/{accountId}/lidbs API call is used to retrieve information about outstanding LIDBs orders, and POST to create those orders. Retrieve a list of the LIDB orders that are associated with the account. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.",
        "operationId": "ListLidbOrders",
        "summary": "List LIDB orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order\n",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "lastModifiedAfter",
            "description": "Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find Lidb Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find Lidb Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - a 200 OK indicates that there are LIDB orders associated with the account.\nThe 200 OK response payload provides a list of all LIDB orders that have been issued against that account.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ResponseSelectWrapper>\n    <ListOrderIdUserIdDate>\n        <TotalCount>2122</TotalCount>\n        <OrderIdUserIdDate>\n            <accountId>9999999</accountId>\n            <CountOfTNs>0</CountOfTNs>\n            <lastModifiedDate>2014-02-25T16:02:43.195Z</lastModifiedDate>\n            <OrderType>lidb</OrderType>\n            <OrderDate>2014-02-25T16:02:43.195Z</OrderDate>\n            <orderId>abe36738-6929-4c6f-926c-88e534e2d46f</orderId>\n            <OrderStatus>FAILED</OrderStatus>\n            <TelephoneNumberDetails/>\n            <userId>team_ua</userId>\n        </OrderIdUserIdDate>\n        <!-- ...SNIP... -->\n        <OrderIdUserIdDate>\n            <accountId>9999999</accountId>\n            <CountOfTNs>0</CountOfTNs>\n            <lastModifiedDate>2014-02-25T16:02:39.021Z</lastModifiedDate>\n            <OrderType>lidb</OrderType>\n            <OrderDate>2014-02-25T16:02:39.021Z</OrderDate>\n            <orderId>ba5b6297-139b-4430-aab0-9ff02c4362f4</orderId>\n            <OrderStatus>FAILED</OrderStatus>\n            <userId>team_ua</userId>\n        </OrderIdUserIdDate>\n    </ListOrderIdUserIdDate>\n</ResponseSelectWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LidbOrderHistoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - if any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored."
          }
        }
      },
      "post": {
        "tags": [
          "LIDB"
        ],
        "description": "The LIDBs Resource represents the requests made to the Bandwidth Dashboard API to add or otherwise manage a request to add Calling Line Information with a telephone number. This API allows the creation and observation of a \"Line Information Data Base (LIDB)\" work order that causes an update of a person's calling name identification in a network Database. The entry of this information in the network database in turn causes the display of their name on the phone of the people that they call. \nThis API call supports GET to retrieve information about outstanding LIDBs orders, and POST to create those orders.\n\nCreate a LIDB order to associate Calling Name Information with a TN or list of TNs.",
        "operationId": "CreateLidbOrder",
        "summary": "Create LIDB order - associate Calling Name Information with a TN or list of TNs",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LidbOrder>\n    <CustomerOrderId>[String]</CustomerOrderId>\n    <LidbTnGroups>\n        <LidbTnGroup>\n            <TelephoneNumbers>\n                <TelephoneNumber>8045030097</TelephoneNumber>\n                <TelephoneNumber>8045030098</TelephoneNumber>\n            </TelephoneNumbers>\n            <SubscriberInformation>Joes Garage</SubscriberInformation>\n            <UseType>RESIDENTIAL</UseType>\n            <Visibility>PUBLIC</Visibility>\n        </LidbTnGroup>\n        <LidbTnGroup>\n            <TelephoneNumbers>\n                <TelephoneNumber>8888595935</TelephoneNumber>\n            </TelephoneNumbers>\n            <SubscriberInformation>Joes Storage</SubscriberInformation>\n            <UseType>RESIDENTIAL</UseType>\n            <Visibility>PRIVATE</Visibility>\n        </LidbTnGroup>\n    </LidbTnGroups>\n</LidbOrder>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/LidbOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The 201 response indicates that an order has been created to monitor and manage the request to establish a LIDB CNAME record registered with the network.\nThe <b>location</b> header in the response contains a URL that refers to the created order, including an echo of the order as requested.\nErrors in processing the request will be articulated in the ErrorList component of the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LidbOrderResponse>\n    <LidbOrder>\n        <orderId>1d863522-c9bf-430c-8e79-cc63cad04a1d</orderId>\n        <CustomerOrderId>[String]</CustomerOrderId>\n        <ProcessingStatus>RECEIVED</ProcessingStatus>\n        <ErrorList>\n          <Error>\n            <TelephoneNumber>8888595935</TelephoneNumber>\n            <Code>11020</Code>\n            <Description>Cannot add LIDB to a telephone number that already has LIDB or is in process</Description>\n          </Error>\n        </ErrorList>\n        <LidbTnGroups>\n          <LidbTnGroup>\n            <TelephoneNumbers>\n              <TelephoneNumber>8045030097</TelephoneNumber>\n              <TelephoneNumber>8045030098</TelephoneNumber>\n            </TelephoneNumbers>\n            <SubscriberInformation>Joes Garage</SubscriberInformation>\n            <UseType>RESIDENTIAL</UseType>\n            <Visibility>PUBLIC</Visibility>\n          </LidbTnGroup>\n          <LidbTnGroup>\n            <TelephoneNumbers>\n              <TelephoneNumber>8888595935</TelephoneNumber>\n            </TelephoneNumbers>\n            <SubscriberInformation>Joes Storage</SubscriberInformation>\n            <UseType>RESIDENTIAL</UseType>\n            <Visibility>PRIVATE</Visibility>\n          </LidbTnGroup>\n        </LidbTnGroups>\n    </LidbOrder>\n</LidbOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LidbOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\nA 400 Bad Request indicates that the processing of the request payload has detected a syntactic error that prevents further processing.  No order is created under these conditions, and the request must be corrected and re-submitted before an order can be created.\nError text and an error code will be provided in the ErrorList element.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LidbOrderResponse>\n    <Status>\n        <Code>400</Code>\n        <Description>Validation Failed. Please check your input parameters.</Description>\n    </Status>\n    <ErrorList>\n        <Error>\n            <Code>11007</Code>\n            <Description>No visibility supplied. Visibility must be one of the following - PUBLIC, PRIVATE</Description>\n        </Error>\n    </ErrorList>\n    <LidbOrder>\n        <LidbTnGroups>\n          <LidbTnGroup>\n            <TelephoneNumbers>\n              <TelephoneNumber>9199998830</TelephoneNumber>\n            </TelephoneNumbers>\n            <SubscriberInformation>Joes Garage</SubscriberInformation>\n            <UseType>RESIDENTIAL</UseType>\n          </LidbTnGroup>\n        </LidbTnGroups>\n    </LidbOrder>\n</LidbOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LidbOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lidbs/{lidbid}": {
      "get": {
        "tags": [
          "LIDB"
        ],
        "description": "The LIDBs Resource represents the requests made to the Bandwidth Dashboard API to add or otherwise manage a request to add Calling Line Information with a telephone number. This API allows the creation and observation of a \"Line Information Data Base (LIDB)\" work order that causes an update of a person's calling name identification in a network Database. The entry of this information in the network database in turn causes the display of their name on the phone of the people that they call. \nThis API call supports GET to retrieve information about outstanding LIDBs orders, and POST to create those orders.\n\nRetrieve information about a specific Lidb Order identified as the resource.\nThe LIDBs Resource represents the requests made to the Bandwidth Dashboard API to add or otherwise manage a request to add Calling Line Information with a telephone number. This API allows the creation and observation of a \"Line Information Data Base (LIDB)\" work order that causes an update of a person's calling name identification in a network Database. The entry of this information in the network database in turn causes the display of their name on the phone of the people that they call. \nThis API call supports GET to retrieve information about outstanding LIDBs orders, and POST to create those orders.",
        "operationId": "ReadLidbOrder",
        "summary": "Fetch LIDB order status",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "lidbid",
            "description": "Lidb order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the Lidb Orders query provides a broad range of information about the Lidb Order identified in the URL.  Included amongst the information is:\n\n<ul>\n<li>ErrorList - the errors discovered with codes and explanations</li>\n<li>various dates</li>\n<li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li>\n<li>LidbTnGroups - list of LidbTnGroup elements that contains list of TNs with SubscriberInformation, UseType(RESIDENTIAL or BUSINESS) and Visibility (PUBLIC or PRIVATE)</li>\n</ul>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LidbOrder>\n    <CustomerOrderId>testCustomerOrderId</CustomerOrderId>\n    <orderId>255bda29-fc57-44e8-a6c2-59b45388c6d0</orderId>\n    <OrderCreateDate>2014-05-28T14:46:21.724Z</OrderCreateDate>\n    <ProcessingStatus>RECEIVED</ProcessingStatus>\n    <CreatedByUser>jbm</CreatedByUser>\n    <LastModifiedDate>2014-02-20T19:33:17.600Z</LastModifiedDate>\n    <OrderCompleteDate>2014-02-20T19:33:17.600Z</OrderCompleteDate>\n    <ErrorList/>\n    <LidbTnGroups>\n        <LidbTnGroup>\n            <TelephoneNumbers>\n                <TelephoneNumber>4082213311</TelephoneNumber>\n            </TelephoneNumbers>\n            <FullNumber>8042105618</FullNumber>\n            <SubscriberInformation>Fred</SubscriberInformation>\n            <UseType>BUSINESS</UseType>\n            <Visibility>PRIVATE</Visibility>\n        </LidbTnGroup>\n        <LidbTnGroup>\n            <TelephoneNumbers>\n                <TelephoneNumber>4082212850</TelephoneNumber>\n                <TelephoneNumber>4082213310</TelephoneNumber>\n            </TelephoneNumbers>\n            <FullNumber>8042105760</FullNumber>\n            <SubscriberInformation>Fred</SubscriberInformation>\n            <UseType>RESIDENTIAL</UseType>\n            <Visibility>PUBLIC</Visibility>\n        </LidbTnGroup>\n    </LidbTnGroups>\n</LidbOrder>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LidbOrderResponsePayload"
                }
              }
            }
          },
          "404": {
            "description": "<p>NOT FOUND - the order id does not exist in the system</p>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LidbOrderReportResponse>\n    <ResponseStatus>\n        <Description>The resource does not exist</Description>\n    </ResponseStatus>\n</LidbOrderReportResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LidbOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lnpchecker": {
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "This API endpoint is used to check whether a number or set of numbers can be ported into the Bandwidth Network.\nThe fullcheck query parameter values control the components of the response payload that is returned.\n<p>Please visit <a href='/docs/numbers/guides/porting/lnpChecker'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "RequestPortabilityInfo",
        "summary": "Request portability information for a set of TNs",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "fullCheck",
            "description": "<p>`fullCheck` controls the components of the response payload that is returned</p><table>\n    <tr>\n        <th>Parameter Value</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>true</td>\n        <td>additional information will be provided on the losing carriers associated with the listed numbers</td>\n    </tr>\n    <tr>\n        <td>false</td>\n        <td>return only rate center information</td>\n    </tr>\n    <tr>\n        <td>onnetportability</td>\n        <td>Provides rate center and losing carrier information for onnet tiers only</td>\n    </tr>\n    <tr>\n        <td>offnetportability</td>\n        <td>in addition to on-net information return off-net port information in <i>&lt;PartnerSupportedRateCenters&gt;</i> element with Partner/Vendor that the port will be supported on. \n        Contains a list of the TNs that are supported in partner rate centers, and for which we will execute a port if requested\n        </td>\n    </tr>\n</table>\n<b>IMPORTANT:</b> If your account supports off-net telephone numbers (tiers other than tier zero), you <b>MUST</b> include query parameter fullCheck=offnetportability in your /lnpchecker request. Failure to do so will cause off-net telephone numbers to appear as though they are not portable.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            },
            "example": "offnetportability"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NumberPortabilityRequest>\n   <TnList>\n   <!-- the list of the TNs to check for Portability -->\n      <Tn>4109255199</Tn>\n      <Tn>4109235436</Tn>\n      <Tn>4104685864</Tn>\n      <Tn>4103431313</Tn>\n      <Tn>4103154313</Tn>\n      <Tn>4103431561</Tn>\n      <Tn>2174101103</Tn>\n   </TnList>\n</NumberPortabilityRequest>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/NumberPortabilityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful check has been performed. Note: For users of Enterprise Telephony accounts SupportedLosingCarriers\nand UnsupportedLosingCarriers will be omitted from the success output even when query parameter\nfullCheck has values of true, onnetportability, or offnetportability.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NumberPortabilityResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NumberPortabilityResponse>\n    <PortType>AUTOMATED</PortType>\n    <SupportedRateCenters/>\n    <UnsupportedRateCenters>\n        <RateCenterGroup>\n            <RateCenter>BALTIMORE</RateCenter>\n            <City>BALTIMORE</City>\n            <State>MD</State>\n            <LATA>238</LATA>\n            <TnList>\n                <Tn>4109255199</Tn>\n                <Tn>4104685864</Tn>\n            </TnList>\n        </RateCenterGroup>\n        <RateCenterGroup>\n            <RateCenter>SPARKSGLNC</RateCenter>\n            <City>SPARKS GLENCOE</City>\n            <State>MD</State>\n            <LATA>238</LATA>\n            <TnList>\n                <Tn>4103431313</Tn>\n                <Tn>4103431561</Tn>\n            </TnList>\n        </RateCenterGroup>\n    </UnsupportedRateCenters>\n    <PartnerSupportedRateCenters>\n<!-- Only available for fullCheck=offnetportability -->\n        <RateCenterGroup>\n            <RateCenter>FT COLLINS</RateCenter>\n            <City>FORT COLLINS</City>\n            <State>CO</State>\n            <LATA>656</LATA>\n            <Tiers>\n                <Tier>1</Tier>\n            </Tiers>\n            <TnList>\n                <Tn>4109235436</Tn>\n            </TnList>\n        </RateCenterGroup>\n        <RateCenterGroup>\n            <Vendor>Level 3</Vendor>\n            <AutomatedPort>true</AutomatedPort>\n<!-- Only available when 'Automated Level 3 port-ins' is enabled -->\n            <RateCenter>BEASON</RateCenter>\n            <City>BEASON</City>\n            <State>IL</State>\n            <LATA>366</LATA>\n            <Tiers>\n                <Tier>3</Tier>\n            </Tiers>\n            <TnList>\n                <Tn>2174101103</Tn>\n            </TnList>\n        </RateCenterGroup>\n    </PartnerSupportedRateCenters>\n    <SupportedLosingCarriers>\n        <LosingCarrierTnList>\n            <LosingCarrierSPID>9998</LosingCarrierSPID>\n            <LosingCarrierName>Test Losing Carrier L3</LosingCarrierName>\n            <LosingCarrierIsWireless>false</LosingCarrierIsWireless>\n            <LosingCarrierAccountNumberRequired>false</LosingCarrierAccountNumberRequired>\n            <LosingCarrierMinimumPortingInterval>5</LosingCarrierMinimumPortingInterval>\n            <TnList>\n                <Tn>4109255199</Tn>\n                <Tn>4104685864</Tn>\n                <Tn>4103431313</Tn>\n                <Tn>4103431561</Tn>\n            </TnList>\n        </LosingCarrierTnList>\n        <LosingCarrierTnList>\n            <LosingCarrierSPID>7482</LosingCarrierSPID>\n            <LosingCarrierName>IntegraTelecom</LosingCarrierName>\n            <LosingCarrierIsWireless>false</LosingCarrierIsWireless>\n            <LosingCarrierAccountNumberRequired>false</LosingCarrierAccountNumberRequired>\n            <LosingCarrierMinimumPortingInterval>1</LosingCarrierMinimumPortingInterval>\n            <TnList>\n                <Tn>2174101103</Tn>\n            </TnList>\n        </LosingCarrierTnList>\n    </SupportedLosingCarriers>\n    <UnsupportedLosingCarriers/>\n</NumberPortabilityResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Response - there were errors in evaluating the body of the request\nPotential errors include:\n<ul>\n  <li> Telephone number is not a 10-digit NANP number. </li>\n  <li> Telephone number is already being processed on another order. </li>\n  <li> Rate Center Not Present in Bandwidth Dashboard API. </li>\n  <li> Account not enabled for LNP. </li>\n</ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NumberPortabilityResponse>\n    <Errors>\n        <Code>7201</Code>\n        <Description>61746052083 is not a valid NANP telephone number.</Description>\n    </Errors>\n    <Errors>\n        <Code>7201</Code>\n        <Description>61746052082 is not a valid NANP telephone number.</Description>\n    </Errors>\n</NumberPortabilityResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves a list of LSR oders.  Various query parameters can be used to filter the list of LSR Orders as documented below. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years. \nPlease visit <a href='/docs/numbers/guides/porting/lsrOrders'>Guides and Tutorials</a>",
        "operationId": "ListLsrOrders",
        "summary": "List LSR orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The status of the LSR order being searched for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "EXCEPTION"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "pon",
            "description": "The PON that is referenced in the LSR order.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Available"
          },
          {
            "name": "customerOrderId",
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the port.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "orderIdFragment",
            "description": "This search parameter represents the internal Bandwidth Dashboard API ID that has been assigned to the LSR Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ed1c0bed-e2"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2015-10-22"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2015-10-25"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find LSR Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find LSR Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          }
        ],
        "responses": {
          "200": {
            "description": "The LSR orders have been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LsrOrders>\n    <TotalCount>5</TotalCount>\n    <LsrOrderSummary>\n        <accountId>9999999</accountId>\n        <CountOfTNs>2</CountOfTNs>\n        <CustomerOrderId>FineCustomerid</CustomerOrderId>\n        <userId>team_ua</userId>\n        <lastModifiedDate>2015-03-02T09:10:16.193Z</lastModifiedDate>\n        <OrderType>lsr</OrderType>\n        <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>\n        <OrderStatus>PENDING</OrderStatus>\n        <ActualFocDate>2015-03-25</ActualFocDate>\n        <BillingTelephoneNumber>2526795000</BillingTelephoneNumber>\n        <CreatedByUser>lsrOnlyUser</CreatedByUser>\n        <OrderId>7d644c88-ef23-4307-96ab-20253666d0c7</OrderId>\n        <Pon>ATT-011515-324234</Pon>\n        <PonVersion>0</PonVersion>\n        <RequestedFocDate>2015-11-15</RequestedFocDate>\n    </LsrOrderSummary>\n    <!-- SNIP -->\n    <LsrOrderSummary>\n        <accountId>9999999</accountId>\n        <CountOfTNs>2</CountOfTNs>\n        <CustomerOrderId>MyId5</CustomerOrderId>\n        <lastModifiedDate>2015-03-03T14:07:19.926Z</lastModifiedDate>\n        <OrderType>lsr</OrderType>\n        <OrderDate>2015-03-25T11:44:42.941Z</OrderDate>\n        <OrderStatus>FAILED</OrderStatus>\n        <Errors>\n            <Error>\n                <Code>17008</Code>\n                <Description>\n                    FOC date cannot fall on a holiday\n                </Description>\n            </Error>\n        </Errors>\n        <ActualFocDate>2015-03-25</ActualFocDate>\n        <BillingTelephoneNumber>2526795000</BillingTelephoneNumber>\n        <CreatedByUser>lsrOnlyUser</CreatedByUser>\n        <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>\n        <Pon>testpon1002</Pon>\n        <PonVersion>0</PonVersion>\n        <RequestedFocDate>2015-11-15</RequestedFocDate>\n    </LsrOrderSummary>\n</LsrOrders>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LsrOrderHistoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored."
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "A POST creates a LSR order request to initiate a port-out action. \nPlease visit <a href='/docs/numbers/guides/porting/lsrOrders'>Guides and Tutorials</a>",
        "operationId": "CreateLsrOrder",
        "summary": "Create LSR order - initiate a port-out action",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LsrOrder>\n  <!-- By customer. Alphanumeric and \"#\",\"-\",\"_\". Up to 25 character long. (required) -->\n  <Pon>ATT-011515-324234</Pon>\n  <!-- By customer. Alphanumeric and \" \",\"-\". Up to 40 character long. (optional) -->\n  <CustomerOrderId>FineCustomerid</CustomerOrderId> \n  <!-- By customer. Alphanumeric. Up to 4 character long. (required if account value \"mult\") -->\n  <SPID>123C</SPID> \n  <!-- Non-toll-free btn (optional) -->\n  <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>\n  <!-- Requested date (not past, optional, default next day) -->  \n  <RequestedFocDate>2015-11-15</RequestedFocDate>\n  <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>\n  <Subscriber>\n      <!--Type of the subscriber. BUSINESS | RESIDENTIAL (optional) (RESIDENTIAL if not specified)-->\n      <SubscriberType>BUSINESS</SubscriberType> \n      <!-- Up to 25 character long (required) -->  \n      <BusinessName>BusinessName</BusinessName>     \n      <ServiceAddress>\n          <!-- HouseNumber up to 45 characters (required) -->\n          <HouseNumber>11</HouseNumber>\n          <!-- StreetName up to 200 characters (required) -->\n          <StreetName>Park</StreetName>\n          <!-- StreetSuffix  up to 45 characters (optional) -->\n          <StreetSuffix>Ave</StreetSuffix>\n          <!-- City  up to 100 characters (required) -->\n          <City>New York</City>\n          <!-- StateCode 2 characters (required) -->\n          <StateCode>NY</StateCode>\n          <!-- ZipCode 5 num or 5+4 num (required) -->\n          <Zip>90025</Zip>\n      </ServiceAddress>\n      <!-- Alphanumeric up to 32 character long (optional) -->\n      <AccountNumber>123463</AccountNumber>\n      <!-- Alphanumeric up to 10 character long (optional) --> \n      <PinNumber>1231</PinNumber> \n  </Subscriber>\n  <!-- Toll-free number not allowed -->\n  <ListOfTelephoneNumbers>  \n      <TelephoneNumber>9192381468</TelephoneNumber> \n      <TelephoneNumber>9192381467</TelephoneNumber>\n  </ListOfTelephoneNumbers>\n</LsrOrder>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/LsrOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The 201 response indicates that LSR order request has been successfully created.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LsrOrderResponse>\n    <LsrOrder>\n        <OrderId>afce454a-4e89-4753-9f58-a442ebc7b142</OrderId>\n        <CustomerOrderId>FineCustomerid</CustomerOrderId>\n        <LastModifiedBy>team_ua</LastModifiedBy>\n        <OrderCreateDate>2015-02-06T12:57:45.607Z</OrderCreateDate>\n        <PeerId>0</PeerId>\n        <AccountId>9999999</AccountId>\n        <SPID>123C</SPID>\n        <LastModifiedDate>2015-02-09T13:07:57.286Z</LastModifiedDate>\n        <SiteId>0</SiteId>\n        <CreatedByUser>team_ua</CreatedByUser>\n        <OrderStatus>PENDING</OrderStatus>\n        <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>\n        <Pon>ATT-011515-324234</Pon>\n        <PonVersion>8</PonVersion>\n        <RequestedFocDate>2015-02-25 00:00:00</RequestedFocDate>\n        <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>\n        <Subscriber>\n            <SubscriberType>BUSINESS</SubscriberType>\n            <BusinessName>BusinessName</BusinessName>\n            <AccountNumber>123463</AccountNumber>\n            <PinNumber>1231</PinNumber>\n            <ServiceAddress>\n                <HouseNumber>11</HouseNumber>\n                <StreetName>Park</StreetName>\n                <StreetSuffix>Ave</StreetSuffix>\n                <City>New York</City>\n                <StateCode>NY</StateCode>\n                <Zip>90025</Zip>\n                <Country>United States</Country>\n            </ServiceAddress>\n        </Subscriber>\n        <ListOfTelephoneNumbers>\n            <TelephoneNumber>9192381468</TelephoneNumber>\n            <TelephoneNumber>9192381467</TelephoneNumber>\n            <TelephoneNumber>9192381469</TelephoneNumber>\n        </ListOfTelephoneNumbers>\n    </LsrOrder>\n</LsrOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LsrOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request shows that LSR order request does not pass validation. Fror more info see LsrOrderErrors section in response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LsrOrderResponse>\n  <ResponseStatus>\n      <ErrorCode>400</ErrorCode>\n      <Description>Lsr order doesn't pass validation. Please check your input parameters.</Description>\n  </ResponseStatus>\n  <LsrOrderErrors>\n      <LsrOrderError>\n          <Code>7324</Code>\n          <Description>The business name is too long. The business name should not be longer than 25 characters.</Description>\n      </LsrOrderError>\n      <LsrOrderError>\n          <Code>7318</Code>\n          <Description>Customer order ID is invalid. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.</Description>\n      </LsrOrderError>\n      <LsrOrderError>\n          <Code>7203</Code>\n          <Description>The billing telephone number (BTN) is invalid</Description>\n      </LsrOrderError>\n      <LsrOrderError>\n          <Code>16005</Code>\n          <Description>Toll-free telephone numbers can be present in the lsr order.</Description>\n      </LsrOrderError>\n      <LsrOrderError>\n          <Code>16009</Code>\n          <Description>Lsr order contain duplicate telephone numbers: [9192381468, 9192381468]</Description>\n      </LsrOrderError>\n      <LsrOrderError>\n          <Code>16002</Code>\n          <Description>Order contains invalid tns: [8882381468].</Description>\n      </LsrOrderError>\n  </LsrOrderErrors>\n  <LsrOrder>\n      <CustomerOrderId>WrongCustomerOrderIdLogerThan40AndContains$%SpecSimbols</CustomerOrderId>\n      <LastModifiedBy>team_ua</LastModifiedBy>\n      <OrderCreateDate>2015-02-06T12:57:45.607Z</OrderCreateDate>\n      <AccountId>0</AccountId>\n      <CreatedByUser>team_ua</CreatedByUser>\n      <OrderStatus>FAILED</OrderStatus>\n      <BillingTelephoneNumber>919238466</BillingTelephoneNumber>\n      <Pon>ATT-011515-324234%$</Pon>\n      <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>\n      <Subscriber>\n          <SubscriberType>BUSINESS</SubscriberType>\n          <BusinessName>LongerThan25CharacterBusinessName</BusinessName>\n          <AccountNumber>123463</AccountNumber>\n          <PinNumber>1231</PinNumber>\n          <ServiceAddress>\n              <HouseNumber>11</HouseNumber>\n              <StreetName>Park</StreetName>\n              <StreetSuffix>Ave</StreetSuffix>\n              <City>New York</City>\n              <StateCode>NY</StateCode>\n              <Zip>90025</Zip>\n              <Country>United States</Country>\n          </ServiceAddress>\n      </Subscriber>\n      <ListOfTelephoneNumbers>\n          <TelephoneNumber>9192381468</TelephoneNumber>\n          <TelephoneNumber>9192381468</TelephoneNumber>\n          <TelephoneNumber>9192381468</TelephoneNumber>\n      </ListOfTelephoneNumbers>\n  </LsrOrder>\n</LsrOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LsrOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders/{orderid}": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the information associated with the specified LSR ID number. \nPlease visit <a href='/docs/numbers/guides/porting/lsrOrders'>Guides and Tutorials</a>",
        "operationId": "ReadLsrOrder",
        "summary": "Fetch LSR order status",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "255bda29-fc57-44e8-a6c2-59b45388c6d0"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LsrOrder>\n    <CustomerOrderId>MyId5</CustomerOrderId>\n    <LastModifiedBy>System</LastModifiedBy>\n    <OrderCreateDate>2015-03-03T13:54:00.450Z</OrderCreateDate>\n    <AccountId>9999999</AccountId>\n    <OrderId>00cf7e08-cab0-4515-9a77-2d0a7da09415</OrderId>\n    <LastModifiedDate>2015-03-03T14:07:19.926Z</LastModifiedDate>\n    <OrderStatus>FAILED</OrderStatus>\n    <SPID>123C</SPID>\n    <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>\n    <Pon>testpon1002</Pon>\n    <PonVersion>0</PonVersion>\n    <RequestedFocDate>2015-11-15</RequestedFocDate>\n    <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>\n    <Subscriber>\n        <SubscriberType>BUSINESS</SubscriberType>\n        <BusinessName>BusinessName</BusinessName>\n        <AccountNumber>123463</AccountNumber>\n        <PinNumber>1231</PinNumber>\n        <ServiceAddress>\n            <HouseNumber>11</HouseNumber>\n            <StreetName>Park</StreetName>\n            <StreetSuffix>Ave</StreetSuffix>\n            <City>New York</City>\n            <StateCode>NY</StateCode>\n            <Zip>90025</Zip>\n        </ServiceAddress>\n    </Subscriber>\n    <ListOfTelephoneNumbers>\n        <TelephoneNumber>9192381467</TelephoneNumber>\n        <TelephoneNumber>9192381468</TelephoneNumber>\n    </ListOfTelephoneNumbers>\n    <LsrOrderErrors>\n        <LsrOrderError>\n            <Code>17008</Code>\n            <Description>\n                FOC date cannot fall on a holiday\n            </Description>\n        </LsrOrderError>\n    </LsrOrderErrors>\n    <CountOfTNs>2</CountOfTNs>\n</LsrOrder>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LsrOrderResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "Updates the information associated with the specified LSR. \nPlease visit <a href='/docs/numbers/guides/porting/lsrOrders'>Guides and Tutorials</a>. This is also used to cancel an order, by changing the order status field to cancelled.  This is the only case where the status can be changed, and when this is done, all other fields are left as they were prior to the cancellation.",
        "operationId": "UpdateLsrOrder",
        "summary": "Update LSR order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "LSR ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234567"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "Simple response": {
                  "value": "<LsrOrder>\n    <CustomerOrderId>FineCustomerid</CustomerOrderId>\n    <SPID>123C</SPID>\n    <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>\n    <RequestedFocDate>2015-11-15</RequestedFocDate>\n    <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>\n    <Subscriber>\n        <SubscriberType>BUSINESS</SubscriberType>\n        <BusinessName>BusinessName</BusinessName>\n        <ServiceAddress>\n            <HouseNumber>11</HouseNumber>\n            <StreetName>Park</StreetName>\n            <StreetSuffix>Ave</StreetSuffix>\n            <City>New York</City>\n            <StateCode>NY</StateCode>\n            <Zip>90025</Zip>\n        </ServiceAddress>\n        <AccountNumber>123463</AccountNumber>\n        <PinNumber>1231</PinNumber>\n    </Subscriber>\n</LsrOrder>"
                },
                "Canceled state Response": {
                  "value": "<LsrOrder>\n    <OrderStatus>CANCELLED</OrderStatus>\n    <ListOfTelephoneNumbers/>\n</LsrOrder>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/LsrOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "LSR has been successfully updated.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LsrOrderResponse>\n    <LsrOrder>\n        <CustomerOrderId>FineCustomerid</CustomerOrderId>\n        <LastModifiedBy>team_ua</LastModifiedBy>\n        <OrderCreateDate>2015-03-11T10:08:23.961Z</OrderCreateDate>\n        <AccountId>9999999</AccountId>\n        <OrderId>63fb728d-421b-46ce-8c32-da30b909934d</OrderId>\n        <LastModifiedDate>2015-03-11T10:08:59.832Z</LastModifiedDate>\n        <OrderStatus>PENDING</OrderStatus>\n        <SPID>123C</SPID>\n        <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>\n        <Pon>ATT-011515-324234</Pon>\n        <PonVersion>8</PonVersion>\n        <RequestedFocDate>2015-11-15</RequestedFocDate>\n        <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>\n        <Subscriber>\n            <SubscriberType>BUSINESS</SubscriberType>\n            <BusinessName>BusinessName</BusinessName>\n            <AccountNumber>123463</AccountNumber>\n            <PinNumber>1231</PinNumber>\n            <ServiceAddress>\n                <HouseNumber>11</HouseNumber>\n                <StreetName>Park</StreetName>\n                <StreetSuffix>Ave</StreetSuffix>\n                <City>New York</City>\n                <StateCode>NY</StateCode>\n                <Zip>90025</Zip>\n            </ServiceAddress>\n        </Subscriber>\n        <ListOfTelephoneNumbers>\n            <TelephoneNumber>9192381468</TelephoneNumber>\n        </ListOfTelephoneNumbers>\n        <LsrOrderErrors/>\n        <CountOfTNs>1</CountOfTNs>\n    </LsrOrder>\n</LsrOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LsrOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error occurred.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LsrOrderResponse>\n    <ResponseStatus>\n        <ErrorCode>400</ErrorCode>\n        <Description>Lsr order doesn't pass validation. Please check your input parameters.</Description>\n    </ResponseStatus>\n    <LsrOrderErrors>\n        <LsrOrderError>\n            <Code>17023</Code>\n            <Description>The authorizing person contact is required for lsr orders.</Description>\n        </LsrOrderError>\n        <LsrOrderError>\n            <Code>17020</Code>\n            <Description>Account SPID [1234] does not match with SPID specified in the LSR order [123C].</Description>\n        </LsrOrderError>\n    </LsrOrderErrors>\n    <LsrOrder>\n        <CountOfTNs>1</CountOfTNs>\n        <OrderId>63fb728d-421b-46ce-8c32-da30b909934d</OrderId>\n        <OrderStatus>FAILED</OrderStatus>\n        <AuthorizingPerson>Jim Hopkins</AuthorizingPerson>\n        <SPID>123C</SPID>\n        <BillingTelephoneNumber>9192381468</BillingTelephoneNumber>\n        <Pon>ATT-011515-324234</Pon>\n        <PonVersion>8</PonVersion>\n        <RequestedFocDate>2015-11-15</RequestedFocDate>\n        <Subscriber>\n            <SubscriberType>BUSINESS</SubscriberType>\n            <BusinessName>BusinessName</BusinessName>\n            <AccountNumber>123463</AccountNumber>\n            <PinNumber>1231</PinNumber>\n            <ServiceAddress>\n                <HouseNumber>11</HouseNumber>\n                <StreetName>Park</StreetName>\n                <StreetSuffix>Ave</StreetSuffix>\n                <City>New York</City>\n                <StateCode>NY</StateCode>\n                <Zip>90025</Zip>\n                <Country>United States</Country>\n                <AddressType>Service</AddressType>\n            </ServiceAddress>\n        </Subscriber>\n        <ListOfTelephoneNumbers>\n            <TelephoneNumber>9192381468</TelephoneNumber>\n        </ListOfTelephoneNumbers>\n        <LastModifiedBy>team_ua</LastModifiedBy>\n        <OrderCreateDate>2015-03-11T10:08:23.961Z</OrderCreateDate>\n        <AccountId>9999999</AccountId>\n        <CreatedByUser>team_ua</CreatedByUser>\n        <CustomerOrderId>FineCustomerid</CustomerOrderId>\n        <LastModifiedDate>2015-03-11T10:08:59.832Z</LastModifiedDate>\n    </LsrOrder>\n</LsrOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LsrOrderErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Requested LSR not found.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LsrOrderResponse>\n    <ResponseStatus>\n        <ErrorCode>5035</ErrorCode>\n        <Description>lsr order 63fb728d-421b-46ce-8c32-da30b909934s not found.</Description>\n    </ResponseStatus>\n</LsrOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LsrOrderNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders/{orderid}/history": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the history of the specified LSR order. \nPlease visit <a href='/docs/numbers/guides/porting/lsrOrders'>Guides and Tutorials</a>",
        "operationId": "ReadLsrOrderHistory",
        "summary": "Fetch LSR order history",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "LSR ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "00cf7e08-cab0-4515-9a77-2d0a7da09415"
          }
        ],
        "responses": {
          "200": {
            "description": "The history has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderHistoryWrapper>\n    <OrderHistory>\n        <OrderDate>2015-03-02T15:36:31.835Z</OrderDate>\n        <Note>LSR has been received by the system and is being processed</Note>\n        <Author>lsrOnly</Author>\n        <Status>PENDING</Status>\n    </OrderHistory>\n    <OrderHistory>\n        <OrderDate>2015-03-02T15:37:33.457Z</OrderDate>\n        <Note>Port-out date has been set</Note>\n        <Status>FOC</Status>\n        <Difference>ActualFocDate : \"\" --&gt; 2015-06-27</Difference>\n    </OrderHistory>\n</OrderHistoryWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the order id does not exist in the system\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LsrOrderReportResponse>\n    <ResponseStatus>\n        <Description>The resource does not exist</Description>\n    </ResponseStatus>\n</LsrOrderReportResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LsrOrderNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders/{orderid}/notes": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieve all notes associated with the order. \nPlease visit <a href='/docs/numbers/guides/porting/lsrOrders'>Guides and Tutorials</a>",
        "operationId": "ListLsrOrderNotes",
        "summary": "Fetch LSR order notes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "LSR ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - there are Notes associated with the order, and they have been returned in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Notes>\n    <Note>\n        <Id>87037</Id>\n        <UserId>jbm</UserId>\n        <Description>This is a test note</Description>\n        <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>\n    </Note>\n    <Note>\n        <Id>87039</Id>\n        <UserId>smckinnon</UserId>\n        <Description>This is a second test note</Description>\n        <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>\n    </Note>\n</Notes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NotesResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "Updates the Notes resource by adding a note. Adding a note to a port-in norder causes a notification to be sent to Bandwidth Operations, so that they may nassist as necessary. A note may be up to 500 characters in length. \nPlease visit <a href='/docs/numbers/guides/porting/lsrOrders'>Guides and Tutorials</a>",
        "operationId": "CreateLsrOrderNote",
        "summary": "Create LSR order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "LSR ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Note>\n <UserId>userId</UserId>\n      <!-- note the userId must match the logged-in user -->\n <Description>note text</Description>\n </Note>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned\n",
            "content": {
              "application/xml": {}
            }
          },
          "400": {
            "description": "Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/lsrorders/{orderid}/notes/{noteId}": {
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "Update a specified note. Notes may only be updated, not deleted. \nPlease visit <a href='/docs/numbers/guides/porting/lsrOrders'>Guides and Tutorials</a>",
        "operationId": "UpdateLsrOrderNote",
        "summary": "Update LSR order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "LSR ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          },
          {
            "name": "noteId",
            "description": "Note ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Note>\n   <UserId>userId</UserId>\n   <Description>note text</Description>\n</Note>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - note has been updated. No body is returned\n",
            "content": {
              "application/xml": {}
            }
          },
          "400": {
            "description": "Bad Request - the note has not been updated because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/moveTns": {
      "get": {
        "tags": [
          "Move Tns"
        ],
        "description": "Retrieves the moveTns orders for the given account ID. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter is provided, the order results will be limited to the last two years",
        "summary": "List Move Telephone Numbers orders",
        "operationId": "ReadMoveTnsOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The status of the moveTnsOrder being searched for",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "PARTIAL"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "customerOrderId",
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the importTnOrder",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-03-20"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-03-23"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find Import Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-03-20"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find Import Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-03-23"
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the moveTnsOrder query provides information about the orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully imported Telephone Numbers, and description of any encountered errors",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MoveTnsOrders"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MoveTnsOrders>\n   <TotalCount>2</TotalCount>\n   <MoveTnsOrderSummary>\n      <accountId>1234567</accountId>\n      <SourceAccountId>15</SourceAccountId>\n      <CountOfTNs>1</CountOfTNs>\n      <CustomerOrderId>CustomerOrderId</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2022-01-24T11:08:09.770Z</lastModifiedDate>\n      <OrderDate>2022-01-24T11:08:09.770Z</OrderDate>\n      <OrderType>move_tn_orders</OrderType>\n      <OrderStatus>COMPLETE</OrderStatus>\n      <OrderId>211a103c-5f9c-4117-8833-c574bdc390fd</OrderId>\n   </MoveTnsOrderSummary>\n   <MoveTnsOrderSummary>\n      <accountId>14</accountId>\n      <SourceAccountId>15</SourceAccountId>\n      <CountOfTNs>2</CountOfTNs>\n      <CustomerOrderId>CustomerOrderId</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2022-01-24T10:43:16.934Z</lastModifiedDate>\n      <OrderDate>2022-01-24T10:43:16.934Z</OrderDate>\n      <OrderType>move_tn_orders</OrderType>\n      <OrderStatus>PARTIAL</OrderStatus>\n      <OrderId>8dc32f09-2329-4c73-b702-526f46b02712</OrderId>\n   </MoveTnsOrderSummary>\n</MoveTnsOrders>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Move Tns"
        ],
        "description": "Creates a MoveTnsOrder request to move numbers to the given site ID and sippeer ID as specified in the body. A successfully submitted order will have a status of \"RECEIVED\".\nA successfully completed order will have a status of \"COMPLETE\" if all of the telephone numbers were successfully moved and \"PARTIAL\" if some of the telephone numbers were moved. A failed order will have a status of \"FAILED\" and no telephone numbers would have been moved.</p>\n\n<p>Numbers can be moved to sites/sippeers of a different account (if the user has access to both accounts and the proper roles). This can be done by specifying the SourceAccountId parameter. The user can also specify how to handle E911 service on the number (if it exists) using the optional e911ServiceAction parameter",
        "summary": "Move Telephone Numbers",
        "operationId": "CreateMoveTnsOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MoveTnsOrderRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<MoveTnsOrder>\n   <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n   <SourceAccountId>12346159</SourceAccountId>\n   <E911ServiceAction>move</E911ServiceAction>\n   <SiteId>743</SiteId>\n   <SipPeerId>303716</SipPeerId>\n   <TelephoneNumbers>\n      <TelephoneNumber>9199918388</TelephoneNumber>\n      <TelephoneNumber>4158714245</TelephoneNumber>\n      <TelephoneNumber>4352154439</TelephoneNumber>\n      <TelephoneNumber>4352154466</TelephoneNumber>\n   </TelephoneNumbers>\n</MoveTnsOrder>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created. An order ID will be specified in the payload and header",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MoveTnsOrderResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<MoveTnsOrderResponse>\n   <MoveTnsOrder>\n      <OrderCreateDate>2020-09-15T16:36:22.076Z</OrderCreateDate>\n      <AccountId>9999999</AccountId>\n      <SourceAccountId>6555555</SourceAccountId>\n      <CreatedByUser>systemUser</CreatedByUser>\n      <OrderId>093a9f9b-1a78-4e47-b6e2-776a484596f4</OrderId>\n      <LastModifiedDate>2020-09-15T16:36:22.096Z</LastModifiedDate>\n      <SiteId>483</SiteId>\n      <TelephoneNumbers>\n         <TelephoneNumber>2032081004</TelephoneNumber>\n         <TelephoneNumber>2032081005</TelephoneNumber>\n      </TelephoneNumbers>\n      <ProcessingStatus>RECEIVED</ProcessingStatus>\n      <SipPeerId>500025</SipPeerId>\n   </MoveTnsOrder>\n</MoveTnsOrderResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The order failed. One of the input parameters is invalid. The error text and an error code will be provided in the ErrorList element",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<MoveTnsOrderResponse>\n   <ProcessingStatus>FAILED</ProcessingStatus>\n   <Errors>\n      <Code>7309</Code>\n      <Description>The site id was not supplied or is invalid.</Description>\n   </Errors>\n   <Errors>\n      <Code>7312</Code>\n      <Description>The sippeer id is invalid.</Description>\n   </Errors>\n</MoveTnsOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/moveTns/{orderId}": {
      "get": {
        "tags": [
          "Move Tns"
        ],
        "description": "Retrieve information about a MoveTnsOrder with specified ID",
        "summary": "Fetching Move Telephone Numbers order status",
        "operationId": "ReadMoveTnsOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Move Telephone Numbers order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MoveTnsOrderPayload"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<MoveTnsOrder>\n   <OrderCreateDate>2020-08-10T02:58:04.615Z</OrderCreateDate>\n   <AccountId>9900012</AccountId>\n   <SourceAccountId>9900013</SourceAccountId>\n   <CreatedByUser>jdb</CreatedByUser>\n   <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId>\n   <CustomerOrderId>123-456-789-abc</CustomerOrderId>\n   <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate>\n   <SiteId>65487</SiteId>\n   <SipPeerId>885544</SipPeerId>\n   <TelephoneNumbers>\n      <TelephoneNumber>2106078250</TelephoneNumber>\n      <TelephoneNumber>2109678273</TelephoneNumber>\n      <TelephoneNumber>2109678331</TelephoneNumber>\n      <TelephoneNumber>2109678337</TelephoneNumber>\n      <TelephoneNumber>2266401468</TelephoneNumber>\n   </TelephoneNumbers>\n   <ProcessingStatus>PARTIAL</ProcessingStatus>\n   <Errors>\n      <Error>\n         <Code>7518</Code>\n         <Description>Telephone Number Not Active.</Description>\n         <TelephoneNumbers>\n            <TelephoneNumber>2262665583</TelephoneNumber>\n         </TelephoneNumbers>\n      </Error>\n   </Errors>\n</MoveTnsOrder>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/moveTns/{orderId}/history": {
      "get": {
        "tags": [
          "Move Tns"
        ],
        "description": "Retrieves the history of the specified MoveTnsOrder",
        "summary": "Fetching Move Telephone Numbers order history",
        "operationId": "ReadMoveTnsOrderHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Move Telephone Numbers order's ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "093a9f9b-1a78-4e47-b6e2-776a484596f4"
          }
        ],
        "responses": {
          "200": {
            "description": "The history has been successfully retrieved and displayed in the payload",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<OrderHistoryWrapper>\n   <OrderHistory>\n      <OrderDate>2020-09-17T08:56:39.607Z</OrderDate>\n      <Note>Move TNs order has been received by the system.</Note>\n      <Author>admin</Author>\n      <Status>received</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2020-09-17T08:56:39.743Z</OrderDate>\n      <Note>Move TNs order processing has started.</Note>\n      <Author>admin</Author>\n      <Status>processing</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2020-09-17T08:56:39.820Z</OrderDate>\n      <Note>Move TNs order is complete.</Note>\n      <Author>admin</Author>\n      <Status>complete</Status>\n   </OrderHistory>\n</OrderHistoryWrapper>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/numbersAssignment": {
      "get": {
        "tags": [
          "Numbers Assignment"
        ],
        "description": "Retrieve a list of the TelephoneNumbersAssignment orders that are associated with the account. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter is provided, the order results will be limited to the last two years.",
        "summary": "List Telephone Numbers Assignment Orders",
        "operationId": "ReadTelephoneNumbersAssignmentOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The status of the TelephoneNumbersAssignment order being searched for.  COMPLETE, PARTIAL, and FAILED are 'terminal' states indicating that the order has finished all processing.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "COMPLETE",
                  "PARTIAL",
                  "FAILED"
                ]
              }
            },
            "example": "PARTIAL"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "customerOrderId",
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the TelephoneNumbersAssignment order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "orderIdFragment",
            "description": "This search parameter represents the internal Bandwidth Dashboard API ID that has been assigned to the TelephoneNumbersAssignment Order.  This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "ed1c0bed-e2"
          },
          {
            "name": "action",
            "description": "Whether or not the results should be restricted to ASSIGNED or UNASSIGNED assignment actions.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASSIGNED",
                "UNASSIGNED"
              ]
            },
            "example": "ASSIGNED"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find TelephoneNumbersAssignment Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find TelephoneNumbersAssignment Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the TelephoneNumbersAssignment Orders query provides information about the TelephoneNumbersAssignment Orders, including the data associated with the order, the state of the order, and a list of the successfully uploaded Telephone Numbers, and descriptions of any encountered errors.",
            "content": {
              "application/xml": {
                "examples": {
                  "application/xml": {
                    "description": "application/xml",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersAssignmentOrders>\n\t    <TotalCount>3</TotalCount>\n\t    <TelephoneNumbersAssignmentOrderSummary>\n\t\t        <!-- Account ID preserved for uniformity with global list -->\n\t\t        <accountId>1</accountId>\n\t\t        <TotalQuantity>4</TotalQuantity>\n\t\t        <userId>jbm</userId>\n\t\t        <OrderDate>2016-01-15T11:36:52.727Z</OrderDate>\n\t\t        <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType>\n\t\t        <OrderStatus>COMPLETE</OrderStatus>\n\t\t        <Action>ASSIGN</Action>\n\t\t        <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>\n\t    </TelephoneNumbersAssignmentOrderSummary>\n\t    <TelephoneNumbersAssignmentOrderSummary>\n\t\t        <accountId>1</accountId>\n\t\t        <TotalQuantity>4</TotalQuantity>\n\t\t        <FailedQuantity>1</FailedQuantity>\n\t\t        <userId>jbm</userId>\n\t\t        <OrderDate>2016-01-15T11:36:26.633Z</OrderDate>\n\t\t        <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType>\n\t\t        <OrderStatus>PARTIAL</OrderStatus>\n\t\t        <Action>ASSIGN</Action>\n\t\t        <OrderId>d8f5abc0-1a4c-4c36-b387-93fb5b430784</OrderId>\n\t    </TelephoneNumbersAssignmentOrderSummary>\n\t    <TelephoneNumbersAssignmentOrderSummary>\n\t\t        <accountId>1</accountId>\n\t\t        <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n\t\t        <TotalQuantity>4</TotalQuantity>\n\t\t        <userId>jbm</userId>\n\t\t        <OrderDate>2016-01-15T12:36:26.633Z</OrderDate>\n\t\t       <OrderType>NUMBERS_ASSIGNMENT_ORDER</OrderType>\n\t\t        <OrderStatus>FAILED</OrderStatus>\n\t\t        <Action>ASSIGN</Action>\n\t\t        <OrderId>d8f5abc0-b387-4c36-48a5-f47bad02df2a</OrderId>\n\t    </TelephoneNumbersAssignmentOrderSummary>\n</TelephoneNumbersAssignmentOrders>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersAssignmentOrderHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request <br> If any errors are found in the processing of the query string a 400 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored."
          }
        }
      },
      "post": {
        "tags": [
          "Numbers Assignment"
        ],
        "description": "Create a TelephoneNumbersAssignment order to register the assignment status of a list of telephone numbers.",
        "summary": "Telephone Numbers Assignment Order",
        "operationId": "CreateTelephoneNumbersAssignmentOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersAssignmentOrder>\n    <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n    <Action>[ ASSIGN | UNASSIGN ]</Action>\n    <TelephoneNumbers>\n        <TelephoneNumber>9199918388</TelephoneNumber>\n        <TelephoneNumber>4158714245</TelephoneNumber>\n        <TelephoneNumber>4352154439</TelephoneNumber>\n        <TelephoneNumber>4352154466</TelephoneNumber>\n    </TelephoneNumbers>\n</TelephoneNumbersAssignmentOrder>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/TelephoneNumbersAssignmentOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created <br>A 201 response indicates that an order has been created.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersAssignmentOrderResponse>\n\t <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>\n\t <AccountId>1</AccountId>\n\t <CreatedByUser>jbm</CreatedByUser>\n\t <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>\n\t <ProcessingStatus>PARTIAL</ProcessingStatus>\n\t <TotalQuantity>4</TotalQuantity>\n\t <FailedQuantity>1</FailedQuantity>\n\t <TelephoneNumbersAssignmentOrder>\n\t\t <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n\t\t <Action>ASSIGN</Action>\n\t\t <TelephoneNumbers>\n\t\t\t <TelephoneNumber>9199918388</TelephoneNumber>\n\t\t\t <TelephoneNumber>4158714245</TelephoneNumber>\n\t\t\t <TelephoneNumber>4352154439</TelephoneNumber>\n\t\t\t <TelephoneNumber>4352154466</TelephoneNumber>\n\t\t </TelephoneNumbers>\n\t </TelephoneNumbersAssignmentOrder>\n\t <Errors>\n\t\t <Error>\n\t\t\t <Code>5076</Code>\n\t\t\t <Description>Number does not belong to this account.</Description>\n\t\t\t <TelephoneNumbers>\n\t\t\t\t <TelephoneNumber>9199918388</TelephoneNumber>\n\t\t\t </TelephoneNumbers>\n\t\t </Error>\n\t </Errors>\n </TelephoneNumbersAssignmentOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersAssignmentOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request <br> A 400 response Indicates that the order could not be created.\nError text and an error code will be provided in the ErrorList element.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersAssignmentOrderResponse>\n\t <ResponseStatus>\n\t\t <ErrorCode>13554</ErrorCode>\n\t\t <Description>Assignment action is invalid. Valid values ASSIGN, UNASSIGN</Description>\n\t </ResponseStatus>\n </TelephoneNumbersAssignmentOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersAssignmentOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/numbersAssignment/{orderid}": {
      "get": {
        "tags": [
          "Numbers Assignment"
        ],
        "description": "Retrieve information about a TelephoneNumbersAssignment order with specified ID.",
        "summary": "Fetching Telephone Numbers Assignment Order status",
        "operationId": "ReadTelephoneNumbersAssignmentOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "Telephone Numbers Assignment order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "59e69657-44d2-4e7e-90f8-777988be4aef"
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the TelephoneNumbersAssignment query provides a broad range of information about the TelephoneNumbersAssignment order identified in the URL.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersAssignmentOrderResponse>\n\t <OrderCreateDate>2016-01-15T11:36:52.727Z</OrderCreateDate>\n\t <AccountId>1</AccountId>\n\t <CreatedByUser>jbm</CreatedByUser>\n\t <OrderId>65e03a35-6b97-48a5-8126-f47bad02df2a</OrderId>\n\t <ProcessingStatus>PARTIAL</ProcessingStatus>\n\t <TotalQuantity>4</TotalQuantity>\n\t <FailedQuantity>1</FailedQuantity>\n\t <TelephoneNumbersAssignmentOrder>\n\t\t <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n\t\t <Action>ASSIGN</Action>\n\t\t <TelephoneNumbers>\n\t\t\t <TelephoneNumber>9199918388</TelephoneNumber>\n\t\t\t <TelephoneNumber>4158714245</TelephoneNumber>\n\t\t\t <TelephoneNumber>4352154439</TelephoneNumber>\n\t\t\t <TelephoneNumber>4352154466</TelephoneNumber>\n\t\t </TelephoneNumbers>\n\t </TelephoneNumbersAssignmentOrder>\n\t <Errors>\n\t\t <Error>\n\t\t\t <Code>5076</Code>\n\t\t\t <Description>Number does not belong to this account.</Description>\n\t\t\t <TelephoneNumbers>\n\t\t\t\t <TelephoneNumber>9199918388</TelephoneNumber>\n\t\t\t </TelephoneNumbers>\n\t\t </Error>\n\t </Errors>\n </TelephoneNumbersAssignmentOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersAssignmentOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the order id does not exist in the system",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersAssignmentOrderResponse>\n\t <ResponseStatus>\n\t\t <Description>The resource does not exist</Description>\n\t </ResponseStatus>\n </TelephoneNumbersAssignmentOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersAssignmentOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "GET is used to retrieve order ids and order details for previously attempted Telephone Number orders. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "ListOrders",
        "summary": "List Telephone Number orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "All Order retrievals must be paginated, using page and size indicators.  The page parameter contains the order-id that is to start the page, or \"1\" in the case of the first page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "cbdcfc94-81b1-4ce9-8b6d-f8d6b85381ba"
          },
          {
            "name": "size",
            "description": "The size parameter indicates the number of orders to return in the payload",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 20
          },
          {
            "name": "customerOrderId",
            "description": "The order ID that the Customer / Account assigned to the Order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ORD12345"
          },
          {
            "name": "status",
            "description": "The status of the orders that should be in the returned set",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "BACKORDERED"
          },
          {
            "name": "userid",
            "description": "The userid of the user that submitted the new number order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "user@customer.com"
          },
          {
            "name": "startdate",
            "description": "The first day of the search date range for a date-range-limited search of net number orders. The format is YY-MM-DD",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "13-12-15"
          },
          {
            "name": "enddate",
            "description": "The last day of the search date range for a date-range-limited search of net number orders. The format is YY-MM-DD",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "13-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "The Order retrieval request will return a list of the orders that match the criteria imposed by the provided query parameters.  The orders list contains a detailed description of the order.  Notice that the first elements of the payload provide link information that can be used to page through a paginated list of orders.  Pagination can be controlled by use of the size and page query parameters",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ResponseSelectWrapper>\n    <ListOrderIdUserIdDate>\n        <TotalCount>122</TotalCount>\n        <Links>\n        <first>\n            <!-- Link=<https://dashboard.bandwidth.com 443/v1.0/accounts/9900012/orders?page=1&size=3>;rel=\"first\"; -->\n        </first>\n        <next>\n            <!-- Link=<https://dashboard.bandwidth.com 443/v1.0/accounts/9900012/orders?page=cbdcfc94-81b1-4ce9-8b6d-f8d6b85381ba&size=3>;rel=\"next\"; -->\n        </next>\n        </Links>\n        <OrderIdUserIdDate>\n            <CountOfTNs>1</CountOfTNs>\n            <lastModifiedDate>2013-12-20T06</lastModifiedDate>\n            <OrderDate>2013-12-20T06</OrderDate>\n            <orderId>c5d8d076-345c-45d7-87b3-803a35cca89b</orderId>\n            <OrderStatus>COMPLETE</OrderStatus>\n            <TelephoneNumberDetails>\n                <States>\n                    <StateWithCount>\n                        <State>VA</State>\n                        <Count>1</Count>\n                    </StateWithCount>\n                </States>\n                <RateCenters>\n                    <RateCenterWithCount>\n                        <Count>1</Count>\n                        <RateCenter>LADYSMITH</RateCenter>\n                    </RateCenterWithCount>\n                </RateCenters>\n                <Cities>\n                    <CityWithCount>\n                        <City>LADYSMITH</City>\n                        <Count>1</Count>\n                    </CityWithCount>\n                </Cities>\n                <Tiers>\n                    <TierWithCount>\n                        <Tier>0</Tier>\n                        <Count>1</Count>\n                    </TierWithCount>\n                </Tiers>\n                <Vendors>\n                    <VendorWithCount>\n                        <VendorId>49</VendorId>\n                        <VendorName>Bandwidth CLEC</VendorName>\n                        <Count>1</Count>\n                    </VendorWithCount>\n                </Vendors>\n            </TelephoneNumberDetails>\n            <userId>bwc_user</userId>\n        </OrderIdUserIdDate>\n        <OrderIdUserIdDate>\n            <CountOfTNs>0</CountOfTNs>\n            <lastModifiedDate>2013-11-05T17</lastModifiedDate>\n            <OrderDate>2013-11-05T17</OrderDate>\n            <orderId>27da9f39-81f3-44ed-80ce-05ddf2db612d</orderId>\n            <OrderStatus>FAILED</OrderStatus>\n            <userId>wandedemo_user</userId>\n        </OrderIdUserIdDate>\n        <OrderIdUserIdDate>\n            <CountOfTNs>1</CountOfTNs>\n            <lastModifiedDate>2013-12-11T20</lastModifiedDate>\n            <OrderDate>2013-12-11T20</OrderDate>\n            <orderId>2bab589e-2cda-453b-9999-8f35441d4a1a</orderId>\n            <OrderStatus>COMPLETE</OrderStatus>\n            <TelephoneNumberDetails>\n                <!-- SNIP -->\n            </TelephoneNumberDetails>\n            <userId>bwc_user</userId>\n        </OrderIdUserIdDate>\n    </ListOrderIdUserIdDate>\n</ResponseSelectWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOrderHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - malformed Query Parameters can result in a 400 Bad request"
          },
          "404": {
            "description": "Not Found - returned if the retrieval request cannot be satisfied, either because the order id cannot be found or the order id is not recognized"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "<span>A POST creates a request for Telephone Numbers</span>\n<br>\nA POST on the /orders resource is used to request that the system provide one or more TNs for use by the account. The post creates a new number order record to preserve the request, as well as the response of the Bandwidth Dashboard API to the request.  A well-formed POST on the /orders resource will create an order record, and return an order-id string that can be used to uniquely identify the new number order request. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "CreateOrder",
        "summary": "Create Telephone Number orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "General": {
                  "description": "The 'wrapper' Request Payload'",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Order>\n   <CustomerOrderId>SJM00001</CustomerOrderId>\n   <!--\n        There are various types of orders, all of which are submitted in the 'xxxOrderType'\n        element of the Order Request payload. Replace\n        this comment to create a complete payload that includes the order type and the\n        common elements.\n        Take a look at the example payloads as well.\n    -->\n   <SiteId>202</SiteId>\n   <PeerId>518824</PeerId>\n   <TnAttributes />\n</Order>"
                },
                "AreaCodeSearchAndOrderType": {
                  "description": "Allowed ranges ~ [2-9] for the first digit and [0, 9] for both the second and third digits.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <AreaCodeSearchAndOrderType>\n        <AreaCode>435</AreaCode>\n        <Quantity>1</Quantity>\n    </AreaCodeSearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "RateCenterSearchAndOrderType": {
                  "description": "Specify the Rate Center and the State.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <RateCenterSearchAndOrderType>\n        <RateCenter>RALEIGH</RateCenter>\n        <State>NC</State>\n        <Quantity>1</Quantity>\n    </RateCenterSearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "NPANXXSearchAndOrderType": {
                  "description": "Specify the NpaNxx combination to be ordered. Valid Npa values ~ [2-9] for the first digit, and [0-9] for both the second and third digits. Valid Nxx values ~ [2-9] for the first digit, and [0-9] for both the second and third digits. A similar approach is viable for NPANXXXX. The EnableLCA flag turns LCA search on or off.\n\nLimitations:\nThese order types are unsupported with BackOrderRequested=true",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <NPANXXSearchAndOrderType>\n        <NpaNxx>919439</NpaNxx>\n        <EnableTNDetail>true</EnableTNDetail>\n        <EnableLCA>false</EnableLCA>\n        <Quantity>1</Quantity>\n    </NPANXXSearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "TollFreeVanitySearchAndOrderType": {
                  "description": "Specify a Toll Free Vanity search, where the numbers ordered match a specific alphanumeric pattern between 4 and 7 characters long.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <TollFreeVanitySearchAndOrderType>\n        <Quantity>1</Quantity>\n        <TollFreeVanity>newcars</TollFreeVanity>\n    </TollFreeVanitySearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "TollFreeWildCharSearchAndOrderType": {
                  "description": "Specify the Toll Free wild card pattern. To be ordered, comprised of 3 digits beginning with '8'. Examples are 8**, 87*, etc.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <TollFreeWildCharSearchAndOrderType>\n        <Quantity>1</Quantity>\n        <TollFreeWildCardPattern>8**</TollFreeWildCardPattern>\n    </TollFreeWildCharSearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "StateSearchAndOrderType": {
                  "description": "Specify the State to be searched for telephone numbers.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <StateSearchAndOrderType>\n        <Quantity>1</Quantity>\n        <State>NC</State>\n    </StateSearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "CitySearchAndOrderType": {
                  "description": "Specify the City and State to be ordered from.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <CitySearchAndOrderType>\n        <Quantity>1</Quantity>\n        <City>RALEIGH</City>\n        <State>NC</State>\n    </CitySearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "ZIPSearchAndOrderType": {
                  "description": "Specify the Zip Code to be ordered from.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <ZIPSearchAndOrderType>\n        <Quantity>1</Quantity>\n        <Zip>27606</Zip>\n    </ZIPSearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "LATASearchAndOrderType": {
                  "description": "Specify the LATA to order telephone numbers from.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <LATASearchAndOrderType>\n        <Quantity>1</Quantity>\n        <Lata>224</Lata>\n    </LATASearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "CombinedSearchAndOrderType": {
                  "description": "Specify the any combination of: AreaCode, RateCenter, State, NpaNxx, NpaNxxX, Lata, City, Zip. But with following limitations: AreaCode, NpaNxx and NpaNxxX are mutually exclusive, LCA search is supported only for one of the following criteria: NpaNxx, NpaNxxX, RateCenter and State. If City or RateCenter is specified, then State is required.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <CombinedSearchAndOrderType>\n        <Quantity>1</Quantity>\n        <AreaCode>617</AreaCode>\n        <RateCenter>RALEIGH</RateCenter>\n        <State>NC</State>\n        <NpaNxx>919439</NpaNxx>\n        <NpaNxxX>9194391</NpaNxxX>\n        <Lata>224</Lata>\n        <City>RALEIGH</City>\n        <Zip>27606</Zip>\n        <EnableLCA>false</EnableLCA>\n    </CombinedSearchAndOrderType>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "CombinedSearchAndOrderType (local vanity)": {
                  "description": "Specify AreaCode and LocalVanity to order telephone numbers matching a specific alphanumeric pattern between 4 and 7 characters long.\nLimitations: AreaCode is always required. No parameter combinations are allowed here/ This order type is unsupported with BackOrderRequested=true.",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Local Vanity Order</Name>\n    <CombinedSearchAndOrderType>\n        <AreaCode>617</AreaCode>\n        <LocalVanity>newcars</LocalVanity>\n        <Quantity>1</Quantity>\n        <EndsIn>false</EndsIn>\n    </CombinedSearchAndOrderType>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "ExistingTelephoneNumberOrderType": {
                  "description": "Order a set of numbers known to be available. This often results if the numbers have been found using a separate availableNumbers search. If the numbers have previously been reserved, a reservation id must be included",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Existing Number Order</Name>\n    <ExistingTelephoneNumberOrderType>\n        <TelephoneNumberList>\n            <TelephoneNumber>9193752369</TelephoneNumber>\n            <TelephoneNumber>9193752720</TelephoneNumber>\n            <TelephoneNumber>9193752648</TelephoneNumber>\n        </TelephoneNumberList>\n        <ReservationIdList>\n            <ReservationId>[GUID]</ReservationId>\n            <ReservationId>[GUID]</ReservationId>\n        </ReservationIdList>\n    </ExistingTelephoneNumberOrderType>\n    <SiteId>743</SiteId>\n</Order>"
                },
                "CombinedSearchAndOrderType (protected status)": {
                  "description": "CombinedSearchAndOrderType with established Protected status",
                  "value": "<Order>\n    <CustomerOrderId>123456789</CustomerOrderId>\n    <Name>Area Code Order</Name>\n    <BackOrderRequested>false</BackOrderRequested>\n    <CombinedSearchAndOrderType>\n        <NpaNxx>919439</NpaNxx>\n        <City>RALEIGH</City>\n        <State>NC</State>\n        <EnableLCA>false</EnableLCA>\n        <Quantity>1</Quantity>\n    </CombinedSearchAndOrderType>\n    <TnAttributes>\n            <TnAttribute>Protected</TnAttribute>\n            <TnAttribute>External</TnAttribute>\n            <TnAttribute>Imported</TnAttribute>\n    </TnAttributes>\n    <PartialAllowed>true</PartialAllowed>\n    <SiteId>743</SiteId>\n</Order>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "An Order has been successfully placed",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderResponse>\n    <Order>\n        <CustomerOrderId>123456789</CustomerOrderId>\n        <id>34adcd9f-2c4a-4631-9dae-d1f318ed57bc</id>\n        <Name>Zip Order</Name>\n        <OrderCreateDate>2014-07-11T17:13:57.788Z</OrderCreateDate>\n        <BackOrderRequested>false</BackOrderRequested>\n        <ZIPSearchAndOrderType>\n            <Quantity>1</Quantity>\n            <Zip>27606</Zip>\n        </ZIPSearchAndOrderType>\n        <TnAttributes>\n                <TnAttribute>Protected</TnAttribute>\n                <TnAttribute>External</TnAttribute>\n                <TnAttribute>Imported</TnAttribute>\n        </TnAttributes>\n        <PartialAllowed>true</PartialAllowed>\n        <SiteId>3013</SiteId>\n    </Order>\n</OrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOrderCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "One or more of the input parameters are invalid",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderResponse>\n    <ErrorList>\n        <Error>\n            <Code>5016</Code>\n            <Description>The SiteId submitted is invalid.</Description>\n        </Error>\n    </ErrorList>\n    <Order>\n        <CustomerOrderId>123456789</CustomerOrderId>\n        <Name>Area Code Order</Name>\n        <OrderCreateDate>2014-07-08T14:29:13.174Z</OrderCreateDate>\n        <BackOrderRequested>false</BackOrderRequested>\n        <AreaCodeSearchAndOrderType>\n            <AreaCode>435</AreaCode>\n            <Quantity>1</Quantity>\n        </AreaCodeSearchAndOrderType>\n        <TnAttributes>\n                <TnAttribute>Protected</TnAttribute>\n                <TnAttribute>External</TnAttribute>\n                <TnAttribute>Imported</TnAttribute>\n        </TnAttributes>\n        <PartialAllowed>true</PartialAllowed>\n        <SiteId>763</SiteId>\n    </Order>\n</OrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOrderBadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderid}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "GET all of the details associated with an identified order. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "RetrieveOrder",
        "summary": "Fetch Telephone Number order details",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          },
          {
            "name": "tndetail",
            "description": "if true, and extended payload describing details about the ordered telephone numbers will be provided",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderResponse>\n    <CompletedQuantity>1</CompletedQuantity>\n    <CreatedByUser>jbm</CreatedByUser>\n    <LastModifiedDate>2014-01-06T19:09:44.027Z</LastModifiedDate>\n    <OrderCompleteDate>2014-01-06T19:09:44.041Z</OrderCompleteDate>\n    <Order>\n        <CustomerOrderId>123456789</CustomerOrderId>\n        <Name>Area Code Order</Name>\n        <OrderCreateDate>2014-01-06T19:09:43.695Z</OrderCreateDate>\n        <PeerId>303716</PeerId>\n        <BackOrderRequested>false</BackOrderRequested>\n        <AreaCodeSearchAndOrderType>\n            <AreaCode>804</AreaCode>\n            <Quantity>1</Quantity>\n        </AreaCodeSearchAndOrderType>\n        <TnAttributes>\n                <TnAttribute>Protected</TnAttribute>\n                <TnAttribute>External</TnAttribute>\n                <TnAttribute>Imported</TnAttribute>\n        </TnAttributes>\n        <PartialAllowed>true</PartialAllowed>\n        <SiteId>743</SiteId>\n    </Order>\n    <OrderStatus>COMPLETE</OrderStatus>\n    <CompletedNumbers>\n        <TelephoneNumber>\n            <FullNumber>8042105666</FullNumber>\n        </TelephoneNumber>\n    </CompletedNumbers>\n    <FailedQuantity>0</FailedQuantity>\n</OrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOrderUpdatedResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "With the introduction of Backorder capabilities, new number orders may stay in backordered state while the order is filled. While in this state it is possible to update the modifiable fields in the record, as well as to request that backorder processing of the order be ended.\nThe fields that can be updated are...\n\n<ul>\n<li>The order name</li>\n<li>The customer order id</li>\n<li>The backordered state.</li>\n</ul>\n\nSpecifying a &lt;CloseOrder&gt; value of true will cancel the backorder request, leaving the currently ordered numbers on the account.  No further numbers will be added to the account as a result of the order. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "UpdateOrder",
        "summary": "Update Telephone Number order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Order>\n    <Name>Available Telephone Number order</Name>    \n    <CustomerOrderId>123456789</CustomerOrderId>\n<!-- Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters. -->\n    <CloseOrder>true</CloseOrder>\n</Order>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The order has been successfully updated. The payload contains no content, but a 200 OK indicates success",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderResponse/>\n"
                  }
                },
                "schema": {}
              }
            }
          },
          "400": {
            "description": "The request payload is invalid"
          },
          "404": {
            "description": "The order-id cannot be found"
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderid}/areaCodes": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieves the area codes of the phone numbers from the specified order. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "ListOrderAreaCodes",
        "summary": "List Telephone Number order area codes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneDetailsReports>\n    <TelephoneDetailsReport>\n        <AreaCode>888</AreaCode>\n        <Count>1</Count>\n    </TelephoneDetailsReport>\n</TelephoneDetailsReports>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneDetailsAreaCodes"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderid}/npaNxx": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieves the Npa-Nxx of the phone numbers from the specified order. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "summary": "List Telephone Number order Npa-Nxx",
        "operationId": "ListOrderNpaNxx",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneDetailsReports>\n    <TelephoneDetailsReport>\n        <NPA-NXX>888424</NPA-NXX>\n        <Count>1</Count>\n    </TelephoneDetailsReport>\n</TelephoneDetailsReports>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneDetailsNpaNxx"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderid}/totals": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieves the total quantity of phone numbers from the specified Telephone Number order. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "RetrieveOrderTotals",
        "summary": "Fetch Telephone Number order tn quantity",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneDetailsReports>\n    <TelephoneDetailsReport>\n        <Count>1</Count>\n    </TelephoneDetailsReport>\n</TelephoneDetailsReports>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneDetailsTotals"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderid}/tns": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Returns a list of phone numbers associated with the ID of a given Telephone Number order. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "ListOrderTns",
        "summary": "List Telephone Number order tns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbers>\n    <Count>1</Count>\n    <TelephoneNumber>8042105666</TelephoneNumber>\n</TelephoneNumbers>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderTelephoneNumbersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderid}/notes": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieve all notes associated with the order. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "ListOrderNotes",
        "summary": "List Telephone Number order notes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - there are Notes associated with the order, and they have been returned in the response",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Notes>\n    <Note>\n        <Id>87037</Id>\n        <UserId>jbm</UserId>\n        <Description>This is a test note</Description>\n        <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>\n    </Note>\n    <Note>\n        <Id>87039</Id>\n        <UserId>smckinnon</UserId>\n        <Description>This is a second test note</Description>\n        <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>\n    </Note>\n</Notes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderNotesResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content - there are no Notes associated with the order. Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Updates the Notes resource by adding a note. Adding a note to order causes a notification to be sent to Bandwidth Operations, so that they may assist as necessary. A note may be up to 500 characters in length. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "CreateOrderNote",
        "summary": "Create Telephone Number order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Note>\n   <UserId>userId</UserId>\n   <!-- note the userId must match the logged-in user -->\n   <Description>note text</Description>\n</Note>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED - the note has been created and added to the collection of notes associated with the order. A link to the note is included in the Location header of the response. No body is returned."
          },
          "400": {
            "description": "Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the response",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderid}/notes/{noteId}": {
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "Update a specified note. Notes may only be updated, not deleted. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "UpdateOrderNote",
        "summary": "Update Telephone Number order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          },
          {
            "name": "noteId",
            "description": "Note ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Note>\n   <UserId>userId</UserId>\n   <Description>note text</Description>\n</Note>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - note has been updated. No body is returned."
          },
          "400": {
            "description": "Bad Request - the note has not been updated because the payload is incomplete or in error. An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/{orderid}/history": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieve the history information associated with an order. <p>Please visit <a href='/docs/numbers/guides/searchingForNumbers/'>Guides and Tutorials</a> to learn more.</p>",
        "operationId": "RetrieveOrderHistory",
        "summary": "Retrieve Telephone Number order history",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "34adcd9f-2c4a-4631-9dae-d1f318ed57bc"
          }
        ],
        "responses": {
          "200": {
            "description": "The history payload is a set of history records, each of which contains:\n\n<ul>\n<li>the event date and time</li>\n<li>a message describing the event</li>\n<li>the user causing the event</li>\n<li>the order status at the time of the event</li>\n</ul>\n\nIn the case of an order with no events other than creation, the payload will be empty",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderHistoryWrapper>\n    <OrderHistory>\n        <OrderDate>2014-05-20T14:21:43.937Z</OrderDate>\n        <Note>Order backordered - awaiting additional numbers</Note>\n        <Author>System</Author>\n        <Status>BACKORDERED</Status>\n    </OrderHistory>\n    <OrderHistory>\n        <OrderDate>2014-05-20T14:24:43.428Z</OrderDate>\n        <Note>Order backordered - awaiting additional numbers</Note>\n        <Author>System</Author>\n        <Status>BACKORDERED</Status>\n        <Difference>CustomerOrderId : \"\" --&gt; hello</Difference>\n    </OrderHistory>\n</OrderHistoryWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the order id does not exist in the system.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ErrorResponse>\n    <ResponseStatus>\n        <Description>The resource does not exist</Description>\n    </ResponseStatus>\n</ErrorResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/orders/totals": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieves a total number of tn orders.",
        "summary": "Get New Number Order TN Count Totals",
        "operationId": "getTotalOrdersByStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ResponseSelectWrapper>\n    <ListOrderIdUserIdDate>\n        <TotalCount>122</TotalCount>\n    </ListOrderIdUserIdDate>\n</ResponseSelectWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOrderHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the port-in requests for the given account ID. <p>A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.</p>",
        "operationId": "ListPortins",
        "summary": "List port-in orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "The port-in ID of the first order of the page. Value \"1\" is used as a convention for the first port-in in the account ID (Use it to get a first page of orders list).",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "ca8065d1-ec1a-43da-af40-1dcee43becb5"
          },
          {
            "name": "size",
            "description": "The number of port-ins retrieved.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 30
          },
          {
            "name": "status",
            "description": "<p>Displays the port-in orders with the specified status (possible values: draft, pending<em>documents, submitted, exception, requested</em>supp, foc, requested_cancel, cancelled, complete).  Note: draft status orders are NOT included unless status=draft is included in the query parameters (along with page and size).</p>\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "complete"
          },
          {
            "name": "startdate",
            "description": "<p>The earliest date that the order was last modified. <strong>NOTE: </strong> startdate and enddate must be simultaneously declared.</p>\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2014-08-05"
          },
          {
            "name": "enddate",
            "description": "<p>The latest date that the order was last modified. <strong>NOTE: </strong> startdate and enddate must be simultaneously declared.</p>\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2014-08-05"
          },
          {
            "name": "tn",
            "description": "<p><b class=\"required\">*</b> The billing telephone number associated with the port-in(s).  Note that tn cannot be combined with any of the date-based query parameters (date, startdate, or enddate).</p>\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 9191234567
          },
          {
            "name": "pon",
            "description": "<p><b class=\"required\">*</b> The port order number.  Note that pon cannot be combined\nwith any of the date-based query parameters (date, startdate, or enddate).</p>\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "`979E019287CDF6A1` or `4c129d8e-57fc-4ccb-a37d-7f21aca8b32d`"
          },
          {
            "name": "date",
            "description": "The date when orders were modified.  Note that this differs from the last modified date of an order.\nFor example, if an order reached FOC on 2020-01-15, and completed on 2020-01-16, searching by\ndate 2020-01-15 will return an entry for the order in FOC state with last modified date of 1/15.\nSearching by date 2020-01-16 will return an entry for the SAME order in COMPLETE state with the\nlast modified date of 1/16.  BUT, if you search by date range with startdate=2020-01-15 and\nenddate=2020-01-16, you will only see the latest of the entries for the same order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "`2020-01-15` or `2020-01-15T02:00:01.353Z`"
          }
        ],
        "responses": {
          "200": {
            "description": "The port-ins have been successfully retrieved.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LNPResponseWrapper>\n    <TotalCount>2</TotalCount>\n    <Links>\n        <first>Link=&lt;https://test.dashboard.bandwidth.com:443/v1.0/accounts/9900012/portins?page=1&amp;size=10&amp;date=2020-01-15&amp;status=foc&gt;;rel=\"first\";</first>\n    </Links>\n    <lnpPortInfoForGivenStatus>\n        <accountId>9900012</accountId>\n        <CountOfTNs>1</CountOfTNs>\n        <userId>System</userId>\n        <lastModifiedDate>2020-01-15T19:08:57.626Z</lastModifiedDate>\n        <OrderDate>2020-01-15T19:08:10.488Z</OrderDate>\n        <OrderId>ab03375f-e0a9-47f8-bd31-6d8435454a6b</OrderId>\n        <OrderType>port_in</OrderType>\n        <ActualFOCDate>2020-01-16T16:30:00.000Z</ActualFOCDate>\n        <BillingTelephoneNumber>9196247209</BillingTelephoneNumber>\n        <CompanyName>WandEDemo</CompanyName>\n        <LNPLosingCarrierId>1163</LNPLosingCarrierId>\n        <LNPLosingCarrierName>Bandwidth</LNPLosingCarrierName>\n        <ProcessingStatus>FOC</ProcessingStatus>\n        <RequestedFOCDate>2020-01-16T16:30:00.000Z</RequestedFOCDate>\n        <VendorId>49</VendorId>\n        <VendorName>Bandwidth CLEC</VendorName>\n        <PON>4c129d8e-57fc-4ccb-a37d-7f21aca8b32d</PON>\n    </lnpPortInfoForGivenStatus>\n    <lnpPortInfoForGivenStatus>\n        <accountId>9900012</accountId>\n        <CountOfTNs>1</CountOfTNs>\n        <userId>gforrest</userId>\n        <lastModifiedDate>2020-01-15T19:06:10.085Z</lastModifiedDate>\n        <OrderDate>2019-10-14T17:16:41.949Z</OrderDate>\n        <OrderId>b2190bcc-0272-4a51-ba56-7c3d628e8706</OrderId>\n        <OrderType>port_in</OrderType>\n        <ActualFOCDate>2020-01-16T01:00:00.000Z</ActualFOCDate>\n        <BillingTelephoneNumber>2174101100</BillingTelephoneNumber>\n        <CompanyName>WandEDemo</CompanyName>\n        <LNPLosingCarrierId>1290</LNPLosingCarrierId>\n        <LNPLosingCarrierName>IntegraTelecom</LNPLosingCarrierName>\n        <ProcessingStatus>FOC</ProcessingStatus>\n        <RequestedFOCDate>2020-01-21T17:30:00.000Z</RequestedFOCDate>\n        <VendorId>57</VendorId>\n        <VendorName>Level 3</VendorName>\n        <PON>979E019287CDF6A1</PON>\n    </lnpPortInfoForGivenStatus>\n</LNPResponseWrapper>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LNPResponseWrapper"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "Creates a port-in order for the specified telephone number(s) and account number. <br/> Please visit <a href='/docs/numbers/guides/porting/portingNumbers'>How to Create Port in</a> guide. Also you can find more information about port types and numbers portability on <a href='/docs/numbers/guides/porting/lnpChecker'>How to check numbers portability</a> guide",
        "operationId": "CreatePortin",
        "summary": "Create port-in order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "Simple response": {
                  "value": "<LnpOrder>\n\t<RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>\n\t<AlternateSpid>X455</AlternateSpid>\n\t<BillingTelephoneNumber>9195551234</BillingTelephoneNumber>\n\t<NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>\n\t<SiteId>    SITE ID     </SiteId>\n\t<PeerId>  SIPPEER ID    </PeerId>\n\t<Subscriber>\n\t\t<SubscriberType>BUSINESS</SubscriberType>\n\t\t<FirstName>First</FirstName>\n\t\t<LastName>Last</LastName>\n\t\t<ServiceAddress>\n\t\t\t<HouseNumber>11235</HouseNumber>\n\t\t\t<StreetName>Back</StreetName>\n\t\t\t<City>Denver</City>\n\t\t\t<StateCode>CO</StateCode>\n\t\t\t<Zip>27541</Zip>\n\t\t\t<County>Canyon</County>\n\t\t</ServiceAddress>\n\t</Subscriber>\n\t<LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>\n\t<WirelessInfo>\n\t\t<AccountNumber>771297665AABC</AccountNumber>\n\t\t<PinNumber>1234</PinNumber>\n\t</WirelessInfo>\n\t<TnAttributes>\n\t\t<TnAttribute>Protected</TnAttribute>\n\t\t<TnAttribute>External</TnAttribute>\n\t\t<TnAttribute>Imported</TnAttribute>\n\t</TnAttributes>\n\t<ListOfPhoneNumbers>\n\t\t<PhoneNumber>9194809871</PhoneNumber>\n\t</ListOfPhoneNumbers>\n\t<CustomerOrderId>myOrder</CustomerOrderId>\n\t<Triggered>true</Triggered>\n\t<PartialPort>true</PartialPort>\n\t<Immediately>false</Immediately>\n\t<ProcessingStatus>DRAFT</ProcessingStatus>\n</LnpOrder>"
                },
                "Toll Free port-in": {
                  "value": "<LnpOrder>\n\t<CustomerOrderId>My order id</CustomerOrderId>\n\t<RequestedFocDate>2021-06-16Z</RequestedFocDate>\n\t<SiteId>2439</SiteId>\n\t<PeerId>23432</PeerId>\n\t<LoaAuthorizingPerson>The Authgal</LoaAuthorizingPerson>\n\t<ListOfPhoneNumbers>\n\t\t<PhoneNumber>8774809871</PhoneNumber>\n\t</ListOfPhoneNumbers>\n</LnpOrder>"
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/OnNetLnpOrderRequest"
                  },
                  {
                    "$ref": "#/components/schemas/TollFreeLnpOrderRequest"
                  },
                  {
                    "$ref": "#/components/schemas/OffNetLnpOrderRequest"
                  },
                  {
                    "$ref": "#/components/schemas/InternalLnpOrderRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created and an order ID is specified in the payload and in the header.\nUse the OrderId value with GET /portins/orderId to fetch the status of the order.",
            "content": {
              "application/xml": {
                "examples": {
                  "Simple Order Response": {
                    "value": "<LnpOrderResponse>\n\t<OrderId>03f194d5-3932-4e9f-8ba1-03ef767985e5</OrderId>\n\t<Status>\n\t\t<Code>201</Code>\n\t\t<Description>Order request received. Please use the order id to check the status of your order later.</Description>\n\t</Status>\n\t<ProcessingStatus>PENDING_DOCUMENTS</ProcessingStatus>\n\t<RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>\n\t<LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>\n\t<Subscriber>\n\t\t<SubscriberType>BUSINESS</SubscriberType>\n\t\t<FirstName>First</FirstName>\n\t\t<LastName>Last</LastName>\n\t\t<ServiceAddress>\n\t\t\t<HouseNumber>11235</HouseNumber>\n\t\t\t<StreetName>Back</StreetName>\n\t\t\t<City>Denver</City>\n\t\t\t<StateCode>CO</StateCode>\n\t\t\t<Zip>27541</Zip>\n\t\t\t<County>Canyon</County>\n\t\t\t<Country>United States</Country>\n\t\t</ServiceAddress>\n\t</Subscriber>\n\t<WirelessInfo>\n\t\t<AccountNumber>771297665AABC</AccountNumber>\n\t\t<PinNumber>1234</PinNumber>\n\t</WirelessInfo>\n\t<TnAttributes>\n\t\t<TnAttribute>Protected</TnAttribute>\n\t\t<TnAttribute>External</TnAttribute>\n\t\t<TnAttribute>Imported</TnAttribute>\n\t</TnAttributes>\n\t<BillingTelephoneNumber>9195551234</BillingTelephoneNumber>\n\t<NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>\n\t<SiteId>    SITE ID     </SiteId>\n\t<PeerId>  SIPPEER ID    </PeerId>\n\t<ListOfPhoneNumbers>\n\t\t<PhoneNumber>9194809871</PhoneNumber>\n\t</ListOfPhoneNumbers>\n\t<CustomerOrderId>myOrder</CustomerOrderId>\n\t<Triggered>true</Triggered>\n\t<PartialPort>true</PartialPort>\n\t<Immediately>true</Immediately>\n</LnpOrderResponse>"
                  },
                  "Toll Free Order Response": {
                    "value": "<LnpOrderResponse>\n\t<OrderId>03f194d5-3932-4e9f-8ba1-03ef767985e5</OrderId>\n\t<Status>\n\t\t<Code>201</Code>\n\t\t<Description>Order request received. Please use the order id to check the status of your order later.</Description>\n\t</Status>\n\t<ProcessingStatus>VALIDATE_TFNS</ProcessingStatus>\n\t<RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>\n\t<LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>\n\t<ListOfPhoneNumbers>\n\t\t<PhoneNumber>8774809871</PhoneNumber>\n\t</ListOfPhoneNumbers>\n\t<TollFreeValidationStatus>PROCESSING</TollFreeValidationStatus>\n\t<TollFreePortType>Phase1TollFree</TollFreePortType>\n</LnpOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LnpOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "The order failed; one of the input parameters is invalid.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LnpOrderResponse>\n    <Status>\n        <Code>400</Code>\n        <Description>Validation Failed. Please check your input parameters.</Description>\n    </Status>\n    <Errors>\n        <Code>7309</Code>\n        <Description>The site id was not supplied or is invalid.</Description>\n    </Errors>\n    <Errors>\n        <Code>7312</Code>\n        <Description>The sippeer id is invalid.</Description>\n    </Errors>\n    <Errors>\n        <Code>7398</Code>\n        <Description>Protected status is not available for numbers in off-net rate centers.</Description>\n    </Errors>\n    <ProcessingStatus>EXCEPTION</ProcessingStatus>\n    <LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>\n    <Subscriber>\n        <SubscriberType>BUSINESS</SubscriberType>\n        <FirstName>First</FirstName>\n        <LastName>Last</LastName>\n        <ServiceAddress>\n            <HouseNumber>11235</HouseNumber>\n            <StreetName>Back</StreetName>\n            <City>Denver</City>\n            <StateCode>CO</StateCode>\n            <Zip>27541</Zip>\n            <County>Canyon</County>\n            <Country>United States</Country>\n        </ServiceAddress>\n    </Subscriber>\n    <WirelessInfo>\n        <AccountNumber>771297665AABC</AccountNumber>\n        <PinNumber>1234</PinNumber>\n    </WirelessInfo>\n    <TnAttributes>\n            <TnAttribute>Protected</TnAttribute>\n            <TnAttribute>External</TnAttribute>\n            <TnAttribute>Imported</TnAttribute>\n    </TnAttributes>\n    <BillingTelephoneNumber>9195551234</BillingTelephoneNumber>\n    <NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>\n    <ListOfPhoneNumbers>\n        <PhoneNumber>9194809871</PhoneNumber>\n    </ListOfPhoneNumbers>\n    <Triggered>true</Triggered>\n</LnpOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LnpOrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the information associated with the specified port-in ID number. Note: For users of Enterprise Telephony accounts, AlternateSpid, LosingCarrierSPID, LosingCarrierName, and LosingCarrierIsWireless, are omitted from the success output.",
        "operationId": "RetrievePortin",
        "summary": "Retrieve port-in order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "Port-in in CANCELLED state": {
                    "value": "<LnpOrderResponse>\n\t<Errors>\n\t\t<Code>7205</Code>\n\t\t<Description>Telephone number is already being processed on another order</Description>\n\t</Errors>\n\t<ProcessingStatus>CANCELLED</ProcessingStatus>\n\t<BulkPortinOrderId>b4e227b3-2caf-4546-9af7-849c60dce942</BulkPortinOrderId>\n\t<RequestedFocDate>2016-03-25T21:15:00.000Z</RequestedFocDate>\n\t<!-- Is set by system for draft portins only -->\n\t<EarliestEstimate>2016-03-25T21:15:00.000Z</EarliestEstimate>\n\t<CustomerOrderId>SJM00002</CustomerOrderId>\n\t<LoaAuthorizingPerson>The Authguy</LoaAuthorizingPerson>\n\t<Subscriber>\n\t\t<SubscriberType>BUSINESS</SubscriberType>\n\t\t<FirstName>First</FirstName>\n\t\t<LastName>Last</LastName>\n\t\t<ServiceAddress>\n\t\t\t<HouseNumber>11235</HouseNumber>\n\t\t\t<StreetName>Back</StreetName>\n\t\t\t<City>Denver</City>\n\t\t\t<StateCode>CO</StateCode>\n\t\t\t<Zip>27541</Zip>\n\t\t\t<County>Canyon</County>\n\t\t\t<Country>United States</Country>\n\t\t\t<AddressType>Service</AddressType>\n\t\t</ServiceAddress>\n\t</Subscriber>\n\t<WirelessInfo>\n\t\t<AccountNumber>771297665AABC</AccountNumber>\n\t\t<PinNumber>1234</PinNumber>\n\t</WirelessInfo>\n\t<TnAttributes>\n\t\t<TnAttribute>Protected</TnAttribute>\n\t\t<TnAttribute>External</TnAttribute>\n\t\t<TnAttribute>Imported</TnAttribute>\n\t</TnAttributes>\n\t<BillingTelephoneNumber>9195551234</BillingTelephoneNumber>\n\t<NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>\n\t<ListOfPhoneNumbers>\n\t\t<PhoneNumber>9194809871</PhoneNumber>\n\t</ListOfPhoneNumbers>\n\t<AlternateSpid>Foo</AlternateSpid>\n\t<AccountId>20</AccountId>\n\t<SiteId>2857</SiteId>\n\t<PeerId>317771</PeerId>\n\t<LosingCarrierSPID>9998</LosingCarrierSPID>\n\t<LosingCarrierName>Mock Carrier</LosingCarrierName>\n\t<LosingCarrierIsWireless>true</LosingCarrierIsWireless>\n\t<VendorName>Bandwidth CLEC</VendorName>\n\t<OrderCreateDate>2014-08-04T13:37:06.323Z</OrderCreateDate>\n\t<LastModifiedDate>2014-08-04T13:37:08.676Z</LastModifiedDate>\n\t<userId>jbm</userId>\n\t<LastModifiedBy>jbm</LastModifiedBy>\n\t<PartialPort>false</PartialPort>\n\t<Immediately>false</Immediately>\n\t<Triggered>false</Triggered>\n\t<PortType>AUTOMATED</PortType>\n</LnpOrderResponse>"
                  },
                  "Toll Free VALID_DRAFT_TFNS state": {
                    "value": "<LnpOrderResponse>\n\t<ProcessingStatus>VALID_DRAFT_TFNS</ProcessingStatus>\n\t<RequestedFocDate>2021-06-23T15:30:00Z</RequestedFocDate>\n\t<EarliestEstimate>2021-06-23T15:30:00Z</EarliestEstimate>\n\t<LoaAuthorizingPerson>Jane Doe</LoaAuthorizingPerson>\n\t<ListOfPhoneNumbers>\n\t\t<PhoneNumber>8336532112</PhoneNumber>\n\t\t<PhoneNumber>8336532113</PhoneNumber>\n\t\t<PhoneNumber>8336532114</PhoneNumber>\n\t</ListOfPhoneNumbers>\n\t<AccountId>9900572</AccountId>\n\t<SiteId>14020</SiteId>\n\t<PeerId>521434</PeerId>\n\t<OrderCreateDate>2021-06-16T18:51:42.161Z</OrderCreateDate>\n\t<LastModifiedDate>2021-06-16T19:51:06.244Z</LastModifiedDate>\n\t<userId>testuser</userId>\n\t<LastModifiedBy>testuser</LastModifiedBy>\n\t<CustomerOrderId>MyTestOrder</CustomerOrderId>\n\t<Triggered>false</Triggered>\n\t<PortType>MANUAL_TOLLFREE</PortType>\n\t<TollFreeValidationStatus>COMPLETE</TollFreeValidationStatus>\n\t<TollFreePortType>PHASE_1_TOLLFREE</TollFreePortType>\n                            !scope internal\n                            \n\t<ControllingRespOrgId>TST52</ControllingRespOrgId>\n                            !scope internal\n                            \n\t<TargetRespOrgId>JYT01</TargetRespOrgId>\n\t<RespOrgException>true</RespOrgException>\n\t<Internal>false</Internal>\n</LnpOrderResponse>"
                  },
                  "Toll Free INVALID_DRAFT_TFNS state, non-portable TNs": {
                    "value": "<LnpOrderResponse>\n\t<ProcessingStatus>INVALID_DRAFT_TFNS</ProcessingStatus>\n\t<RequestedFocDate>2021-06-23T15:30:00Z</RequestedFocDate>\n\t<EarliestEstimate>2021-06-23T15:30:00Z</EarliestEstimate>\n\t<LoaAuthorizingPerson>Jane Doe</LoaAuthorizingPerson>\n\t<ListOfPhoneNumbers>\n\t\t<PhoneNumber>8336521001</PhoneNumber>\n\t\t<PhoneNumber>8336522001</PhoneNumber>\n\t</ListOfPhoneNumbers>\n\t<AccountId>9900572</AccountId>\n\t<SiteId>14020</SiteId>\n\t<PeerId>521434</PeerId>\n\t<OrderCreateDate>2021-06-16T21:00:43.694Z</OrderCreateDate>\n\t<LastModifiedDate>2021-06-16T21:03:42.085Z</LastModifiedDate>\n\t<userId>testuser</userId>\n\t<LastModifiedBy>testuser</LastModifiedBy>\n\t<CustomerOrderId>MyTestOrder</CustomerOrderId>\n\t<Triggered>false</Triggered>\n\t<PortType>MANUAL_TOLLFREE</PortType>\n\t<TollFreeValidationStatus>FAILED</TollFreeValidationStatus>\n\t<TollFreeValidationErrors>\n\t\t<ErrorList>\n\t\t\t<Error>\n\t\t\t\t<Code>7642</Code>\n\t\t\t\t<Description>TN list contains at least one toll free number that cannot be ported due to spare status.</Description>\n\t\t\t\t<TelephoneNumbers>\n\t\t\t\t\t<Tn>8336521001</Tn>\n\t\t\t\t</TelephoneNumbers>\n\t\t\t</Error>\n\t\t\t<Error>\n\t\t\t\t<Code>7643</Code>\n\t\t\t\t<Description>TN list contains at least one toll free number that cannot be ported due to unavailable status.</Description>\n\t\t\t\t<TelephoneNumbers>\n\t\t\t\t\t<Tn>8336522001</Tn>\n\t\t\t\t</TelephoneNumbers>\n\t\t\t</Error>\n\t\t</ErrorList>\n\t</TollFreeValidationErrors>\n\t<TollFreePortType>PHASE_1_TOLLFREE</TollFreePortType>\n</LnpOrderResponse>"
                  },
                  "Toll Free INVALID_DRAFT_TFNS state, vendor error": {
                    "value": "<LnpOrderResponse>\n\t<ProcessingStatus>INVALID_DRAFT_TFNS</ProcessingStatus>\n\t<RequestedFocDate>2021-06-23T15:30:00Z</RequestedFocDate>\n\t<EarliestEstimate>2021-06-23T15:30:00Z</EarliestEstimate>\n\t<LoaAuthorizingPerson>Jane Doe</LoaAuthorizingPerson>\n\t<ListOfPhoneNumbers>\n\t\t<PhoneNumber>8336000001</PhoneNumber>\n\t</ListOfPhoneNumbers>\n\t<AccountId>9900572</AccountId>\n\t<SiteId>14020</SiteId>\n\t<PeerId>521434</PeerId>\n\t<OrderCreateDate>2021-06-16T21:00:43.694Z</OrderCreateDate>\n\t<LastModifiedDate>2021-06-16T21:03:42.085Z</LastModifiedDate>\n\t<userId>testuser</userId>\n\t<LastModifiedBy>testuser</LastModifiedBy>\n\t<CustomerOrderId>MyTestOrder</CustomerOrderId>\n\t<Triggered>false</Triggered>\n\t<PortType>MANUAL_TOLLFREE</PortType>\n\t<TollFreeValidationStatus>FAILED</TollFreeValidationStatus>\n\t<TollFreeValidationErrors>\n\t\t<ErrorList>\n\t\t\t<Error>\n\t\t\t\t<Code>7617</Code>\n\t\t\t\t<Description>Batch Number Query received vendor error: Service unavailable. If this condition persists, please contact Bandwidth for support.</Description>\n\t\t\t\t<TelephoneNumbers>\n\t\t\t\t\t<Tn>8336000001</Tn>\n\t\t\t\t</TelephoneNumbers>\n\t\t\t</Error>\n\t\t</ErrorList>\n\t</TollFreeValidationErrors>\n\t<TollFreePortType>PHASE_1_TOLLFREE</TollFreePortType>\n</LnpOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LnpOrderResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "<p>It is possible to change (\"SUPP\" in LNP terms) an existing LNP order. This is done via a PUT on the existing order-id.  If a field is present in the PUT /portins/{orderId} payload, the value of the field will be updated for the order, subject to existing rules about the field. If a field is NOT present in the PUT /portins/{orderId} payload, behavior varies as to whether the missing field is removed from the port-in, set to a default value, or left unchanged. As a result, we <b>STRONGLY RECOMMEND</b> performing a GET on the order and copying those element values to the PUT for any elements you are not explicitly trying to change the value of.</p><p><b>Note:</b> <ul><li> If the order ProcessingStatus is DRAFT, the rules about what can be changed are much more relaxed. Most of the validation is performed when the ProcessingStatus is changed from DRAFT to SUBMITTED.  If SUPP is performed on a draft portin, no validations are applied except validation of the ListOfPhoneNumbers, if at least 1 PhoneNumber is provided.</li> <li>Submitting the parent bulk port-in will trigger the submission of child port-in orders.</li></ul> </p>Please visit <a href='/docs/numbers/guides/porting/updatePortin'>How to Manage Port in</a> guide. Also you can find more information about port types on <a href='/docs/numbers/guides/porting/lnpChecker'>Port Types section of this </a> guide\n",
        "operationId": "UpdatePortin",
        "summary": "Update port-in order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LnpOrderSupp>\n    <CustomerOrderId>SJM00002</CustomerOrderId>\n    <RequestedFocDate>2014-12-04T13:00:00.000Z</RequestedFocDate>\n    <BillingTelephoneNumber>8045030092</BillingTelephoneNumber>\n    <NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>\n    <WirelessInfo>\n        <AccountNumber>23453245</AccountNumber>\n        <PinNumber>1111</PinNumber>\n    </WirelessInfo>\n    <TnAttributes>\n        <TnAttribute>Protected</TnAttribute>\n        <TnAttribute>External</TnAttribute>\n        <TnAttribute>Imported</TnAttribute>\n    </TnAttributes>\n    <Subscriber>\n        <SubscriberType>RESIDENTIAL</SubscriberType>\n        <FirstName>TestName</FirstName>\n        <LastName>TestLastName</LastName>\n        <ServiceAddress>\n            <!-- If true will overwrite all address fields, \n             those which should be required remain required.\n             Affect only supp. Default false. -->\n            <ResetAddressFields>true</ResetAddressFields> \n            <HouseNumber>115</HouseNumber>\n            <StreetName>Monarch Way</StreetName>\n            <City>Cary</City>\n            <StateCode>NC</StateCode>\n            <Zip>27518</Zip>\n        </ServiceAddress>\n    </Subscriber>\n    <SiteId>743</SiteId>\n    <PartialPort>true</PartialPort>\n    <ListOfPhoneNumbers>\n        <PhoneNumber>2019721004</PhoneNumber>\n        <PhoneNumber>2019721005</PhoneNumber>\n    </ListOfPhoneNumbers>\n    <LoaAuthorizingPerson>TestName TestLastName</LoaAuthorizingPerson>\n    <AlternateSpid>Foo</AlternateSpid>\n</LnpOrderSupp>\n"
                }
              },
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Automated Off-Net",
                    "properties": {
                      "LnpOrderSupp": {
                        "$ref": "#/components/schemas/LnpOrderSuppAutomatedOffNet"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Toll-Free",
                    "properties": {
                      "LnpOrderSupp": {
                        "$ref": "#/components/schemas/LnpOrderSuppManualTollFree"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Manual Off/On Net",
                    "properties": {
                      "LnpOrderSupp": {
                        "$ref": "#/components/schemas/LnpOrderSuppManualOnNetOffNet"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Automated On-Net",
                    "properties": {
                      "LnpOrderSupp": {
                        "$ref": "#/components/schemas/LnpOrderSuppAutomatedOnNet"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Automated On-Net wireless to wireless",
                    "properties": {
                      "LnpOrderSupp": {
                        "$ref": "#/components/schemas/LnpOrderSuppAutomatedOnNetWireless"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Internal",
                    "properties": {
                      "LnpOrderSupp": {
                        "$ref": "#/components/schemas/LnpOrderSuppInternal"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The order has been successfully updated.  The payload includes the fields that were included\nin the PUT request payload and a ProcessingStatus.  <b>Because some aspects of the order\nupdate processing are not entirely synchronous, you should NOT rely on the ProcessingStatus\nin the synchronous response to a PUT operation on a port-in order.  Instead, always perform\na GET on the order to see the actual processing status of the order.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LnpOrderResponse>\n    <OrderId>b6080e4c-7ddf-4faa-bbd8-328a72de9297</OrderId>\n    <Status>\n        <Code>200</Code>\n        <Description>Supp request received. Please use the order id to check the status of your order later.</Description>\n    </Status>\n    <ProcessingStatus>REQUESTED_SUPP</ProcessingStatus>\n    <RequestedFocDate>2014-12-04T13:00:00Z</RequestedFocDate>\n    <BillingTelephoneNumber>8045030092</BillingTelephoneNumber>\n    <NewBillingTelephoneNumber>9175131245</NewBillingTelephoneNumber>\n    <Triggered>false</Triggered>\n</LnpOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LnpOrderPutResponse"
                }
              }
            }
          },
          "400": {
            "description": "List of telephone numbers cannot be changed due to validation errors.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LnpOrderResponse>\n    <OrderId>c58fed09-a3fc-49b8-b461-2286146b73c1</OrderId>\n    <Status>\n        <Code>400</Code>\n        <Description>Validation Failed. Please check your input parameters.</Description>\n    </Status>\n    <Errors>\n        <Code>7331</Code>\n        <Description>Rate Center Not Present in Bandwidth Dashboard</Description>\n        <TelephoneNumbers>\n            <Tn>7138391156</Tn>\n        </TelephoneNumbers>\n    </Errors>\n    <Errors>\n        <Code>7495</Code>\n        <Description>Unable to change the TNs on this port. Please ensure that the new TNs are from the same losing carrier as the current TNs.</Description>\n        <TelephoneNumbers>\n            <Tn>2024551000</Tn>\n            <Tn>2018391156</Tn>\n            <Tn>2018391157</Tn>\n        </TelephoneNumbers>\n    </Errors>\n    <ProcessingStatus>EXCEPTION</ProcessingStatus>\n    <BillingTelephoneNumber>4352154438</BillingTelephoneNumber>\n</LnpOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LnpOrderResponse"
                }
              }
            }
          },
          "409": {
            "description": "The port-in is associated with a bulk port-in in DRAFT state. To submit this port-in detach it from the parent bulk port-in.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<LnpOrderResponse>\n    <OrderId>969a26eb-3bc4-4db3-ab77-56808accb9b2</OrderId>\n    <Status>\n        <Code>409</Code>\n        <Description>Validation Failed. Please check your input parameters.</Description>\n    </Status>\n    <Errors>\n        <Code>7717</Code>\n        <Description>This port-in order is associated with a draft bulk port-in order. Either submit the bulk port-in order, or detach this order from the bulk port-in prior to submitting it.</Description>\n    </Errors>\n    <ProcessingStatus>EXCEPTION</ProcessingStatus>\n    <AlternateSpid>1234</AlternateSpid>\n    <LoaAuthorizingPerson>Super Man</LoaAuthorizingPerson>\n    <Subscriber>\n        <SubscriberType>RESIDENTIAL</SubscriberType>\n        <FirstName>John</FirstName>\n        <LastName>Doe</LastName>\n        <ServiceAddress>\n            <HouseNumber>10</HouseNumber>\n            <StreetName>Awesome Lane</StreetName>\n            <City>NewBern</City>\n            <StateCode>NC</StateCode>\n            <Zip>99999</Zip>\n            <Country>United States</Country>\n            <AddressType>Service</AddressType>\n        </ServiceAddress>\n    </Subscriber>\n    <WirelessInfo>\n        <AccountNumber>771297665AABC</AccountNumber>\n        <PinNumber>1234ab</PinNumber>\n    </WirelessInfo>\n    <BillingTelephoneNumber>2019721103</BillingTelephoneNumber>\n    <ListOfPhoneNumbers>\n        <PhoneNumber>2019721103</PhoneNumber>\n    </ListOfPhoneNumbers>\n    <Triggered>false</Triggered>\n    <BillingType>PORTIN</BillingType>\n</LnpOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LnpOrderResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Porting"
        ],
        "description": "If port-in order is in DRAFT state the order will be deleted.  Otherwise the call simply\nplaces the existing order in a requested_cancel state.  The order will transition to CANCELLED\nas soon as the cancellation is conveyed to our porting vendor.  For non-draft orders, DELETE\ndoes not actually remove the order, but cancels it.  DELETE has no effect on orders already\nin a terminal state (i.e. COMPLETE, CANCELLED).",
        "operationId": "DeletePortin",
        "summary": "Delete port-in order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The port-in order has been successfully deleted/cancelled."
          },
          "400": {
            "description": "Order id is invalid, order does not exist or the port-in order is already processed, and therefore cannot be deleted.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LnpOrderResponse>\n    <OrderId>2ffd0af4-7c54-40dc-9bfe-40f08b57e63a</OrderId>\n    <Status>\n        <Code>400</Code>\n        <Description>Validation Failed. Please check your input parameters.</Description>\n    </Status>\n    <Errors>\n        <Code>7304</Code>\n        <Description>The order is already complete and cannot be modified or cancelled</Description>\n    </Errors>\n    <ProcessingStatus>EXCEPTION</ProcessingStatus>\n</LnpOrderResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LnpOrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/notes": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieve all notes associated with the order. <br>",
        "operationId": "GetPortinNotes",
        "summary": "List port-in order notes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - there are Notes associated with the order, and they have been returned in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Notes>\n    <Note>\n        <Id>87037</Id>\n        <UserId>jbm</UserId>\n        <Description>This is a test note</Description>\n        <LastDateModifier>2014-11-16T04:01:10.000Z</LastDateModifier>\n    </Note>\n    <Note>\n        <Id>87039</Id>\n        <UserId>smckinnon</UserId>\n        <Description>This is a second test note</Description>\n        <LastDateModifier>2014-11-16T04:08:46.000Z</LastDateModifier>\n    </Note>\n</Notes>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Notes"
                }
              }
            }
          },
          "204": {
            "description": "No Content - there are no Notes associated with the order.  Since the notes resource is an aggregate rather than addressed resource the generic no content response is used, rather than a 404 as would be used if the resource was addressed with an identifier",
            "content": {
              "application/xml": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "Updates the Notes resource by adding a note. Adding a note to a port-in\norder causes a notification to be sent to Bandwidth Operations, so that they may assist as necessary. A note may be up to 500 characters in length.",
        "operationId": "CreatePortinNote",
        "summary": "Create port-in order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Note>\n\t<UserId>userId</UserId>\n\t<!-- note the userId must match the logged-in user -->\n\t<Description>note text</Description>\n</Note>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED - the note has been created and added to the collection of notes associated with the order.  A link to the note is included in the Location header of the response.  No body is returned",
            "content": {
              "application/xml": {}
            }
          },
          "400": {
            "description": "Bad Request - the note has not been created because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/notes/{noteId}": {
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "Update a specified note.  Notes may only be updated, not deleted.",
        "operationId": "UpdatePortinNote",
        "summary": "Update port-in order note",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noteId",
            "description": "Note ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Note>\n\t<UserId>userId</UserId>\n\t<Description>note text</Description>\n</Note>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - note has been updated.  No body is returned"
          },
          "400": {
            "description": "Bad Request - the note has not been updated because the payload is incomplete or in error.  An error payload is provided in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<NoteResponse>\n    <ResponseStatus>\n        <ErrorCode>12501</ErrorCode>\n        <Description>Username is required</Description>\n    </ResponseStatus>\n</NoteResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NoteErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/history": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the history of the specified port-in order. Obtaining history for a draft port-in is not supported.<br>Note: The order history may be updated several seconds after an operation that should cause a history record update. As a consequence, this endpoint should never be used to fetch the current order status. To fetch the current order status, please use GET /accounts/{accountId}/portins/{orderId}.",
        "operationId": "RetrievePortinHistory",
        "summary": "Retrieve port-in order history",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The history has been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "Simple response": {
                    "value": "<OrderHistoryWrapper>\n    <OrderHistory>\n        <OrderDate>2014-07-29T17:12:29.495Z</OrderDate>\n        <Note>LOA required</Note>\n        <Author>jbm</Author>\n        <Status>PENDING_DOCUMENTS</Status>\n    </OrderHistory>\n    <OrderHistory>\n        <OrderDate>2014-07-29T17:12:32.121Z</OrderDate>\n        <Note>Order has been created</Note>\n        <Author>System</Author>\n        <Status>SUBMITTED</Status>\n        <Difference>LoaDate : \"\" --&gt; Tue Jul 29 17:12:29 UTC 2014</Difference>\n    </OrderHistory>\n    <OrderHistory>\n        <OrderDate>2014-07-29T17:15:31.241Z</OrderDate>\n        <Note>7999: E37 TN not found in PPS (PPS)</Note>\n        <Author>System</Author>\n        <Status>EXCEPTION</Status>\n    </OrderHistory>\n    <OrderHistory>\n        <OrderDate>2014-07-29T17:15:40.836Z</OrderDate>\n        <Note>Order waiting for activation</Note>\n        <Author>System</Author>\n        <Status>FOC</Status>\n    </OrderHistory>\n    <OrderHistory>\n        <OrderDate>2014-07-29T17:16:20.347Z</OrderDate>\n        <Note>Order is complete</Note>\n        <Author>System</Author>\n        <Status>COMPLETE</Status>\n    </OrderHistory>\n</OrderHistoryWrapper>"
                  },
                  "DRAFT state response": {
                    "value": "<OrderHistoryWrapper>\n    <IrisStatus>\n        <Code>7710</Code>\n        <Description>History is not supported for bulk port-ins or individual port-ins in draft status.</Description>\n    </IrisStatus>\n</OrderHistoryWrapper>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the order id does not exist in the system"
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/activationStatus": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieve the status (activated or not activated) of TNs associated with the customer activated (triggered) order. <br><br>\nAt this time all phone numbers associated with a PON will be activated at the same time.",
        "operationId": "retrievePortinActivationStatus",
        "summary": "Retrieve port-in order activation status",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activation Status information is available for this order.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ActivationStatusResponse>\n    <ActivationStatus>\n        <AutoActivationDate>2014-08-29T18:30:00+03:00</AutoActivationDate>\n        <ActivatedTelephoneNumbersList>\n            <TelephoneNumber>6052609021</TelephoneNumber>\n        </ActivatedTelephoneNumbersList>\n        <NotYetActivatedTelephoneNumbersList/>\n    </ActivationStatus>\n</ActivationStatusResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ActivationStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Return a 400 error if the port-in Order is not in FOC status, or if not executed on the day of FOC or within the delay interval.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ActivationStatusResponse>\n    <ResponseStatus>\n        <ErrorCode>7342</ErrorCode>\n        <Description>On demand port-in activation not yet allowed.</Description>\n    </ResponseStatus>\n</ActivationStatusResponse>\n"
                  }
                }
              }
            }
          },
          "404": {
            "description": "<p>Return a 404 if the Port-in Order is missing, or if the activation is complete, and thus the ActivationStatus resource has been erased.</p>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ActivationStatusResponse>\n <ResponseStatus>\n <ErrorCode>7348</ErrorCode>\n <Description>The order is already complete</Description>\n </ResponseStatus>\n </ActivationStatusResponse>\n"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "Sets the activation time for the port-in order.  <br> <br>\nThis API call is used to set the Activation time of the customer activated (triggered) port.</p>\n\n<ul>\n<li>If the time is in the past all of the TNs in the port-in request will be activated 'immediately'.</li>\n<li>For automated on-net port-ins, if the time is within three days after the approved FoC date, the auto-activation time for the port will be set to that time.</li>\n<li>For automated off-net port-ins, if the date matches the actual FOC date and the time is between 6:00 AM ET and 10:00 PM ET, the auto-activation time for the port will be set to that time.</li>\n</ul>\n",
        "operationId": "UpdatePortinActivationStatus",
        "summary": "Update port-in order activation status",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ActivationStatus>\n    <AutoActivationDate>2014-08-30T18:30:00+03:00</AutoActivationDate>\n</ActivationStatus>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ActivationStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activation status successfully updated",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ActivationStatusResponse>\n    <ActivationStatus>\n        <AutoActivationDate>2014-08-30T18:30:00+03:00</AutoActivationDate>\n    </ActivationStatus>\n</ActivationStatusResponse>\n"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Check input parameters.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ActivationStatusResponse>\n    <ResponseStatus>\n        <ErrorCode>7342</ErrorCode>\n        <Description>On demand port-in activation not yet allowed.</Description>\n    </ResponseStatus>\n</ActivationStatusResponse>\n"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order id was not found.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ActivationStatusResponse>\n    <ResponseStatus>\n        <ErrorCode>7348</ErrorCode>\n        <Description>The order is already complete</Description>\n    </ResponseStatus>\n</ActivationStatusResponse>\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/loas": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the list of the loa (and other) files associated with the order",
        "operationId": "ListPortinLoas",
        "summary": "List port-in loa files",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadata",
            "description": "if true it will return meta-data associated with the file used to describe the file.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The list of all files is being returned.  This response includes the case where the list is empty.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fileListResponse>\n    <fileCount>1</fileCount>\n    <fileData>\n        <FileName>eeceff88-c11e-4bd8-86f3-8e3482888500-1624044440058.pdf</FileName>\n        <FileMetaData>\n            <DocumentType>LOA</DocumentType>\n        </FileMetaData>\n    </fileData>\n    <resultCode>0</resultCode>\n    <resultMessage>LOA file list successfully returned</resultMessage>\n</fileListResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/fileListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "POSTing to the /loas resource will enable the upload of the file.  The key attribute to the POST is ensuring that the headers are correctly set to support the file upload.<br>\nQuery parameter or header documentType can be used to specify type of document on upload. Possible values are: LOA, INVOICE, CSR, OTHER.\n    <br>\nHeader settings typical of a valid upload are...<br>\n    <br>\n<code>\nHost: dashboard.bandwidth.com <br>\nAuthorization: Basic xxxxxxxxxxxxxxxxxxxx== <br>\nContent-Type: application/pdf <br>\ndocumentType: [LOA | INVOICE | CSR | OTHER] <br>\nAccept: <em>/</em> <br>\nAccept-Encoding: gzip, deflate <br>\nAccept-Language: en-US,en;q=0.8 <br>\nCache-Control: no-cache <br>\n    <br>\n----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>\nContent-Disposition: form-data; name=\"george\"; filename=\"Bandwidth Dashboard.pdf\" <br>\nContent-Type: application/pdf <br>\n    <br>\n    <br>\n----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>\n</code>",
        "operationId": "UploadPortinLoaFile",
        "summary": "Upload port-in loa file",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentType",
            "description": "This query parameter allows you to include the document type metadata\nat the same time you upload the file.  The value may be one of: LOA, INVOICE, CSR, or OTHER.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "documentType=LOA"
          }
        ],
        "responses": {
          "201": {
            "description": "The 201 response indicates the successful creation of a file resource containing the uploaded content.\nThe response header will include a link to the created file as a GET on the identified resource.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fileUploadResponse>\n    <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>\n    <resultCode>0</resultCode>\n    <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage>\n</fileUploadResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 indicates that the requested upload failed."
          }
        },
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/loas/{fileid}": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the file associated with the order",
        "operationId": "RetrievePortinLoaFile",
        "summary": "Retrieve port-in loa file",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 OK  indicates a successful download request.<br>\nThe response to the get on a filename will result in the file being prepared and delivered in a manner consistent with browser download.  The Response headers include the content-disposition header describing the file download.<br>\nHeaders:\n<code>\nContent-Type → application/octet-stream<br>\nDate → Mon, 20 Apr 2015 17:19:26 GMT<br>\nServer → Apache-Coyote/1.1<br>\nTransfer-Encoding → <br>\ncontent-disposition → attachment; filename=63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf<br>\n</code>"
          },
          "404": {
            "description": "A 404 indicates that the indicated file was not found in conjunction with the order id."
          }
        }
      },
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "A PUT on the filename will update / replace the identified file id.  The format of the PUT is identical to that of the POST.<br>\nHeader settings typical of a valid upload are...<br>\n<code>\nHost: dashboard.bandwidth.com <br>\nAuthorization: Basic xxxxxxxxxxxxxxxxxxxx== <br>\nContent-Type: application/pdf <br>\nAccept: <em>/</em> <br>\nAccept-Encoding: gzip, deflate <br>\nAccept-Language: en-US,en;q=0.8 <br>\nCache-Control: no-cache <br>\n    <br>\n----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>\nContent-Disposition: form-data; name=\"george\"; filename=\"Bandwidth Dashboard.pdf\" <br>\nContent-Type: application/pdf <br>\n    <br>\n    <br>\n----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>\n</code>",
        "operationId": "UpdatePortinLoaFile",
        "summary": "Update port-in loa file",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 response indicates the successful replacement of a file resource containing the uploaded content.\nThe response header will include a link to the created file as a GET on the identified resource.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<fileUploadResponse>\n    <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>\n    <resultCode>0</resultCode>\n    <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage>\n</fileUploadResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "A 400 indicates that the requested upload failed."
          },
          "404": {
            "description": "A 404 indicates that the file was not available for replacement."
          }
        }
      },
      "delete": {
        "tags": [
          "Porting"
        ],
        "description": "Deletes the file associated with the order",
        "operationId": "DeletePortinLoaFile",
        "summary": "Delete port-in loa file",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 OK  indicates a successful deletion of the identified file."
          },
          "404": {
            "description": "A 404 indicates that the indicated file was not found in conjunction with the order id."
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/loas/{fileid}/metadata": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the metadata associated with the file.",
        "operationId": "RetrievePortinLoaMetadata",
        "summary": "Retrieve port-in loa file metadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Metatdata has been successfully retrieved.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<FileMetaData>\n   <DocumentName> [string] </DocumentName>\n   <DocumentType> [LOA | INVOICE | CSR | OTHER] </DocumentType>\n</FileMetaData>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FileMetaData"
                }
              }
            }
          },
          "404": {
            "description": "A 404 indicates that the indicated file was not found in conjunction with the order id."
          }
        }
      },
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "Associate metadata with the file named in the resource path.  This will describe the file, and declare the data that is contained in the file, selected from a list of [LOA | INVOICE | CSR | OTHER].",
        "operationId": "UpdatePortinLoadMetadata",
        "summary": "Update port-in loa file metadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<FileMetaData>\n   <DocumentName> [string] </DocumentName>\n   <DocumentType> [LOA | INVOICE | CSR | OTHER] </DocumentType>\n</FileMetaData>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/FileMetaData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update of the metadata associated with the identified file."
          },
          "400": {
            "description": "Some error has occured as a result of the attempt."
          }
        }
      },
      "delete": {
        "tags": [
          "Porting"
        ],
        "description": "Deletes the metadata previously associated with the identified file.",
        "operationId": "DeletePortinLoaMetadata",
        "summary": "Delete port-in loa file metadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The 200 OK  indicates a successful deletion of the identified metadata."
          },
          "404": {
            "description": "A 404 indicates that the indicated file was not found in conjunction with the order id."
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/areaCodes": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves a list of area codes associated with the specified port-in number and displays them in the payload.",
        "operationId": "ListPortinAreaCodes",
        "summary": "List port-in area codes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The area codes have been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneDetailsReports>\n    <TelephoneDetailsReport>\n        <AreaCode>919</AreaCode>\n        <Count>1</Count>\n    </TelephoneDetailsReport>\n</TelephoneDetailsReports>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneDetailsReports"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/npaNxx": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves a list of Npa-Nxx associated with the specified port-in number and displays them in the payload.",
        "operationId": "ListPortinNpaNxx",
        "summary": "List port-in npaNxx",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Npa-Nxx have been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneDetailsReports>\n    <TelephoneDetailsReport>\n        <NPA-NXX>919280</NPA-NXX>\n        <Count>1</Count>\n    </TelephoneDetailsReport>\n</TelephoneDetailsReports>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneDetailsReportsNPAXX"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/tns": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves a list of telephone numbers associated with the specified port-in number and displays them in the payload.",
        "operationId": "ListPortinTns",
        "summary": "List port-in tns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The telephone numbers have been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbers>\n    <Count>1</Count>\n    <TelephoneNumber>9192809870</TelephoneNumber>\n</TelephoneNumbers>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbers"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderid}/totals": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves a total count of telephone numbers associated with the specified port-in number and displays them in the payload.",
        "operationId": "RetrievePortinTnTotals",
        "summary": "Retrieve port-in total count of tns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The total count of telephone numbers have been successfully retrieved and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Quantity>\n    <Count>1</Count>\n</Quantity>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Quantity"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/totals": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the total count of port-ins.",
        "operationId": "RetrievePortinTotals",
        "summary": "Retrieve total count of port-in orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The current status of the port-in.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "complete"
          },
          {
            "name": "vendorId",
            "description": "The vendor ID of the port-in.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The total has been successfully calculated and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Quantity>\n    <Count>1</Count>\n</Quantity>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PortinsTotal"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/status": {
      "get": {
        "tags": [
          "Porting"
        ],
        "summary": "Get Port In Range",
        "description": "Gets Port In orders which were last modified in the specified date range",
        "operationId": "GetAllPortsByAccountIdAndRange",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "startdate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enddate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LNPResponseWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portouts": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves a list of port-out requests for the given account ID. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b class=\"required\">*</b> below) is provided, the order results will be limited to the last two years.",
        "operationId": "ListPortOuts",
        "summary": "List port-out requests",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "The port-out ID of the first order of the page. \"1\" is used as a convention for the first port-out in the account ID.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "ca8065d1-ec1a-43da-af40-1dcee43becb5"
          },
          {
            "name": "size",
            "description": "The number of port-outs retrieved.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 30
          },
          {
            "name": "status",
            "description": "Displays the port-outs with the given status.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "complete"
          },
          {
            "name": "date",
            "description": "The date of when the order was placed.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-08-01"
          },
          {
            "name": "startdate",
            "description": "The earliest date that the order was last modified. <strong>NOTE: </strong> startdate and enddate must be simultaneously declared.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-08-05"
          },
          {
            "name": "enddate",
            "description": "The latest date that the order was last modified. <strong>NOTE: </strong> startdate and enddate must be simultaneously declared.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-08-05"
          }
        ],
        "responses": {
          "200": {
            "description": "The port-outs have been successfully retrieved and displayed in the payload. Note: For users of Enterprise Telephony accounts, VendorId is omitted from the success output.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LNPResponseWrapper"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LNPResponseWrapper>\n    <TotalCount>3</TotalCount>\n    <Links/>\n    <lnpPortInfoForGivenStatus>\n        <CountOfTNs>0</CountOfTNs>\n        <userId>System</userId>\n        <OrderId>4299b1ad-aa08-433e-a316-f9219b3450d2</OrderId>\n        <OrderType>port_out</OrderType>\n        <lastModifiedDate>2014-07-31T16:34:37.530Z</lastModifiedDate>\n        <ErrorCode>201</ErrorCode>\n        <ErrorMessage>Order request received. Please use the order id to check the status of your order later.</ErrorMessage>\n        <OrderDate>2014-07-31T16:34:37.480Z</OrderDate>\n        <ProcessingStatus>NEW</ProcessingStatus>\n        <RequestedFOCDate>2014-08-02T12:34:37.000Z</RequestedFOCDate>\n        <VendorId>512E</VendorId>\n    </lnpPortInfoForGivenStatus>\n</LNPResponseWrapper>\n"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "Creates a port-out request.<br>In the payload, CallbackUrl and InternalPort are optional.<br>There are also multiple options for the following:<table>    <tr>        <th>Option</th>        <th>Choices</th>    </tr>    <tr>        <td>Supplemental</td><td>NONE<br>CANCEL<br>UPDATE<br>OTHER<br></td>    </tr>    <tr>        <td>PortOutAction</td><td>NEW<br>SUPP<br>MODIFY<br>CANCEL<br></td>    </tr>    <tr>        <td>InternalPort</td><td>true or false<br></td>    </tr></table>",
        "operationId": "CreatePortOut",
        "summary": "Create port-out request",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PortOutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The port-out request has been successfully received.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PortOutResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<PortOutResponse>\n   <Status>\n      <Code>200</Code>\n      <Description>Request is complete and results returned.</Description>\n   </Status>\n</PortOutResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portouts/{orderid}": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the information associated with the specified port-out ID number.",
        "operationId": "ReadPortOut",
        "summary": "Fetch port-out request status",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Port-out order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ca8065d1-ec1a-43da-af40-1dcee43becb5"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed out to the payload. Note: For users of Enterprise Telephony accounts, SPID is omitted from the success output.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LnpOrderPortoutResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LnpOrderResponse>\n    <RequestedFocDate>2014-08-02T12:34:37Z</RequestedFocDate>\n    <ActualFocDate>2014-08-02T12:34:37Z</ActualFocDate>\n    <PON>8a89dea8-a145-4796-8e73-0d859fc74cad</PON>\n    <AccountId>20</AccountId>\n    <OrderCreateDate>2014-07-31T16:34:37.480Z</OrderCreateDate>\n    <LastModifiedDate>2014-07-31T16:34:37.530Z</LastModifiedDate>\n    <userId>System</userId>\n    <PortOutStatus>NEW</PortOutStatus>\n    <SPID>512E</SPID>\n</LnpOrderResponse>\n"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Porting"
        ],
        "description": "Updates or cancels a port-out ID. The payload to this method is similar to the GET on /accounts/{accountid}/portouts.<br>In the payload, CallbackUrl and InternalPort are optional additives.<br>There are also multiple options for the following:<table>    <tr>        <th>Option</th>        <th>Choices</th>    </tr>    <tr>        <td>Supplemental</td><td>NONE<br>CANCEL<br>UPDATE<br>OTHER<br></td>    </tr>    <tr>        <td>PortOutAction</td><td>NEW<br>SUPP<br>MODIFY<br>CANCEL<br></td>    </tr></table>",
        "operationId": "UpdatePortOut",
        "summary": "Update/cancel port-out request",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "Port-out order id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ca8065d1-ec1a-43da-af40-1dcee43becb5"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PortOutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The update or cancellation was successful.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PortOutResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<PortOutResponse>\n   <Status>\n      <Code>200</Code>\n      <Description>Request is complete and results returned.</Description>\n   </Status>\n</PortOutResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Porting"
        ],
        "summary": "Cancel port-out request",
        "description": "Cancel port-out request.",
        "operationId": "CancelPortOut",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PortOutResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portouts/status": {
      "get": {
        "tags": [
          "Porting"
        ],
        "summary": "Get Port Out Range",
        "description": "Gets Port Out orders which were last modified in the specified date range",
        "operationId": "GetAllPortOutsByAccountIdAndRange",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "startdate",
            "description": "The earliest date that the order was last modified.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-08-05"
          },
          {
            "name": "enddate",
            "description": "The latest date that the order was last modified.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-08-05"
          },
          {
            "name": "page",
            "description": "The port-out ID of the first order of the page. \"1\" is used as a convention for the first port-out in the account ID.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "ca8065d1-ec1a-43da-af40-1dcee43becb5"
          },
          {
            "name": "size",
            "description": "The number of port-outs retrieved.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 30
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LNPResponseWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portouts/totals": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the total count of port-uts.",
        "operationId": "RetrievePortOutTotals",
        "summary": "Retrieve total count of port-in orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The current status of the port-out.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "complete"
          },
          {
            "name": "vendorId",
            "description": "The vendor ID of the port-out.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The total has been successfully calculated and displayed in the payload.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Quantity>\n    <Count>1</Count>\n</Quantity>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Quantity"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Discover what is currently enabled on the account\n",
        "operationId": "ListProducts",
        "summary": "List account products",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountProductsResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AccountProductsResponse>\n    <Products>\n        <Product>\n            <Name>Termination</Name>\n            <Features>\n                <Feature>TermHttpVoice</Feature>\n            </Features>\n        </Product>\n        <Product>\n            <Name>VirtualInventory</Name>\n        </Product>\n        <Product>\n            <Name>TollFree</Name>\n        </Product>\n        <Product>\n            <Name>Origination</Name>\n            <Features>\n                <Feature>CallForwarding</Feature>\n                <Feature>DlDa</Feature>\n                <Feature>CNAM</Feature>\n                <Feature>OrigHttpVoice</Feature>\n            </Features>\n        </Product>\n        <Product>\n            <Name>MESSAGING</Name>\n            <Features>\n              <Feature>SMS</Feature>\n              <Feature>MMS</Feature>\n              <Feature>HTTP</Feature>\n              <Feature>HTTPV2</Feature>\n              <Feature>TollFree</Feature>\n            </Features>\n        </Product>\n        <Product>\n            <Name>NumberManagement</Name>\n            <Features>\n              <Feature>ORDERING</Feature>\n              <Feature>LNP</Feature>\n              <Feature>EXTERNAL_TNS</Feature>\n              <Feature>PROTECTED_TNS</Feature>\n              <Feature>TN_ASSIGNMENT</Feature>\n              <Feature>RESERVATION</Feature>\n              <Feature>LSR</Feature>\n            </Features>\n        </Product>\n    </Products>\n</AccountProductsResponse>\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/{productName}": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Discover whether product is currently enabled on the account",
        "operationId": "GetAccountProduct",
        "summary": "Check product on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "productName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountProductResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/e911/settings": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve the current host and EVS credentials settings that are used only for e911 traffic. This includes host details, EVS account ID information (including accounts where the Dashboard ID differs from the EVS ID), and the EVS route type",
        "operationId": "GetAccountE911ProductSettings",
        "summary": "Retrieve e911 product settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/E911SettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <E911SettingsResponse>\n    <E911Settings>\n      <Hosts>\n        <Host>\n          <HostName>12.34.56.78</HostName>\n          <Port>0</Port>\n        </Host>\n      </Hosts>\n      <EVSCredentials>\n        <EVSCredential>\n           <EVSAccountId>1234567</EVSAccountId>\n           <RouteType>STANDARD</RouteType>\n        </EVSCredential>\n        <EVSCredential>\n           <EVSAccountId>6123619</EVSAccountId>\n           <RouteType>AEUI</RouteType>\n        </EVSCredential>\n      </EVSCredentials>\n    </E911Settings>\n  </E911SettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/edgemanagement/settings": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve settings that are provided as part of the Edge Management product: The SBC settings that are associated with the account, SipAuthentication that provide settings for SIP authentication and ProductSpecificAccessRestrictions that can restrict Termination traffic for sipCredendital.",
        "operationId": "GetAccountEdgemanagementProductSettings",
        "summary": "Retrieve edgemanagement product settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EdgeManagementSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <EdgeManagementSettings>\n  <SbcSettings>\n    <TrunkGroupId>Trunkgroupidfortheaccounttraffic</TrunkGroupId>\n    <NodeGroupName>East Coast 01</NodeGroupName>\n  </SbcSettings>\n  <SipAuthentication>\n    <Enabled>true/false</Enabled>\n    <Status>COMPLETE/FAILED/PROCESSING</Status>\n    <Errors>\n      <Error>\n        <Code>26001</Code>\n        <Description>TGA database is not reachable.</Description>\n      </Error>\n      <Error>\n        <Code>27002</Code>\n        <Description>Amazon route 53 is not reachable.</Description>\n      </Error>\n    </Errors>\n  </SipAuthentication>\n  <ProductSpecificAccessRestrictions>\n    <AccessRestriction>\n      <RestrictedProduct>Termination</RestrictedProduct>\n      <RestrictedAccessTypes>\n        <RestrictedAccessType>SipCredentials</RestrictedAccessType>\n      </RestrictedAccessTypes>\n    </AccessRestriction>\n  </ProductSpecificAccessRestrictions>\n</EdgeManagementSettings>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/edgemanagement/settings/sipauthentication": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve existing SIP authentication configuration on account.",
        "operationId": "GetAccountEdgemanagementProductSettingsSipauthentication",
        "summary": "Retrieve sipauthentication settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipAuthenticationResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipAuthenticationResponse>\n    <SipAuthentication>\n        <SBC>\n            <Zone>\n                <Id>1</Id>\n                <Name>CUST27_10000105_ZONE</Name>\n                <SipSigPort>\n                    <Index>1</Index>\n                    <PortNumber>1</PortNumber>\n                </SipSigPort>\n            </Zone>\n        </SBC>\n        <RealmDnsList>\n            <RealmDns>\n                <Realm>cust27.auth.bandwidth.com</Realm>\n                <DefaultGroupName>10000105_27</DefaultGroupName>\n                <DNSRecords>\n                    <DNSRecord>\n                        <Type>A</Type>\n                        <Name>cust27.auth.bandwidth.com</Name>\n                        <Data>235.152.100.100</Data>\n                        <TTL>300</TTL>\n                    </DNSRecord>\n                    <DNSRecord>\n                        <Type>A</Type>\n                        <Name>cust27.auth.bandwidth.com</Name>\n                        <Data>235.152.100.200</Data>\n                        <TTL>300</TTL>\n                    </DNSRecord>\n                    <DNSRecord>\n                        <Type>SRV</Type>\n                        <Name>_sip._udp.cust27.auth.bandwidth.com</Name>\n                        <Data>5 50 5000 test.host1</Data>\n                        <TTL>300</TTL>\n                    </DNSRecord>\n                    <DNSRecord>\n                        <Type>SRV</Type>\n                        <Name>_sip._udp.cust27.auth.bandwidth.com</Name>\n                        <Data>5 50 5000 test.host2</Data>\n                        <TTL>300</TTL>\n                    </DNSRecord>\n                </DNSRecords>\n            </RealmDns>\n        </RealmDnsList>\n    </SipAuthentication>\n</SipAuthenticationResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/a2pCampaigns": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve existing a2pCampaigns configuration on account.",
        "operationId": "GetAccountMessagingProductA2pCampaings",
        "summary": "Retrieve a2pCampaigns settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingA2pCampaignsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MessagingA2pCampaignsResponse>\n    <MessagingA2pCampaigns>\n        <MessagingA2pCampaign>\n            <CampaignId>C3der</CampaignId>\n            <Description>test</Description>\n            <AccountId>1234567</AccountId>\n            <MessageClass>Campaign-A</MessageClass>\n            <Imported>true</Imported>\n            <CreatedDate>2020-08-10T02:58:04.615Z</CreatedDate>\n            <Status>Active</Status>\n        </MessagingA2pCampaign>\n    </MessagingA2pCampaigns>\n</MessagingA2pCampaignsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/http": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve existing messaging http configuration on account.",
        "operationId": "GetAccountMessagingProductFeatureHttp",
        "summary": "Retrieve messaging http feature settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountHttpFeatureResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AccountHttpFeatureResponse>\n    <AccountHttpFeature>\n        <DefaultProxyPeerId>500031</DefaultProxyPeerId>\n    </AccountHttpFeature>\n</AccountHttpFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/mms": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve existing messaging mms configuration on account.",
        "operationId": "GetAccountMessagingProductFeatureMms",
        "summary": "Retrieve messaging mms feature settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMmsFeatureResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AccountMmsFeatureResponse>\n    <MmsFeature>\n        <MmsSettings>\n            <MM4Enabled>true</MM4Enabled>\n            <TollFreeMMSAllowed>true</TollFreeMMSAllowed>\n            <DefaultProvider>1</DefaultProvider>\n        </MmsSettings>\n        <MM4Settings>\n            <ConnValidWindow>5</ConnValidWindow>\n            <MaxConn>10</MaxConn>\n            <PersistentConn>false</PersistentConn>\n            <KeepAliveNoop>false</KeepAliveNoop>\n            <SkipAck>true</SkipAck>\n            <AllowMultiRecepient>false</AllowMultiRecepient>\n            <ConnMessageRatio>1.5</ConnMessageRatio>\n            <ConnSentTimeout>10</ConnSentTimeout>\n            <GenDlr>false</GenDlr>\n            <GenReadReply>false</GenReadReply>\n            <MaxMessagesInQueue>100</MaxMessagesInQueue>\n            <LoopAllowed>false</LoopAllowed>\n            <ForceAck>false</ForceAck>\n            <AsyncMessageFlowSupported>false</AsyncMessageFlowSupported>\n        </MM4Settings>\n    </MmsFeature>\n</AccountMmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/mms/mm4settings": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve existing messaging mm4settings configuration on account.",
        "operationId": "GetAccountMessagingProductFeatureMm4settings",
        "summary": "Retrieve messaging mms feature mm4 settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MmsFeatureMm4AdminSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MmsFeatureMm4AdminSettingsResponse>\n    <mm4Settings>\n        <ConnValidWindow>6</ConnValidWindow>\n        <MaxConn>11</MaxConn>\n        <PersistentConn>true</PersistentConn>\n        <KeepAliveNoop>true</KeepAliveNoop>\n        <SkipAck>true</SkipAck>\n        <AllowMultiRecepient>true</AllowMultiRecepient>\n        <ConnMessageRatio>2.5</ConnMessageRatio>\n        <ConnSentTimeout>11</ConnSentTimeout>\n        <GenDlr>true</GenDlr>\n        <GenReadReply>true</GenReadReply>\n        <MaxMessagesInQueue>101</MaxMessagesInQueue>\n        <LoopAllowed>true</LoopAllowed>\n        <ForceAck>true</ForceAck>\n        <AsyncMessageFlowSupported>false</AsyncMessageFlowSupported>\n    </mm4Settings>\n</MmsFeatureMm4AdminSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/mms/settings": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve existing messaging mms feature settings on account.",
        "operationId": "GetAccountMessagingProductFeatureMmsSettings",
        "summary": "Retrieve messaging mms feature settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMmsFeatureSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AccountMmsFeatureSettingsResponse>\n    <mmsSettings>\n        <MM4Enabled>true</MM4Enabled>\n        <TollFreeMMSAllowed>true</TollFreeMMSAllowed>\n        <DefaultProvider>1</DefaultProvider>\n    </mmsSettings>\n</AccountMmsFeatureSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/features/sms": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve existing messaging sms configuration on account.",
        "operationId": "GetAccountMessagingProductFeatureSms",
        "summary": "Retrieve messaging sms feature settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSmsFeatureResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AccountSmsFeatureResponse>\n    <AccountSmsFeature>\n        <AccountSmsFeatureSettings>\n            <TollFree>true</TollFree>\n            <ShortCode>true</ShortCode>\n            <Zone1>true</Zone1>\n            <Zone2>true</Zone2>\n            <Zone3>true</Zone3>\n            <Zone4>true</Zone4>\n            <Zone5>true</Zone5>\n            <SmppEnabled>true</SmppEnabled>\n            <DefaultProvider>0</DefaultProvider>\n        </AccountSmsFeatureSettings>\n        <SmppSettings>\n            <SmppUsername>testUser</SmppUsername>\n            <Password>secret</Password>\n            <Dlr>FINAL</Dlr>\n            <DlrCarrier>false</DlrCarrier>\n            <MaxPendingSubmits>100</MaxPendingSubmits>\n            <ForceTon>false</ForceTon>\n            <AllowThirdPartyTN>false</AllowThirdPartyTN>\n            <ConnectionTypeDefault>RECEIVER_ONLY</ConnectionTypeDefault>\n            <MaxConnections>5</MaxConnections>\n            <SrcTon>DEFAULT</SrcTon>\n            <SrcNpi>DEFAULT</SrcNpi>\n            <DstTon>DEFAULT</DstTon>\n            <DstNpi>DEFAULT</DstNpi>\n        </SmppSettings>\n    </AccountSmsFeature>\n</AccountSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/routes": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve the current list of routes associated with the various types of TNs that can be assigned messaging routes. Zero or more routes can be returned for each type of TN; each one of these routes is identified by an NNID, or an ESPID while we transition from ESPIDs to NNIDs.",
        "operationId": "GetAccountMessagingProductRoutes",
        "summary": "Retrieve messaging routes on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMessagingRoutesResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AccountMessagingRoutesResponse>\n    <MessagingRoutes>\n        <MessagingRoute>\n            <NNID>123456</NNID>\n            <TNType>ExternalCanadianTns</TNType>\n            <Default>true</Default>\n            <Details>\n                <NNRoute>\n                    <Nnid>123456</Nnid>\n                    <Espid>E830</Espid>\n                    <DeliveryNetwork>Bandwidth</DeliveryNetwork>\n                    <ProvisionerIds/>\n                </NNRoute>\n            </Details>\n        </MessagingRoute>\n        <MessagingRoute>\n            <NNID>123456</NNID>\n            <TNType>ExternalCustomerOwnedTns</TNType>\n            <Default>true</Default>\n            <Details>\n                <NNRoute>\n                    <Nnid>123456</Nnid>\n                    <Espid>E830</Espid>\n                    <DeliveryNetwork>Bandwidth</DeliveryNetwork>\n                    <ProvisionerIds/>\n                </NNRoute>\n            </Details>\n        </MessagingRoute>\n    </MessagingRoutes>\n</AccountMessagingRoutesResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/messaging/settings": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieve the current settings, indicating is Messaging product enabled now and if yes will Messaging feature be enabled on each new telephone number.",
        "operationId": "GetAccountMessagingProductSettings",
        "summary": "Retrieve messaging settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MessagingSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MessagingSettingsResponse>\n    <MessagingSettings>\n        <Enabled>true</Enabled>\n        <EnabledOnNewTN>true</EnabledOnNewTN>\n        <SupportedOnImportedTns>false</SupportedOnImportedTns>\n        <EnableOnNetMessageRoutes>true</EnableOnNetMessageRoutes>\n        <EnableOffNetMessageRoutes>false</EnableOffNetMessageRoutes>\n        <PreventUpdatingNetNumber>false</PreventUpdatingNetNumber>\n        <ProxyPeersOwner>true</ProxyPeersOwner>\n        <BreakOutCountries>\n            <Country>CAN</Country>\n            <Country>GBR</Country>\n        </BreakOutCountries>\n    </MessagingSettings>\n</MessagingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/termination/settings": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "Retrieve existing termination settings on account.",
        "operationId": "GetAccountTerminationProductSettings",
        "summary": "Retrieve termination settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TerminationSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TerminationSettingResponse>\n    <TerminationSettings>\n        <RogerUsedForTerminationSettings>false</RogerUsedForTerminationSettings>\n        <LegacyTerminationSettings>\n            <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>\n            <CpsQueue>300</CpsQueue>\n            <ConcurrentOutboundCalls>15</ConcurrentOutboundCalls>\n            <ConcurrentBidirectionalCalls>0</ConcurrentBidirectionalCalls>\n            <BillingType>DNIS</BillingType>\n            <RateType>npanxx</RateType>\n            <DiscountPercentage>29</DiscountPercentage>\n            <GuaranteedTermination>false</GuaranteedTermination>\n        </LegacyTerminationSettings>\n        <RogerTerminationSettings/>\n    </TerminationSettings>\n    <!-- For Full Termination -->\n    <TerminationSettings>\n        <RogerUsedForTerminationSettings>true</RogerUsedForTerminationSettings>\n        <HttpVoiceProxyTermHost>[Host IP address]</HttpVoiceProxyTermHost>\n        <RogerTerminationSettings>\n            <SubnetAddressingAllowed>true</SubnetAddressingAllowed>\n        </RogerTerminationSettings>\n    </TerminationSettings>\n</TerminationSettingResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/tollfree/settings": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "Retrieve existing tollfree settings on account.",
        "operationId": "GetAccountTollFreeProductSettings",
        "summary": "Retrieve tollfree settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TollFreeSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreeSettingsResponse>\n    <TollFreeSettings>\n        <RespOrgException>true</RespOrgException>\n        <RespOrgIdList>\n            <RespOrgId>SFD01</RespOrgId>\n            <RespOrgId>WER01</RespOrgId>\n            <RespOrgId>WER02</RespOrgId>\n            <RespOrgId>XMD01</RespOrgId>\n            <RespOrgId>PIU02</RespOrgId>\n        </RespOrgIdList>\n        <TargetBandwidthRespOrgId>JYT50</TargetBandwidthRespOrgId>\n    </TollFreeSettings>\n</TollFreeSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/uctrunking/settings": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "Retrieve existing uctrunking settings on account.",
        "operationId": "GetAccountUcTrunkingProductSettings",
        "summary": "Retrieve uctrunking settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UcTrunkingSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingSettingsResponse>\n    <UcTrunkingSettings>\n        <PartnerType>AGENT</PartnerType>\n        <MaxUcTrunks>40</MaxUcTrunks>\n        <BillingType>DNIS</BillingType>\n        <CustomerTrafficAllowed>ALL</CustomerTrafficAllowed>\n        <UsageCategory>UC500</UsageCategory>\n        <TrunkAllocationRules>\n            <TrunkAllocationRule>\n                <LowerBound>1</LowerBound>\n                <Ratio>1</Ratio>\n            </TrunkAllocationRule>\n            <TrunkAllocationRule>\n                <LowerBound>10</LowerBound>\n                <Ratio>2</Ratio>\n            </TrunkAllocationRule>\n            <TrunkAllocationRule>\n                <LowerBound>15</LowerBound>\n                <Ratio>5</Ratio>\n            </TrunkAllocationRule>\n        </TrunkAllocationRules>\n    </UcTrunkingSettings>\n</UcTrunkingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/uctrunking/features/hosted/settings": {
      "get": {
        "tags": [
          "/accounts"
        ],
        "description": "Retrieve existing uctrunking hosted settings on account.",
        "operationId": "GetAccountUcTrunkingHostedFeatureSettings",
        "summary": "Retrieve uctrunking hosted feature settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UcTrunkingCloudSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettingsResponse>\n    <UcTrunkingCloudSettings>\n        <BiDirectionalTrunks>200</BiDirectionalTrunks>\n    </UcTrunkingCloudSettings>\n</UcTrunkingCloudSettingsResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if UcTrunking product has not been configured on account",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettingsResponse>\n   <ResponseStatus>\n      <ErrorCode>12034</ErrorCode>\n      <Description>UcTrunking product has not been configured</Description>\n   </ResponseStatus>\n</UcTrunkingCloudSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "/accounts"
        ],
        "description": "Creates a UC Trunking hosted (cloud) configuration.",
        "operationId": "CreateAccountUcTrunkingHostedSettings",
        "summary": "Create uctrunking hosted feature settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettings>\n    <BiDirectionalTrunks>200</BiDirectionalTrunks>\n</UcTrunkingCloudSettings>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/UcTrunkingCloudSettingsPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UcTrunkingCloudSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettingsResponse>\n    <UcTrunkingCloudSettings>\n        <BiDirectionalTrunks>200</BiDirectionalTrunks>\n    </UcTrunkingCloudSettings>\n</UcTrunkingCloudSettingsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The supplied value is more than the allowed max value",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettingsResponse>\n   <ResponseStatus>\n      <ErrorCode>12609</ErrorCode>\n      <Description>The supplied value of 201 is more than the allowed max value of 200</Description>\n   </ResponseStatus>\n</UcTrunkingCloudSettingsResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if UcTrunking product has not been configured on account",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettingsResponse>\n   <ResponseStatus>\n      <ErrorCode>12034</ErrorCode>\n      <Description>UcTrunking product has not been configured</Description>\n   </ResponseStatus>\n</UcTrunkingCloudSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "/accounts"
        ],
        "description": "Updates uctrunking hosted feature settings on account.",
        "operationId": "UpdateAccountUcTrunkingHostedSettings",
        "summary": "Update uctrunking hosted feature settings on account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "description": "example",
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettings>\n    <BiDirectionalTrunks>200</BiDirectionalTrunks>\n</UcTrunkingCloudSettings>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/UcTrunkingCloudSettingsPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UcTrunkingCloudSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettingsResponse>\n    <UcTrunkingCloudSettings>\n        <BiDirectionalTrunks>200</BiDirectionalTrunks>\n    </UcTrunkingCloudSettings>\n</UcTrunkingCloudSettingsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The supplied value is more than the allowed max value",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettingsResponse>\n   <ResponseStatus>\n      <ErrorCode>12609</ErrorCode>\n      <Description>The supplied value of 201 is more than the allowed max value of 200</Description>\n   </ResponseStatus>\n</UcTrunkingCloudSettingsResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if UcTrunking product has not been configured on account",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<UcTrunkingCloudSettingsResponse>\n   <ResponseStatus>\n      <ErrorCode>12034</ErrorCode>\n      <Description>UcTrunking product has not been configured</Description>\n   </ResponseStatus>\n</UcTrunkingCloudSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/realms": {
      "get": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Retrieve all Realms for the account",
        "operationId": "RetrieveRealms",
        "summary": "List Realms",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "realmfragment",
            "description": "The realm fragment",
            "in": "query",
            "required": false,
            "schema": {
              "minLength": 3,
              "type": "string"
            },
            "example": "myrealm"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the Realms retrieval request will return a list of the Realms that are created on this account",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmsResponse>\n   <Realms>\n      <Realm>\n         <Id>22</Id>\n         <Realm>myrealm123.abc123.auth.bandwidth.com</Realm>\n         <Default>true</Default>\n         <Description>Test Realm 123</Description>\n         <SipCredentialCount>3</SipCredentialCount>\n         <Status>ACTIVE</Status>\n      </Realm>\n      <Realm>\n         <Id>31</Id>\n         <Realm>myrealm234.abc123.auth.bandwidth.com</Realm>\n         <Default>false</Default>\n         <Description>Test Realm 234</Description>\n         <SipCredentialCount>6</SipCredentialCount>\n         <Status>ACTIVE</Status>\n      </Realm>\n   </Realms>\n</RealmsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - realmfragment should contain at least 3 characters",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmsResponse>\n   <ResponseStatus>\n      <ErrorCode>33011</ErrorCode>\n      <Description>realmfragment should contain at least 3 characters.</Description>\n   </ResponseStatus>\n</RealmsResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked this will result in a not found",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmsResponse>\n   <ResponseStatus>\n      <ErrorCode>4022</ErrorCode>\n      <Description>Account '2' does not exist or is locked</Description>\n   </ResponseStatus>\n</RealmsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Create a Realm",
        "operationId": "CreateRealm",
        "summary": "Create Realm",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealmCreateRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Realm>\n   <Realm>realm123</Realm>\n   <Description>This is realm #123</Description>\n   <Default>true</Default>\n</Realm>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK - the Realm was successfully created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmResponse>\n   <Realm>\n      <Id>22</Id>\n      <Realm>realm123.abc123.auth.bandwidth.com</Realm>\n      <Description>This is realm #123</Description>\n      <Default>true</Default>\n      <SipCredentialCount>0</SipCredentialCount>\n      <Status>CREATE_PENDING</Status>\n   </Realm>\n</RealmResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - the Realm was not created",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <ErrorCode>33003</ErrorCode>\n      <Description>Realm 'realmmmmmmmmmmmmmmmmmmmmmmmmmmm' is too long (30 characters max)</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <Description>Service is Unavailable</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/realms/{realm}": {
      "get": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Retrieve a Realm associated with the account",
        "operationId": "RetrieveRealm",
        "summary": "Retrieve Realm",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "realm",
            "description": "Name or ID of the realm to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "22"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - will return full information about a Realm on this account",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealmResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmResponse>\n   <Realm>\n      <Id>22</Id>\n      <Realm>realm123.abc123.auth.bandwidth.com</Realm>\n      <Description>This is realm #123</Description>\n      <Default>false</Default>\n      <SipCredentialCount>15</SipCredentialCount>\n      <Status>ACTIVE</Status>\n   </Realm>\n</RealmResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist, is locked or there is no Realm, it will result in a not found",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <Description>The resource does not exist</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <Description>Service is Unavailable</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Update a Realm",
        "operationId": "UpdateRealm",
        "summary": "Update Realm",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "realm",
            "description": "Name or ID of the realm to update",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "22"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RealmUpdateRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Realm>\n   <Default>true</Default>\n   <Description>This is realm has been updated.</Description>\n</Realm>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - the Realm was successfully updated",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RealmResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmResponse>\n   <Realm>\n      <Id>22</Id>\n      <Realm>realm123.abc123.auth.bandwidth.com</Realm>\n      <Default>true</Default>\n      <Description>This is realm has been updated.</Description>\n      <SipCredentialCount>0</SipCredentialCount>\n      <Status>ACTIVE</Status>\n   </Realm>\n</RealmResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - cannot update Realm value",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <ErrorCode>33005</ErrorCode>\n      <Description>Cannot update Realm value. Instead, you must delete and recreate it.</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <Description>Service is Unavailable</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Delete a Realm",
        "operationId": "DeleteRealm",
        "summary": "Delete Realm",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "realm",
            "description": "Name and ID of the realm to delete",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "22"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - the Realm is pending deletion"
          },
          "400": {
            "description": "Bad Request - the Realm could not be deleted. Cannot delete default realm",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <ErrorCode>33006</ErrorCode>\n      <Description>Cannot delete default Realm. Please assign a new Realm to be the default.</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - the Realm was not found on the account",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <ErrorCode>33001</ErrorCode>\n      <Description>Realm 'realmxyz' was not found</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <Description>Service is Unavailable</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/realms/{realmId}/sipcredentials": {
      "get": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Retrieve all SIP credentials for the account ID and realm ID specified",
        "operationId": "ListSipCredentialsOnRealm",
        "summary": "List SIP Credentials On Realm",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "realmId",
            "description": "ID of Realm to retrieve all SIP Credentials",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "22"
          },
          {
            "name": "page",
            "description": "An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested. It can be an index of SIP credential or a combination of user name and domain in form {userName}@{domain}. The initial page is tagged with the ID '1'",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "3, user321@bw.com"
          },
          {
            "name": "size",
            "description": "The number of items to include in a page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500
            },
            "example": 5000
          },
          {
            "name": "userNamefragment",
            "description": "The user name fragment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 3
            },
            "example": "user32"
          },
          {
            "name": "applicationNameFragment",
            "description": "The application name fragment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 3
            },
            "example": "myapp"
          },
          {
            "name": "realmFragment",
            "description": "The realm fragment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 3
            },
            "example": "myrealm"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the SIP credentials retrieval request will return a list of the SIP credentials that are created on this account",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSipCredentials"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialsResponse>\n   <Links>\n      <first>Link=&lt;http://dashboard.bandwidth.com/iris/accounts/14/realms/3/sipcredentials?size=500&amp;page=1&gt;;rel=\"first\";</first>\n   </Links>\n   <SipCredentials>\n      <SipCredential>\n         <Id>11</Id>\n         <RealmId>3</RealmId>\n         <UserName>John@bw.com</UserName>\n         <Hash1>1g32gadgs433dd4</Hash1>\n         <Hash1b>1g32gadgs433d24</Hash1b>\n         <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n         <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n      </SipCredential>\n      <SipCredential>\n         <Id>45</Id>\n         <RealmId>3</RealmId>\n         <UserName>Mathew@bw.com</UserName>\n         <Hash1>43543gggs43g324</Hash1>\n         <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n         <HttpVoiceV2AppId>7a1626ea-6a3e-11eb-9439-0242ac130002</HttpVoiceV2AppId>\n      </SipCredential>\n   </SipCredentials>\n</SipCredentialsResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or there are no SIP credentials associated with specified account it will result in a not found",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialsResponse>\n   <ResponseStatus>\n      <ErrorCode>23008</ErrorCode>\n      <Description>There are no Sip credentials associated with the account with ID = 41</Description>\n   </ResponseStatus>\n</SipCredentialsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Create SIP credentials on the Realm",
        "operationId": "CreateSipCredentialsOnRealm",
        "summary": "Create SIP Credentials On Realm",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "realmId",
            "description": "ID of Realm to create SIP Credentials",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "22"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountSipCredentialsRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentials>\n   <SipCredential>\n      <UserName>John@bw.com</UserName>\n      <Hash1>1g32gadgs433dd4</Hash1>\n      <Hash1b>1g32gadgs433d24</Hash1b>\n      <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n   </SipCredential>\n   <SipCredential>\n      <UserName>Mathew@bw.com</UserName>\n      <Hash1>43543gggs43g324</Hash1>\n      <Hash1b>1g32gadgs433a34</Hash1b>\n      <HttpVoiceV2AppId>7a1626ea-6a3e-11eb-9439-0242ac130002</HttpVoiceV2AppId>\n   </SipCredential>\n</SipCredentials>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - If there was at least one valid credential entry in specified list then such response will be returned",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipCredentialsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialsResponse>\n   <Errors>\n      <Error>\n         <ErrorCode>1003</ErrorCode>\n         <Description>UserName is required</Description>\n         <SipCredential>\n            <Hash1>1g32gadgs433dd4</Hash1>\n            <Hash1b>1g32gadgs433d24</Hash1b>\n            <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n   </Errors>\n   <ValidSipCredentials>\n      <SipCredential>\n         <Id>39</Id>\n         <RealmId>4</RealmId>\n         <UserName>Bill@bw.com</UserName>\n         <Hash1>43543gggs43g324</Hash1>\n         <Hash1b>4562gadgs433454</Hash1b>\n         <Realm>realm2.abc123.auth.bandwidth.com</Realm>\n         <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n      </SipCredential>\n      <SipCredential>\n         <Id>40</Id>\n         <RealmId>4</RealmId>\n         <UserName>Jane@bw.com</UserName>\n         <Hash1>af7b8bd23a2b65b</Hash1>\n         <Hash1b>af7b8bd23a2b65c</Hash1b>\n         <Realm>realm2.abc123.auth.bandwidth.com</Realm>\n         <HttpVoiceV2AppId>7a1626ea-6a3e-11eb-9439-0242ac130002</HttpVoiceV2AppId>\n      </SipCredential>\n   </ValidSipCredentials>\n</SipCredentialsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - If all credential entries in specified list are invalid it will result in bad request with list of errors",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialsResponse>\n   <ResponseStatus>\n      <Description>Please check your input parameters.</Description>\n   </ResponseStatus>\n   <Errors>\n      <Error>\n         <ErrorCode>1003</ErrorCode>\n         <Description>UserName is required</Description>\n         <SipCredential>\n            <Hash1>1g32gadgs433dd4</Hash1>\n            <Hash1b>1g32gadgs433d24</Hash1b>\n            <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n      <Error>\n         <ErrorCode>23026</ErrorCode>\n         <Description>Sip credential Bill@bw.com does already exist on realm with ID = 3 and account with ID = 41</Description>\n         <SipCredential>\n            <UserName>Bill@bw.com</UserName>\n            <Hash1>43543gggs43g324</Hash1>\n            <Hash1b>4562gadgs433454</Hash1b>\n            <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n      <Error>\n         <ErrorCode>23018</ErrorCode>\n         <Description>Realm 'realm2.abc123.auth.bandwidth.com' does not correspond to the realm with ID = 3. Please remove this field from the Sip credential body.</Description>\n         <SipCredential>\n            <UserName>Jane@bw.com</UserName>\n            <Hash1>af7b8bd23a2b65b</Hash1>\n            <Hash1b>af7b8bd23a2b65c</Hash1b>\n            <Realm>realm2.abc123.auth.bandwidth.com</Realm>\n            <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n      <Error>\n         <ErrorCode>23019</ErrorCode>\n         <Description>Application with ID 7a1626ea-6a3e-11eb-9439-0242ac130002 was not found on the account with ID = 41</Description>\n         <SipCredential>\n            <UserName>Abe@bw.com</UserName>\n            <Hash1>9a1ee5b3fa64ba0</Hash1>\n            <Hash1b>279de633c5f7aff</Hash1b>\n            <HttpVoiceV2AppId>7a1626ea-6a3e-11eb-9439-0242ac130002</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n   </Errors>\n</SipCredentialsResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <Description>Service is Unavailable</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/realms/{realmId}/sipcredentials/{credentialId}": {
      "get": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Retrieve a SIP credential for the account and realm specified by its assigned ID",
        "operationId": "RetrieveSipCredentialOnRealm",
        "summary": "Retrieve SIP Credential On Realm",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "realmId",
            "description": "Realm's ID of SIP Credential",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "22"
          },
          {
            "name": "credentialId",
            "description": "ID of SIP Credential to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "11"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - will return full information about the SIP credential on this account for the specified ID",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipCredentialResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <SipCredential>\n      <Id>11</Id>\n      <RealmId>3</RealmId>\n      <UserName>John@bw.com</UserName>\n      <Hash1>1g32gadgs433dd4</Hash1>\n      <Hash1b>1g32gadgs433d24</Hash1b>\n      <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n      <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n   </SipCredential>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or if there is no SIP credential that corresponds to the specified Id it will result in a not found",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <ResponseStatus>\n      <ErrorCode>23025</ErrorCode>\n      <Description>Sip credential with ID 42 was not found on realm with ID = 5 and account with ID = 41</Description>\n   </ResponseStatus>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Update single SIP credential on the Realm",
        "operationId": "UpdateSipCredentialOnRealm",
        "summary": "Update SIP Credential On Realm",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "realmId",
            "description": "Realm's ID of SIP Credential",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "22"
          },
          {
            "name": "credentialId",
            "description": "ID of SIP Credential to update",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "11"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipCredentialUpdateRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredential>\n   <Hash1>1g32gadgs433dd4</Hash1>\n   <Hash1b>1g32gadgs433d24</Hash1b>\n   <RealmId>3</RealmId>\n   <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n</SipCredential>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - the SIP credential was successfully updated",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipCredentialResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <SipCredential>\n      <Id>451</Id>\n      <RealmId>3</RealmId>\n      <UserName>Mathew@bw.com</UserName>\n      <Hash1>43533gggs43g324</Hash1>\n      <Hash1b>4562gadgs423454</Hash1b>\n      <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n      <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n   </SipCredential>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - the SIP credential was not updated",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <ResponseStatus>\n      <ErrorCode>23004</ErrorCode>\n      <Description>Unable to change the UserName associated with the Hash Values. To do so requires deletion of one set of credentials and addition of a new set of credentials.</Description>\n   </ResponseStatus>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - the SIP credential was not found on the account for the specified ID",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <ResponseStatus>\n      <ErrorCode>23025</ErrorCode>\n      <Description>Sip credential with ID 11 was not found on realm with ID = 5 and account with ID = 41</Description>\n   </ResponseStatus>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <Description>Service is Unavailable</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Delete SIP credential on the Realm",
        "operationId": "DeleteSipCredentialOnRealm",
        "summary": "Delete SIP Credential On Realm",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "realmId",
            "description": "Realm's ID of SIP Credential",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "22"
          },
          {
            "name": "credentialId",
            "description": "ID of SIP Credential to delete",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "11"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the SIP credential was deleted successfully"
          },
          "404": {
            "description": "Not Found - the SIP credential was not found on the account for the specified ID",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <ResponseStatus>\n      <ErrorCode>23025</ErrorCode>\n      <Description>Sip credential with ID 14 was not found on realm with ID = 2 and account with ID = 41</Description>\n   </ResponseStatus>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RealmResponse>\n   <ResponseStatus>\n      <Description>Service is Unavailable</Description>\n   </ResponseStatus>\n</RealmResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/removeImportedTnOrders": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the Remove Imported Tn Orders requests for the given account ID.\nA maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter as required is provided, the order results will be limited to the last two years.",
        "summary": "List Remove Imported Tn Orders",
        "operationId": "ListRemoveImportedTnOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The status of the Remove Imported Tn Orders being searched for",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PROCESSING",
                  "COMPLETE",
                  "PARTIAL",
                  "FAILED"
                ]
              }
            },
            "example": "PARTIAL"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "customerOrderId",
            "description": "The Customer Order Id is an Id assigned by the account owner to provide a reference number for the Remove Imported Tn Order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-04-19"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-04-19"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find Remove Imported Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-04-19"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find Remove Imported Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-04-19"
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the Remove Imported Tn Orders query provides information about the orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully removed Telephone Numbers, and descriptions of any encountered errors",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveImportedTnOrders"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedTnOrders>\n   <TotalCount>2</TotalCount>\n   <RemoveImportedTnOrderSummary>\n      <accountId>14</accountId>\n      <CountOfTNs>1</CountOfTNs>\n      <CustomerOrderId>DemoOrder</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2019-01-24T10:40:12.908Z</lastModifiedDate>\n      <OrderDate>2019-01-24T10:40:12.907Z</OrderDate>\n      <OrderType>remove_imported_tn_orders</OrderType>\n      <OrderStatus>COMPLETE</OrderStatus>\n      <OrderId>4f2d090b-ece7-49ab-9c40-06d1425c39c3</OrderId>\n   </RemoveImportedTnOrderSummary>\n   <RemoveImportedTnOrderSummary>\n      <accountId>14</accountId>\n      <CountOfTNs>1</CountOfTNs>\n      <CustomerOrderId>DemoOrder</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2019-01-24T09:38:24.028Z</lastModifiedDate>\n      <OrderDate>2019-01-24T09:38:24.028Z</OrderDate>\n      <OrderType>remove_imported_tn_orders</OrderType>\n      <OrderStatus>PARTIAL</OrderStatus>\n      <OrderId>ca30ea6a-018a-4cae-9d49-3d419fefdbe3</OrderId>\n   </RemoveImportedTnOrderSummary>\n</RemoveImportedTnOrders>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Import Tn"
        ],
        "description": "Creates a Remove Imported Tn Orders request to remove imported telephone numbers from the given site ID and sippeer ID as specified in the body. A successfully submitted order will have a status of \"PROCESSING\". A successfully completed order will have a status of \"COMPLETE\" if all of the telephone numbers were successfully removed and  \"PARTIAL\" if some of the telephone numbers were removed. A failed order with will have a status of \"FAILED\" and no telephone numbers would have been removed",
        "summary": "Create Remove Imported Tn Order",
        "operationId": "CreateRemoveImportedTnOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RemoveImportedTnOrderRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedTnOrder>\n   <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n   <TelephoneNumbers>\n      <TelephoneNumber>9199918388</TelephoneNumber>\n      <TelephoneNumber>4158714245</TelephoneNumber>\n      <TelephoneNumber>4352154439</TelephoneNumber>\n      <TelephoneNumber>4352154466</TelephoneNumber>\n   </TelephoneNumbers>\n</RemoveImportedTnOrder>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created and an order ID will be specified in the payload and in the header",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveImportedTnOrdersResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedTnOrdersResponse>\n   <RemoveImportedTnOrder>\n      <CustomerOrderId>SJM000001</CustomerOrderId>\n      <OrderCreateDate>2018-01-20T02:59:54.000Z</OrderCreateDate>\n      <AccountId>9900012</AccountId>\n      <CreatedByUser>smckinnon</CreatedByUser>\n      <OrderId>b05de7e6-0cab-4c83-81bb-9379cba8efd0</OrderId>\n      <LastModifiedDate>2018-01-20T02:59:54.000Z</LastModifiedDate>\n      <TelephoneNumbers>\n         <TelephoneNumber>9199918388</TelephoneNumber>\n         <TelephoneNumber>4158714245</TelephoneNumber>\n         <TelephoneNumber>4352154439</TelephoneNumber>\n         <TelephoneNumber>4352154466</TelephoneNumber>\n      </TelephoneNumbers>\n      <ProcessingStatus>PROCESSING</ProcessingStatus>\n      <Errors />\n   </RemoveImportedTnOrder>\n</RemoveImportedTnOrdersResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The order failed. One of the input parameters is invalid. The error text and an error code will be provided in the ErrorList element",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedTnOrdersResponse>\n   <ProcessingStatus>FAILED</ProcessingStatus>\n   <Errors>\n      <Code>1234</Code>\n      <Description>The customer order id is invalid.</Description>\n   </Errors>\n</RemoveImportedTnOrdersResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/removeImportedTnOrders/{orderId}": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieve information about a removeImportedTnOrder with specified ID",
        "summary": "Retrieve Remove Imported Tn Order",
        "operationId": "RetrieveRemoveImportedTnOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "ID of `RemoveImportedTnOrder` to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bf1305b8-8998-1111-2222-51ba3ce52d4e"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveImportedTnOrdersResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedTnOrder>\n   <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate>\n   <AccountId>9900012</AccountId>\n   <CreatedByUser>sjm</CreatedByUser>\n   <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId>\n   <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate>\n   <TelephoneNumbers>\n      <TelephoneNumber>2106078250</TelephoneNumber>\n      <TelephoneNumber>2109678273</TelephoneNumber>\n      <TelephoneNumber>2109678331</TelephoneNumber>\n      <TelephoneNumber>2109678337</TelephoneNumber>\n      <TelephoneNumber>2266401468</TelephoneNumber>\n   </TelephoneNumbers>\n   <ProcessingStatus>PARTIAL</ProcessingStatus>\n   <Errors>\n      <Error>\n         <Code>7518</Code>\n         <Description>Telephone Number Not Active.</Description>\n         <TelephoneNumbers>\n            <TelephoneNumber>2262665583</TelephoneNumber>\n         </TelephoneNumbers>\n      </Error>\n   </Errors>\n</RemoveImportedTnOrder>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Order id is not valid",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveImportedTnOrdersHistoryResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RemoveImportedTnOrdersReportResponse>\n   <ResponseStatus>\n      <ErrorCode>1008</ErrorCode>\n      <Description>'some_invalid_uuid' is not a valid UUID</Description>\n   </ResponseStatus>\n</RemoveImportedTnOrdersReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/removeImportedTnOrders/{orderId}/history": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the history of the specified Remove Imported Tn Order",
        "summary": "Retrieve Remove Imported Tn Order history",
        "operationId": "RetrieveRemoveImportedTnOrderHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "ID of `RemoveImportedTnOrder` to retrieve history",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bf1305b8-8998-1111-2222-51ba3ce52d4e"
          }
        ],
        "responses": {
          "200": {
            "description": "The history has been successfully retrieved and displayed in the payload",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderHistoryWrapper>\n   <OrderHistory>\n      <OrderDate>2015-06-16T14:03:10.225Z</OrderDate>\n      <Note>Remove Imported TN order is received.</Note>\n      <Author>admin</Author>\n      <Status>RECEIVED</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2015-06-16T14:03:10.330Z</OrderDate>\n      <Note>Remove Imported TN order is processing.</Note>\n      <Author>admin</Author>\n      <Status>PROCESSING</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2015-06-16T14:03:10.789Z</OrderDate>\n      <Note>Remove Imported TN order is partial.</Note>\n      <Author>admin</Author>\n      <Status>PARTIAL</Status>\n   </OrderHistory>\n</OrderHistoryWrapper>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Order id is not valid",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveImportedTnOrdersHistoryResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<RemoveImportedTnOrdersReportResponse>\n   <ResponseStatus>\n      <ErrorCode>1008</ErrorCode>\n      <Description>'some_invalid_uuid' is not a valid UUID</Description>\n   </ResponseStatus>\n</RemoveImportedTnOrdersReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/removeImportedTnOrders/voice": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the Remove Imported Voice Tn Orders requests for the given account ID.\nA maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter as required is provided, the order results will be limited to the last two years.",
        "summary": "List Remove Imported Voice Tn Orders",
        "operationId": "ListRemoveImportedVoiceTnOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/StatusQueryParam"
          },
          {
            "name": "tn",
            "description": "A Telephone Number (TN) that is referenced in the order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "customerOrderId",
            "description": "The Customer Order Id is an Id assigned by the account owner to provide a reference number for the Remove Imported Tn Order",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-04-19"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-04-19"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find Remove Imported Voice Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-04-19"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find Remove Imported Voice Tn Orders that were modified within the date range. It is in the form yyyy-MM-dd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2022-04-19"
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the Remove Imported Voice Tn Orders query provides information about the orders found by the query, including the data associated with the order, the state of the order, and a list of the successfully removed Telephone Numbers, and descriptions of any encountered errors",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveImportedVoiceTnOrders"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedVoiceTnOrders>\n   <TotalCount>2</TotalCount>\n   <RemoveImportedVoiceTnOrderSummary>\n      <accountId>14</accountId>\n      <CountOfTNs>1</CountOfTNs>\n      <CustomerOrderId>DemoOrder</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2019-01-24T10:40:12.908Z</lastModifiedDate>\n      <OrderDate>2019-01-24T10:40:12.907Z</OrderDate>\n      <OrderType>remove_imported_voice_tn_orders</OrderType>\n      <OrderStatus>COMPLETE</OrderStatus>\n      <OrderId>4f2d090b-ece7-49ab-9c40-06d1425c39c3</OrderId>\n   </RemoveImportedVoiceTnOrderSummary>\n   <RemoveImportedVoiceTnOrderSummary>\n      <accountId>14</accountId>\n      <CountOfTNs>1</CountOfTNs>\n      <CustomerOrderId>DemoOrder</CustomerOrderId>\n      <userId>systemUser</userId>\n      <lastModifiedDate>2019-01-24T09:38:24.028Z</lastModifiedDate>\n      <OrderDate>2019-01-24T09:38:24.028Z</OrderDate>\n      <OrderType>remove_imported_voice_tn_orders</OrderType>\n      <OrderStatus>PARTIAL</OrderStatus>\n      <OrderId>ca30ea6a-018a-4cae-9d49-3d419fefdbe3</OrderId>\n   </RemoveImportedVoiceTnOrderSummary>\n</RemoveImportedVoiceTnOrders>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Import Tn"
        ],
        "description": "Creates a Remove Imported Voice Tn Orders request to remove imported telephone numbers from the given site ID and sippeer ID as specified in the body. A successfully submitted order will have a status of \"PROCESSING\". A successfully completed order will have a status of \"COMPLETE\" if all of the telephone numbers were successfully removed and  \"PARTIAL\" if some of the telephone numbers were removed. A failed order with will have a status of \"FAILED\" and no telephone numbers would have been removed",
        "summary": "Create Remove Imported Voice Tn Order",
        "operationId": "CreateRemoveImportedVoiceTnOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RemoveImportedVoiceTnOrderRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedVoiceTnOrder>\n   <CustomerOrderId>ICPA123ABC</CustomerOrderId>\n   <TelephoneNumbers>\n      <TelephoneNumber>9199918388</TelephoneNumber>\n      <TelephoneNumber>4158714245</TelephoneNumber>\n      <TelephoneNumber>4352154439</TelephoneNumber>\n      <TelephoneNumber>4352154466</TelephoneNumber>\n   </TelephoneNumbers>\n</RemoveImportedVoiceTnOrder>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order has been created and an order ID will be specified in the payload and in the header",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveImportedVoiceTnOrderResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedVoiceTnOrderResponse>\n   <RemoveImportedVoiceTnOrder>\n      <CustomerOrderId>SJM000001</CustomerOrderId>\n      <OrderCreateDate>2018-01-20T02:59:54.000Z</OrderCreateDate>\n      <AccountId>9900012</AccountId>\n      <CreatedByUser>smckinnon</CreatedByUser>\n      <OrderId>b05de7e6-0cab-4c83-81bb-9379cba8efd0</OrderId>\n      <LastModifiedDate>2018-01-20T02:59:54.000Z</LastModifiedDate>\n      <TelephoneNumbers>\n         <TelephoneNumber>9199918388</TelephoneNumber>\n         <TelephoneNumber>4158714245</TelephoneNumber>\n         <TelephoneNumber>4352154439</TelephoneNumber>\n         <TelephoneNumber>4352154466</TelephoneNumber>\n      </TelephoneNumbers>\n      <ProcessingStatus>PROCESSING</ProcessingStatus>\n      <Errors />\n   </RemoveImportedVoiceTnOrder>\n</RemoveImportedVoiceTnOrderResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The order failed. One of the input parameters is invalid. The error text and an error code will be provided in the ErrorList element. <table cellspacing=\"0\" cellpadding=\"0\" width=\"624\">\n        <tbody>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        <strong>ErrorCode</strong>\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p>\n                        <strong>Description</strong>\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        25010\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        The account does not have permission to use the endpoint requested, please contact support if you believe you should have permission.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5052\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        Customer order ID is invalid. Only alphanumeric values, dashes and spaces are allowed. Max length is 255 characters.\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5073\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        Telephone number is required.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5095\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        The count of telephone numbers in order exceeds the maximum size of 5000.\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        1003\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        TelephoneNumbers is required.\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5070\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        Telephone number is invalid.\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5093\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p align=\"left\">\n                        Order cannot contain duplicate telephone numbers.\n                </td>\n            </tr>            \n        </tbody>\n    </table>\n\n",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedVoiceTnOrderResponse>\n   <ProcessingStatus>FAILED</ProcessingStatus>\n   <Errors>\n      <Code>1234</Code>\n      <Description>The customer order id is invalid.</Description>\n   </Errors>\n</RemoveImportedVoiceTnOrderResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/removeImportedTnOrders/voice/{orderId}": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieve information about a removeImportedVoiceTnOrder with specified ID",
        "summary": "Retrieve Remove Imported Voice Tn Order",
        "operationId": "RetrieveRemoveImportedVoiceTnOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload. <table cellspacing=\"0\" cellpadding=\"0\" width=\"624\">\n        <tbody>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        <strong>ErrorCode</strong>\n                    </p>\n                </td>\n                <td valign=\"top\">\n                    <p>\n                        <strong>Description</strong>\n                    </p>\n                </td>\n            </tr>\n            <tr>\n                <td valign=\"top\">\n                    <p>\n                        5158\n                    </p>\n                </td>\n                <td valign=\"left\">\n                    <p align=\"\">\n                        Telephone number hasn't been previously imported.\n                    </p>\n                </td>\n            </tr>           \n        </tbody>\n    </table>\n",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveImportedVoiceTnOrderResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<RemoveImportedVoiceTnOrder>\n   <OrderCreateDate>2018-01-09T02:58:04.615Z</OrderCreateDate>\n   <AccountId>9900012</AccountId>\n   <CreatedByUser>sjm</CreatedByUser>\n   <OrderId>bf1305b8-8998-1111-2222-51ba3ce52d4e</OrderId>\n   <LastModifiedDate>2018-01-09T02:58:05.298Z</LastModifiedDate>\n   <TelephoneNumbers>\n      <TelephoneNumber>2106078250</TelephoneNumber>\n      <TelephoneNumber>2109678273</TelephoneNumber>\n      <TelephoneNumber>2109678331</TelephoneNumber>\n      <TelephoneNumber>2109678337</TelephoneNumber>\n      <TelephoneNumber>2266401468</TelephoneNumber>\n   </TelephoneNumbers>\n   <ProcessingStatus>PARTIAL</ProcessingStatus>\n   <Errors>\n      <Error>\n         <Code>7518</Code>\n         <Description>Telephone Number Not Active.</Description>\n         <TelephoneNumbers>\n            <TelephoneNumber>2262665583</TelephoneNumber>\n         </TelephoneNumbers>\n      </Error>\n   </Errors>\n</RemoveImportedVoiceTnOrder>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/removeImportedTnOrders/voice/{orderId}/history": {
      "get": {
        "tags": [
          "Import Tn"
        ],
        "description": "Retrieves the history of the specified Remove Imported Voice Tn Order",
        "summary": "Retrieve Remove Imported Voice Tn Order history",
        "operationId": "RetrieveRemoveImportedVoiceTnOrderHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The history has been successfully retrieved and displayed in the payload",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderHistoryWrapper>\n   <OrderHistory>\n      <OrderDate>2015-06-16T14:03:10.225Z</OrderDate>\n      <Note>Remove Imported Voice TN order is received.</Note>\n      <Author>admin</Author>\n      <Status>RECEIVED</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2015-06-16T14:03:10.330Z</OrderDate>\n      <Note>Remove Imported TN order is processing.</Note>\n      <Author>admin</Author>\n      <Status>PROCESSING</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2015-06-16T14:03:10.789Z</OrderDate>\n      <Note>Remove Imported Voice TN order is partial.</Note>\n      <Author>admin</Author>\n      <Status>PARTIAL</Status>\n   </OrderHistory>\n</OrderHistoryWrapper>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "Retrieves a list of the report templates available for use within the Bandwidth Dashboard API. This list contains the basic description of the reports, including a report ID that can be used to access further details about the report, and thus facilitating the subsequent choice and creation of an instance of the report. Items of this list are sorted by display priority in ascending order and alphabetically by name within priority groups (display priority is displayed only for admin endpoint)",
        "summary": "List Reports",
        "operationId": "ListReports",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportsResponse>\n   <Reports>\n      <Report>\n         <Name>Sample Report 1</Name>\n         <Id>100020</Id>\n         <Description>Sample Report 1 Description</Description>\n      </Report>\n      <Report>\n         <Name>Sample Report 2</Name>\n         <Id>100021</Id>\n         <Description>Sample Report 2 Description</Description>\n      </Report>\n      <Report>\n         <Name>Sample Report 3</Name>\n         <Id>100022</Id>\n         <Description>Sample Report 3 Description</Description>\n      </Report>\n   </Reports>\n</ReportsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/{reportId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "Retrieve a specific report with all of the details. Allowing to create an instance of that report",
        "summary": "Retrieve Report",
        "operationId": "RetrieveReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "reportId",
            "description": "ID of Report to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of report template details",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportResponse>\n   <Report>\n      <Id>123</Id>\n      <Name>Sample Report 1</Name>\n      <Parameters>\n         <Parameter>\n            <Name>Report Parameter 1</Name>\n            <Type>String</Type>\n            <Required>true</Required>\n            <Description>Report Parameter 1 Description</Description>\n            <MultiSelectAllowed>false</MultiSelectAllowed>\n            <HelpInformation>Report Parameter 1 Help Text</HelpInformation>\n         </Parameter>\n         <Parameter>\n            <Name>Report Parameter 2</Name>\n            <Type>Enum</Type>\n            <Required>false</Required>\n            <ValueFilter>Value1;Value2;Value3</ValueFilter>\n            <Values>\n               <Value>\n                  <InternalName>Value1</InternalName>\n                  <DisplayName>Display Value2</DisplayName>\n               </Value>\n               <Value>\n                  <InternalName>Value2</InternalName>\n                  <DisplayName>Value2</DisplayName>\n               </Value>\n               <Value>\n                  <InternalName>Value3</InternalName>\n                  <DisplayName>Display Value3</DisplayName>\n               </Value>\n            </Values>\n            <Description>Report Parameter 2 Description</Description>\n            <MultiSelectAllowed>true</MultiSelectAllowed>\n            <HelpInformation>Report Parameter 2 Help Text</HelpInformation>\n         </Parameter>\n      </Parameters>\n   </Report>\n</ReportResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "A report template matching the provided ID could not be found",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportResponse>\n   <ResponseStatus>\n      <ErrorCode>19000</ErrorCode>\n      <Description>No report found with report ID of '123'</Description>\n   </ResponseStatus>\n</ReportResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/{reportId}/instances": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "Retrieve report instances associated with a specific report, including the up-to-date report generation status",
        "summary": "Retrieve Report Instances",
        "operationId": "RetrieveReportInstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "reportId",
            "description": "ID of the report to retrieve it instances",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of report instances",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ReportInstancesResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportInstancesResponse>\n   <Instances>\n      <Instance>\n         <Id>100090</Id>\n         <ReportId>100020</ReportId>\n         <ReportName>Sample Report</ReportName>\n         <OutputFormat>pdf</OutputFormat>\n         <RequestedByUserName>jbm</RequestedByUserName>\n         <RequestedAt>2015-05-18 14:03:04</RequestedAt>\n         <Parameters>\n            <Parameter>\n               <Name>AccountId</Name>\n               <Value>1</Value>\n            </Parameter>\n         </Parameters>\n         <Status>Expired</Status>\n      </Instance>\n      <Instance>\n         <Id>100098</Id>\n         <ReportId>100020</ReportId>\n         <ReportName>Sample Report</ReportName>\n         <OutputFormat>html</OutputFormat>\n         <RequestedByUserName>jbm</RequestedByUserName>\n         <RequestedAt>2015-05-19 09:18:40</RequestedAt>\n         <Parameters>\n            <Parameter>\n               <Name>AccountId</Name>\n               <Value>1</Value>\n            </Parameter>\n            <Parameter>\n               <Name>SiteId</Name>\n               <Value>1</Value>\n            </Parameter>\n         </Parameters>\n         <Status>Expired</Status>\n      </Instance>\n      <Instance>\n         <Id>100102</Id>\n         <ReportId>100020</ReportId>\n         <ReportName>Sample Report</ReportName>\n         <OutputFormat>pdf</OutputFormat>\n         <RequestedByUserName>jbm</RequestedByUserName>\n         <RequestedAt>2015-05-19 11:05:12</RequestedAt>\n         <Parameters>\n            <Parameter>\n               <Name>AccountId</Name>\n               <Value>1</Value>\n            </Parameter>\n         </Parameters>\n         <Status>Ready</Status>\n         <ExpiresAt>2015-06-15</ExpiresAt>\n      </Instance>\n   </Instances>\n</ReportInstancesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "description": "Create an instance of that report that pulls from data that is filtered by the supplied parameters. Those parameter values must match the parameters that are required as defined by the report, as provided by issuing a GET on the report.\nThe sequence of events is essentially to...\n<ol><li>issue a GET on the desired report/report-id to retrieve the parameter and other details of the report</li><li>issue a POST on the /report/report-id/instances resource, using the parameter information retrieved in the initial call to define the data that is needed</li></ol>\nThe Location header will provide a link to the created report instance.  Note that the report instance itself contains only the metadata describing the instance.  A subsequent call to /report/report-id/instances/instance-id/file must be made to actually download the file",
        "summary": "Create Report Instance",
        "operationId": "CreateReportInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "reportId",
            "description": "ID of the report to create an instance",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Instance>\n   <OutputFormat>pdf</OutputFormat>\n   <Parameters>\n      <Parameter>\n         <Name>Account</Name>\n         <Value>1</Value>\n      </Parameter>\n      <Parameter>\n         <Name>Sub-account</Name>\n         <Value>1</Value>\n      </Parameter>\n      <Parameter>\n         <Name>MultiValueEnum</Name>\n         <Value>value1</Value>\n         <Value>value2</Value>\n      </Parameter>\n   </Parameters>\n   <ExpiresAt>2016-11-25</ExpiresAt>\n</Instance>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ReportInstance"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation of report instance"
          },
          "400": {
            "description": "Missing one or more required report parameters",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportInstanceResponse>\n   <ResponseStatus>\n      <ErrorCode>19032</ErrorCode>\n      <Description>Missing one or more required report parameters: AccountId</Description>\n   </ResponseStatus>\n</ReportInstanceResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "An external report service error",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportInstanceResponse>\n   <ResponseStatus>\n      <ErrorCode>19031</ErrorCode>\n      <Description>Error encountered processing request via external reporting service.  Please contact Bandwidth support for further assistance.</Description>\n   </ResponseStatus>\n</ReportInstanceResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/{reportId}/instances/{instanceId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "Retrieve report instance details, including the current report instance status.  All of the information required to understand the nature and limits of the reported data are contained in the payload, including the general description information as well as the list of parameters and the values assigned to those parameters",
        "summary": "Retrieve Report Instance",
        "operationId": "RetrieveReportInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "reportId",
            "description": "Report's ID of the instance",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          },
          {
            "name": "instanceId",
            "description": "ID of the instance to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "100102"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the report instance",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ReportInstanceResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportInstanceResponse>\n   <Instance>\n      <Id>100102</Id>\n      <ReportId>100020</ReportId>\n      <ReportName>Sample Report</ReportName>\n      <OutputFormat>pdf</OutputFormat>\n      <RequestedByUserName>jbm</RequestedByUserName>\n      <RequestedAt>2015-05-19 11:05:12</RequestedAt>\n      <Parameters>\n         <Parameter>\n            <Name>AccountId</Name>\n            <Value>1</Value>\n         </Parameter>\n      </Parameters>\n      <Status>Ready</Status>\n      <ExpiresAt>2016-06-15</ExpiresAt>\n   </Instance>\n</ReportInstanceResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Instance was not found for the report",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportInstanceResponse>\n   <ResponseStatus>\n      <ErrorCode>19019</ErrorCode>\n      <Description>No report instance found for report 100020 with Id of '100103'</Description>\n   </ResponseStatus>\n</ReportInstanceResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "description": "Update report instance",
        "summary": "Update report instance",
        "operationId": "UpdateAcctReportInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "reportId",
            "description": "Report's ID of the instance",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          },
          {
            "name": "instanceId",
            "description": "ID of the instance to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "100102"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ReportInstance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Instance was successfully updated",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ReportInstanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/{reportId}/instances/{instanceId}/file": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "Download report instance output file, if output is available",
        "summary": "Download Report Instance File",
        "operationId": "DownloadReportInstanceFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "reportId",
            "description": "Report's ID of the instance",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          },
          {
            "name": "instanceId",
            "description": "ID of the instance to retrieve file",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "100102"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of report output"
          },
          "202": {
            "description": "Report generation is still in progress.  Check the status of the report instance, and When the report instance status becomes `Ready`",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportInstanceFileResponse>\n   <ResponseStatus>\n      <ErrorCode>19048</ErrorCode>\n      <Description>Report generation in progress; Output not yet available</Description>\n   </ResponseStatus>\n</ReportInstanceFileResponse>"
                  }
                }
              }
            }
          },
          "307": {
            "description": "Successful retrieval of report output. Link to download the file provided in the Location header",
            "headers": {
              "Location": {
                "description": "The URL for downloading the file",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "A report instance matching the supplied identification information could not be found",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportInstanceFileResponse>\n   <ResponseStatus>\n      <ErrorCode>19019</ErrorCode>\n      <Description>No report instance found for report 123 with Id of '456'</Description>\n   </ResponseStatus>\n</ReportInstanceFileResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/reports/instances": {
      "get": {
        "tags": [
          "Reports"
        ],
        "description": "Retrieve report instances within the account scope, regardless of the report of which the instance is an instance of, including the up-to-date report generation status.  This is a convenience API call to make it easier to examine all Instances in scope",
        "summary": "Retrieve Report Instances on Account",
        "operationId": "RetrieveReportInstancesOnAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "A valid list of instances is available",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ReportInstancesResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReportInstancesResponse>\n   <Instances>\n      <Instance>\n         <Id>100090</Id>\n         <ReportId>100020</ReportId>\n         <ReportName>Sample Report</ReportName>\n         <OutputFormat>pdf</OutputFormat>\n         <RequestedByUserName>jbm</RequestedByUserName>\n         <RequestedAt>2015-05-18 14:03:04</RequestedAt>\n         <Parameters>\n            <Parameter>\n               <Name>AccountId</Name>\n               <Value>1</Value>\n            </Parameter>\n         </Parameters>\n         <Status>Expired</Status>\n      </Instance>\n      <Instance>\n         <Id>100098</Id>\n         <ReportId>100020</ReportId>\n         <ReportName>Sample Report</ReportName>\n         <OutputFormat>html</OutputFormat>\n         <RequestedByUserName>jbm</RequestedByUserName>\n         <RequestedAt>2015-05-19 09:18:40</RequestedAt>\n         <Parameters>\n            <Parameter>\n               <Name>AccountId</Name>\n               <Value>1</Value>\n            </Parameter>\n            <Parameter>\n               <Name>SiteId</Name>\n               <Value>1</Value>\n            </Parameter>\n         </Parameters>\n         <Status>Expired</Status>\n      </Instance>\n      <Instance>\n         <Id>100102</Id>\n         <ReportId>100020</ReportId>\n         <ReportName>Sample Report</ReportName>\n         <OutputFormat>pdf</OutputFormat>\n         <RequestedByUserName>jbm</RequestedByUserName>\n         <RequestedAt>2015-05-19 11:05:12</RequestedAt>\n         <Parameters>\n            <Parameter>\n               <Name>AccountId</Name>\n               <Value>1</Value>\n            </Parameter>\n         </Parameters>\n         <Status>Ready</Status>\n         <ExpiresAt>2016-06-15</ExpiresAt>\n      </Instance>\n   </Instances>\n</ReportInstancesResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sipcredentials": {
      "get": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Retrieve all SIP credentials for the account",
        "summary": "Retrieve SIP Credentials",
        "operationId": "RetrieveSipCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested. It can be an index of SIP credential or a combination of user name and domain in form {userName}@{domain}. The initial page is tagged with the ID '1'",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "3, user321@bw.com"
          },
          {
            "name": "size",
            "description": "The number of items to include in a page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500
            },
            "example": 5000
          },
          {
            "name": "userNamefragment",
            "description": "The user name fragment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 3
            },
            "example": "user32"
          },
          {
            "name": "domainfragment",
            "description": "The domain fragment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 3
            },
            "example": "bw."
          },
          {
            "name": "applicationNameFragment",
            "description": "The application name fragment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 3
            },
            "example": "myapp"
          },
          {
            "name": "realmFragment",
            "description": "The realm fragment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 3
            },
            "example": "myrealm"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the SIP credentials retrieval request will return a list of the SIP credentials that are created on this account",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSipCredentials"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialsResponse>\n   <Links>\n      <first>Link=&lt;http://dashboard.bandwidth.com/iris/accounts/14/sipcredentials?size=500&amp;page=1&gt;;rel=\"first\";</first>\n   </Links>\n   <SipCredentials>\n      <SipCredential>\n         <Id>11</Id>\n         <RealmId>3</RealmId>\n         <UserName>John</UserName>\n         <Domain>bw.com</Domain>\n         <Hash1>1g32gadgs433dd4</Hash1>\n         <Hash1b>1g32gadgs433d24</Hash1b>\n         <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n         <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n      </SipCredential>\n      <SipCredential>\n         <Id>45</Id>\n         <RealmId>4</RealmId>\n         <UserName>Mathew@bw.com</UserName>\n         <Hash1>43543gggs43g324</Hash1>\n         <Realm>realm2.abc123.auth.bandwidth.com</Realm>\n         <HttpVoiceV2AppId>7a1626ea-6a3e-11eb-9439-0242ac130002</HttpVoiceV2AppId>\n      </SipCredential>\n   </SipCredentials>\n</SipCredentialsResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or there are no SIP credentials associated with specified account it will result in a not found",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialsResponse>\n   <ResponseStatus>\n      <ErrorCode>23008</ErrorCode>\n      <Description>There are no Sip credentials associated with the account with ID = 41</Description>\n   </ResponseStatus>\n</SipCredentialsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Create SIP credentials and associate them with the account",
        "summary": "Create SIP Credentials",
        "operationId": "CreateSipCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountSipCredentialsRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentials>\n   <SipCredential>\n      <UserName>John</UserName>\n      <Domain>bw.com</Domain>\n      <Hash1>1g32gadgs433dd4</Hash1>\n      <Hash1b>1g32gadgs433d24</Hash1b>\n      <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n      <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n   </SipCredential>\n   <SipCredential>\n      <UserName>Mathew@bw.com</UserName>\n      <Hash1>43543gggs43g324</Hash1>\n      <Hash1b>1g32gadgs433a34</Hash1b>\n      <Realm>realm2.abc123.auth.bandwidth.com</Realm>\n      <HttpVoiceV2AppId>7a1626ea-6a3e-11eb-9439-0242ac130002</HttpVoiceV2AppId>\n   </SipCredential>\n</SipCredentials>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - If there was at least one valid credential entry in specified list then such response will be returned",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipCredentialsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialsResponse>\n   <Errors>\n      <Error>\n         <ErrorCode>1003</ErrorCode>\n         <Description>UserName is required</Description>\n         <SipCredential>\n            <Domain>bw.com</Domain>\n            <Hash1>1g32gadgs433dd4</Hash1>\n            <Hash1b>1g32gadgs433d24</Hash1b>\n            <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n            <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n   </Errors>\n   <ValidSipCredentials>\n      <SipCredential>\n         <Id>39</Id>\n         <RealmId>4</RealmId>\n         <UserName>Bill</UserName>\n         <Domain>bw.com</Domain>\n         <Hash1>43543gggs43g324</Hash1>\n         <Hash1b>4562gadgs433454</Hash1b>\n         <Realm>realm2.abc123.auth.bandwidth.com</Realm>\n         <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n      </SipCredential>\n      <SipCredential>\n         <Id>940</Id>\n         <RealmId>5</RealmId>\n         <UserName>Jane</UserName>\n         <Domain>bw.com</Domain>\n         <Hash1>af7b8bd23a2b65b</Hash1>\n         <Hash1b>af7b8bd23a2b65c</Hash1b>\n         <Realm>realm3.abc123.auth.bandwidth.com</Realm>\n         <HttpVoiceV2AppId>7a1626ea-6a3e-11eb-9439-0242ac130002</HttpVoiceV2AppId>\n      </SipCredential>\n   </ValidSipCredentials>\n</SipCredentialsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - If all credential entries in specified list are invalid it will result in bad request with list of errors",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialsResponse>\n   <ResponseStatus>\n      <Description>Please check your input parameters.</Description>\n   </ResponseStatus>\n   <Errors>\n      <Error>\n         <ErrorCode>1003</ErrorCode>\n         <Description>UserName is required</Description>\n         <SipCredential>\n            <Domain>bw.com</Domain>\n            <Hash1>1g32gadgs433dd4</Hash1>\n            <Hash1b>1g32gadgs433d24</Hash1b>\n            <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n            <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n      <Error>\n         <ErrorCode>23009</ErrorCode>\n         <Description>Sip credential Bill@bw.com does already exist on the account with ID = 41</Description>\n         <SipCredential>\n            <UserName>Bill</UserName>\n            <Domain>bw.com</Domain>\n            <Hash1>43543gggs43g324</Hash1>\n            <Hash1b>4562gadgs433454</Hash1b>\n            <Realm>realm2.abc123.auth.bandwidth.com</Realm>\n            <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n      <Error>\n         <ErrorCode>23018</ErrorCode>\n         <Description>Realm 'realm3.abc123.auth.bandwidth.com' was not found on the account with ID = 41.</Description>\n         <SipCredential>\n            <UserName>Jane</UserName>\n            <Domain>bw.com</Domain>\n            <Hash1>af7b8bd23a2b65b</Hash1>\n            <Hash1b>af7b8bd23a2b65c</Hash1b>\n            <Realm>realm3.abc123.auth.bandwidth.com</Realm>\n            <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n      <Error>\n         <ErrorCode>23019</ErrorCode>\n         <Description>Application with ID 7a1626ea-6a3e-11eb-9439-0242ac130002 was not found on the account with ID = 41</Description>\n         <SipCredential>\n            <UserName>Abe</UserName>\n            <Domain>bw.com</Domain>\n            <Hash1>9a1ee5b3fa64ba0</Hash1>\n            <Hash1b>279de633c5f7aff</Hash1b>\n            <Realm>realm2.abc123.auth.bandwidth.com</Realm>\n            <HttpVoiceV2AppId>7a1626ea-6a3e-11eb-9439-0242ac130002</HttpVoiceV2AppId>\n         </SipCredential>\n      </Error>\n   </Errors>\n</SipCredentialsResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>13566</ErrorCode>\n      <Description>Our E911 service is unavaliable</Description>\n   </ResponseStatus>\n</SipPeerResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sipcredentials/{compositeUserName}": {
      "get": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Retrieve a SIP credential for the account by unique combination of user name and domain",
        "summary": "Retrieve SIP Credential",
        "operationId": "RetrieveSipCredential",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "compositeUserName",
            "description": "Is comprised of the `UserName`, and, if there is a `Domain` part, an @ followed by the `Domain`",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "`user` or `user@domain`"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - will return full information about the SIP credential on this account for the specified user name and domain",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipCredentialResponse"
                },
                "examples": {
                  "With separated UserName and Domain": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <SipCredential>\n      <Id>11</Id>\n      <RealmId>3</RealmId>\n      <UserName>John</UserName>\n      <Domain>bw.com</Domain>\n      <Hash1>1g32gadgs433dd4</Hash1>\n      <Hash1b>1g32gadgs433d24</Hash1b>\n      <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n      <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n   </SipCredential>\n</SipCredentialResponse>"
                  },
                  "With aggregated UserName and Domain": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <SipCredential>\n      <Id>39</Id>\n      <RealmId>4</RealmId>\n      <UserName>Bill@bw.com</UserName>\n      <Hash1>1g32gadgs433dd4</Hash1>\n      <Realm>realm2.abc123.auth.bandwidth.com</Realm>\n      <HttpVoiceV2AppId>7a1626ea-6a3e-11eb-9439-0242ac130002</HttpVoiceV2AppId>\n   </SipCredential>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - if the account specified does not exist or is locked or if there is no SIP credential that corresponds to the specified combination of user name and domain it will result in a not found",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <ResponseStatus>\n      <ErrorCode>23007</ErrorCode>\n      <Description>Sip credential Jack@bw.com was not found on the account with ID = 41</Description>\n   </ResponseStatus>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Update single SIP credential\nIt is not possible to change the UserName or the Domain associated with the Hash Values. To do so requires deletion of one set of credentials and addition of a new set of credentials",
        "summary": "Update SIP Credentials",
        "operationId": "UpdateSipCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "compositeUserName",
            "description": "Is comprised of the `UserName`, and, if there is a `Domain` part, an @ followed by the `Domain`",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "`user` or `user@domain`"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipCredentialUpdateRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredential>\n   <Hash1>1g32gadgs433dd4</Hash1>\n   <Hash1b>1g32gadgs433d24</Hash1b>\n   <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n   <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n</SipCredential>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - the SIP credential was successfully updated",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipCredentialResponse"
                },
                "examples": {
                  "With separated UserName and Domain": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <SipCredential>\n      <Id>451</Id>\n      <RealmId>3</RealmId>\n      <UserName>Mathew</UserName>\n      <Domain>bw.com</Domain>\n      <Hash1>43533gggs43g324</Hash1>\n      <Hash1b>4562gadgs423454</Hash1b>\n      <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n      <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n   </SipCredential>\n</SipCredentialResponse>"
                  },
                  "With aggregated UserName and Domain": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <SipCredential>\n      <Id>80</Id>\n      <RealmId>3</RealmId>\n      <UserName>Mathew@bw.com</UserName>\n      <Hash1>43533gggs43g324</Hash1>\n      <Realm>realm1.abc123.auth.bandwidth.com</Realm>\n      <HttpVoiceV2AppId>5ba6761d-36bd-4307-8f7b-a6f806c35abf</HttpVoiceV2AppId>\n   </SipCredential>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - the SIP credential was not updated",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <ResponseStatus>\n      <ErrorCode>23004</ErrorCode>\n      <Description>Unable to change the UserName or the Domain associated with the Hash Values. To do so requires deletion of one set of credentials and addition of a new set of credentials.</Description>\n   </ResponseStatus>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - the SIP credential was not found on the account for the specified combination of user name and domain",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <ResponseStatus>\n      <ErrorCode>23007</ErrorCode>\n      <Description>Sip credential Ross@bw.com was not found on the account with ID = 41</Description>\n   </ResponseStatus>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>13566</ErrorCode>\n      <Description>Our E911 service is unavaliable</Description>\n   </ResponseStatus>\n</SipPeerResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sip Registrar"
        ],
        "description": "Delete SIP credential",
        "summary": "Delete SIP Credentials",
        "operationId": "DeleteSipCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "compositeUserName",
            "description": "Is comprised of the `UserName`, and, if there is a `Domain` part, an @ followed by the `Domain`",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "`user` or `user@domain`"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the SIP credential was deleted successfully"
          },
          "404": {
            "description": "Not Found - the SIP credential was not found on the account for the specified combination of user name and domain",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipCredentialResponse>\n   <ResponseStatus>\n      <ErrorCode>23007</ErrorCode>\n      <Description>Sip credential Jim@bw.com was not found on the account with ID = 41</Description>\n   </ResponseStatus>\n</SipCredentialResponse>"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>13566</ErrorCode>\n      <Description>Our E911 service is unavaliable</Description>\n   </ResponseStatus>\n</SipPeerResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites": {
      "get": {
        "tags": [
          "Site Management"
        ],
        "description": "Retrieve a list of all Sites associated with the account",
        "summary": "List Sites",
        "operationId": "ListSites",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "tnCounts",
            "description": "Provides response payload with total telephone numbers count for every Site on Account if specified as true",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "sipPeerDetails",
            "description": "Provides response payload with list of every SipPeer for every Site on Account with fields:\n\n<ul>\n<li>PeerId</li>\n<li>PeerName</li>\n<li>Description</li>\n<li>IsDefaultPeer</li>\n<li>Address</li>\n<li>FinalDestinationUri</li>\n<li>PremiseTrunks</li>\n<li>CallingName</li>\n<li>SsSendToCustomer</li>\n</ul>\n\n<p>Also each site will contains a count of sippers on it:</p>\n\n<ul>\n<li>SipPeerCount</li>\n</ul>\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "summary",
            "description": "Provides response payload with list of basic information about every SipPeer for every Site on Account and overrides sipPeerDetails parameter if specified as true",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 OK response will contains a list of all the Sites associated with the account",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SitesResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SitesResponse>\n   <Sites>\n      <Site>\n         <Id>399</Id>\n         <Name>SiteName</Name>\n         <Description>NewSite</Description>\n      </Site>\n      <Site>\n         <Id>403</Id>\n         <Name>TestSite2</Name>\n         <Description>SomeOtherSite</Description>\n      </Site>\n   </Sites>\n</SitesResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Site Management"
        ],
        "description": "Add a Site to the account",
        "summary": "Create Site",
        "operationId": "CreateSite",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "title": "CreateSite",
                "properties": {
                  "Name": {
                    "description": "The name of the Site",
                    "maxLength": 10,
                    "type": "string"
                  },
                  "Description": {
                    "description": "Customer provided description of the Site",
                    "type": "string"
                  },
                  "Address": {
                    "description": "Service Address for the Site",
                    "type": "object"
                  },
                  "CustomerProvidedId": {
                    "description": "Customer can provide an optional id. Note that the customer can use the same id across multiple orders.",
                    "maxLength": 10,
                    "type": "integer"
                  },
                  "CustomerName": {
                    "description": "Customer can provide an optional name",
                    "type": "string"
                  },
                  "UcTrunkingConfiguration": {
                    "description": "For UC Trunking accounts the UcTrunkingConfiguration element describes the kind of UC trunking that is provided. The Type parameter is one of Seats, Premise, or Cloud, and the UsageCategory parameter is one of UC250, UC500 or UC1000.",
                    "type": "object",
                    "properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "Seats",
                          "Premise",
                          "Cloud"
                        ]
                      },
                      "UsageCategory": {
                        "type": "string",
                        "enum": [
                          "UC250",
                          "UC500",
                          "UC1000"
                        ]
                      }
                    }
                  }
                }
              },
              "examples": {
                "For a Non UC account": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Site>\n   <Name>Raleigh</Name>\n   <Description>Test Gateway</Description>\n   <CustomerName>BW</CustomerName>\n   <Address>\n      <HouseNumber>1600</HouseNumber>\n      <StreetName>PENNSYLVANIA</StreetName>\n      <StreetSuffix>AVE</StreetSuffix>\n      <PostDirectional>NW</PostDirectional>\n      <City>WASHINGTON</City>\n      <StateCode>DC</StateCode>\n      <Zip>20006</Zip>\n      <Country>US</Country>\n   </Address>\n</Site>"
                },
                "For a UC account": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Site>\n   <Name>Raleigh</Name>\n   <Description>Test Gateway</Description>\n   <CustomerName>BW</CustomerName>\n   <Address>\n      <HouseNumber>1600</HouseNumber>\n      <StreetName>PENNSYLVANIA</StreetName>\n      <StreetSuffix>AVE</StreetSuffix>\n      <PostDirectional>NW</PostDirectional>\n      <City>WASHINGTON</City>\n      <StateCode>DC</StateCode>\n      <Zip>20006</Zip>\n      <Country>US</Country>\n   </Address>\n   <UcTrunkingConfiguration>\n      <Type>Seats</Type>\n      <UsageCategory>UC500</UsageCategory>\n   </UcTrunkingConfiguration>\n</Site>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Site has been successfully added to the account",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SiteResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <Site>\n      <Id>3013</Id>\n      <Name>Raleigh</Name>\n      <Description>Test Gateway</Description>\n      <CustomerName>BW</CustomerName>\n      <Address>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIA</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20006</Zip>\n         <Country>US</Country>\n         <AddressType>Service</AddressType>\n      </Address>\n   </Site>\n</SiteResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Information is missing from the body of the add Site request",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <ResponseStatus>\n      <ErrorCode>1003</ErrorCode>\n      <Description>Address is required</Description>\n   </ResponseStatus>\n</SiteResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteResponseBadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Address needs some changes",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <ResponseStatus>\n      <ErrorCode>12112</ErrorCode>\n      <Description>The verifiable address closest to the submitted access is included below. Please use that street address or another valid street address in your next request</Description>\n   </ResponseStatus>\n   <AddressErrorDescription>\n      <AddressInconsistencies>Some adjustments are required to allow the address to pass geocoding:\nSpecified value - Street Name : \"PENNSYLVANIO\" Valid value - \"PENNSYLVANIA\"</AddressInconsistencies>\n      <RecommendedAddress>\n         <AddressLine1>1600 PENNSYLVANIA AVE NW</AddressLine1>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIA</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20006</Zip>\n         <Country>US</Country>\n      </RecommendedAddress>\n   </AddressErrorDescription>\n   <Site>\n      <Name>Raleigh</Name>\n      <Description>Test Gateway</Description>\n      <CustomerName>BW</CustomerName>\n      <Address>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIO</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20006</Zip>\n         <Country>US</Country>\n      </Address>\n      <UcTrunkingConfiguration>\n         <Type>Seats</Type>\n         <UsageCategory>UC500</UsageCategory>\n      </UcTrunkingConfiguration>\n   </Site>\n</SiteResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteResponseConflict"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}": {
      "get": {
        "tags": [
          "Site Management"
        ],
        "description": "Retrieves the information associated with the Site id",
        "summary": "Retrieve Site",
        "operationId": "ReadSite",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "ID of the Site to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          }
        ],
        "responses": {
          "200": {
            "description": "Site information was successfully retrieved",
            "content": {
              "application/xml": {
                "examples": {
                  "For a Non UC account": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <Site>\n      <Id>3013</Id>\n      <Name>Raleigh</Name>\n      <Description>Test Gateway</Description>\n      <CustomerName>BW</CustomerName>\n      <Address>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIA</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20006</Zip>\n         <Country>US</Country>\n         <AddressType>Service</AddressType>\n      </Address>\n   </Site>\n</SiteResponse>"
                  },
                  "For a UC account": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <Site>\n      <Id>3013</Id>\n      <Name>Raleigh</Name>\n      <Description>Test Gateway</Description>\n      <CustomerName>BW</CustomerName>\n      <Address>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIA</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20006</Zip>\n         <Country>US</Country>\n         <AddressType>Service</AddressType>\n      </Address>\n      <UcTrunkingConfiguration>\n         <Type>Seats</Type>\n         <UsageCategory>UC500</UsageCategory>\n      </UcTrunkingConfiguration>\n   </Site>\n</SiteResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteResponse"
                }
              }
            }
          },
          "404": {
            "description": "The Site was not found for supplied id",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <ResponseStatus>\n      <ErrorCode>12016</ErrorCode>\n      <Description>Site '3014' does not exist</Description>\n   </ResponseStatus>\n</SiteResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteResponseBadRequest"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Site Management"
        ],
        "description": "Updates the contents of Site",
        "summary": "Update Site",
        "operationId": "UpdateSite",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "ID of the Site to update",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "title": "CreateSite",
                "properties": {
                  "Name": {
                    "description": "The name of the Site",
                    "maxLength": 10,
                    "type": "string"
                  },
                  "Description": {
                    "description": "Customer provided description of the Site",
                    "type": "string"
                  },
                  "Address": {
                    "description": "Service Address for the Site",
                    "type": "object"
                  },
                  "CustomerProvidedId": {
                    "description": "Customer can provide an optional id. Note that the customer can use the same id across multiple orders.",
                    "maxLength": 10,
                    "type": "integer"
                  },
                  "CustomerName": {
                    "description": "Customer can provide an optional name",
                    "type": "string"
                  },
                  "UcTrunkingConfiguration": {
                    "description": "For UC Trunking accounts the UcTrunkingConfiguration element describes the kind of UC trunking that is provided. The Type parameter is one of Seats, Premise, or Cloud, and the UsageCategory parameter is one of UC250, UC500 or UC1000.",
                    "type": "object",
                    "properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "Seats",
                          "Premise",
                          "Cloud"
                        ]
                      },
                      "UsageCategory": {
                        "type": "string",
                        "enum": [
                          "UC250",
                          "UC500",
                          "UC1000"
                        ]
                      }
                    }
                  }
                }
              },
              "examples": {
                "For a Non Uc account": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Site>\n   <Name>Raleigh</Name>\n   <Description>SIP gateway</Description>\n   <CustomerName>BW</CustomerName>\n   <CustomerProvidedId>1234567890</CustomerProvidedId>\n   <Address>\n      <HouseNumber>1600</HouseNumber>\n      <StreetName>PENNSYLVANIA</StreetName>\n      <StreetSuffix>AVE</StreetSuffix>\n      <PostDirectional>NW</PostDirectional>\n      <City>WASHINGTON</City>\n      <StateCode>DC</StateCode>\n      <Zip>20006</Zip>\n      <Country>US</Country>\n      <AddressType>Service</AddressType>\n   </Address>\n</Site>"
                },
                "For a UC account": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Site>\n   <Name>Raleigh</Name>\n   <Description>SIP gateway</Description>\n   <CustomerName>BW</CustomerName>\n   <CustomerProvidedId>1234567890</CustomerProvidedId>\n   <Address>\n      <HouseNumber>1600</HouseNumber>\n      <StreetName>PENNSYLVANIA</StreetName>\n      <StreetSuffix>AVE</StreetSuffix>\n      <PostDirectional>NW</PostDirectional>\n      <City>WASHINGTON</City>\n      <StateCode>DC</StateCode>\n      <Zip>20006</Zip>\n      <Country>US</Country>\n      <AddressType>Service</AddressType>\n   </Address>\n   <UcTrunkingConfiguration>\n      <Type>Seats</Type>\n      <UsageCategory>UC500</UsageCategory>\n   </UcTrunkingConfiguration>\n</Site>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Site has been successfully updated",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SiteResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <Site>\n      <Id>3013</Id>\n      <Name>Raleigh</Name>\n      <Description>Test Gateway</Description>\n      <CustomerName>BW</CustomerName>\n      <Address>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIA</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20006</Zip>\n         <Country>US</Country>\n         <AddressType>Service</AddressType>\n      </Address>\n   </Site>\n</SiteResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Information essential to the Site id is missing or invalid",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <ResponseStatus>\n      <ErrorCode>1003</ErrorCode>\n      <Description>Address is required</Description>\n   </ResponseStatus>\n</SiteResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteResponseBadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Address needs some changes",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <ResponseStatus>\n      <ErrorCode>12112</ErrorCode>\n      <Description>The verifiable address closest to the submitted access is included below. Please use that street address or another valid street address in your next request</Description>\n   </ResponseStatus>\n   <AddressErrorDescription>\n      <AddressInconsistencies>Some adjustments are required to allow the address to pass geocoding:\nSpecified value - Street Name : \"PENNSYLVANIO\" Valid value - \"PENNSYLVANIA\"</AddressInconsistencies>\n      <RecommendedAddress>\n         <AddressLine1>1600 PENNSYLVANIA AVE NW</AddressLine1>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIA</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20006</Zip>\n         <Country>US</Country>\n      </RecommendedAddress>\n   </AddressErrorDescription>\n   <Site>\n      <Name>Raleigh</Name>\n      <Description>SIP gateway</Description>\n      <CustomerName>BW</CustomerName>\n      <CustomerProvidedId>1234567890</CustomerProvidedId>\n      <Address>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIO</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20006</Zip>\n         <Country>US</Country>\n         <AddressType>Service</AddressType>\n      </Address>\n      <!-- Following applies only to sites on UC Trunking accounts. -->\n      <UcTrunkingConfiguration>\n         <Type>Seats</Type>\n         <UsageCategory>UC500</UsageCategory>\n      </UcTrunkingConfiguration>\n   </Site>\n</SiteResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteResponseConflict"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Site Management"
        ],
        "description": "Deletes the Site. Sites can only be deleted if there are no SIP Peers attached to it",
        "summary": "Delete Site",
        "operationId": "DeleteSite",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "ID of the Site to delete",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          }
        ],
        "responses": {
          "200": {
            "description": "The Site has been successfully deleted"
          },
          "400": {
            "description": "DELETE request is invalid given the current state of the Site",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteResponse>\n   <ResponseStatus>\n      <ErrorCode>12054</ErrorCode>\n      <Description>This site is currently locked for contract paperwork. Please contact support for further assistance.</Description>\n   </ResponseStatus>\n</SiteResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteResponseBadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve information about a Sip Peer or set of Sip Peers on Site",
        "summary": "List Sip Peers",
        "operationId": "ListSipPeers",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "Site ID of Sip Peers",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TNSipPeersResponse>\n   <SipPeers>\n      <SipPeer>\n         <PeerId>304985</PeerId>\n         <PeerName>CNAM-TEST-778</PeerName>\n         <Description>description</Description>\n         <IsDefaultPeer>false</IsDefaultPeer>\n         <VoiceHosts />\n         <VoiceHostGroups />\n         <TerminationHosts />\n         <Address>\n            <HouseNumber>1600</HouseNumber>\n            <HouseSuffix />\n            <PreDirectional />\n            <StreetName>Pennsylvania Avenue Northwest</StreetName>\n            <StreetSuffix />\n            <PostDirectional />\n            <AddressLine2 />\n            <City>Washington</City>\n            <StateCode>DC</StateCode>\n            <Zip>20500</Zip>\n            <PlusFour />\n            <County />\n            <Country>United States</Country>\n            <AddressType>Service</AddressType>\n         </Address>\n         <CallingName>\n            <Display>false</Display>\n            <Enforced>false</Enforced>\n         </CallingName>\n      </SipPeer>\n   </SipPeers>\n</TNSipPeersResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TNSipPeersResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Create Sip Peer",
        "summary": "Create Sip Peer",
        "operationId": "CreateSipPeer",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "Site ID to create a Sip Peer",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "title": "CreateSipPeer",
                "properties": {
                  "PeerName": {
                    "description": "Mandatory name for the SIP Peer",
                    "maxLength": 10,
                    "type": "string"
                  },
                  "Description": {
                    "description": "Description for the SIP Peer",
                    "type": "string"
                  },
                  "IsDefaultPeer": {
                    "description": "Value is True or False. The Default SIP Peer is the default \"destination\" for any Telephone Numbers that are ordered for the Site in which the SIP Peer resides.  Each Site can have only 1 default SIP Peer. You can configure multiple SIP Peers on a Site",
                    "type": "boolean"
                  },
                  "HostName": {
                    "description": "The IP Address or Host Name of the address to be used for the VoiceHosts or VoiceHostGroups addresses",
                    "type": "string"
                  },
                  "Port": {
                    "description": "Optional Port Number for Voice and Termination hosts. This is an optional parameter that has default values that are dependent on the Application",
                    "type": "integer"
                  },
                  "VoiceHosts": {
                    "description": "These addresses, comprised of HostName and optional Port, are used by the Bandwidth network to send calls to for Origination services. The VoiceHosts list of IP addresses used for an active/standby address selection mechanism, where the first address is attempted, followed by the second address and so on. Except under failure situations the first address in the list is preferred. Maximum of 10 hosts - can be IP address or Fully Qualified Domain Name",
                    "type": "array",
                    "items": {
                      "properties": {
                        "Host": {
                          "type": "object",
                          "properties": {
                            "HostName": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "VoiceHostGroups": {
                    "description": "The VoiceHostGroups element is comprised of one VoiceHostGroup element, which is used to randomly distribute traffic amongst up to 10 IP addresses. Failover behavior is retained within the group",
                    "type": "array",
                    "items": {
                      "properties": {
                        "VoiceHostGroup": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Hosts"
                          }
                        }
                      }
                    }
                  },
                  "TerminationHosts": {
                    "description": "These addresses, comprised of IP or Subnet(CIDR format) and optional Port, are used by the Bandwidth network to send calls to for Termination services. Maximum of 10 hosts - can be IP address or subnets. In case of subnet you should specify NetworkAddress of subnet as IP",
                    "type": "array",
                    "items": {
                      "properties": {
                        "TerminationHost": {
                          "type": "object",
                          "properties": {
                            "HostName": {
                              "type": "string"
                            },
                            "Port": {
                              "type": "string"
                            },
                            "CustomerTrafficAllowed": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "CustomerTrafficAllowed": {
                    "description": "A TerminationHost can be configured to allow different customer traffic types.  Allowed values are LITE, DOMESTIC and ALL. This is an optional parameter",
                    "type": "string",
                    "enum": [
                      "LITE",
                      "DOMESTIC",
                      "ALL"
                    ]
                  },
                  "Address": {
                    "description": "Billing or Service Address for the SIP Peer.  This element is optional for accounts except for accounts with the UC Trunking Product.  If the address element is provided the following fields can be provided:",
                    "type": "object",
                    "required": [
                      "HouseNumber",
                      "StreetName",
                      "City",
                      "StateCode",
                      "Zip",
                      "AddressType"
                    ],
                    "properties": {
                      "HouseNumber": {
                        "type": "string"
                      },
                      "HouseSuffix": {
                        "type": "string"
                      },
                      "PreDirectional": {
                        "type": "string"
                      },
                      "StreetName": {
                        "type": "string"
                      },
                      "StreetSuffix": {
                        "type": "string"
                      },
                      "PostDirectional": {
                        "type": "string"
                      },
                      "City": {
                        "type": "string"
                      },
                      "StateCode": {
                        "type": "string"
                      },
                      "Zip": {
                        "type": "string"
                      },
                      "PlusFour": {
                        "type": "string"
                      },
                      "County": {
                        "type": "string"
                      },
                      "Country": {
                        "type": "string",
                        "default": "US"
                      },
                      "AddressType": {
                        "type": "string",
                        "enum": [
                          "Billing",
                          "Service"
                        ]
                      }
                    }
                  },
                  "SsSendToCustomer": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "VERSTAT",
                      "ENH_VERSTAT",
                      "VERSTAT_AND_IDENTITY",
                      "ENH_VERSTAT_AND_IDENTITY",
                      "IDENTITY"
                    ]
                  }
                }
              },
              "examples": {
                "With VoiceHosts": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeer>\n   <PeerName>name</PeerName>\n   <Description>description</Description>\n   <IsDefaultPeer>false</IsDefaultPeer>\n   <FinalDestinationUri>uri</FinalDestinationUri>\n   <VoiceHosts>\n      <Host>\n         <HostName>10.10.10.1</HostName>\n      </Host>\n      <Host>\n         <HostName>10.10.10.2</HostName>\n      </Host>\n   </VoiceHosts>\n   <TerminationHosts>\n      <TerminationHost>\n         <HostName>2.1.1.9</HostName>\n         <Port>0</Port>\n         <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>\n      </TerminationHost>\n      <TerminationHost>\n         <HostName>2.1.1.96/30</HostName>\n         <Port>0</Port>\n         <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>\n      </TerminationHost>\n   </TerminationHosts>\n   <Address>\n      <HouseNumber>1600</HouseNumber>\n      <HouseSuffix />\n      <PreDirectional />\n      <StreetName>PENNSYLVANIA AVE NW</StreetName>\n      <StreetSuffix />\n      <PostDirectional />\n      <AddressLine2 />\n      <City>WASHINGTON</City>\n      <StateCode>DC</StateCode>\n      <Zip>20500</Zip>\n      <PlusFour />\n      <County />\n      <Country>United States</Country>\n      <AddressType>Service</AddressType>\n   </Address>\n   <PremiseTrunks>PremiseTrunks</PremiseTrunks>\n   <CallingName>\n      <Display>true</Display>\n      <Enforced>true</Enforced>\n   </CallingName>\n   <SsSendToCustomer>NONE</SsSendToCustomer>\n</SipPeer>"
                },
                "With VoiceHostGroups": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeer>\n   <PeerName>name</PeerName>\n   <Description>description</Description>\n   <IsDefaultPeer>false</IsDefaultPeer>\n   <FinalDestinationUri>uri</FinalDestinationUri>\n   <VoiceHostGroups>\n      <VoiceHostGroup>\n         <Host>\n            <HostName>10.10.10.1</HostName>\n         </Host>\n         <Host>\n            <HostName>10.10.10.2</HostName>\n         </Host>\n      </VoiceHostGroup>\n   </VoiceHostGroups>\n   <TerminationHosts>\n      <TerminationHost>\n         <HostName>2.1.1.9</HostName>\n         <Port>0</Port>\n         <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>\n      </TerminationHost>\n      <TerminationHost>\n         <HostName>2.1.1.96/30</HostName>\n         <Port>0</Port>\n         <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>\n      </TerminationHost>\n   </TerminationHosts>\n   <SsSendToCustomer>NONE</SsSendToCustomer>\n</SipPeer>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sip Peer created",
            "content": {
            }
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>12113 - The provided street address could not be verified. Please submit a valid street address.</li><li>13569 - A termination host with HostName = 2.1.1.9 is already in use</li><li>13509 - 'wrong.ip' is not a valid host. Provide valid IP or domain name</li><li>13553 - Duplicate host (and port) in VoiceHosts</li><li>13510 - 'wrong.url' is not a valid Destination URI</li><li>13522 - IsDefaultPeer cannot be false right now. The account requires at least one Default Sip Peer</li><li>13552 - A termination host with HostName = %s and Port = %s is already in use</li><li>12024 - Region with state '%s' and country '%s' does not exist</li><li>13576 - Account 9999999 has no CNAM product feature</li><li>13581 - Display option is missing</li><li>13582 - Enforce option is missing</li><li>13590 - The supplied CustomerTrafficAllowed value on host %s:%s are not allowed for this sippeer</li><li>13591 - Termination Settings at the SIP Peer level are not allowed for accounts with the 'DedicatedPrivateNetworkTopology' product.</li><li>13592 - Calling name 'Display' and 'Enforced' values can't be updated for 'DedicatedPrivateNetworkTopology' account.</li><li>13593 - %s has invalid mask. Valid mask values: 20-32</li><li>13594 - %s is not valid host</li><li>13595 - The IP address provided: %s contains a non zero subnet portion. An equivalent IP address such as %s with a zero subnet value must be provided.</li>\n</ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>13582</ErrorCode>\n      <Description>Enforce option is missing</Description>\n   </ResponseStatus>\n</SipPeerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerResponseBadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Sip Peer with such name already exists; address couldn't be geocoded perfectly and needs some changes",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>12112</ErrorCode>\n      <Description>The verifiable address closest to the submitted access is included below. Please use that street address or another valid street address in your next request</Description>\n   </ResponseStatus>\n   <AddressErrorDescription>\n      <AddressInconsistencies>Some adjustments are required to allow the address to pass geocoding:\nSpecified value - City : \"WASHINGTUN\" Valid value - \"WASHINGTON\"</AddressInconsistencies>\n      <RecommendedAddress>\n         <AddressLine1>1600 PENNSYLVANIA AVE NW</AddressLine1>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIA</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20500</Zip>\n         <Country>US</Country>\n      </RecommendedAddress>\n   </AddressErrorDescription>\n</SipPeerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerResponseConflict"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>13566</ErrorCode>\n      <Description>Our E911 service is unavaliable</Description>\n   </ResponseStatus>\n</SipPeerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerResponseBadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieves the information associated with the sip peer id",
        "summary": "Retrieve Sip Peer",
        "operationId": "ReadSipPeer",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerResponse>\n   <SipPeer>\n      <PeerId>304985</PeerId>\n      <PeerName>CNAM-TEST-778</PeerName>\n      <Description>description</Description>\n      <IsDefaultPeer>false</IsDefaultPeer>\n      <VoiceHosts />\n      <VoiceHostGroups />\n      <TerminationHosts />\n      <Address>\n         <HouseNumber>1600</HouseNumber>\n         <HouseSuffix />\n         <PreDirectional />\n         <StreetName>PENNSYLVANIA AVE NW</StreetName>\n         <StreetSuffix />\n         <PostDirectional />\n         <AddressLine2 />\n         <City>Washington</City>\n         <StateCode>DC</StateCode>\n         <Zip>20500</Zip>\n         <PlusFour />\n         <County />\n         <Country>United States</Country>\n         <AddressType>Service</AddressType>\n      </Address>\n      <CallingName>\n         <Display>false</Display>\n         <Enforced>false</Enforced>\n      </CallingName>\n   </SipPeer>\n</SipPeerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Sip Peer doesn't exists",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>13563</ErrorCode>\n      <Description>Sip Peer '316167' account '9999999' and site '45' does not exist</Description>\n   </ResponseStatus>\n</SipPeerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerResponseBadRequest"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Update Sip Peer\nThere are a few rules used to eliminate IP address collisions.  The primary restriction is on the ability to share Term IP addresses across the Bandwidth Dashboard API structural elements. Essentially...\n\n<ul><li>Term Addresses cannot be shared anywhere</li>\n<li>VoiceHost and VoiceHostGroup addresses can be shared between SIP Peers, and can be different than or the same as Term IP Addresses </li>\n</ul>\n\nIf the CallingName field is missing from the payload, CNAM will default to false on the Sip Peer",
        "summary": "Update Sip Peer",
        "operationId": "UpdateSipPeer",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to update",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeer>\n   <PeerName>name</PeerName>\n   <Description>description</Description>\n   <IsDefaultPeer>false</IsDefaultPeer>\n   <VoiceHosts>\n      <Host>\n         <HostName>10.10.10.1</HostName>\n      </Host>\n      <Host>\n         <HostName>10.10.10.2</HostName>\n      </Host>\n   </VoiceHosts>\n   <VoiceHostGroups />\n   <TerminationHosts>\n      <TerminationHost>\n         <HostName>2.1.1.9</HostName>\n         <Port>0</Port>\n         <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>\n      </TerminationHost>\n      <TerminationHost>\n         <HostName>2.1.1.96/30</HostName>\n         <Port>0</Port>\n         <CustomerTrafficAllowed>DOMESTIC</CustomerTrafficAllowed>\n      </TerminationHost>\n   </TerminationHosts>\n   <CallingName>\n      <Display>true</Display>\n      <Enforced>true</Enforced>\n   </CallingName>\n</SipPeer>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SipPeerPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sip Peer updated",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerResponse>\n   <SipPeer>\n      <PeerId>304985</PeerId>\n      <PeerName>CNAM-TEST-778</PeerName>\n      <Description>description</Description>\n      <IsDefaultPeer>false</IsDefaultPeer>\n      <VoiceHosts />\n      <VoiceHostGroups />\n      <TerminationHosts />\n      <Address>\n         <HouseNumber>1600</HouseNumber>\n         <HouseSuffix />\n         <PreDirectional />\n         <StreetName>PENNSYLVANIA AVE NW</StreetName>\n         <StreetSuffix />\n         <PostDirectional />\n         <AddressLine2 />\n         <City>Washington</City>\n         <StateCode>DC</StateCode>\n         <Zip>20500</Zip>\n         <PlusFour />\n         <County />\n         <Country>United States</Country>\n         <AddressType>Service</AddressType>\n      </Address>\n      <CallingName>\n         <Display>false</Display>\n         <Enforced>false</Enforced>\n      </CallingName>\n   </SipPeer>\n</SipPeerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>12113 - The provided street address could not be verified. Please submit a valid street address.</li><li>13569 - A termination host with HostName = 2.1.1.9 is already in use</li><li>13509 - 'wrong.ip' is not a valid host. Provide valid IP or domain name</li><li>13553 - Duplicate host (and port) in VoiceHosts</li><li>13510 - 'wrong.url' is not a valid Destination URI</li><li>13522 - IsDefaultPeer cannot be false right now. The account requires at least one Default Sip Peer</li><li>13552 - A termination host with HostName = %s and Port = %s is already in use</li><li>12024 - Region with state '%s' and country '%s' does not exist</li><li>13576 - Account 9999999 has no CNAM product feature</li><li>13581 - Display option is missing</li><li>13582 - Enforce option is missing</li><li>13563 - Sip Peer '316167' account '9999999' and site '45' does not exist</li><li>13590 - The supplied CustomerTrafficAllowed value on host %s:%s are not allowed for this sippeer</li><li>13591 - Termination Settings at the SIP Peer level are not allowed for accounts with the 'DedicatedPrivateNetworkTopology' product.</li><li>13592 - Calling name 'Display' and 'Enforced' values can't be updated for 'DedicatedPrivateNetworkTopology' account.</li><li>13593 - %s has invalid mask. Valid mask values: 24-32</li><li>13594 - %s is not valid host</li><li>13595 - The IP address provided: %s contains a non zero subnet portion. An equivalent IP address such as %s with a zero subnet value must be provided.</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>13582</ErrorCode>\n      <Description>Enforce option is missing</Description>\n   </ResponseStatus>\n</SipPeerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerResponseBadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Address couldn't be geocoded perfectly and needs some changes",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>12112</ErrorCode>\n      <Description>The verifiable address closest to the submitted access is included below. Please use that street address or another valid street address in your next request</Description>\n   </ResponseStatus>\n   <AddressErrorDescription>\n      <AddressInconsistencies>Some adjustments are required to allow the address to pass geocoding:\nSpecified value - City : \"WASHINGTUN\" Valid value - \"WASHINGTON\"</AddressInconsistencies>\n      <RecommendedAddress>\n         <AddressLine1>1600 PENNSYLVANIA AVE NW</AddressLine1>\n         <HouseNumber>1600</HouseNumber>\n         <StreetName>PENNSYLVANIA</StreetName>\n         <StreetSuffix>AVE</StreetSuffix>\n         <PostDirectional>NW</PostDirectional>\n         <City>WASHINGTON</City>\n         <StateCode>DC</StateCode>\n         <Zip>20500</Zip>\n         <Country>US</Country>\n      </RecommendedAddress>\n   </AddressErrorDescription>\n</SipPeerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerResponseConflict"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Delete Sip Peer",
        "summary": "Delete Sip Peer",
        "operationId": "DeleteSipPeer",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to delete",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "Sip Peer deleted"
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>Delete not allowed while a SIP Peer has SMS feature</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerResponse>\n   <ResponseStatus>\n      <ErrorCode>13613</ErrorCode>\n      <Description>Delete not allowed while a SIP Peer has SMS feature</Description>\n   </ResponseStatus>\n</SipPeerResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerResponseBadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Sip Peer not found"
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/tns": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve information about a Telephone number or set of Telephone numbers",
        "summary": "Retrieve Sip Peer TNs",
        "operationId": "ReadSipPeerTns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve TNs information",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          },
          {
            "name": "includeAttributes",
            "description": "If the value is false SipPeerTelephoneNumber will contain FullNumber tags only. This makes processing faster",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            },
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTelephoneNumbersResponse>\n   <SipPeerTelephoneNumbers>\n      <SipPeerTelephoneNumber>\n         <FullNumber>2052160148</FullNumber>\n         <CallingNameDisplay>true</CallingNameDisplay>\n         <TnAttributes>\n            <TnAttribute>Protected</TnAttribute>\n            <TnAttribute>External</TnAttribute>\n            <TnAttribute>Imported</TnAttribute>\n         </TnAttributes>\n         <MessagingSettings>\n            <SmsEnabled>true</SmsEnabled>\n         </MessagingSettings>\n      </SipPeerTelephoneNumber>\n      <SipPeerTelephoneNumber>\n         <FullNumber>2053161118</FullNumber>\n         <CallingNameDisplay>false</CallingNameDisplay>\n         <MessagingSettings>\n            <SmsEnabled>true</SmsEnabled>\n         </MessagingSettings>\n      </SipPeerTelephoneNumber>\n      <SipPeerTelephoneNumber>\n         <FullNumber>2053160118</FullNumber>\n         <CallForward>2014563025</CallForward>\n         <CallingNameDisplay>false</CallingNameDisplay>\n      </SipPeerTelephoneNumber>\n   </SipPeerTelephoneNumbers>\n</SipPeerTelephoneNumbersResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTelephoneNumbersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/tns/{tn}": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve information about telephone number on Sip Peer",
        "summary": "Retrieve Sip Peer TN",
        "operationId": "ReadSipPeerTn",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve TN information",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          },
          {
            "name": "tn",
            "description": "A 10 Digit Telephone Number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "5209072451"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTelephoneNumberResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTelephoneNumberResponse>\n    <SipPeerTelephoneNumber>\n        <FullNumber>5209072451</FullNumber>\n        <CallForward>7042661720</CallForward>\n        <CallingNameDisplay>true</CallingNameDisplay>\n        <TnAttributes>\n            <TnAttribute>Protected</TnAttribute>\n            <TnAttribute>External</TnAttribute>\n            <TnAttribute>Imported</TnAttribute>\n        </TnAttributes>\n        <MessagingSettings>\n            <SmsEnabled>true</SmsEnabled>\n        </MessagingSettings>\n    </SipPeerTelephoneNumber>\n</SipPeerTelephoneNumberResponse>\n"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Update settings for a TN allocated to their account",
        "summary": "Update Sip Peer TN settings",
        "operationId": "UpdateSipPeerTnSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to update TN information",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          },
          {
            "name": "tn",
            "description": "A 10 Digit Telephone Number to update",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "5209072451"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTelephoneNumber>\n   <FullNumber>2052160156</FullNumber>\n   <NumberFormat>10digit</NumberFormat>\n   <RPIDFormat>10digit</RPIDFormat>\n   <RewriteUser>false</RewriteUser>\n   <CallForward>7042661720</CallForward>\n   <CallingNameDisplay>true</CallingNameDisplay>\n   <TnAttributes>\n      <TnAttribute>Protected</TnAttribute>\n      <TnAttribute>External</TnAttribute>\n      <TnAttribute>Imported</TnAttribute>\n   </TnAttributes>\n   <MessagingSettings>\n      <SmsEnabled>true</SmsEnabled>\n   </MessagingSettings>\n</SipPeerTelephoneNumber>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SipPeerTelephoneNumber"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "There is no body response when request is successful or with warnings list",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTelephoneNumberResponse>\n   <SipPeerTelephoneNumber>\n      <Warnings>\n         <Warning>\n            <TelephoneNumber>2174101601</TelephoneNumber>\n            <Description>SMS is already Enabled or number is in processing.</Description>\n         </Warning>\n      </Warnings>\n   </SipPeerTelephoneNumber>\n</SipPeerTelephoneNumberResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTelephoneNumberResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>13513 - Call Forwarding number '%s' is not a valid 10-digit telephone number</li><li>13514 - Number Format '%s' is invalid for telephone number '%s'</li><li>13515 - Rewrite User '%s' is invalid for telephone number '%s'</li><li>13516 - RPID Format '%s' is invalid for telephone number '%s'</li><li>13517 - Telephone number '%s' is not available</li><li>13518 - Telephone number '%s' is not available</li><li>13519 - There is an issue with telephone number '%s'. Please contact Customer Service</li><li>13575 - CallingNameDisplay '%s' is invalid. Valid values are: 'true', 'false'</li><li>13576 - Account '%s' has no [CallForwarding|CNAM] product feature</li><li>13583 - CNAM for '%s' is applied at the Location level and it is not applicable at the TN level.</li><li>13536 - Telephone number 7206083492 does not exist on Account 9999999, Site 45, and Sip Peer 305610</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTelephoneNumberResponse>\n   <ResponseStatus>\n      <ErrorCode>13576</ErrorCode>\n      <Description>Account '9999999' has no 'CallForwarding' product feature</Description>\n   </ResponseStatus>\n</SipPeerTelephoneNumberResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTelephoneNumberResponseBadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Due to the asynchronous nature of TN settings, a potential conflict has been identified.<p>This is typically a result of updating the settings of a TN without changing the messaging settings. For updating a TN's properties without changing the messaging settings, consider using the POST accounts/{accountId}/tnOptions endpoint</p>"
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/totaltns": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve count of Telephone numbers for Sip Peer",
        "summary": "Retrieve Sip Peer TNs count",
        "operationId": "RetrieveSipPeerTnsCount",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve TNs count",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          },
          {
            "name": "feature",
            "description": "Telephone number feature",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CNAM",
                  "LIDB"
                ]
              }
            },
            "example": "CNAM"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTelephoneNumbersCountResponse>\n   <SipPeerTelephoneNumbersCount>\n      <SipPeerTelephoneNumbersCount>4</SipPeerTelephoneNumbersCount>\n      <CnamCount>4</CnamCount>\n      <LidbCount>0</LidbCount>\n   </SipPeerTelephoneNumbersCount>\n</SipPeerTelephoneNumbersCountResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTelephoneNumbersCountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/products": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "A list of products associated with a Sip Peer",
        "summary": "Retrieve Sip Peer products",
        "operationId": "RetrieveSipPeerProducts",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve a list of products",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "There is at least one product associated with the SIP Peer. If there is no products associated with Sip Peer, empty list will be displayed",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerProductsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerProductResponse>\n   <Products>\n      <Product>\n         <Name>Termination</Name>\n      </Product>\n      <Product>\n         <Name>EdgeManagement</Name>\n      </Product>\n      <Product>\n         <Name>Messaging</Name>\n      </Product>\n      <Product>\n         <Name>Origination</Name>\n      </Product>\n   </Products>\n</SipPeerProductResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/products/origination/settings": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve Sip Peer Origination settings",
        "summary": "Retrieve Sip Peer Origination setting",
        "operationId": "RetrieveSipPeerOriginationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve origination settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerOriginationSettingsResponse"
                },
                "examples": {
                  "HTTP Voice protocol": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerOriginationSettingsResponse>\n   <SipPeerOriginationSettings>\n      <VoiceProtocol>HTTP</VoiceProtocol>\n      <HttpSettings>\n         <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>\n      </HttpSettings>\n   </SipPeerOriginationSettings>\n</SipPeerOriginationSettingsResponse>"
                  },
                  "SIP Voice protocol": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerOriginationSettingsResponse>\n   <SipPeerOriginationSettings>\n      <VoiceProtocol>SIP</VoiceProtocol>\n   </SipPeerOriginationSettings>\n</SipPeerOriginationSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Create Sip Peer Origination settings",
        "summary": "Create Sip Peer Origination setting",
        "operationId": "CreateSipPeerOriginationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to update origination settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerOriginationSettingsRequest"
              },
              "examples": {
                "HTTP Voice protocol": {
                  "value": "<SipPeerOriginationSettings>\n   <VoiceProtocol>HTTP</VoiceProtocol>\n   <HttpSettings>\n      <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>\n   </HttpSettings>\n</SipPeerOriginationSettings>"
                },
                "SIP Voice protocol": {
                  "value": "<SipPeerOriginationSettings>\n   <VoiceProtocol>SIP</VoiceProtocol>\n</SipPeerOriginationSettings>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Settings were successfully added",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerOriginationSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerOriginationSettingsResponse>\n   <SipPeerOriginationSettings>\n      <VoiceProtocol>HTTP</VoiceProtocol>\n      <HttpSettings>\n         <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>\n      </HttpSettings>\n   </SipPeerOriginationSettings>\n</SipPeerOriginationSettingsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>Account level settings don`t exist</li><li>Can't create sip peer http protocol sms feature without account level http settings</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <ResponseStatus>\n      <ErrorCode>13609</ErrorCode>\n      <Description>Can't create sip peer http protocol sms feature without account level http settings.</Description>\n   </ResponseStatus>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Update Sip Peer Origination settings<p>Note: Changing the Voice Protocol from SIP to HTTP will remove Voice Hosts or Voice Host Groups and Termination Hosts, which are configured using API /accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}.</p>",
        "summary": "Update Sip Peer Origination setting",
        "operationId": "UpdateSipPeerOriginationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to update origination settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerOriginationSettingsRequest"
              },
              "examples": {
                "HTTP Voice protocol": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerOriginationSettings>\n   <VoiceProtocol>HTTP</VoiceProtocol>\n   <HttpSettings>\n      <HttpVoiceV2AppId>867b923b-8a92-4579-b29b-405f165b8124</HttpVoiceV2AppId>\n   </HttpSettings>\n</SipPeerOriginationSettings>"
                },
                "SIP Voice protocol": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerOriginationSettings>\n   <VoiceProtocol>SIP</VoiceProtocol>\n</SipPeerOriginationSettings>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings were successfully updated"
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/products/termination/settings": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve Sip Peer Termination settings",
        "summary": "Retrieve Sip Peer Termination setting",
        "operationId": "RetrieveSipPeerTerminationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve termination settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTerminationSettingsResponse"
                },
                "examples": {
                  "HTTP Voice protocol": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTerminationSettingsResponse>\n   <SipPeerTerminationSettings>\n      <VoiceProtocol>HTTP</VoiceProtocol>\n      <HttpSettings>\n         <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>\n      </HttpSettings>\n   </SipPeerTerminationSettings>\n</SipPeerTerminationSettingsResponse>"
                  },
                  "SIP Voice protocol": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerOriginationSettingsResponse>\n   <SipPeerOriginationSettings>\n      <VoiceProtocol>SIP</VoiceProtocol>\n   </SipPeerOriginationSettings>\n</SipPeerOriginationSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Create Sip Peer Termination settings",
        "summary": "Create Sip Peer Termination setting",
        "operationId": "CreateSipPeerTerminationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to create termination settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerTerminationSettingsRequest"
              },
              "examples": {
                "HTTP Voice protocol": {
                  "value": "<SipPeerTerminationSettings>\n   <VoiceProtocol>HTTP</VoiceProtocol>\n   <HttpSettings>\n      <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>\n   </HttpSettings>\n</SipPeerTerminationSettings>"
                },
                "SIP Voice protocol": {
                  "value": "<SipPeerTerminationSettings>\n   <VoiceProtocol>SIP</VoiceProtocol>\n</SipPeerTerminationSettings>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Setting were successfully added",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTerminationSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTerminationSettingsResponse>\n   <SipPeerTerminationSettings>\n      <VoiceProtocol>HTTP</VoiceProtocol>\n      <HttpSettings>\n         <HttpVoiceV2AppId>469ebbac-4459-4d98-bc19-a038960e787f</HttpVoiceV2AppId>\n      </HttpSettings>\n   </SipPeerTerminationSettings>\n</SipPeerTerminationSettingsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>Account level settings don`t exist</li><li>Can't create sip peer http protocol sms feature without account level http settings</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <ResponseStatus>\n      <ErrorCode>13609</ErrorCode>\n      <Description>Can't create sip peer http protocol sms feature without account level http settings.</Description>\n   </ResponseStatus>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Update Sip Peer Termination settings<p>Note: Changing the Voice Protocol from SIP to HTTP will remove Voice Hosts or Voice Host Groups and Termination Hosts, which are configured using API /accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}.</p>",
        "summary": "Update Sip Peer Termination setting",
        "operationId": "UpdateSipPeerTerminationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to update termination settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerTerminationSettingsRequest"
              },
              "examples": {
                "HTTP Voice protocol": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTerminationSettings>\n   <VoiceProtocol>HTTP</VoiceProtocol>\n   <HttpSettings>\n      <HttpVoiceV2AppId>867b923b-8a92-4579-b29b-405f165b8124</HttpVoiceV2AppId>\n   </HttpSettings>\n</SipPeerTerminationSettings>"
                },
                "SIP Voice protocol": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerTerminationSettings>\n   <VoiceProtocol>SIP</VoiceProtocol>\n</SipPeerTerminationSettings>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings were successfully updated"
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/products/messaging/features/sms": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve Sip Peer SMS settings",
        "summary": "Retrieve Sip Peer SMS setting",
        "operationId": "RetrieveSipPeerSmsSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve SMS settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload contains sms feature settings for sip peer",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerSmsFeatureResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <SipPeerSmsFeature>\n      <SipPeerSmsFeatureSettings>\n         <TollFree>true</TollFree>\n         <ShortCode>true</ShortCode>\n         <A2pLongCode>DefaultOff</A2pLongCode>\n         <A2pMessageClass>SomeMessageClass</A2pMessageClass>\n         <A2pCampaignId>SomeCampaignId</A2pCampaignId>\n         <Protocol>SMPP</Protocol>\n         <Zone1>true</Zone1>\n         <Zone2>true</Zone2>\n         <Zone3>true</Zone3>\n         <Zone4>true</Zone4>\n         <Zone5>true</Zone5>\n      </SipPeerSmsFeatureSettings>\n      <SmppHosts>\n         <SmppHost>\n            <HostName>54.10.88.146</HostName>\n            <HostId>18</HostId>\n            <Priority>0</Priority>\n            <ConnectionType>RECEIVER_ONLY</ConnectionType>\n         </SmppHost>\n      </SmppHosts>\n   </SipPeerSmsFeature>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Create Sip Peer SMS settings<br/>\n<b>Warning</b>: settings A2pLongCode as 'ON' or 'OFF' will enforce this value for all tns under target sippeer <br/>\n<b>Note</b>: In case of using SMPP protocol, it may be not possible to add or delete hosts with large subnet masks. <br/>\nHost address may or may not include the subnet mask (/32 is assumed if not specified)\nRegular users can only specify subnets not larger then /20. Updating\nsubnet values larger than /20 requires Bandwidth staff intervention (Bandwidth staff may define subnets upto /14)\nAlso, host address should not intersect with addresses used by other services or other accounts,\notherwise a validation error will occur",
        "summary": "Create Sip Peer SMS setting",
        "operationId": "CreateSipPeerSmsSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to create SMS settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerSmsFeature"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeature>\n   <SipPeerSmsFeatureSettings>\n      <TollFree>true</TollFree>\n      <ShortCode>true</ShortCode>\n      <A2pLongCode>DefaultOff</A2pLongCode>\n      <A2pMessageClass>SomeMessageClass</A2pMessageClass>\n      <A2pCampaignId>SomeCampaignId</A2pCampaignId>\n      <Protocol>SMPP</Protocol>\n      <Zone1>true</Zone1>\n      <Zone2>true</Zone2>\n      <Zone3>true</Zone3>\n      <Zone4>true</Zone4>\n      <Zone5>true</Zone5>\n   </SipPeerSmsFeatureSettings>\n   <SmppHosts>\n      <SmppHost>\n         <HostName>54.10.88.146</HostName>\n         <Priority>0</Priority>\n         <ConnectionType>RECEIVER_ONLY</ConnectionType>\n      </SmppHost>\n      <SmppHost>\n         <HostName>47.123.17.16/30</HostName>\n         <Priority>0</Priority>\n         <ConnectionType>RECEIVER_ONLY</ConnectionType>\n      </SmppHost>\n   </SmppHosts>\n</SipPeerSmsFeature>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Settings has been successfully created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerSmsFeatureResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <SipPeerSmsFeature>\n      <SipPeerSmsFeatureSettings>\n         <TollFree>true</TollFree>\n         <ShortCode>true</ShortCode>\n         <A2pLongCode>DefaultOff</A2pLongCode>\n         <A2pMessageClass>SomeMessageClass</A2pMessageClass>\n         <A2pCampaignId>SomeCampaignId</A2pCampaignId>\n         <Protocol>SMPP</Protocol>\n         <Zone1>true</Zone1>\n         <Zone2>true</Zone2>\n         <Zone3>true</Zone3>\n         <Zone4>true</Zone4>\n         <Zone5>true</Zone5>\n      </SipPeerSmsFeatureSettings>\n      <SmppHosts>\n         <SmppHost>\n            <HostName>54.10.88.146</HostName>\n            <HostId>18</HostId>\n            <Priority>0</Priority>\n            <ConnectionType>RECEIVER_ONLY</ConnectionType>\n         </SmppHost>\n         <SmppHost>\n            <HostName>47.123.17.16/30</HostName>\n            <HostId>18</HostId>\n            <Priority>0</Priority>\n            <ConnectionType>RECEIVER_ONLY</ConnectionType>\n         </SmppHost>\n      </SmppHosts>\n   </SipPeerSmsFeature>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>Account level settings don`t exist</li><li>CampaignID shouldn't be present if all of features 'A2pLongCode', 'TollFree' and 'ShortCode' are disabled</li><li>CampaignID is required if at least one of features 'A2pLongCode', 'TollFree' and 'ShortCode' is enabled</li><li>Campaign ID '%s' was not found in list of authorized Campaign IDs.</li><li>A2P Campaign ID '%s' is not valid. Needs to be between 1 and 64 characters. Only alphanumeric characters, whitespaces, dashes, underscores and dots are allowed.</li><li>A2P Message Class '%s' is not valid.</li><li>A2P Message Class is required if at least one of features 'A2pLongCode', 'TollFree' and 'ShortCode' is enabled</li><li>A2P Message Class shouldn't be present if all of features 'A2pLongCode', 'TollFree' and 'ShortCode' are disabled</li><li>A2P Message Class '%s' was not found in list of authorized Message Classes.</li><li>A2P Message Class is required if 'A2pLongCode' is enabled.</li><li>A2P Message Class shouldn't be present if 'A2pLongCode' is disabled.</li><li>A2pLongCode value is invalid. Valid values are: 'ON', 'OFF', 'DefaultOn', 'DefaultOff'.</li><li>Host ip or mask can't be changed</li><li>47.0.0.0/12 has invalid mask. Valid mask values: 14-32</li><li>Termination IP 47.123.17.16/30 overlaps with an address that is already in use</li><li>Termination IP 47.123.17.16/30 overlaps with addresses that are already in use: 47.123.17.18</li><li>The IP address provided: &lt;47.123.17.17&gt; contains a non zero subnet portion. An equivalent IP address such as &lt;47.123.17.16&gt; with a zero subnet value must be provided</li><li>Account '%s' has no '%s' product feature</li><li>Can't create sip peer http protocol sms feature without account level http settings.</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <ResponseStatus>\n      <ErrorCode>13609</ErrorCode>\n      <Description>Can't create sip peer http protocol sms feature without account level http settings.</Description>\n   </ResponseStatus>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied. Possible errors in response:\n<ul><li>Configuring subnet values larger than /20 requires Bandwidth staff intervention</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <ResponseStatus>\n      <ErrorCode>13674</ErrorCode>\n      <Description>Configuring subnet values larger than /20 requires Bandwidth staff intervention</Description>\n   </ResponseStatus>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Update Sip Peer SMS settings<br/>\n<b>Warning</b>: settings A2pLongCode as 'ON' or 'OFF' will enforce this value for all tns under target sippeer <br/>\n<b>Note</b>: In case of using SMPP protocol, it may be not possible to add or delete hosts with large subnet masks. <br/>\nUpdate smpp host. Host address may or may not include the subnet mask (/32 is assumed if not specified)\nRegular users can only specify subnets not larger then /20. Updating subnet values larger than\n/20 requires Bandwidth staff intervention (Bandwidth staff may define subnets upto /14)\nAlso, host address should not intersect with addresses used by other services or other accounts, otherwise a validation error will occur",
        "summary": "Update Sip Peer SMS setting",
        "operationId": "UpdateSipPeerSmsSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to update SMS settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerSmsFeature"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeature>\n   <SipPeerSmsFeatureSettings>\n      <TollFree>false</TollFree>\n      <ShortCode>true</ShortCode>\n      <A2pLongCode>DefaultOff</A2pLongCode>\n      <A2pMessageClass>SomeMessageClass</A2pMessageClass>\n      <A2pCampaignId>SomeCampaignId</A2pCampaignId>\n      <Protocol>SMPP</Protocol>\n      <Zone1>true</Zone1>\n      <Zone2>false</Zone2>\n      <Zone3>false</Zone3>\n      <Zone4>false</Zone4>\n      <Zone5>false</Zone5>\n   </SipPeerSmsFeatureSettings>\n   <SmppHosts>\n      <SmppHost>\n         <HostName>235.133.23.79</HostName>\n         <HostId>6</HostId>\n         <Priority>0</Priority>\n         <ConnectionType>TRANSCEIVER</ConnectionType>\n      </SmppHost>\n      <SmppHost>\n         <HostName>47.123.17.16/30</HostName>\n         <HostId>18</HostId>\n         <Priority>0</Priority>\n         <ConnectionType>TRANSCEIVER</ConnectionType>\n      </SmppHost>\n   </SmppHosts>\n</SipPeerSmsFeature>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings have been successfully updated",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerSmsFeatureResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <SipPeerSmsFeature>\n      <SipPeerSmsFeatureSettings>\n         <TollFree>false</TollFree>\n         <ShortCode>true</ShortCode>\n         <A2pLongCode>DefaultOff</A2pLongCode>\n         <A2pMessageClass>SomeMessageClass</A2pMessageClass>\n         <A2pCampaignId>NewCampaignId</A2pCampaignId>\n         <Protocol>SMPP</Protocol>\n         <Zone1>true</Zone1>\n         <Zone2>false</Zone2>\n         <Zone3>false</Zone3>\n         <Zone4>false</Zone4>\n         <Zone5>false</Zone5>\n      </SipPeerSmsFeatureSettings>\n      <SmppHosts>\n         <SmppHost>\n            <HostName>235.133.23.79</HostName>\n            <HostId>6</HostId>\n            <Priority>0</Priority>\n            <ConnectionType>TRANSCEIVER</ConnectionType>\n         </SmppHost>\n         <SmppHost>\n            <HostName>47.123.17.16/30</HostName>\n            <HostId>18</HostId>\n            <Priority>0</Priority>\n            <ConnectionType>TRANSCEIVER</ConnectionType>\n         </SmppHost>\n      </SmppHosts>\n   </SipPeerSmsFeature>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>CampaignID shouldn't be present if all of features 'A2pLongCode', 'TollFree' and 'ShortCode' are disabled</li><li>CampaignID is required if at least one of features 'A2pLongCode', 'TollFree' and 'ShortCode' is enabled</li><li>Campaign ID '%s' was not found in list of authorized Campaign IDs.</li><li>A2P Campaign ID '%s' is not valid. Needs to be between 1 and 64 characters. Only alphanumeric characters,whitespaces, dashes, underscores and dots are allowed.</li><li>A2P Message Class '%s' is not valid.</li><li>A2P Message Class is required if at least one of features 'A2pLongCode', 'TollFree' and 'ShortCode' is enabled</li><li>A2P Message Class shouldn't be present if all of features 'A2pLongCode', 'TollFree' and 'ShortCode' are disabled</li><li>A2P Message Class '%s' was not found in list of authorized Message Classes.</li><li>A2P Message Class is required if 'A2pLongCode' is enabled.</li><li>A2P Message Class shouldn't be present if 'A2pLongCode' is disabled.</li><li>A2pLongCode value is invalid. Valid values are: 'ON', 'OFF', 'DefaultOn', 'DefaultOff'.</li><li>Host ip or mask can't be changed</li><li>47.0.0.0/12 has invalid mask. Valid mask values: 14-32</li><li>Termination IP 47.123.17.16/30 overlaps with an address that is already in use</li><li>Termination IP 47.123.17.16/30 overlaps with addresses that are already in use: 47.123.17.18</li><li>The IP address provided: &lt;47.123.17.17&gt; contains a non zero subnet portion. An equivalent IP address such as &lt;47.123.17.16&gt; with a zero subnet value must be provided</li><li>Can not disable shortcode sms settings for a SipPeer if shortcode numbers with messaging enabled are present on this SipPeer</li><li>A2pOnly account %s required A2P enabled on location. Valid values are: 'ON', 'DefaultOn'</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <ResponseStatus>\n      <ErrorCode>13637</ErrorCode>\n      <Description>CampaignID shouldn't be present if all of features 'A2pLongCode', 'TollFree' and 'ShortCode' are disabled.</Description>\n   </ResponseStatus>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied. Possible errors in response:\n<ul><li>Configuring subnet values larger than /20 requires Bandwidth staff intervention</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <ResponseStatus>\n      <ErrorCode>13674</ErrorCode>\n      <Description>Configuring subnet values larger than /20 requires Bandwidth staff intervention</Description>\n   </ResponseStatus>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Delete Sip Peer SMS settings",
        "summary": "Delete Sip Peer SMS setting",
        "operationId": "DeleteSipPeerSmsSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to delete SMS settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "Settings have been deleted"
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>SMS feature can't be removed because MMS feature is present, remove it first.</li><li>Can not disable SMS feature on Sip Peer because it has telephone numbers with messaging enabled.</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerSmsFeatureResponse>\n   <ResponseStatus>\n      <ErrorCode>13673</ErrorCode>\n      <Description>Can not disable SMS feature on Sip Peer because it has telephone numbers with messaging enabled.</Description>\n   </ResponseStatus>\n</SipPeerSmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "SMS settings do not exist"
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/products/messaging/features/mms": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve Sip Peer MMS settings",
        "summary": "Retrieve Sip Peer MMS setting",
        "operationId": "RetrieveSipPeerMmsSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve MMS settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MmsFeatureResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MmsFeatureResponse>\n   <MmsFeature>\n      <MmsSettings>\n         <protocol>HTTP</protocol>\n      </MmsSettings>\n      <Protocols>\n         <HTTP>\n            <HttpSettings>\n               <proxyPeerId>500017</proxyPeerId>\n            </HttpSettings>\n         </HTTP>\n      </Protocols>\n   </MmsFeature>\n</MmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Create Sip Peer MMS settings",
        "summary": "Create Sip Peer MMS setting",
        "operationId": "CreateSipPeerMmsSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to create MMS settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerMmsFeature"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MmsFeature>\n   <MmsSettings>\n      <Protocol>MM4</Protocol>\n   </MmsSettings>\n   <Protocols>\n      <MM4>\n         <!--Tls element is optional. If not included default value OFF will be used.-->\n         <Tls>OFF</Tls>\n         <MmsMM4TermHosts>\n            <TermHosts>\n               <TermHost>\n                  <HostName>206.107.248.58</HostName>\n               </TermHost>\n            </TermHosts>\n         </MmsMM4TermHosts>\n         <MmsMM4OrigHosts>\n            <OrigHosts>\n               <OrigHost>\n                  <!--If Tls is ON you can pass only FQDN as hostname. If Tls is OFF you can send either FQDN or IP address.-->\n                  <HostName>30.239.72.55</HostName>\n                  <!--Port element is optional. If not included port will be set based on TLS value (25 for OFF and 587 for ON).-->\n                  <Port>8726</Port>\n                  <Priority>0</Priority>\n               </OrigHost>\n               <OrigHost>\n                  <HostName>25.231.123.32</HostName>\n                  <Priority>0</Priority>\n               </OrigHost>\n            </OrigHosts>\n         </MmsMM4OrigHosts>\n      </MM4>\n   </Protocols>\n</MmsFeature>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Setting was successfully added",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MmsFeatureResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MmsFeatureResponse>\n   <MmsFeature>\n      <MmsSettings>\n         <Protocol>MM4</Protocol>\n      </MmsSettings>\n      <Protocols>\n         <MM4>\n            <Tls>OFF</Tls>\n            <MmsMM4TermHosts>\n               <TermHosts>\n                  <TermHost>\n                     <HostId>1</HostId>\n                     <HostName>206.107.248.58</HostName>\n                  </TermHost>\n               </TermHosts>\n            </MmsMM4TermHosts>\n            <MmsMM4OrigHosts>\n               <OrigHosts>\n                  <OrigHost>\n                     <HostName>30.239.72.55</HostName>\n                     <!--If port wasn't set explicitly it will not be included in response payload.-->\n                     <Port>8726</Port>\n                     <HostId>1</HostId>\n                     <Priority>0</Priority>\n                  </OrigHost>\n                  <OrigHost>\n                     <HostName>25.231.123.32</HostName>\n                     <HostId>2</HostId>\n                     <Priority>0</Priority>\n                  </OrigHost>\n               </OrigHosts>\n            </MmsMM4OrigHosts>\n         </MM4>\n      </Protocols>\n   </MmsFeature>\n</MmsFeatureResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible errors in response:\n<ul><li>Pauload contains two protocol</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MmsFeatureResponse>\n   <ResponseStatus>\n      <ErrorCode>13606</ErrorCode>\n      <Description>Messaging feature may have only one protocol assigned.</Description>\n   </ResponseStatus>\n</MmsFeatureResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Update Sip Peer MMS settings",
        "summary": "Update Sip Peer MMS setting",
        "operationId": "UpdateSipPeerMmsSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to update MMS settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerMmsFeature"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MmsFeature>\n   <MmsSettings>\n      <protocol>HTTP</protocol>\n   </MmsSettings>\n   <Protocols>\n      <HTTP>\n         <HttpSettings>\n            <proxyPeerId>500017</proxyPeerId>\n         </HttpSettings>\n      </HTTP>\n   </Protocols>\n</MmsFeature>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings were successfully updated"
          }
        }
      },
      "delete": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Delete Sip Peer MMS settings",
        "summary": "Delete Sip Peer MMS setting",
        "operationId": "DeleteSipPeerMmsSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to delete MMS settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "Settings were deleted"
          },
          "404": {
            "description": "MMS settings were not found"
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/products/messaging/features/mms/settings": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve Sip Peer MMS feature settings",
        "summary": "Retrieve Sip Peer MMS feature setting",
        "operationId": "RetrieveSipPeerMmsFeatureSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve MMS feature settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MmsFeatureMmsSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<MmsFeatureMmsSettingsResponse>\n   <MmsSettings>\n      <Protocol>MM4</Protocol>\n   </MmsSettings>\n</MmsFeatureMmsSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/products/messaging/applicationSettings": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve Sip Peer Application settings",
        "summary": "Retrieve Sip Peer Application setting",
        "operationId": "RetrieveSipPeerApplicationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve Application settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationsSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationsSettingsResponse>\n   <ApplicationsSettings>\n      <HttpMessagingV2AppId>4a4ca6c1-156b-4fca-84e9-34e35e2afc32</HttpMessagingV2AppId>\n   </ApplicationsSettings>\n</ApplicationsSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Create/update/delete Sip Peer's application settings<br>Set the ApplicationsSettings value to 'REMOVE' to unassign application",
        "summary": "Update Sip Peer Application setting",
        "operationId": "UpdateSipPeerApplicationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to update Application settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationsSettings"
              },
              "examples": {
                "Update": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationsSettings>\n   <HttpMessagingV2AppId>c3b0f805-06ab-4d36-8bf4-8baff7623398</HttpMessagingV2AppId>\n</ApplicationsSettings>"
                },
                "Delete": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationsSettings>REMOVE</ApplicationsSettings>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings were successfully updated",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationsSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ApplicationsSettingsResponse>\n   <ApplicationsSettings>\n      <HttpMessagingV2AppId>c3b0f805-06ab-4d36-8bf4-8baff7623398</HttpMessagingV2AppId>\n   </ApplicationsSettings>\n</ApplicationsSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sippeerId}/products/messaging/settings": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieve Sip Peer Messaging settings",
        "summary": "Retrieve Sip Peer Messaging setting",
        "operationId": "RetrieveSipPeerMessagingSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to retrieve Messaging settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerMessagingSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerMessagingSettingsResponse>\n   <SipPeerMessagingSettings>\n      <BreakOutCountries>\n         <Country>CAN</Country>\n         <Country>GBR</Country>\n      </BreakOutCountries>\n   </SipPeerMessagingSettings>\n</SipPeerMessagingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Create/update/delete Sip Peer's Messaging settings",
        "summary": "Update Sip Peer Messaging setting",
        "operationId": "UpdateSipPeerMessagingSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "name": "sippeerId",
            "description": "ID of the Sip Peer to update Messaging settings",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "500017"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerMessagingSettings"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerMessagingSettings>\n   <BreakOutCountries>\n      <Country>CAN</Country>\n      <Country>GBR</Country>\n   </BreakOutCountries>\n</SipPeerMessagingSettings>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Messaging settings were successfully updated",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerMessagingSettingsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerMessagingSettingsResponse>\n   <SipPeerMessagingSettings>\n      <BreakOutCountries>\n         <Country>CAN</Country>\n         <Country>GBR</Country>\n      </BreakOutCountries>\n   </SipPeerMessagingSettings>\n</SipPeerMessagingSettingsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Messaging settings were not successfully updated",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeerMessagingSettingsResponse>\n   <ResponseStatus>\n      <ErrorCode>13654</ErrorCode>\n      <Description>The country values '[GBR]' do not match a 3-character country code that has been approved for this account.</Description>\n   </ResponseStatus>\n</SipPeerMessagingSettingsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/inserviceNumbers": {
      "get": {
        "tags": [
          "In-service Numbers"
        ],
        "description": "Retrieves all the telephone numbers currently in-service for the given Site",
        "summary": "Retrieve Site in-service numbers",
        "operationId": "RetrieveSiteInserviceNumbers",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "ID of the Site to retrieve all INSERVICE numbers",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          },
          {
            "name": "page",
            "description": "The first in-service number displayed on the page. \"1\" is used as a convention for the first number on the list.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "example": 5555551845
          },
          {
            "name": "size",
            "description": "The count of in-service numbers displayed on the page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 30
          },
          {
            "name": "lata",
            "description": "A maximum five-digit number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 371
          },
          {
            "name": "tier",
            "description": "",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "rateCenter",
            "description": "",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "ST GEORGE"
          },
          {
            "name": "city",
            "description": "",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Raleigh"
          },
          {
            "name": "state",
            "description": "A two-letter representation of the State",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "NC"
          },
          {
            "name": "areaCode",
            "description": "",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "435"
          },
          {
            "name": "npaNxx",
            "description": "",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "435215"
          },
          {
            "name": "npaNxxx",
            "description": "",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4352154"
          },
          {
            "name": "startdate",
            "description": "Startdate and Enddate must be together",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "12-01-01"
          },
          {
            "name": "enddate",
            "description": "Startdate and Enddate must be together",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "14-01-01"
          }
        ],
        "responses": {
          "200": {
            "description": "The numbers have been successfully retrieved",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TNs>\n   <TotalCount>54</TotalCount>\n   <Links>\n      <first>\n         <!-- SNIP -->\n      </first>\n      <next>\n         <!-- SNIP -->\n      </next>\n   </Links>\n   <TelephoneNumbers>\n      <Count>3</Count>\n      <TelephoneNumber>4352154855</TelephoneNumber>\n      <!-- SNIP -->\n      <TelephoneNumber>4352161523</TelephoneNumber>\n   </TelephoneNumbers>\n</TNs>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountTelephoneNumbersHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieves all orders associated with the given Site",
        "summary": "Retrieve Site Orders",
        "operationId": "RetrieveSiteOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "ID of the Site to retrieve associated Orders",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          },
          {
            "name": "size",
            "description": "Sets the amount of responses per page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 30
          },
          {
            "name": "page",
            "description": "The first orders ID to show on the page. \"1\" is used as a convention for the first page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ResponseSelectWrapper>\n   <ListOrderIdUserIdDate>\n      <TotalCount>47</TotalCount>\n      <Links>\n         <first>Link=&lt;https://dashboard.bandwidth.com/api/accounts/12346099/sites/743/orders?page=1&amp;size=30&gt;;rel=\"first\";</first>\n         <next>Link=&lt;https://dashboard.bandwidth.com/api/accounts/12346099/sites/743/orders?page=fa7bc01a-cb4d-4eae-9621-560020f45105&amp;size=30&gt;;rel=\"next\";</next>\n      </Links>\n      <OrderIdUserIdDate>\n         <CountOfTNs>1</CountOfTNs>\n         <userId>jbm</userId>\n         <lastModifiedDate>2014-01-06T19:09:44.027Z</lastModifiedDate>\n         <OrderType>new_number</OrderType>\n         <OrderDate>2014-01-06T19:09:43.695Z</OrderDate>\n         <orderId>13c97416-9eee-4da3-aff8-ba85d1297ef2</orderId>\n         <OrderStatus>COMPLETE</OrderStatus>\n         <TelephoneNumberDetails>\n            <States>\n               <StateWithCount>\n                  <State>VA</State>\n                  <Count>1</Count>\n               </StateWithCount>\n            </States>\n            <RateCenters>\n               <RateCenterWithCount>\n                  <Count>1</Count>\n                  <RateCenter>GLOUCESTER</RateCenter>\n               </RateCenterWithCount>\n            </RateCenters>\n            <Cities>\n               <CityWithCount>\n                  <City>GLOUCESTER</City>\n                  <Count>1</Count>\n               </CityWithCount>\n            </Cities>\n            <Tiers>\n               <TierWithCount>\n                  <Tier>0</Tier>\n                  <Count>1</Count>\n               </TierWithCount>\n            </Tiers>\n            <Vendors>\n               <VendorWithCount>\n                  <VendorId>49</VendorId>\n                  <VendorName>Bandwidth CLEC</VendorName>\n                  <Count>1</Count>\n               </VendorWithCount>\n            </Vendors>\n         </TelephoneNumberDetails>\n      </OrderIdUserIdDate>\n   </ListOrderIdUserIdDate>\n</ResponseSelectWrapper>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteOrdersResponse"
                }
              }
            }
          },
          "404": {
            "description": "Orders cannot be found for that Site. Possible explanations:\n<ul><li>There are no orders associated with that Site.</li><li>The given parameters are invalid.</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Links>\n   <first>Link=&lt;https://dashboard.bandwidth.com/api/accounts/12346099/sites/3013/orders?page=1&amp;size=300&gt;;rel=\"first\";</first>\n</Links>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Retrieves order information associated with the given Site",
        "summary": "Retrieve Site Order",
        "operationId": "RetrieveSiteOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "Site ID of the order",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          },
          {
            "name": "orderId",
            "description": "ID of the Order to retrieve",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ca8065d1-ec1a-43da-af40-1dcee43becb5"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<OrderResponse>\n   <CompletedQuantity>1</CompletedQuantity>\n   <CreatedByUser>jbm</CreatedByUser>\n   <LastModifiedDate>2014-01-06T19:09:44.027Z</LastModifiedDate>\n   <OrderCompleteDate>2014-01-06T19:09:44.041Z</OrderCompleteDate>\n   <Order>\n      <CustomerOrderId>123456789</CustomerOrderId>\n      <Name>Area Code Order</Name>\n      <OrderCreateDate>2014-01-06T19:09:43.695Z</OrderCreateDate>\n      <PeerId>303716</PeerId>\n      <siteId>743</siteId>\n      <BackOrderRequested>false</BackOrderRequested>\n      <AreaCodeSearchAndOrderType>\n         <AreaCode>804</AreaCode>\n         <Quantity>1</Quantity>\n      </AreaCodeSearchAndOrderType>\n      <PartialAllowed>true</PartialAllowed>\n      <SiteId>743</SiteId>\n   </Order>\n   <OrderStatus>COMPLETE</OrderStatus>\n   <CompletedNumbers>\n      <TelephoneNumber>\n         <FullNumber>8042105666</FullNumber>\n      </TelephoneNumber>\n   </CompletedNumbers>\n   <FailedQuantity>0</FailedQuantity>\n</OrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOrderUpdatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/orders/{orderid}/tns": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves order TNs associated with the given Site",
        "summary": "Retrieve Order TNs of Site",
        "operationId": "RetrieveSiteOrderTns",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "Site ID of the order",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          },
          {
            "name": "orderId",
            "description": "ID of the Order to retrieve a list of TNs",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ca8065d1-ec1a-43da-af40-1dcee43becb5"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbers>\n   <Count>1</Count>\n   <TelephoneNumber>8042105666</TelephoneNumber>\n</TelephoneNumbers>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderTelephoneNumbersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/portins": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves Port-in orders associated with the given Site",
        "summary": "Retrieve Site Port-In orders",
        "operationId": "RetrieveSitePortins",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "Site ID of Port-In orders",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          },
          {
            "name": "page",
            "description": "The port-in ID of the first order of the page. \"1\" is used as a convention for the first port-in in the Site ID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "ca8065d1-ec1a-43da-af40-1dcee43becb5"
          },
          {
            "name": "size",
            "description": "The number of port-ins retrieved",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 300
            },
            "example": 30
          },
          {
            "name": "status",
            "description": "Displays the port-ins with the given status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "completed"
          }
        ],
        "responses": {
          "200": {
            "description": "The port-ins have been successfully retrieved.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<LNPResponseWrapper>\n   <TotalCount>7</TotalCount>\n   <Links>\n      <first>\n         <!-- SNIP -->\n      </first>\n      <next>\n         <!-- SNIP -->\n      </next>\n   </Links>\n   <lnpPortInfoForGivenStatus>\n      <CountOfTNs>1</CountOfTNs>\n      <userId>jbm</userId>\n      <OrderId>ca8065d1-ec1a-43da-af40-1dcee43becb5</OrderId>\n      <OrderType>port_in</OrderType>\n      <BillingTelephoneNumber>9192803466</BillingTelephoneNumber>\n      <lastModifiedDate>2014-05-20T14:43:19.222Z</lastModifiedDate>\n      <LNPLosingCarrierId>1537</LNPLosingCarrierId>\n      <LNPLosingCarrierName>Mock Carrier</LNPLosingCarrierName>\n      <OrderDate>2014-05-20T14:43:32.828Z</OrderDate>\n      <ProcessingStatus>CANCELLED</ProcessingStatus>\n      <RequestedFOCDate>2015-05-15T20:00:00.000Z</RequestedFOCDate>\n      <VendorId>49</VendorId>\n      <VendorName>Bandwidth CLEC</VendorName>\n   </lnpPortInfoForGivenStatus>\n</LNPResponseWrapper>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LNPResponseWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/totaltns": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves Site telephone numbers total count",
        "summary": "Retrieve Site TNs count",
        "operationId": "RetrieveSiteTnsCount",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "siteId",
            "description": "ID of the Site to retrieve count of TNs",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "407"
          }
        ],
        "responses": {
          "200": {
            "description": "The total count of Telephone Numbers associated with the Site.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SiteTNsResponse>\n   <SiteTNs>\n      <TotalCount>26</TotalCount>\n   </SiteTNs>\n</SiteTNsResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SiteTNsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "description": "GET is used to retrieve all subscriptions for the account (including email and callback subscriptions). The returned information reflects the subscription as it has been defined, and for callback subscriptions will reflect the status of the latest attempt to place the callback.  The `Status` element will indicate if an error is being encountered when the Bandwidth Dashboard API attempts to place the callback.",
        "operationId": "GetSubscriptions",
        "summary": "Retrieve all subscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The subscriptions retrieval request will return a list of the subscriptions that are created on this account.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SubscriptionsResponse>\n  <Subscriptions>\n    <Subscription>\n      <SubscriptionId>0b3aa54d-0ce5-4f5b-bd75-1c30967b197f</SubscriptionId>\n      <OrderType>orders</OrderType>\n      <EmailSubscription>\n        <Email>bwtest@gmail.com</Email>\n        <DigestRequested>NONE</DigestRequested>\n      </EmailSubscription>\n    </Subscription>\n    <Subscription>\n      <SubscriptionId>ddf05927-780f-4f8f-89ab-e581f52f5f20</SubscriptionId>\n      <CallbackSubscription>\n        <URL>\"https://company.com/iriscallback\"</URL>\n        <Expiry>30000</Expiry>\n        <Status>some message containing status code and response body of last callback</Status>\n        <CallbackCredentials>\n          <BasicAuthentication>\n            <Username>iris</Username>\n          </BasicAuthentication>\n        </CallbackCredentials>\n      </CallbackSubscription>\n    </Subscription>\n    <Subscription>\n      <SubscriptionId>1b2av54d-0ce5-4f5b-bd75-1c30967b197f</SubscriptionId>\n      <EventType>MESSAGING_LOST</EventType>\n      <EmailSubscription>\n        <Email>bwtest@gmail.com</Email>\n        <DigestRequested>DAILY</DigestRequested>\n      </EmailSubscription>\n    </Subscription>\n    <Subscription>\n      <SubscriptionId>1cf05927-780f-4f8f-89ab-e581f52f5e12</SubscriptionId>\n      <EventType>MESSAGING_LOST</EventType>\n      <CallbackSubscription>\n        <URL>\"https://company.com/iriscallback\"</URL>\n        <Expiry>30000</Expiry>\n        <Status>some message containing status code and response body of last callback</Status>\n        <CallbackCredentials>\n          <BasicAuthentication>\n            <Username>iris</Username>\n          </BasicAuthentication>\n        </CallbackCredentials>\n        </CallbackSubscription>\n    </Subscription>\n  </Subscriptions>\n</SubscriptionsResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the account specified does not exist or is locked it will result in a bad request.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "description": "<p>A POST on the /subscriptions resource is used to request a new subscriptions for an account. The POST creates a new e-mail or callback subscription. A well-formed POST will create a subscription resource, and return a subscription ID as part of the location header. The ID is used to uniquely identify the subscription. The user should submit the desired e-mail address for notifications and the frequency with which he wants to get the updates: DAILY (for daily digests) or NONE (immediately after events). OrderId is optional. If OrderId is specified only notifications will be sent for events related to that order. If OrderId is omitted, notifications will be sent related to events of all orders of the specified type.</p><p>The credentials used to impose security on the callbacks are defined in the <CallbackCredentials> element.  The Basic authentication is straightforward, but the <PublicKey> requires a little more explanation.  Please see the document to the left on Mutual Authentication for CallBacks.<CallbackCredentials> can be omitted if the url is http, but using https is recommended for security.<p> When status changes on an order that had been subscribed to with a callback subscription (order update, note added to order), the following payload will be POSTed to the URL of the callback subscription. More detail can be found in the API documentation for the fictitious endpoint <a href='/apis/numbers#operation/OrderWebhook'>/callbacks</a><p>When a event happens that had been subscribed to with a callback subscription (messaging lost, messaging gained etc.), the following payload will be POSTed to the URL of the callback subscription. More detail can be found in the API documentation for the fictitious endpoint <a href='/apis/numbers#operation/OrderWebhook'>/callbacks</a>",
        "operationId": "CreateSubscriptions",
        "summary": "Create subscriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSubscriptionByOrderTypeRequest"
                  },
                  {
                    "$ref": "#/components/schemas/EmailSubscriptionByEventTypeRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CallBackSubscriptionByOrderTypeRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CallBackSubscriptionByEventTypeRequest"
                  }
                ]
              },
              "examples": {
                "orderEmailSubscription": {
                  "summary": "email subscription on order type",
                  "value": "<?xml version=\"1.0\"?>\n<Subscription>\n  <OrderType>portins</OrderType>\n  <OrderId>e75dc861-95ed-427e-8688-976132a69549</OrderId>\n  <EmailSubscription>\n    <Email>newtest@gmail.com</Email>\n    <DigestRequested>DAILY</DigestRequested>\n  </EmailSubscription>\n</Subscription>\n"
                },
                "eventEmailSubscription": {
                  "summary": "email subscription on event type",
                  "value": "<?xml version=\"1.0\"?>\n<Subscription>\n  <EventType>MESSAGING_LOST</EventType>\n  <EmailSubscription>\n    <Email>newtest@gmail.com</Email>\n    <DigestRequested>DAILY</DigestRequested>\n  </EmailSubscription>\n</Subscription>\n"
                },
                "orderCallbackSubscription": {
                  "summary": "callback subscription on order type",
                  "value": "<?xml version=\"1.0\"?>\n<Subscription>\n  <OrderType>orders</OrderType>\n  <CallbackSubscription>\n    <URL>\"http://yourhost:8080/path/to/resource\"</URL>\n    <Expiry>12000</Expiry>\n    <CallbackCredentials>\n      <BasicAuthentication>\n        <Username>superuser</Username>\n        <Password>s3cure</Password>\n      </BasicAuthentication>\n      <PublicKey>LS0tLS1CRUdJTiBDRVJUSU [...] kQgQ0VSVElGSUNBVEUtLS0tLQ0K</PublicKey>\n    </CallbackCredentials>\n  </CallbackSubscription>\n</Subscription>\n"
                },
                "eventCallbackSubscription": {
                  "summary": "callback subscription on event type",
                  "value": "<?xml version=\"1.0\"?>\n<Subscription>\n  <EventType>MESSAGING_LOST</EventType>\n  <CallbackSubscription>\n    <URL>\"http://yourhost:8080/path/to/resource\"</URL>\n    <Expiry>12000</Expiry>\n    <CallbackCredentials>\n      <BasicAuthentication>\n        <Username>superuser</Username>\n        <Password>s3cure</Password>\n      </BasicAuthentication>\n      <PublicKey>LS0tLS1CRUdJTiBDRVJUSU [...] kQgQ0VSVElGSUNBVEUtLS0tLQ0K</PublicKey>\n    </CallbackCredentials>\n  </CallbackSubscription>\n</Subscription>\n"
                }
              }
            }
          }
        },
        "callbacks": {
          "byOrderType": {
            "your_url.com/webhookService": {
              "post": {
                "summary": "The notification callback by order type.",
                "description": "See more details <a href='/docs/numbers/webhooks'>Webhhoks</a>",
                "requestBody": {
                  "content": {
                    "application/xml": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "SubscriptionId": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "OrderType": {
                            "$ref": "#/components/schemas/SubscriptionOrderType"
                          },
                          "OrderId": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "Status": {
                            "type": "string",
                            "enum": [
                              "COMPLETE",
                              "FAILED",
                              "PARTIAL",
                              "EXCEPTION"
                            ]
                          },
                          "Message": {
                            "type": "string"
                          },
                          "Note": {
                            "type": "string"
                          },
                          "CompletedTelephoneNumbers": {
                            "type": "object",
                            "properties": {
                              "TelephoneNumbers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Receive callback."
                  }
                }
              }
            }
          },
          "byEvent": {
            "your_url.com/webhookService": {
              "post": {
                "summary": "The notification callback by event.",
                "description": "See more details <a href='/docs/numbers/webhooks'>Webhhoks</a>",
                "requestBody": {
                  "content": {
                    "application/xml": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "SubscriptionId": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "EventType": {
                            "type": "string",
                            "enum": [
                              "MESSAGING_LOST"
                            ]
                          },
                          "CompletedTelephoneNumbers": {
                            "type": "object",
                            "properties": {
                              "TelephoneNumbers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Receive callback."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "If the subscription is successfully created a CREATED response code will be returned. Response has no payload. The subscription id is returned in the response Location header.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the account specified does not exist or is locked it will result in a bad request.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "If the subscription validation failed (e.g. invalid URL, invalid expiration date, invalid public key).",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "If the subscription for this subscription target already exits it will result in a CONFLICT response.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/subscriptions/{subscriptionid}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "description": "<p>Retrieves the information associated with the subscription ID.\nThe returned information reflects the subscription as it has been defined, and for callback subscriptions will reflect the status of the latest attempt to place the callback.  The <status> element will indicate if an error is being encountered when the Bandwidth Dashboard API attempts to place the callback.\n&lt;Expiry&gt; in the GET response payload, shows how many seconds are remaining before expiration of the subscription.</p>\n",
        "operationId": "GetSubscription",
        "summary": "Retrieve subscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "subscriptionid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A subscription has been retrieved. The information is returned.",
            "content": {
              "application/xml": {
                "examples": {
                  "orderEmailSubscription": {
                    "summary": "email subscription on order type",
                    "value": "<?xml version=\"1.0\"?>\n<SubscriptionsResponse>\n  <Subscriptions>\n    <Subscription>\n      <SubscriptionId>257f9be6-2e81-47bb-afd9-b8c184e9e246</SubscriptionId>\n      <OrderType>portouts</OrderType>\n      <EmailSubscription>\n        <Email>newtest@gmail.com</Email>\n        <DigestRequested>DAILY</DigestRequested>\n      </EmailSubscription>\n    </Subscription>\n  </Subscriptions>\n</SubscriptionsResponse>\n"
                  },
                  "eventEmailSubscription": {
                    "summary": "email subscription on event type",
                    "value": "<?xml version=\"1.0\"?>\n<SubscriptionsResponse>\n  <Subscriptions>\n    <Subscription>\n      <SubscriptionId>957f9be6-2e81-47bb-afd9-b8c184e9e247</SubscriptionId>\n      <EventType>MESSAGING_LOST</EventType>\n      <EmailSubscription>\n        <Email>newtest@gmail.com</Email>\n        <DigestRequested>DAILY</DigestRequested>\n      </EmailSubscription>\n    </Subscription>\n  </Subscriptions>\n</SubscriptionsResponse>\n"
                  },
                  "orderCallbackSubscription": {
                    "summary": "callback subscription on order type",
                    "value": "<?xml version=\"1.0\"?>\n<SubscriptionsResponse>\n  <Subscription>\n    <SubscriptionId>991a60d7-a612-48a5-a86e-326b51997cac</SubscriptionId>\n      <OrderType>portins</OrderType>\n      <CallbackSubscription>\n        <URL>http://customer.com:8087/path/BandwidthHandler</URL>\n        <Expiry>4283455101</Expiry>\n        <Status>200 OK</Status>\n      </CallbackSubscription>\n  </Subscription>\n</SubscriptionsResponse>\n"
                  },
                  "eventCallbackSubscription": {
                    "summary": "callback subscription on event type",
                    "value": "<?xml version=\"1.0\"?>\n<SubscriptionsResponse>\n  <Subscription>\n    <SubscriptionId>091a60d7-a612-48a5-a86e-326b51997cad</SubscriptionId>\n      <EventType>MESSAGING_LOST</EventType>\n      <CallbackSubscription>\n        <URL>http://customer.com:8087/path/BandwidthHandler</URL>\n        <Expiry>4283455101</Expiry>\n        <Status>200 OK</Status>\n      </CallbackSubscription>\n  </Subscription>\n</SubscriptionsResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "description": "Updates the subscription. This can be used to update various values (expiry, email address, url, credentials...). Note that the initial state changes for an order may happen very quickly, so subscribing to an order once the system creates it needs to account for the fact that the initial state may be different based on timing factors. It is recommended that the application creating the subscription check the order status after the subscription is created to ensure the correct initial condition. The same rules around valid or possible values as for POSTs apply.",
        "operationId": "UpdateSubscription",
        "summary": "Update subscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "subscriptionid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Subscription>\n  <OrderType>[portins | portouts | orders | disconnects | dldas | lsrorders | e911s | tnoptions | externalTns | importtnorders | removeImportedTnOrders| emergencyNotificationGroup | emergencyEndpointGroup]</OrderType>\n  <OrderId>[UUID]</OrderId>\n  <EventType>[MESSAGING_LOST]</EventType>\n  <CallbackSubscription>\n    <URL>[valid publically addressable URL]</URL>\n    <Expiry>[time in seconds]</Expiry>\n    <CallbackCredentials>\n      <BasicAuthentication>\n        <Username>[username]</Username>\n        <Password>[password]</Password>\n      </BasicAuthentication>\n      <PublicKey>[BASE64 encoded public key]</PublicKey>\n    </CallbackCredentials>\n  </CallbackSubscription>\n</Subscription>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "<p>Subscription was successfully updated</p>\n",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "<p>Subscription values failed validation</p>\n",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "<p>Subscription does not exist</p>\n",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "description": "Deletes the specified subscription. Note that deleting subscriptions is only supported on a one-by-one basis. Deleting all subscriptions associated with an order requires GETting all of those subscriptions, then deleting them one by one.",
        "operationId": "DeleteSubscription",
        "summary": "Delete subscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "subscriptionid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription has been successfully deleted.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Subscription does not exist.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnoptions": {
      "get": {
        "tags": [
          "Tn Option"
        ],
        "description": "Retrieve a list of the TN Option orders that are associated with the account. A maximum of 1,000 orders can be retrieved per request. If no date range or specific query parameter (marked by <b>*</b> below) is provided, the order results will be limited to the last two years.",
        "operationId": "GetTnOptionOrders",
        "summary": "Retrieve list TN Option orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "status",
            "description": "The status of the TN Option order being searched for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "PROCESSING"
          },
          {
            "name": "tn",
            "description": "<b>*</b> A Telephone Number (TN) that is referenced in the order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "customerOrderId",
            "description": "<b>*</b> The Customer Order ID is an ID assigned by the account owner to provide a reference number for the TN Option order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "ABCCorp12345"
          },
          {
            "name": "modifiedDateFrom",
            "description": "For Date-based searches, the starting date of a date range (inclusive) that will be used to find TN Option Orders that were modified within the date range. It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "modifiedDateTo",
            "description": "For Date-based searches, the ending date of a date range (inclusive) that will be used to find TN Option Orders that were modified within the date range.  It is in the form yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "createdDateFrom",
            "description": "Checks the order's creation date against this value. Orders that have a creation date after this date will be included. Format is yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-22"
          },
          {
            "name": "createdDateTo",
            "description": "Checks the order's creation date against this value. Orders that have a creation date before this date will be included. Format is yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "lastModifiedAfter",
            "description": "Checks the order's last modified date against this value. Orders that have a modification date after this date will be included. Format is yyyy-MM-dd.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2013-10-25"
          },
          {
            "name": "lastModifiedBy",
            "description": "This is the user-name of the user that last modified the TN Option Order.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "smckinnon"
          },
          {
            "name": "orderIdFragment",
            "description": "<b>*</b> This search parameter represents the internal Bandwidth Dashboard API ID that has been assigned to the TN Option Order. This parameter is the first few characters of the internal ID - the entire ID does not need to be specified.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "ed1c0bed-e2"
          },
          {
            "name": "orderDetails",
            "description": "If set to true, a list of order details will be displayed instead the summary information.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the TN Option Orders query provides a broad range of information about the TN Option Orders found by the query, including the data associated with the order, the state of the order, and details about the order if it was successful.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<TnOptionOrderReportResponse>\n   <TnOptionOrders>\n      <TotalCount>2</TotalCount>\n      <TnOptionOrderSummary>\n         <accountId>14</accountId>\n         <CountOfTNs>2</CountOfTNs>\n         <userId>jbm</userId>\n         <lastModifiedDate>2016-01-15T12:01:14.363Z</lastModifiedDate>\n         <OrderDate>2016-01-15T12:01:14.324Z</OrderDate>\n         <OrderType>tn_option</OrderType>\n         <OrderStatus>FAILED</OrderStatus>\n         <OrderId>ddbdc72e-dc27-490c-904e-d0c11291b095</OrderId>\n      </TnOptionOrderSummary>\n      <TnOptionOrderSummary>\n         <accountId>14</accountId>\n         <CountOfTNs>3</CountOfTNs>\n         <userId>jbm</userId>\n         <lastModifiedDate>2016-01-15T11:22:58.969Z</lastModifiedDate>\n         <OrderDate>2016-01-15T11:22:58.789Z</OrderDate>\n         <OrderType>tn_option</OrderType>\n         <OrderStatus>COMPLETE</OrderStatus>\n         <OrderId>409033ee-88ec-43e3-85f3-538f30733963</OrderId>\n      </TnOptionOrderSummary>\n   </TnOptionOrders>\n   <!-- OR -->\n   <TnOptionOrders>\n      <TotalCount>2</TotalCount>\n      <TnOptionOrder>\n         <OrderCreateDate>2016-01-15T12:01:14.324Z</OrderCreateDate>\n         <AccountId>14</AccountId>\n         <CreatedByUser>jbm</CreatedByUser>\n         <OrderId>ddbdc72e-dc27-490c-904e-d0c11291b095</OrderId>\n         <LastModifiedDate>2016-01-15T12:01:14.363Z</LastModifiedDate>\n         <ProcessingStatus>FAILED</ProcessingStatus>\n         <TnOptionGroups>\n            <TnOptionGroup>\n               <NumberFormat>10digit</NumberFormat>\n               <RPIDFormat>10digit</RPIDFormat>\n               <RewriteUser>testUser1</RewriteUser>\n               <CallForward>6042661720</CallForward>\n               <CallingNameDisplay>on</CallingNameDisplay>\n               <Protected>true</Protected>\n               <Sms>on</Sms>\n               <FinalDestinationURI>sip:+12345678901@1.2.3.4:5060</FinalDestinationURI>\n               <TelephoneNumbers>\n                  <TelephoneNumber>2018551020</TelephoneNumber>\n               </TelephoneNumbers>\n            </TnOptionGroup>\n            <TnOptionGroup>\n               <CallingNameDisplay>off</CallingNameDisplay>\n               <Protected>false</Protected>\n               <Sms>off</Sms>\n               <TelephoneNumbers>\n                  <TelephoneNumber>2018551025</TelephoneNumber>\n               </TelephoneNumbers>\n            </TnOptionGroup>\n         </TnOptionGroups>\n         <ErrorList>\n            <Error>\n               <Code>5076</Code>\n               <Description>Telephone number is not available.</Description>\n               <TelephoneNumber>2018551025</TelephoneNumber>\n            </Error>\n            <Error>\n               <Code>5076</Code>\n               <Description>Telephone number is not available.</Description>\n               <TelephoneNumber>2018551020</TelephoneNumber>\n            </Error>\n         </ErrorList>\n      </TnOptionOrder>\n      <TnOptionOrder>\n         <OrderCreateDate>2016-01-15T11:22:58.789Z</OrderCreateDate>\n         <AccountId>14</AccountId>\n         <CreatedByUser>jbm</CreatedByUser>\n         <OrderId>409033ee-88ec-43e3-85f3-538f30733963</OrderId>\n         <LastModifiedDate>2016-01-15T11:22:58.969Z</LastModifiedDate>\n         <ProcessingStatus>COMPLETE</ProcessingStatus>\n         <TnOptionGroups>\n            <TnOptionGroup>\n               <CallingNameDisplay>on</CallingNameDisplay>\n               <TelephoneNumbers>\n                  <TelephoneNumber>2174101601</TelephoneNumber>\n               </TelephoneNumbers>\n            </TnOptionGroup>\n            <TnOptionGroup>\n               <CallingNameDisplay>off</CallingNameDisplay>\n               <TelephoneNumbers>\n                  <TelephoneNumber>2174101602</TelephoneNumber>\n               </TelephoneNumbers>\n            </TnOptionGroup>\n            <TnOptionGroup>\n               <CallingNameDisplay>systemdefault</CallingNameDisplay>\n               <TelephoneNumbers>\n                  <TelephoneNumber>2174101603</TelephoneNumber>\n               </TelephoneNumbers>\n            </TnOptionGroup>\n         </TnOptionGroups>\n         <ErrorList />\n      </TnOptionOrder>\n   </TnOptionOrders>\n</TnOptionOrderReportResponse>"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TnOptionOrderReportSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/TnOptionOrderReportDetailedResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found.  If any errors are found in the processing of the query string a 404 will be returned.  Note that parameters that are not recognized are not considered errors, and are just ignored.\n",
            "content": {
              "application/xml": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tn Option"
        ],
        "description": "Create TN Option order to assign line features to the telephone number.<br><br>Attribute description:<ul><li>for A2pSettings attribute</li><table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"0\"><tbody><tr><th>Number attribute</th><th>Action value</th><th>Description of action</th></tr><tr><td>LongCode</td><td><i>systemDefault</i></td><td>Removes the per-TN A2P attributes, and it reverts to the Location/SIP Peer characteristics. Any values for Class or Campaign ID are not valid</td></tr><tr><td>LongCode</td><td><i>asSpecified</i></td><td>Sets the message class and campaign ID - this is the default if unspecified</td></tr><tr><td>LongCode</td><td><i>off</i></td><td>Will set the TN as a 'P' TN. Any values for Class or Campaign ID are not valid</td></tr><tr><td>LongCode</td><td><i>delete</i></td><td>Will delete the campaign ID from TN. Any values for Class or Campaign ID are not valid</td></tr><tr><td>LongCode</td><td><i>unchanged</i></td><td>Do nothing with respect to A2P</td></tr><tr><td>TollFree</td><td><i>systemDefault</i></td><td>Removes the per-TN A2P attributes, and it reverts to the Location/SIP Peer characteristics. Any values for Class or Campaign ID are not valid</td></tr><tr><td>TollFree</td><td><i>asSpecified</i></td><td>Sets the message class and campaign ID - this is the default if unspecified</td></tr><tr><td>TollFree</td><td><i>off</i></td><td>If the Togglz value is set to 'on' this is invalid for Toll Free telephone numbers. Any values for Class or Campaign ID in the payload are invalid. If the Togglz value is set to off this behaves like and A2P TN, where the characteristics of the TNs is set to 'P'</td></tr><tr><td>TollFree</td><td><i>unchanged</i></td><td>Do nothing with respect to A2P</td></tr></tbody></table><li>for Origination Route plan attribute</li><table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"0\"><tbody><tr><th>Action value</th><th>Description of action</th></tr><tr><td>asSpecified</td><td>Creates/updates the origination route plan for the TN with route plan details provided in the request </td></tr><tr><td>off</td><td>Removes the origination route plan for the TN. Route list is the request must be empty</td></tr><tr><td>unchanged</td><td>Doesn't update/create the origination route plan, even when route plan details exist in the request</td></tr></tbody></table><ul><li> Origination route plan is validated against CallForward and RewriteUser</li><ul><li type=\"square\">Route plan and CallForward cannot co-exist. Order is accepted but will respond with error messages on GET.</li><li type=\"square\">Route plan and RewriteUser cannot co-exist. Order is accepted but will respond with error messages on GET.</li></ul></ul><li>for Pindrop Enabled attribute</li><table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"0\"><tbody><tr><th>Action value</th><th>Description of action</th></tr><tr><td>true</td><td>Enables Pindrop integration on each phone number in the option group</td></tr><tr><td>false</td><td>Explicitly disables Pindrop integration on each phone number in the option group</td></tr></tbody></table><li>for other attribute</li><ul><li type=\"square\"> <i>systemDefault</i> - implies that the element profile value should be removed so that the TN changes back to the default system behavior;</li><li type=\"square\"> <i>unchanged</i> - the value should remain unchanged - implies a read before write model.</li><li type=\"square\"><u>Leaving the element out of the payload is equivalent to <i>unchanged</i>.</u></li></ul></ul>",
        "operationId": "CreateTnOptionOrder",
        "summary": "Create TN Option order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnOptionOrder>\n  <CustomerOrderId>TnOptionOrder1</CustomerOrderId>\n  <TnOptionGroups>\n    <TnOptionGroup>\n      <NumberFormat>10digit</NumberFormat>\n      <RPIDFormat>10digit</RPIDFormat>\n      <RewriteUser>testUser1</RewriteUser>\n      <CallForward>6042661720</CallForward>\n      <CallingNameDisplay>on</CallingNameDisplay>\n      <PortOutPasscode>a1b2c3</PortOutPasscode>\n      <Protected>true</Protected>\n      <Sms>on</Sms>\n      <FinalDestinationURI>sip:+12345678901@1.2.3.4:5060</FinalDestinationURI>\n      <A2pSettings>\n        <MessageClass>M</MessageClass>\n        <CampaignId>campaignId010</CampaignId>\n        <Action>asSpecified</Action>\n      </A2pSettings>\n      <TelephoneNumbers>\n        <TelephoneNumber>2018551020</TelephoneNumber>\n      </TelephoneNumbers>\n    </TnOptionGroup>\n    <TnOptionGroup>\n      <CallingNameDisplay>off</CallingNameDisplay>\n      <Protected>false</Protected>\n      <Sms>off</Sms>\n      <OriginationRoutePlan>\n        <Route>\n          <Endpoint>6105552502</Endpoint>\n          <Priority>1</Priority>\n          <Weight>100</Weight>\n        </Route>\n        <Route>\n          <Endpoint>sip:clarkkent@dailyplanet.com</Endpoint>\n          <Priority>2</Priority>\n          <Weight>100</Weight>\n        </Route>\n        <Route>\n          <Endpoint>192.168.20.21</Endpoint>\n          <Priority>3</Priority>\n          <Weight>50</Weight>\n        </Route>\n        <Route>\n          <Endpoint>7075552509</Endpoint>\n          <Priority>3</Priority>\n          <Weight>50</Weight>\n        </Route>\n        <Route>\n          <Endpoint>myhost.bandwidth.example</Endpoint>\n          <Priority>4</Priority>\n          <Weight>100</Weight>\n        </Route>\n        <Action>asSpecified</Action>\n      </OriginationRoutePlan>\n      <TelephoneNumbers>\n        <TelephoneNumber>2018551025</TelephoneNumber>\n      </TelephoneNumbers>\n    </TnOptionGroup>\n    <TnOptionGroup>\n      <PindropEnabled>true</PindropEnabled>\n      <TelephoneNumbers>\n        <TelephoneNumber>2018551026</TelephoneNumber>\n      </TelephoneNumbers>\n    </TnOptionGroup>\n  </TnOptionGroups>\n</TnOptionOrder>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/TnOptionOrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnOptionOrderResponse>\n  <TnOptionOrder>\n    <OrderCreateDate>2016-01-15T12:01:14.324Z</OrderCreateDate>\n    <AccountId>14</AccountId>\n    <CreatedByUser>jbm</CreatedByUser>\n    <OrderId>ddbdc72e-dc27-490c-904e-d0c11291b095</OrderId>\n    <LastModifiedDate>2016-01-15T12:01:14.324Z</LastModifiedDate>\n    <ProcessingStatus>RECEIVED</ProcessingStatus>\n    <TnOptionGroups>\n      <TnOptionGroup>\n        <NumberFormat>10digit</NumberFormat>\n        <RPIDFormat>10digit</RPIDFormat>\n        <RewriteUser>testUser1</RewriteUser>\n        <CallForward>6042661720</CallForward>\n        <CallingNameDisplay>on</CallingNameDisplay>\n        <Protected>true</Protected>\n        <Sms>on</Sms>\n        <TelephoneNumbers>\n          <TelephoneNumber>2018551020</TelephoneNumber>\n        </TelephoneNumbers>\n      </TnOptionGroup>\n      <TnOptionGroup>\n        <CallingNameDisplay>off</CallingNameDisplay>\n        <Protected>false</Protected>\n        <Sms>off</Sms>\n        <TelephoneNumbers>\n          <TelephoneNumber>2018551025</TelephoneNumber>\n        </TelephoneNumbers>\n      </TnOptionGroup>\n    </TnOptionGroups>\n    <ErrorList/>\n  </TnOptionOrder>\n</TnOptionOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOptionOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request A 400 response Indicates that the order could not be created. Error text and an error code will be provided in the ErrorList element.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnOptionOrderResponse>\n  <ResponseStatus>\n    <ErrorCode>5081</ErrorCode>\n    <Description>Number Format 'wrong' is invalid.</Description>\n  </ResponseStatus>\n</TnOptionOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOptionOrderErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Error text and an error code will be provided in the ErrorList element.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnOptionOrderResponse>\n  <ResponseStatus>\n    <ErrorCode>5200</ErrorCode>\n    <Description>Origination route plan is not enabled for the account.</Description>\n  </ResponseStatus>\n</TnOptionOrderResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOptionOrderErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnoptions/{orderid}": {
      "get": {
        "tags": [
          "Tn Option"
        ],
        "description": "Retrieve information about a TN Option Order with specified ID.",
        "operationId": "GetTnOptionOrder",
        "summary": "Retrieve TN Option order",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the TN Option Orders query provides a broad range of information about the TN Option Order identified in the URL.  Included amongst the information is: <ul><li>ErrorList - the errors discovered with codes and explanations</li><li>Warnings - the warnings discovered with explanations</li><li>ProcessingStatus(RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED) - the overall status of the order</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnOptionOrder>\n  <OrderCreateDate>2016-01-15T11:22:58.789Z</OrderCreateDate>\n  <AccountId>14</AccountId>\n  <CreatedByUser>jbm</CreatedByUser>\n  <OrderId>409033ee-88ec-43e3-85f3-538f30733963</OrderId>\n  <LastModifiedDate>2016-01-15T11:22:58.969Z</LastModifiedDate>\n  <ProcessingStatus>COMPLETE</ProcessingStatus>\n  <TnOptionGroups>\n    <TnOptionGroup>\n      <CallingNameDisplay>on</CallingNameDisplay>\n      <Sms>on</Sms>\n      <TelephoneNumbers>\n        <TelephoneNumber>2174101601</TelephoneNumber>\n      </TelephoneNumbers>\n    </TnOptionGroup>\n    <TnOptionGroup>\n      <CallingNameDisplay>off</CallingNameDisplay>\n      <TelephoneNumbers>\n        <TelephoneNumber>2174101602</TelephoneNumber>\n      </TelephoneNumbers>\n      </TnOptionGroup>\n    <TnOptionGroup>\n      <CallingNameDisplay>systemdefault</CallingNameDisplay>\n      <FinalDestinationURI>sip:+12345678901@1.2.3.4:5060</FinalDestinationURI>\n      <TelephoneNumbers>\n        <TelephoneNumber>2174101603</TelephoneNumber>\n      </TelephoneNumbers>\n    </TnOptionGroup>\n  </TnOptionGroups>\n  <ErrorList/>\n  <Warnings>\n    <Warning>\n      <TelephoneNumber>2174101601</TelephoneNumber>\n      <Description>SMS is already Enabled or number is in processing.</Description>\n    </Warning>\n  </Warnings>\n</TnOptionOrder>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOptionOrderReportDetailedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found. The order id does not exist in the system.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnOptionOrderReportResponse>\n  <ResponseStatus>\n    <Description>The resource does not exist</Description>\n  </ResponseStatus>\n</TnOptionOrderReportResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOptionOrderReportErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnoptions/{orderid}/history": {
      "get": {
        "tags": [
          "Tn Option"
        ],
        "description": "Retrieve the history information associated with an order.",
        "operationId": "GetOrderHistory",
        "summary": "Retrieve TN Option order history",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The history payload is a set of history records, each of which contains: <table style=\"text-align: left; width: 80%;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n        <tbody>\n            <tr>\n                <td>OrderDate</td>\n                <td>The date that the order history event happened</td></tr><tr><td>Status</td><td>The new state of the TN Option order - RECEIVED, PROCESSING, COMPLETE, PARTIAL, FAILED</td></tr><tr><td>Note</td><td>A Note or additional information included with the state change</td></tr><tr><td>Author</td><td>The user id that implemented the state change</td></tr></tbody></table></p>",
            "content": {
              "application/xml": {
                "examples": {
                  "application/xml": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<OrderHistoryWrapper>\n   <OrderHistory>\n      <OrderDate>2020-09-17T08:56:39.607Z</OrderDate>\n      <Note>Order has been received by the system.</Note>\n      <Author>admin</Author>\n      <Status>received</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2020-09-17T08:56:39.743Z</OrderDate>\n      <Note>Order processing has started.</Note>\n      <Author>admin</Author>\n      <Status>processing</Status>\n   </OrderHistory>\n   <OrderHistory>\n      <OrderDate>2020-09-17T08:56:39.820Z</OrderDate>\n      <Note>Order is complete.</Note>\n      <Author>admin</Author>\n      <Status>complete</Status>\n   </OrderHistory>\n</OrderHistoryWrapper>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryWrapper"
                }
              }
            }
          },
          "404": {
            "description": "Not found. The order id does not exist in the system.",
            "content": {
              "application/xml": {}
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnreservation": {
      "post": {
        "tags": [
          "Tn Reservation"
        ],
        "description": "Reserves a telephone number for a default time of 4 hours. A successful reservation returns a location header that can be used to retrieve the reservation at a later time.",
        "operationId": "ReserveTn",
        "summary": "Reserve tn",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Reservation>\n  <ReservedTn>4354770625</ReservedTn>\n</Reservation>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ReservationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The TN has been successfully reserved, with the link to the reservation in the Location Header.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReservationResponse>\n  <Reservation>\n    <ReservationId>f342904f-b03a-4499-bac0-e8f43a2664a1</ReservationId>\n    <AccountId>12346099</AccountId>\n    <ReservationExpires>1492</ReservationExpires>\n    <ReservedTn>4354776010</ReservedTn>\n  </Reservation>\n</ReservationResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ReservationResponse"
                }
              }
            }
          },
          "400": {
            "description": "The Telephone Number requested is not available.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReservationResponse>\n  <ResponseStatus>\n    <ErrorCode>5041</ErrorCode>\n    <Description>Reservation failed: telephone number 4354776010 is not available.</Description>\n  </ResponseStatus>\n</ReservationResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ReservationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnreservation/{reservationid}": {
      "get": {
        "tags": [
          "Tn Reservation"
        ],
        "description": "Retrieves a TN reservation's information.",
        "operationId": "GetTnReservation",
        "summary": "Retrieve tn reservation's information",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "reservationid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A reservation's information has been successfully retrieved.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReservationResponse>\n  <Reservation>\n    <ReservationId>f342904f-b03a-4499-bac0-e8f43a2664a1</ReservationId>\n    <AccountId>12346099</AccountId>\n    <ReservationExpires>1492</ReservationExpires>\n    <ReservedTn>4354776010</ReservedTn>\n  </Reservation>\n</ReservationResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ReservationResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tn Reservation"
        ],
        "description": "Deletes a TN reservation.",
        "operationId": "DeleteTnReservation",
        "summary": "Delete tn reservation",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "reservationid",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A reservation has been successfully deleted.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ReservationResponse>\n  <Reservation>\n    <ReservationId>f342904f-b03a-4499-bac0-e8f43a2664a1</ReservationId>\n    <AccountId>12346099</AccountId>\n    <ReservationExpires>1492</ReservationExpires>\n    <ReservedTn>4354776010</ReservedTn>\n  </Reservation>\n</ReservationResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ReservationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tollFreePortingValidations": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Fetch toll free porting validation orders associated with this account.  The get operation on /accounts/{accountId}/tollFreePortingValidations allows you to find recent toll free porting validation orders.  This might be useful if, for example, you lose the order id that was returned in the 201 response to the POST operation that created the order.<br><br>\nWith no query parameters, the results include all recent toll free porting validation orders associated with the account specified in the URI parameter.  A query parameter called tollFreeNumber can be optionally specified to narrow the results to only orders that included the specified toll free telephone number.\n",
        "operationId": "GetTollFreePortingValidations",
        "summary": "Retrieve toll-free porting validations",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "tollFreeNumber",
            "description": "This optional query parameter may be specified in order to retrieve only toll free porting validation orders that include the specified toll free telephone number.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "8442948899"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response to the GET could include different statuses: COMPLETED, PROCESSING, FAILED, CANCELED.",
            "content": {
              "application/xml": {
                "examples": {
                  "orderIsStillProcessing": {
                    "summary": "Order is still processing",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponses>\n  <TollFreePortingValidationResponse>\n    <TollFreePortingValidation>\n      <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n      <ProcessingStatus>PROCESSING</ProcessingStatus>\n      <AccountId>9900572</AccountId>\n      <CreatedByUser>testuser</CreatedByUser>\n      <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n      <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n      <TollFreeNumberList>\n        <TollFreeNumber>8442948899</TollFreeNumber>\n        <TollFreeNumber>8774024485</TollFreeNumber>\n      </TollFreeNumberList>\n    </TollFreePortingValidation>\n  </TollFreePortingValidationResponse>\n</TollFreePortingValidationResponses>"
                  },
                  "orderIsCompleted": {
                    "summary": "Order is completed",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponses>\n  <TollFreePortingValidationResponse>\n    <TollFreePortingValidation>\n      <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n      <ProcessingStatus>COMPLETE</ProcessingStatus>\n      <AccountId>9900572</AccountId>\n      <CreatedByUser>testuser</CreatedByUser>\n      <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n      <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n      <TollFreeNumberList>\n        <TollFreeNumber>8442948899</TollFreeNumber>\n        <TollFreeNumber>8774024485</TollFreeNumber>\n      </TollFreeNumberList>\n      <Breakdown>\n        <PortableTollFreeNumberList>\n          <RespOrgList>\n            <RespOrg>\n              <Id>RespOrg1</Id>\n              <RespOrgException>true</RespOrgException>\n              <TollFreeNumberList>\n                <TollFreeNumber>8442948899</TollFreeNumber>\n                <TollFreeNumber>8774024485</TollFreeNumber>\n              </TollFreeNumberList>\n            </RespOrg>\n          </RespOrgList>\n        </PortableTollFreeNumberList>\n      </Breakdown>\n    </TollFreePortingValidation>\n  </TollFreePortingValidationResponse>\n</TollFreePortingValidationResponses>"
                  },
                  "orderIsFailed": {
                    "summary": "Order is failed",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponses>\n  <TollFreePortingValidationResponse>\n    <TollFreePortingValidation>\n      <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n      <ProcessingStatus>FAILED</ProcessingStatus>\n      <AccountId>9900572</AccountId>\n      <CreatedByUser>testuser</CreatedByUser>\n      <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n      <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n      <TollFreeNumberList>\n        <TollFreeNumber>8442948899</TollFreeNumber>\n        <TollFreeNumber>8774024485</TollFreeNumber>\n        <TollFreeNumber>8662894621</TollFreeNumber>\n        <TollFreeNumber>8773732047</TollFreeNumber>\n        <TollFreeNumber>8449978331</TollFreeNumber>\n        <TollFreeNumber>8003985992</TollFreeNumber>\n      </TollFreeNumberList>\n      <ErrorList>\n        <Error>\n          <Code>7859</Code>\n          <Description>Description for error 7859</Description>\n        </Error>\n        <Error>\n          <Code>9877</Code>\n          <Description>Description for error 9877</Description>\n        </Error>\n      </ErrorList>\n      <Breakdown>\n        <PortableTollFreeNumberList>\n          <RespOrgList>\n            <RespOrg>\n              <Id>RespOrg1</Id>\n              <RespOrgException>false</RespOrgException>\n              <TollFreeNumberList>\n                <TollFreeNumber>8662894621</TollFreeNumber>\n              </TollFreeNumberList>\n            </RespOrg>\n          </RespOrgList>\n        </PortableTollFreeNumberList>\n        <ManuallyPortableTollFreeNumberList>\n          <DisconnectedTollFreeNumberList>\n            <TollFreeNumber>8449978331</TollFreeNumber>\n          </DisconnectedTollFreeNumberList>\n          <TransitionalTollFreeNumberList>\n            <TollFreeNumber>8003985992</TollFreeNumber>\n          </TransitionalTollFreeNumberList>\n        </ManuallyPortableTollFreeNumberList>\n        <NonPortableTollFreeNumberList>\n          <SpareTollFreeNumberList>\n            <TollFreeNumber>8442948899</TollFreeNumber>\n          </SpareTollFreeNumberList>\n          <UnavailableTollFreeNumberList>\n            <TollFreeNumber>8774024485</TollFreeNumber>\n          </UnavailableTollFreeNumberList>\n          <DeniedTollFreeNumberList>\n            <DeniedTollFreeNumber>\n              <TollFreeNumber>8773732047</TollFreeNumber>\n              <SomosErrorCode>07</SomosErrorCode>\n              <SomosErrorDescription>NXX CLOSED</SomosErrorDescription>\n            </DeniedTollFreeNumber>\n          </DeniedTollFreeNumberList>\n        </NonPortableTollFreeNumberList>\n      </Breakdown>\n    </TollFreePortingValidation>\n  </TollFreePortingValidationResponse>\n</TollFreePortingValidationResponses>"
                  },
                  "orderIsCanceled": {
                    "summary": "Order is canceled",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponses>\n  <TollFreePortingValidationResponse>\n    <TollFreePortingValidation>\n      <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n      <ProcessingStatus>CANCELLED</ProcessingStatus>\n      <AccountId>9900572</AccountId>\n      <CreatedByUser>testuser</CreatedByUser>\n      <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n      <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n      <TollFreeNumberList>\n        <TollFreeNumber>8442948899</TollFreeNumber>\n        <TollFreeNumber>8774024485</TollFreeNumber>\n      </TollFreeNumberList>\n    </TollFreePortingValidation>\n  </TollFreePortingValidationResponse>\n</TollFreePortingValidationResponses>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TollFreePortingValidationOrdersResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request must be authenticated with a valid username and password using basic authentication.",
            "content": {
              "application/xml": {}
            }
          },
          "403": {
            "description": "The specified account does not have the toll free product -OR- The user does not have permission to fetch toll free porting validation orders.",
            "content": {
              "application/xml": {}
            }
          },
          "404": {
            "description": "The accountId specified in the request URI is not found.",
            "content": {
              "application/xml": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "A list of toll free telephone numbers submitted to this endpoint will result in that list being broken down as follows: <ul><li>A list of SPARE toll free telephone numbers.  These are numbers that are not associated with any RespOrg, and therefore could be ordered by a RespOrg.  Note that only toll free numbers associated with Bandwidth's RespOrg can be ordered from Bandwidth.</li><li>A list of UNAVAILABLE toll free telephone numbers.  These are numbers that are reserved or otherwise not available for ordering by any RespOrg.</li><li>A list of DENIED toll free telephone numbers.  These are toll free telephone numbers that are malformed or in a state that makes them unavailable for use.</li><li>A list of toll free telephone numbers that are currently associated with RespOrgs.  The list will be broken down by RespOrg Identifier.</li><li>A list of DISCONNECTED toll free telephone numbers.  These are numbers that have been disconnected by the controlling RespOrg and must be manually ported with Bandwidth's assistance.</li><li>A list of TRANSITIONAL toll free telephone numbers.  These are numbers that have been disconnected by the controlling RespOrg and are transitioning to SPARE. They must be manually ported with Bandwidth's assistance.</li><li>Any of these lists may be empty, but at least one will include toll free telephone numbers that you supplied.  All of the toll free telephone numbers that you supply will be accounted for in the results.</li><li>So why do I need this information, you may be asking: Toll Free port-in requests sent to Bandwidth must be broken down into one port-in request for each losing RespOrg.  This means you cannot include toll free telephone numbers that are SPARE, UNAVAILABLE, or DENIED, and you cannot include toll free telephone numbers associated with more than one RespOrgId in the same port-in request.  Port-in requests that do not conform to these rules will be rejected by Bandwidth.  This API endpoint gives you the information needed to avoid these rejections.</li><li>You may also provide a CustomerOrderId string that will be included in responses and status notifications for the order.  But the CustomerOrderId is optional.</li></ul>",
        "operationId": "CreateTollFreePortingValidation",
        "summary": "Create toll-free porting validation",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidation>\n  <!-- The CustomerOrderId is an optional string that may be associated with the order.  -->\n  <!-- It will be included in all responses and notifications related to the order, and may be used to correlate with an order in a customer system. -->\n  <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n  <!-- The TollFreeNumberList is a list of toll free telephone numbers for which you want information about the status and RespOrg from SOMOS. -->\n  <!-- The list may consist of up to 5,000 toll free telephone numbers in one order.  The more numbers in the order, the longer it will take the order to complete. -->\n  <TollFreeNumberList>\n    <TollFreeNumber>8442948899</TollFreeNumber>\n    <TollFreeNumber>8774024485</TollFreeNumber>\n  </TollFreeNumberList>\n</TollFreePortingValidation>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/TollFreePortingValidationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The success response to a POST operation on the /tollFreePortingValidations endpoint looks like the following.<br>The CustomerOrderId is copied from the request.<br>The ProcessingStatus may be one of:<br><ul><li>SUBMITTED - The order has been submitted to SOMOS, but we have not yet received an acknowledgement that they've received the order.</li><li>PROCESSING - The order is still awaiting a response from SOMOS.  If no errors are present in the request, the status of a newly created order is almost always PROCESSING.</li><li>COMPLETED - The order has completed and the toll free numbers are broken down as described above.</li><li>FAILED - The order has failed and the reasons for the failure are included.</li><li>CANCELLED - The order was cancelled prior to completion.  No results are available.</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "orderIsStillProcessing": {
                    "summary": "Order is still processing",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <TollFreePortingValidation>\n    <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n    <ProcessingStatus>PROCESSING</ProcessingStatus>\n    <AccountId>9900572</AccountId>\n    <CreatedByUser>testuser</CreatedByUser>\n    <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n    <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n    <TollFreeNumberList>\n      <TollFreeNumber>8442948899</TollFreeNumber>\n      <TollFreeNumber>8774024485</TollFreeNumber>\n    </TollFreeNumberList>\n  </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  },
                  "orderIsCompleted": {
                    "summary": "Order is completed",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <TollFreePortingValidation>\n    <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n    <ProcessingStatus>COMPLETE</ProcessingStatus>\n    <AccountId>9900572</AccountId>\n    <CreatedByUser>testuser</CreatedByUser>\n    <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n    <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n    <TollFreeNumberList>\n      <TollFreeNumber>8442948899</TollFreeNumber>\n      <TollFreeNumber>8774024485</TollFreeNumber>\n    </TollFreeNumberList>\n    <Breakdown>\n      <PortableTollFreeNumberList>\n        <RespOrgList>\n          <RespOrg>\n            <Id>RespOrg1</Id>\n            <RespOrgException>true</RespOrgException>\n            <TollFreeNumberList>\n              <TollFreeNumber>8442948899</TollFreeNumber>\n              <TollFreeNumber>8774024485</TollFreeNumber>\n            </TollFreeNumberList>\n          </RespOrg>\n        </RespOrgList>\n      </PortableTollFreeNumberList>\n    </Breakdown>\n  </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  },
                  "orderIsFailed": {
                    "summary": "Order is failed",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <TollFreePortingValidation>\n    <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n    <ProcessingStatus>FAILED</ProcessingStatus>\n    <AccountId>9900572</AccountId>\n    <CreatedByUser>testuser</CreatedByUser>\n    <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n    <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n    <TollFreeNumberList>\n      <TollFreeNumber>8442948899</TollFreeNumber>\n      <TollFreeNumber>8774024485</TollFreeNumber>\n      <TollFreeNumber>8662894621</TollFreeNumber>\n      <TollFreeNumber>8773732047</TollFreeNumber>\n      <TollFreeNumber>8449978331</TollFreeNumber>\n      <TollFreeNumber>8003985992</TollFreeNumber>\n    </TollFreeNumberList>\n    <ErrorList>\n      <Error>\n        <Code>7859</Code>\n        <Description>Description for error 7859</Description>\n      </Error>\n      <Error>\n        <Code>9877</Code>\n        <Description>Description for error 9877</Description>\n      </Error>\n    </ErrorList>\n    <Breakdown>\n      <PortableTollFreeNumberList>\n        <RespOrgList>\n          <RespOrg>\n            <Id>RespOrg1</Id>\n            <RespOrgException>false</RespOrgException>\n            <TollFreeNumberList>\n              <TollFreeNumber>8662894621</TollFreeNumber>\n            </TollFreeNumberList>\n          </RespOrg>\n        </RespOrgList>\n      </PortableTollFreeNumberList>\n      <ManuallyPortableTollFreeNumberList>\n        <DisconnectedTollFreeNumberList>\n          <TollFreeNumber>8449978331</TollFreeNumber>\n        </DisconnectedTollFreeNumberList>\n        <TransitionalTollFreeNumberList>\n          <TollFreeNumber>8003985992</TollFreeNumber>\n        </TransitionalTollFreeNumberList>\n      </ManuallyPortableTollFreeNumberList>\n      <NonPortableTollFreeNumberList>\n        <SpareTollFreeNumberList>\n          <TollFreeNumber>8442948899</TollFreeNumber>\n        </SpareTollFreeNumberList>\n        <UnavailableTollFreeNumberList>\n          <TollFreeNumber>8774024485</TollFreeNumber>\n        </UnavailableTollFreeNumberList>\n        <DeniedTollFreeNumberList>\n          <DeniedTollFreeNumber>\n            <TollFreeNumber>8773732047</TollFreeNumber>\n            <SomosErrorCode>07</SomosErrorCode>\n            <SomosErrorDescription>NXX CLOSED</SomosErrorDescription>\n          </DeniedTollFreeNumber>\n        </DeniedTollFreeNumberList>\n      </NonPortableTollFreeNumberList>\n    </Breakdown>\n  </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  },
                  "orderIsCanceled": {
                    "summary": "Order is canceled",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <TollFreePortingValidation>\n    <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n    <ProcessingStatus>CANCELLED</ProcessingStatus>\n    <AccountId>9900572</AccountId>\n    <CreatedByUser>testuser</CreatedByUser>\n    <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n    <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n    <TollFreeNumberList>\n      <TollFreeNumber>8442948899</TollFreeNumber>\n      <TollFreeNumber>8774024485</TollFreeNumber>\n    </TollFreeNumberList>\n  </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TollFreePortingValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Toll free telephone number is malformed -OR- Missing mandatory element TollFreeNumberList -OR- Empty TollFreeNumberList.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<TollFreePortingValidationResponse>\n    <ErrorList>\n        <Error>\n            <ErrorCode>nnnn</ErrorCode>\n            <Description>Description of condition nnnn</Description>\n        </Error>\n        <Error>\n            <ErrorCode>nnnn</ErrorCode>\n            <Description>Description of condition nnnn</Description>\n        </Error>\n    </ErrorList>\n    <TollFreePortingValidation>\n        <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n        <ProcessingStatus>FAILED</ProcessingStatus>\n        <AccountId>9900572</AccountId>\n        <CreatedByUser>testuser</CreatedByUser>\n        <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n        <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n        <TollFreeNumberList>\n            <TollFreeNumber>8442948899</TollFreeNumber>\n            <TollFreeNumber>8774024485</TollFreeNumber>\n        </TollFreeNumberList>\n    </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request must be authenticated with a valid username and password using basic authentication.",
            "content": {
              "application/xml": {}
            }
          },
          "403": {
            "description": "The specified account does not have the toll free product -OR- The user does not have permission to create toll free porting validation orders.",
            "content": {
              "application/xml": {}
            }
          },
          "404": {
            "description": "The accountId specified in the request URI is not found.",
            "content": {
              "application/xml": {}
            }
          },
          "405": {
            "description": "An unsupported method was attempted on the tollFreePortingValidations endpoint.",
            "content": {
              "application/xml": {}
            }
          },
          "409": {
            "description": "Request includes more than 500 toll free numbers.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<TollFreePortingValidationResponse>\n    <ErrorList>\n        <Error>\n            <ErrorCode>nnnn</ErrorCode>\n            <Description>Description of condition nnnn</Description>\n        </Error>\n        <Error>\n            <ErrorCode>nnnn</ErrorCode>\n            <Description>Description of condition nnnn</Description>\n        </Error>\n    </ErrorList>\n    <TollFreePortingValidation>\n        <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n        <ProcessingStatus>FAILED</ProcessingStatus>\n        <AccountId>9900572</AccountId>\n        <CreatedByUser>testuser</CreatedByUser>\n        <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n        <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n        <TollFreeNumberList>\n            <TollFreeNumber>8442948899</TollFreeNumber>\n            <TollFreeNumber>8774024485</TollFreeNumber>\n        </TollFreeNumberList>\n    </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  }
                }
              }
            }
          },
          "502": {
            "description": "Batch Number Query received vendor error: xxx -OR- Batch Number Query received vendor http response: xxx",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<TollFreePortingValidationResponse>\n    <ErrorList>\n        <Error>\n            <ErrorCode>nnnn</ErrorCode>\n            <Description>Description of condition nnnn</Description>\n        </Error>\n        <Error>\n            <ErrorCode>nnnn</ErrorCode>\n            <Description>Description of condition nnnn</Description>\n        </Error>\n    </ErrorList>\n    <TollFreePortingValidation>\n        <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n        <ProcessingStatus>FAILED</ProcessingStatus>\n        <AccountId>9900572</AccountId>\n        <CreatedByUser>testuser</CreatedByUser>\n        <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n        <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n        <TollFreeNumberList>\n            <TollFreeNumber>8442948899</TollFreeNumber>\n            <TollFreeNumber>8774024485</TollFreeNumber>\n        </TollFreeNumberList>\n    </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tollFreePortingValidations/{orderId}": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Fetch a specified toll free porting validation order.",
        "operationId": "GetTollFreePortingValidation",
        "summary": "Retrieve toll-free porting validation",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response to the GET could include different statuses: COMPLETED, PROCESSING, FAILED, CANCELED.",
            "content": {
              "application/xml": {
                "examples": {
                  "orderIsStillProcessing": {
                    "summary": "Order is still processing",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <TollFreePortingValidation>\n    <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n    <ProcessingStatus>PROCESSING</ProcessingStatus>\n    <AccountId>9900572</AccountId>\n    <CreatedByUser>testuser</CreatedByUser>\n    <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n    <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n    <TollFreeNumberList>\n      <TollFreeNumber>8442948899</TollFreeNumber>\n      <TollFreeNumber>8774024485</TollFreeNumber>\n    </TollFreeNumberList>\n  </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  },
                  "orderIsCompleted": {
                    "summary": "Order is completed",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <TollFreePortingValidation>\n    <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n    <ProcessingStatus>COMPLETE</ProcessingStatus>\n    <AccountId>9900572</AccountId>\n    <CreatedByUser>testuser</CreatedByUser>\n    <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n    <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n    <TollFreeNumberList>\n      <TollFreeNumber>8442948899</TollFreeNumber>\n      <TollFreeNumber>8774024485</TollFreeNumber>\n    </TollFreeNumberList>\n    <Breakdown>\n      <PortableTollFreeNumberList>\n        <RespOrgList>\n          <RespOrg>\n            <Id>RespOrg1</Id>\n            <RespOrgException>true</RespOrgException>\n            <TollFreeNumberList>\n              <TollFreeNumber>8442948899</TollFreeNumber>\n              <TollFreeNumber>8774024485</TollFreeNumber>\n            </TollFreeNumberList>\n          </RespOrg>\n        </RespOrgList>\n      </PortableTollFreeNumberList>\n    </Breakdown>\n  </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  },
                  "orderIsFailed": {
                    "summary": "Order is failed",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <TollFreePortingValidation>\n    <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n    <ProcessingStatus>FAILED</ProcessingStatus>\n    <AccountId>9900572</AccountId>\n    <CreatedByUser>testuser</CreatedByUser>\n    <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n    <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n    <TollFreeNumberList>\n      <TollFreeNumber>8442948899</TollFreeNumber>\n      <TollFreeNumber>8774024485</TollFreeNumber>\n      <TollFreeNumber>8662894621</TollFreeNumber>\n      <TollFreeNumber>8773732047</TollFreeNumber>\n      <TollFreeNumber>8449978331</TollFreeNumber>\n      <TollFreeNumber>8003985992</TollFreeNumber>\n    </TollFreeNumberList>\n    <ErrorList>\n      <Error>\n        <Code>7859</Code>\n        <Description>Description for error 7859</Description>\n      </Error>\n      <Error>\n        <Code>9877</Code>\n        <Description>Description for error 9877</Description>\n      </Error>\n    </ErrorList>\n    <Breakdown>\n      <PortableTollFreeNumberList>\n        <RespOrgList>\n          <RespOrg>\n            <Id>RespOrg1</Id>\n            <RespOrgException>false</RespOrgException>\n            <TollFreeNumberList>\n              <TollFreeNumber>8662894621</TollFreeNumber>\n            </TollFreeNumberList>\n          </RespOrg>\n        </RespOrgList>\n      </PortableTollFreeNumberList>\n      <ManuallyPortableTollFreeNumberList>\n        <DisconnectedTollFreeNumberList>\n          <TollFreeNumber>8449978331</TollFreeNumber>\n        </DisconnectedTollFreeNumberList>\n        <TransitionalTollFreeNumberList>\n          <TollFreeNumber>8003985992</TollFreeNumber>\n        </TransitionalTollFreeNumberList>\n      </ManuallyPortableTollFreeNumberList>\n      <NonPortableTollFreeNumberList>\n        <SpareTollFreeNumberList>\n          <TollFreeNumber>8442948899</TollFreeNumber>\n        </SpareTollFreeNumberList>\n        <UnavailableTollFreeNumberList>\n          <TollFreeNumber>8774024485</TollFreeNumber>\n        </UnavailableTollFreeNumberList>\n        <DeniedTollFreeNumberList>\n          <DeniedTollFreeNumber>\n            <TollFreeNumber>8773732047</TollFreeNumber>\n            <SomosErrorCode>07</SomosErrorCode>\n            <SomosErrorDescription>NXX CLOSED</SomosErrorDescription>\n          </DeniedTollFreeNumber>\n        </DeniedTollFreeNumberList>\n      </NonPortableTollFreeNumberList>\n    </Breakdown>\n  </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  },
                  "orderIsCanceled": {
                    "summary": "Order is canceled",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <TollFreePortingValidation>\n    <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n    <ProcessingStatus>CANCELLED</ProcessingStatus>\n    <AccountId>9900572</AccountId>\n    <CreatedByUser>testuser</CreatedByUser>\n    <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n    <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n    <TollFreeNumberList>\n      <TollFreeNumber>8442948899</TollFreeNumber>\n      <TollFreeNumber>8774024485</TollFreeNumber>\n    </TollFreeNumberList>\n  </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TollFreePortingValidationResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request must be authenticated with a valid username and password using basic authentication."
          },
          "403": {
            "description": "The specified account does not have the toll free product. -OR- The user does not have permission to fetch toll free porting validation orders."
          },
          "404": {
            "description": "The accountId specified in the request URI is not foundThe orderId specified in the request URI is not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Porting"
        ],
        "description": "Cancel a toll free porting validation order in the PROCESSING state.  This may be used if the order is taking too long, or if you decide that you no longer need the results of the query.",
        "operationId": "CancelTollFreePortingValidation",
        "summary": "Patch toll-free porting validation",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "orderId",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidation>\n  <ProcessingStatus>CANCELLED</ProcessingStatus>\n</TollFreePortingValidation>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/TollFreePortingValidationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/xml": {
                "examples": {
                  "successPatchResponse": {
                    "summary": "Success patch response",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <TollFreePortingValidation>\n    <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n    <ProcessingStatus>CANCELLED</ProcessingStatus>\n    <AccountId>9900572</AccountId>\n    <CreatedByUser>testuser</CreatedByUser>\n    <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n    <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n    <TollFreeNumberList>\n      <TollFreeNumber>8442948899</TollFreeNumber>\n      <TollFreeNumber>8774024485</TollFreeNumber>\n    </TollFreeNumberList>\n  </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  },
                  "failedPatchResponse": {
                    "summary": "Failed patch response",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TollFreePortingValidationResponse>\n  <ResponseStatus>\n    <ErrorCode>7624</ErrorCode>\n    <Description>Processing Status  may only be changed to CANCELLED for orders that are currently in PROCESSING status.</Description>\n  </ResponseStatus>\n</TollFreePortingValidationResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TollFreePortingValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Attempt to change ProcessingStatus to a value other than CANCELLED.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<TollFreePortingValidationResponse>\n    <ResponseStatus>\n        <ErrorCode>7624</ErrorCode>\n        <Description>Processing Status may only be changed to CANCELLED for orders that are currently in PROCESSING status.</Description>\n    </ResponseStatus>\n</TollFreePortingValidationResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnOptionOrderReportValidationErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request must be authenticated with a valid username and password using basic authentication.",
            "content": {
              "application/xml": {}
            }
          },
          "403": {
            "description": "The specified account does not have the toll free product -OR- The user does not have permission to fetch toll free porting validation orders.",
            "content": {
              "application/xml": {}
            }
          },
          "404": {
            "description": "The accountId specified in the request URI is not found -OR- The orderId specified in the request URI is not found.",
            "content": {
              "application/xml": {}
            }
          },
          "409": {
            "description": "Attempt to change ProcessingStatus to CANCELLED for an order not in PROCESSING state.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<TollFreePortingValidationResponse>\n    <ErrorList>\n        <Error>\n            <ErrorCode>nnnn</ErrorCode>\n            <Description>Description of condition nnnn</Description>\n        </Error>\n        <Error>\n            <ErrorCode>nnnn</ErrorCode>\n            <Description>Description of condition nnnn</Description>\n        </Error>\n    </ErrorList>\n    <TollFreePortingValidation>\n        <CustomerOrderId>MyOptionalOrderId</CustomerOrderId>\n        <ProcessingStatus>FAILED</ProcessingStatus>\n        <AccountId>9900572</AccountId>\n        <CreatedByUser>testuser</CreatedByUser>\n        <OrderCreateDate>2020-08-20T14:51:58.695Z</OrderCreateDate>\n        <OrderId>e2b029cf-1cfa-4285-a875-80e8fd951208</OrderId>\n        <TollFreeNumberList>\n            <TollFreeNumber>8442948899</TollFreeNumber>\n            <TollFreeNumber>8774024485</TollFreeNumber>\n        </TollFreeNumberList>\n    </TollFreePortingValidation>\n</TollFreePortingValidationResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/tnPortoutPasscodes": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieve information about one or more Telephone Numbers (TNs) with port out passcode.",
        "operationId": "GetTnPortOutPasscode",
        "summary": "Retrieve tn port-out passcode",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "page",
            "description": "An ID of the first element in a page. This value will indicate the first value, not the count, of the initial entry in the page being requested.  Note in the example that the page is the TN that begins the page. The initial page is tagged with the ID `1`.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "9199918388"
          },
          {
            "name": "size",
            "description": "The number of items to include in a page.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 500
            },
            "example": 250
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload provides information about the TN(s) and their Passcode. Links to assist in pagination are also provided.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersResponse>\n  <TelephoneNumbers>\n    <TelephoneNumber>\n      <FullNumber>2018391000</FullNumber>\n      <Passcode>1234</Passcode>\n    </TelephoneNumber>\n    <TelephoneNumber>\n      <FullNumber>2024551000</FullNumber>\n      <Passcode>1234</Passcode>\n    </TelephoneNumber>\n  </TelephoneNumbers>\n</TelephoneNumbersResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnPortOutPasscodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - any syntax error in the parameters will cause a 400 error with a payload similar to the payload in the example, with an error code and text description.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersResponse>\n  <ResponseStatus>\n    <ErrorCode>15610</ErrorCode>\n    <Description>Telephone Numbers cannot be found on account(s) 2002013</Description>\n    <TelephoneNumbers>\n      <TelephoneNumber>2012035088</TelephoneNumber>\n    </TelephoneNumbers>\n  </ResponseStatus>\n</TelephoneNumbersResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnPortOutPasscodesErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieve information about one or more Telephone Numbers (TNs), where the TNs are specified in POST body.",
        "operationId": "Retrieve tn port-out passcodes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnList>\n  <Tn>3172000285</Tn>\n  <Tn>3172000207</Tn>\n  <Tn>3172000000</Tn>\n  <Tn>3172000100</Tn>\n  <Tn>3172110285</Tn>\n  <Tn>3172100285</Tn>\n  <Tn>99999999999</Tn>\n  <Tn>111111111111</Tn>\n</TnList>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/TnListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The descriptive payload provides information about the TN(s) and their Passcode. The Payload also can contain <ErrorList> where invalid or non-existing  on account(s) TNs are specified. Pagination doesn't work in this case.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersResponse>\n  <TelephoneNumberCount>4</TelephoneNumberCount>\n  <TelephoneNumbers>\n    <TelephoneNumber>\n      <FullNumber>3172000285</FullNumber>\n      <Passcode>1234</Passcode>\n    </TelephoneNumber>\n    <TelephoneNumber>\n      <FullNumber>3172000207</FullNumber>\n      <Passcode>1234</Passcode>\n    </TelephoneNumber>\n    </TelephoneNumbers>\n    <ErrorList>\n      <Error>\n        <Code>15619</Code>\n        <Description>Passcode was not found on tn(s)</Description>\n        <TelephoneNumbers>\n          <TelephoneNumber>3172000000</TelephoneNumber>\n        </TelephoneNumbers>\n      </Error>\n      <Error>\n        <Code>15610</Code>\n        <Description>Telephone Numbers cannot be found on accounts</Description>\n        <TelephoneNumbers>\n          <TelephoneNumber>3172110285</TelephoneNumber>\n          <TelephoneNumber>3172100285</TelephoneNumber>\n        </TelephoneNumbers>\n      </Error>\n    </ErrorList>\n</TelephoneNumbersResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnPortOutPasscodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - when in the POST body specified more then {pagination.maxsize} TNs.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersResponse>\n  <ResponseStatus>\n    <ErrorCode>15607</ErrorCode>\n    <Description>The count of Telephone numbers in POST body exceeds the maximum size of 2500</Description>\n  </ResponseStatus>\n</TelephoneNumbersResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnPortOutPasscodesErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tns": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieve information about one or more Telephone Numbers (TNs), where the TNs are chosen based on the search parameters provided in the API Call.",
        "operationId": "ListTnsByGet",
        "summary": "List tns",
        "parameters": [
          {
            "name": "page",
            "description": "An ID of the first element in a page. This value will indicate the first value, not the count, of the initial entry in the page being requested.  Note in the example that the page is the TN that begins the page. The initial page is tagged with the ID \"1\"",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "example": "5"
          },
          {
            "name": "size",
            "description": "The number of items to include in a page.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 500
            },
            "example": 250
          },
          {
            "name": "accountId",
            "description": "The internal account id assigned to the customer that \"owns\" the TN.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 5000125
          },
          {
            "name": "city",
            "description": "The geographic city most likely to serve the Telephone Number. City and other geographic data is determined statistically, and is not as reliable as Rate Center information for pinpointing the service location of a TN.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "CARY"
          },
          {
            "name": "fullNumber",
            "description": "A 10 Digit TN.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          },
          {
            "name": "host",
            "description": "An IP address or subnet (CIDR format) associated with the TN. Filter for subnet applies by exact match.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "47.16.211.63 or 69.22.181.68/30"
          },
          {
            "name": "lata",
            "description": "The LATA (Local Access Transport Area) that the TN is served from, typically 3 digits (5 in FLA).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 423
          },
          {
            "name": "npa",
            "description": "The first 3 digits of a 10 Digit NA Telephone Number, the Area Code.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "919"
          },
          {
            "name": "npaNxx",
            "description": "The first 6 digits of a 10 Digit NA Telephone Number.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "919991"
          },
          {
            "name": "npaNxxX",
            "description": "The first 7 digits of a 10 Digit NA Telephone Number.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "9199918"
          },
          {
            "name": "service",
            "description": "A service type value to filter the TNs returned in the payload.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "E911",
                "Voice",
                "Hosted_E911"
              ]
            },
            "example": "E911"
          },
          {
            "name": "rateCenter",
            "description": "The Rate Center designation that the number is served from. If not combined with a State search the results will span states.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "RALEIGH"
          },
          {
            "name": "state",
            "description": "A 2 character State or Province designation - TX for Texas for example.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "TX"
          },
          {
            "name": "tier",
            "description": "A service tier indicating the the vendor class that the TN is associated with.  Tier indicates whether the TN is on-net, domestic offnet, Canadian, etc.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "The descriptive payload for the TNs query provides information about the TN(s) that were found in the Query. Information about the City, State, LATA, Rate Center, Tier, Vendor, Status, Owning Account and Last Modified Date is provided for each TN in the payload. Links to assist in pagination are also provided.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersResponse>\n    <TelephoneNumberCount>5</TelephoneNumberCount>\n    <Links>\n        <first>Link=&lt;https://dashboard.bandwidth.com:443/v1.0/tns?account=9500012&amp;page=1&amp;size=500&gt;;rel=\"first\";</first>\n        <next>Link=&lt;https://dashboard.bandwidth.com:443/v1.0/tns?account=9500012&amp;page=2012082912&amp;size=500&gt;;rel=\"next\";</next>\n    </Links>\n    <TelephoneNumbers>\n        <TelephoneNumber>\n            <City>CARY</City>\n            <Lata>426</Lata>\n            <State>NC</State>\n            <FullNumber>9192381138</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>CARY</RateCenter>\n            <Status>Inservice</Status>\n            <AccountId>9900008</AccountId>\n            <LastModified>2013-12-05T05:58:27.000Z</LastModified>\n            <InServiceDate>2013-12-05T05:58:27.000Z</InServiceDate>\n        </TelephoneNumber>\n        <TelephoneNumber>\n            <City>CARY</City>\n            <Lata>426</Lata>\n            <State>NC</State>\n            <FullNumber>9192381139</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>CARY</RateCenter>\n            <Status>Inservice</Status>\n            <AccountId>9900000</AccountId>\n            <LastModified>2013-12-05T05:58:27.000Z</LastModified>\n            <InServiceDate>2013-12-05T05:58:27.000Z</InServiceDate>\n        </TelephoneNumber>\n        <TelephoneNumber>\n            <City>CARY</City>\n            <Lata>426</Lata>\n            <State>NC</State>\n            <FullNumber>9192381141</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>CARY</RateCenter>\n            <Status>Inservice</Status>\n            <AccountId>9900000</AccountId>\n            <LastModified>2013-12-05T05:58:27.000Z</LastModified>\n            <InServiceDate>2013-12-05T05:58:27.000Z</InServiceDate>\n        </TelephoneNumber>\n        <TelephoneNumber>\n            <City>CARY</City>\n            <Lata>426</Lata>\n            <State>NC</State>\n            <FullNumber>9192381142</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>CARY</RateCenter>\n            <Status>Inservice</Status>\n            <AccountId>9900000</AccountId>\n            <LastModified>2013-12-05T05:58:27.000Z</LastModified>\n            <InServiceDate>2013-12-05T05:58:27.000Z</InServiceDate>\n        </TelephoneNumber>\n        <TelephoneNumber>\n            <City>CARY</City>\n            <Lata>426</Lata>\n            <State>NC</State>\n            <FullNumber>9192381144</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>CARY</RateCenter>\n            <Status>Aging</Status>\n            <AccountId>753</AccountId>\n            <LastModified>2013-12-05T05:58:27.000Z</LastModified>\n            <InServiceDate>2013-12-05T05:58:27.000Z</InServiceDate>\n        </TelephoneNumber>\n    </TelephoneNumbers>\n</TelephoneNumbersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - any syntax error in the parameters will cause a 400 error with a payload similar to the payload in the example, with an error code and text description.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersResponse>\n    <ResponseStatus>\n        <ErrorCode>15511</ErrorCode>\n        <Description>The NPA_NXX '9192384' is invalid</Description>\n    </ResponseStatus>\n</TelephoneNumbersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieve information about one or more Telephone Numbers (TNs), where the TNs are specified in POST body.",
        "operationId": "ListTnsByPost",
        "summary": "List tns",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TnList>\n    <Tn>3172000285</Tn>\n    <Tn>3172000207</Tn>\n    <Tn>3172000000</Tn>\n    <Tn>3172000100</Tn>\n    <Tn>3172110285</Tn>\n    <Tn>3172100285</Tn>\n    <Tn>99999999999</Tn>\n    <Tn>111111111111</Tn>\n</TnList>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/TnListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The descriptive payload for the TNs query provides information about the TN(s) that were found in the Query. Information about the City, State, LATA, Rate Center, Tier, Vendor, Status, Owning Account and Last Modified Date is provided for each TN in the payload. The Payload also can contain <ErrorList> where invalid or non-existing  on account(s) TNs are specified. Aging numbers will be displayed if user has access to the previous accountId. Pagination doesn't work in this case.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersResponse>\n    <TelephoneNumberCount>4</TelephoneNumberCount>\n    <Links>\n        <first>Link=&lt;https://dashboard.bandwidth.com/api/tns&gt;;rel=\"first\";</first>\n    </Links>\n    <TelephoneNumbers>\n        <TelephoneNumber>\n            <City>INDIANAPOLIS</City>\n            <Lata>336</Lata>\n            <State>IN</State>\n            <FullNumber>3172000000</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>INDIANAPLS</RateCenter>\n            <Status>Available</Status>\n            <AccountId>753</AccountId>\n            <LastModified>2016-11-16T19:34:22.000Z</LastModified>\n        </TelephoneNumber>\n        <TelephoneNumber>\n            <City>INDIANAPOLIS</City>\n            <Lata>336</Lata>\n            <State>IN</State>\n            <FullNumber>3172000500</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>INDIANAPLS</RateCenter>\n            <Status>Aging</Status>\n            <AccountId>14</AccountId>\n            <LastModified>2016-11-16T19:34:22.000Z</LastModified>\n        </TelephoneNumber>\n        <TelephoneNumber>\n            <City>INDIANAPOLIS</City>\n            <Lata>336</Lata>\n            <State>IN</State>\n            <FullNumber>3172000100</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>INDIANAPLS</RateCenter>\n            <Status>Available</Status>\n            <AccountId>753</AccountId>\n            <LastModified>2016-11-16T19:34:22.000Z</LastModified>\n        </TelephoneNumber>\n        <TelephoneNumber>\n            <City>INDIANAPOLIS</City>\n            <Lata>336</Lata>\n            <State>IN</State>\n            <FullNumber>3172000207</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>INDIANAPLS</RateCenter>\n            <Status>Available</Status>\n            <AccountId>753</AccountId>\n            <LastModified>2016-11-16T19:34:22.000Z</LastModified>\n        </TelephoneNumber>\n        <TelephoneNumber>\n            <City>INDIANAPOLIS</City>\n            <Lata>336</Lata>\n            <State>IN</State>\n            <FullNumber>3172000285</FullNumber>\n            <Tier>0</Tier>\n            <VendorId>49</VendorId>\n            <VendorName>Bandwidth CLEC</VendorName>\n            <RateCenter>INDIANAPLS</RateCenter>\n            <Status>Available</Status>\n            <AccountId>753</AccountId>\n            <LastModified>2016-11-16T19:34:22.000Z</LastModified>\n        </TelephoneNumber>\n    </TelephoneNumbers>\n    <ErrorList>\n        <Error>\n            <Code>15608</Code>\n            <Description>Input contains invalid Telephone Numbers</Description>\n            <TelephoneNumbers>\n                <TelephoneNumber>111111111111</TelephoneNumber>\n                <TelephoneNumber>99999999999</TelephoneNumber>\n            </TelephoneNumbers>\n        </Error>\n        <Error>\n            <Code>15610</Code>\n            <Description>Telephone Numbers cannot be found on accounts</Description>\n            <TelephoneNumbers>\n                <TelephoneNumber>3172110285</TelephoneNumber>\n                <TelephoneNumber>3172100285</TelephoneNumber>\n            </TelephoneNumbers>\n        </Error>\n    </ErrorList>\n</TelephoneNumbersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - when in the POST body specified more then {pagination.maxsize} TNs.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumbersResponse>\n    <ResponseStatus>\n        <ErrorCode>15607</ErrorCode>\n        <Description>The count of Telephone numbers in POST body exceeds the maximum size of 2500</Description>\n    </ResponseStatus>\n</TelephoneNumbersResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves the telephone number's information.",
        "operationId": "RetrieveTn",
        "summary": "Retrieve tn",
        "parameters": [
          {
            "name": "tn",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The information has been successfully retrieved and displayed.<br><h3>TN Attributes</h3><h4>status:</h4></br><ul><li>Inservice: The TN is currently in use by the customer that owns the TN.</li><li>Available: The TN is available to be ordered. If the TN is \"protected\" only the account owning the TN can order it, otherwise it should be generally available.</li><li>Aging: The TN is disconnected by the customer owning the TN. At this time, the TN will go into aging for some period of time (typically 30 days) and the customer owning the TN can order it again. If the allotted time has passed and the TN is not ordered by the owning customer, the TN will go back to Available.</li><li>PortInPendingFoc: TN is in FOC and waiting for the FOC date.</li><li>Reserved: A TN is reserved by a customer to order at a later time.</li></ul>",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumberResponse>\n  <TelephoneNumber>2012035013</TelephoneNumber>\n  <Status>Inservice</Status>\n  <LastModifiedDate>2014-03-25 12:55:11.0</LastModifiedDate>\n  <OrderCreateDate>2014-03-25T12:55:11.810Z</OrderCreateDate>\n  <OrderId>cf79d3c3-21b7-4db7-9867-273a1867f934</OrderId>\n  <OrderType>NEW_NUMBER_ORDER</OrderType>\n  <InServiceDate>2014-03-25T12:55:11.810Z</InServiceDate>\n  <SiteId>2409</SiteId>\n  <AccountId>8000273</AccountId>\n</TelephoneNumberResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumberStatusShortWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/tndetails": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves detailed information about the phone number. TnAttributes - Does this telephone number is protected or not.",
        "operationId": "RetrieveTnDetails",
        "summary": "Retrieve tn details",
        "parameters": [
          {
            "name": "tn",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the detailed information about the phone number has been successfully retrieved and displayed.<br>TnAttributes is not required in the response.",
            "content": {
              "application/xml": {
                "examples": {
                  "Simple response": {
                    "value": "<TelephoneNumberResponse>\n  <TelephoneNumberDetails>\n    <City>JERSEY CITY</City>\n    <Lata>224</Lata>\n    <State>NJ</State>\n    <FullNumber>2018981023</FullNumber>\n    <Tier>0</Tier>\n    <VendorId>49</VendorId>\n    <VendorName>Bandwidth CLEC</VendorName>\n    <OnNetVendor>true</OnNetVendor>\n    <RateCenter>JERSEYCITY</RateCenter>\n    <Status>Inservice</Status>\n    <AccountId>14</AccountId>\n    <Site>\n      <Id>479</Id>\n      <Name>site_9b08f</Name>\n    </Site>\n    <SipPeer>\n      <PeerId>500014</PeerId>\n      <PeerName>a2750fad-3</PeerName>\n    </SipPeer>\n    <ServiceTypes>\n      <ServiceType>Voice</ServiceType>\n      <ServiceType>Messaging</ServiceType>\n    </ServiceTypes>\n    <LastModified>2014-07-30T11:29:37.000Z</LastModified>\n    <InServiceDate>2014-07-30T11:29:37.000Z</InServiceDate>\n    <Features>\n      <E911>\n        <AccountId>14</AccountId>\n        <LastE911OrderOutcome>SUCCESS</LastE911OrderOutcome>\n        <SipPeerAddress>false</SipPeerAddress>\n        <CallerName>Test CallerName</CallerName>\n        <Address>\n          <HouseNumber>901</HouseNumber>\n          <StreetName>MAIN CAMPUS</StreetName>\n          <StreetSuffix>DR</StreetSuffix>\n          <City>RALEIGH</City>\n          <StateCode>NC</StateCode>\n          <Zip>27606</Zip>\n          <PlusFour>5244</PlusFour>\n          <Country>United States</Country>\n        </Address>\n        <EmergencyNotificationGroup>\n          <Identifier>625e3ad9-c95e-4148-b2f7-d47a8dbdd0d9</Identifier>\n          <Description>Building A</Description>\n        </EmergencyNotificationGroup>\n      </E911>\n      <Lidb>\n        <Status>Pending</Status>\n        <SubscriberInformation>Fred</SubscriberInformation>\n        <UseType>BUSINESS</UseType>\n        <Visibility>PUBLIC</Visibility>\n      </Lidb>\n      <Dlda>\n        <Status>Success</Status>\n        <SubscriberType>BUSINESS</SubscriberType>\n        <ListingType>LISTED</ListingType>\n        <ListingName>\n          <FirstName>Joe</FirstName>\n          <LastName>Smith</LastName>\n        </ListingName>\n        <ListAddress>true</ListAddress>\n        <Address>\n          <HouseNumber>12</HouseNumber>\n          <StreetName>ELM</StreetName>\n         <City>New York</City>\n          <StateCode>NY</StateCode>\n          <Zip>10007</Zip>\n          <Country>United States</Country>\n          <AddressType>Dlda</AddressType>\n        </Address>\n      </Dlda>\n    </Features>\n    <OriginationRoutePlan>\n      <Id>cfa6ef74-4944-47c2-b112-0cf4360b1fa5</Id>\n      <Route>\n        <Endpoint>6107622689</Endpoint>\n        <Priority>1</Priority>\n        <Weight>100</Weight>\n        <EndpointType>TN</EndpointType>\n      </Route>\n      <Route>\n        <Endpoint>sip:abcd@domain.com</Endpoint>\n        <Priority>2</Priority>\n        <Weight>100</Weight>\n        <EndpointType>SIP</EndpointType>\n      </Route>\n      <Route>\n        <Endpoint>7610762269</Endpoint>\n        <Priority>3</Priority>\n        <Weight>50</Weight>\n        <EndpointType>TN</EndpointType>\n      </Route>\n      <Route>\n        <Endpoint>192.0.2.0/24</Endpoint>\n        <Priority>3</Priority>\n        <Weight>50</Weight>\n        <EndpointType>Ipv4</EndpointType>\n      </Route>\n      <Route>\n        <Endpoint>myhost.bandwidth.example</Endpoint>\n        <Priority>4</Priority>\n        <Weight>100</Weight>\n        <EndpointType>FQDN</EndpointType>\n      </Route>\n    </OriginationRoutePlan>\n    <MessagingSettings>\n      <SmsEnabled>true</SmsEnabled>\n      <AssignedNNRoute>\n      <Nnid>101601</Nnid>\n      <Name>USA Mobility</Name>\n      </AssignedNNRoute>\n    </MessagingSettings>\n    <TnAttributes>\n      <TnAttribute>Protected</TnAttribute>\n      <TnAttribute>External</TnAttribute>\n    </TnAttributes>\n  </TelephoneNumberDetails>\n</TelephoneNumberResponse>"
                  },
                  "Shared TN details": {
                    "value": "<TelephoneNumberResponse>\n  <TelephoneNumberDetails>\n    <City>JERSEY CITY</City>\n    <Lata>224</Lata>\n    <State>NJ</State>\n    <FullNumber>2018981023</FullNumber>\n    <Tier>0</Tier>\n    <VendorId>49</VendorId>\n    <VendorName>Bandwidth CLEC</VendorName>\n    <RateCenter>JERSEYCITY</RateCenter>\n    <Status>Inservice</Status>\n    <AccountId>14</AccountId>\n    <Site>\n      <Id>479</Id>\n      <Name>site_9b08f</Name>\n    </Site>\n    <SipPeer>\n      <PeerId>500014</PeerId>\n      <PeerName>a2750fad-3</PeerName>\n    </SipPeer>\n    <ServiceTypes>\n      <ServiceType>Voice</ServiceType>\n    </ServiceTypes>\n    <LastModified>2014-07-30T11:29:37.000Z</LastModified>\n    <InServiceDate>2014-07-30T11:29:37.000Z</InServiceDate>\n    <Features>\n      <E911>\n        <AccountId>14</AccountId>\n        <LastE911OrderOutcome>SUCCESS</LastE911OrderOutcome>\n        <SipPeerAddress>false</SipPeerAddress>\n        <CallerName>Test CallerName</CallerName>\n        <Address>\n          <HouseNumber>901</HouseNumber>\n          <StreetName>MAIN CAMPUS</StreetName>\n          <StreetSuffix>DR</StreetSuffix>\n          <City>RALEIGH</City>\n          <StateCode>NC</StateCode>\n          <Zip>27606</Zip>\n          <PlusFour>5244</PlusFour>\n          <Country>United States</Country>\n        </Address>\n        <EmergencyNotificationGroup>\n          <Identifier>625e3ad9-c95e-4148-b2f7-d47a8dbdd0d9</Identifier>\n          <Description>Building A</Description>\n        </EmergencyNotificationGroup>\n      </E911>\n      <Lidb>\n        <Status>Pending</Status>\n        <SubscriberInformation>Fred</SubscriberInformation>\n        <UseType>BUSINESS</UseType>\n        <Visibility>PUBLIC</Visibility>\n      </Lidb>\n      <Dlda>\n        <Status>Success</Status>\n        <SubscriberType>BUSINESS</SubscriberType>\n        <ListingType>LISTED</ListingType>\n        <ListingName>\n          <FirstName>Joe</FirstName>\n          <LastName>Smith</LastName>\n        </ListingName>\n        <ListAddress>true</ListAddress>\n        <Address>\n        <HouseNumber>12</HouseNumber>\n        <StreetName>ELM</StreetName>\n        <City>New York</City>\n        <StateCode>NY</StateCode>\n         <Zip>10007</Zip>\n        <Country>United States</Country>\n        <AddressType>Dlda</AddressType>\n        </Address>\n      </Dlda>\n    </Features>\n    <TnAttributes>\n      <TnAttribute>Hosted</TnAttribute>\n    </TnAttributes>\n    <HostedTelephoneNumberDetails>\n      <HostedTelephoneNumberDetail>\n        <AccountId>12346160</AccountId>\n        <Site>\n          <Id>487</Id>\n          <Name>site_Mw4FX</Name>\n        </Site>\n        <SipPeer>\n          <PeerId>500026</PeerId>\n          <PeerName>sippeeremhlO</PeerName>\n          <IsDefaultPeer>true</IsDefaultPeer>\n        </SipPeer>\n        <ServiceTypes>\n          <ServiceType>Hosted Messaging</ServiceType>\n        </ServiceTypes>\n        <MessagingSettings>\n          <SmsEnabled>true</SmsEnabled>\n          <CampaignId>0gdVWGTGe</CampaignId>\n          <MessageClass>A</MessageClass>\n          <A2pState>overridden</A2pState>\n          <AssignedNnRoute>\n          <Nnid>2183991</Nnid>\n          <Name>7ae5LXMn</Name>\n          </AssignedNnRoute>\n        </MessagingSettings>\n        <TnAttributes>\n          <TnAttribute>Hosted</TnAttribute>\n        </TnAttributes>\n     </HostedTelephoneNumberDetail>\n    </HostedTelephoneNumberDetails>\n  </TelephoneNumberDetails></TelephoneNumberResponse>"
                  },
                  "Non-NANP details": {
                    "value": "<TelephoneNumberResponse>\n  <TelephoneNumberDetails>\n    <FullNumber>+33140289562</FullNumber>\n    <Country>FR</Country>\n    <TnType>geographic</TnType>\n    <VendorId>49</VendorId>\n    <VendorName>Bandwidth CLEC</VendorName>\n    <OnNetVendor>true</OnNetVendor>\n    <Status>Inservice</Status>\n    <AccountId>12345678</AccountId>\n    <Site>\n      <Id>123</Id>\n      <Name>site</Name>\n    </Site>\n    <SipPeer>\n      <PeerId>500001</PeerId>\n      <PeerName>sippeer</PeerName>\n      <IsDefaultPeer>false</IsDefaultPeer>\n    </SipPeer>\n    <ServiceTypes>\n      <ServiceType>Voice</ServiceType>\n    </ServiceTypes>\n    <LastModified>2020-03-03T15:30:07.000Z</LastModified>\n    <InServiceDate>2020-03-03T15:30:07.518Z</InServiceDate>\n  </TelephoneNumberDetails>\n</TelephoneNumberResponse>"
                  },
                  "Tn details with Voice": {
                    "description": "Tn details with Voice, Hosted messaging and Hosted E911 on different accounts",
                    "value": "<TelephoneNumberResponse>\n  <TelephoneNumberDetails>\n    <City>GUSTINE</City>\n    <Lata>738</Lata>\n    <State>CA</State>\n    <FullNumber>2092151016</FullNumber>\n    <Tier>0</Tier>\n    <VendorId>49</VendorId>\n    <VendorName>Bandwidth CLEC</VendorName>\n    <OnNetVendor>true</OnNetVendor>\n    <RateCenter>GUSTINE</RateCenter>\n    <Status>Inservice</Status>\n    <AccountId>12346167</AccountId>\n    <Site>\n      <Id>494</Id>\n      <Name>site_WDSZl</Name>\n    </Site>\n    <SipPeer>\n      <PeerId>500033</PeerId>\n      <PeerName>sippeerBxxygpCJrw</PeerName>\n      <IsDefaultPeer>true</IsDefaultPeer>\n    </SipPeer>\n    <ServiceTypes>\n      <ServiceType>Voice</ServiceType>\n    </ServiceTypes>\n    <LastModified>2021-02-10T11:22:57.000Z</LastModified>\n    <Features/>\n    <TnAttributes>\n       <TnAttribute>Hosted</TnAttribute>\n    </TnAttributes>\n    <HostedTelephoneNumberDetails>\n      <HostedTelephoneNumberDetail>\n        <AccountId>12346168</AccountId>\n        <Site>\n          <Id>495</Id>\n          <Name>site_1KU9l</Name>\n        </Site>\n        <SipPeer>\n          <PeerId>500034</PeerId>\n          <PeerName>sippeere0fDdHYzRb</PeerName>\n          <IsDefaultPeer>true</IsDefaultPeer>\n        </SipPeer>\n        <ServiceTypes>\n          <ServiceType>Hosted Messaging</ServiceType>\n        </ServiceTypes>\n        <MessagingSettings>\n          <SmsEnabled>true</SmsEnabled>\n          <A2pState>system_default</A2pState>\n          <AssignedNnRoute>\n            <Nnid>112233</Nnid>\n            <Name>9417</Name>\n          </AssignedNnRoute>\n        </MessagingSettings>\n        <TnAttributes>\n          <TnAttribute>Hosted</TnAttribute>\n        </TnAttributes>\n    </HostedTelephoneNumberDetail>\n    <HostedTelephoneNumberDetail>\n      <AccountId>12346169</AccountId>\n      <ServiceTypes>\n        <ServiceType>Hosted E911</ServiceType>\n      </ServiceTypes>\n      <Features>\n        <E911>\n          <Status>Success</Status>\n          <AccountId>12346169</AccountId>\n          <LastE911OrderOutcome>SUCCESS</LastE911OrderOutcome>\n          <SipPeerAddress>false</SipPeerAddress>\n          <CallerName>ojjucTKANd</CallerName>\n          <Address>\n            <HouseNumber>6518</HouseNumber>\n            <HouseSuffix></HouseSuffix>\n            <StreetName>MAIN CAMPUS</StreetName>\n            <StreetSuffix>DR</StreetSuffix>\n            <City>RALEIGH</City>\n            <StateCode>NC</StateCode>\n            <Zip>27606</Zip>\n            <PlusFour>5244</PlusFour>\n            <AddressType>E911</AddressType>\n            <Latitude>35.848359</Latitude>\n            <Longitude>-75.000000</Longitude>\n          </Address>\n        </E911>\n      </Features>\n      <TnAttributes>\n        <TnAttribute>Hosted</TnAttribute>\n      </TnAttributes>\n    </HostedTelephoneNumberDetail>\n    </HostedTelephoneNumberDetails>\n  </TelephoneNumberDetails>\n</TelephoneNumberResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumberDetailHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - failed to get detailed information about the current phone number.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumberResponse>\n <ResponseStatus>\n <ErrorCode>12512</ErrorCode>\n <Description>Telephone number '123456789' is not valid</Description>\n </ResponseStatus>\n </TelephoneNumberResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumbersErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/sites": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves the sites associated with that telephone number",
        "operationId": "RetrieveSiteForThatTn",
        "summary": "Retrieve site for that tn",
        "parameters": [
          {
            "name": "tn",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "The sites have been successfully retrieved and displayed.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n  <Site>\n    <Id>2409</Id>\n    <Name>siteName</Name>\n  </Site>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnSite"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/sippeers": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves the sippeers associated with that telephone number.",
        "operationId": "RetrieveSippeerForThatTn",
        "summary": "Retrieve sippeer for that tn",
        "parameters": [
          {
            "name": "tn",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "The sippeers have been successfully retrieved and displayed.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SipPeer>\n  <Id>305643</Id>\n  <Name>PeerOneSiteThree</Name>\n</SipPeer>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnSipPeer"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/ratecenter": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves the rate centers associated with that telephone number.",
        "operationId": "RetrieveRateCenterForThatTn",
        "summary": "Retrieve rate center for that tn",
        "parameters": [
          {
            "name": "tn",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "The rate centers have been successfully retrieved and displayed.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumberResponse>\n  <TelephoneNumberDetails>\n    <State>NJ</State>\n    <RateCenter>HACKENSACK</RateCenter>\n  </TelephoneNumberDetails>\n</TelephoneNumberResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumberRateCenterResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/lca": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves the LCAs associated with that telephone number.",
        "operationId": "RetrieveLCAForThatTn",
        "summary": "Retrieve LCA for that tn",
        "parameters": [
          {
            "name": "tn",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "The LCAs have been successfully retrieved and displayed.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<SearchResult>\n  <ListofNPANXX>\n    <NPANXX>201202</NPANXX>\n    <NPANXX>201203</NPANXX>\n    <NPANXX>201206</NPANXX>\n    <!-- SNIP -->\n    <NPANXX>973930</NPANXX>\n    <NPANXX>973931</NPANXX>\n    <NPANXX>973955</NPANXX>\n  </ListofNPANXX>\n  <Location>\n    <RateCenters>\n     <State>NJ</State>\n      <RCs>\n       <RC>CLIFFSIDE</RC>\n       <RC>DUMONT</RC>\n       <!-- SNIP -->\n       <RC>UNION CITY</RC>\n       <RC>WESTWOOD</RC>\n     </RCs>\n    </RateCenters>\n  </Location>\n</SearchResult>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NpaNxxRcLcaSearchResult"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/lata": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves the lata associated with that telephone number.",
        "operationId": "RetrieveLataForThatTn",
        "summary": "Retrieve lata for that tn",
        "parameters": [
          {
            "name": "tn",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "The lata have been successfully retrieved.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TelephoneNumberResponse>\n  <TelephoneNumberDetails>\n    <Lata>224</Lata>\n  </TelephoneNumberDetails>\n</TelephoneNumberResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumberLataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/tnreservation": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves reservation information associated with the Telephone Number.",
        "operationId": "RetrieveTnReservetionInfoForThatTn",
        "summary": "Retrieve tn reservation info for that tn",
        "parameters": [
          {
            "name": "tn",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "The reservation information has been successfully retrieved.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<TNReservation>\n  <ReservationID>d28529e6-23dc-408e-b7ad-f2015a6975d5</ReservationID>\n  <Account>12346099</Account>\n  <ReservationExpires>14346</ReservationExpires>\n  <ReservedTN>6136211234</ReservedTN>\n</TNReservation>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TnReservationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/availableNnRoutes": {
      "get": {
        "tags": [
          "Tns"
        ],
        "description": "Retrieves information about available NnRoutes for the phone number.",
        "operationId": "RetrieveRouteForThatTn",
        "summary": "Retrieve routes for that tn",
        "parameters": [
          {
            "name": "tn",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - the detailed information about available NnRoutes has been successfully retrieved and displayed.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AvailableNnRoutes>\n  <NNRoute>\n    <Nnid>101601</Nnid>\n    <Name>USA Mobility</Name>\n  </NNRoute>\n  <NNRoute>\n    <Nnid>102787</Nnid>\n    <Name>Globe Wireless - Bandwidth.com - SVR</Name>\n  </NNRoute>\n</AvailableNnRoutes>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumberAvailableNnRoutesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - failed to get available NnRoutes information for the current phone number.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<AvailableNnRoutes>\n  <ResponseStatus>\n    <ErrorCode>12512</ErrorCode>\n    <Description>Telephone number '123456789' is not valid</Description>\n  </ResponseStatus>\n</AvailableNnRoutes>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/TelephoneNumberAvailableNnRoutesErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tns/{tn}/e911": {
      "get": {
        "tags": [
          "Tns",
          "e911"
        ],
        "description": "Retrieves the e911 information associated with that telephone number",
        "operationId": "RetrieveTnE911Info",
        "summary": "Retrieve e911 for that tn",
        "parameters": [
          {
            "name": "tn",
            "in": "path",
            "description": "A 10 Digit TN",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "9199918388"
          }
        ],
        "responses": {
          "200": {
            "description": "The e911 address have been successfully retrieved and displayed",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TnE911AddressResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<TnE911AddressResponse>\n   <Address>\n      <Name>Test address</Name>\n      <City>RALEIGH</City>\n      <HouseNumber>900</HouseNumber>\n      <StateCode>NC</StateCode>\n      <StreetName>MAIN CAMPUS DR</StreetName>\n      <Zip>27606</Zip>\n      <PlusFour>5214</PlusFour>\n   </Address>\n   <EmergencyNotificationGroup>\n      <Identifier>63865500-0904-46b1-9b4f-7bd237a26363</Identifier>\n      <Description>Building 5, 5th Floor.</Description>\n   </EmergencyNotificationGroup>\n</TnE911AddressResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cities": {
      "get": {
        "tags": [
          "Cities"
        ],
        "description": "The /cities resource returns all of the Cities in the indicated State that are supported from a coverage perspective, and, if requested, that contain orderable inventory. The values returned indicate the names of the Cities and, if <b>available</b> is specified, returns the available inventory by City. Note that the mapping between Rate Center and City is not completely predictable because multiple cities can be served by a single Rate Center and it may take multiple Rate Centers to serve a city. The Rate Centers results are more predictable because they are defined strictly in telecommunication terms. The Rate Centers and Cities API Calls return information about the Bandwidth CLEC Network, including coverage data, indicating both the extent of on-net and off-net coverage, as well as number availability, again from an on-net and off-net perspective. The rules are as follows: <ul><li>If supported=true is specified, then the coverage or availability is reported for the Bandwidth CLEC only. </li><li>If supported is omitted or false, then the coverage or availability is reported for the combination of the Bandwidth CLEC and our partners </li><li>If available=true is specified, then only Rate Centers in which we have available numbers are reported. </li><li>If available is omitted or false, then all Rate Centers within the scope defined by supported will be returned. </li></ul>These rules apply for both the /rateCenters and /cities API calls. <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\"> <tbody> <tr> <td valign=\"top\"> </td> <td valign=\"top\"> Supported = true </td> <td valign=\"top\"> Supported is missing </td> </tr> <tr> <td valign=\"top\"> available = true </td> <td valign=\"top\"> Available numbers within the Bandwidth CLEC network </td> <td valign=\"top\"> Available numbers within the Bandwidth CLEC network combined with our partner networks </td> </tr> <tr> <td valign=\"top\"> available is missing </td> <td valign=\"top\"> Coverage in the Bandwidth CLEC </td> <td valign=\"top\"> Coverage of the combined Bandwidth CLEC + Partner networks </td> </tr> </tbody> </table>",
        "operationId": "ListCities",
        "summary": "List Cities",
        "parameters": [
          {
            "name": "state",
            "description": "2 character state code.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "NC"
          },
          {
            "name": "available",
            "description": "If available is set as true then the result includes the quantity of the available telephone numbers in that City.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "supported",
            "description": "If supported is set to true the payload will show those Rate Centers that Bandwidth serves directly.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "This response returns the list of cities, along with the Rate Centers that serve those Cities.  If 'available' is specified then the number of TNs available in that city / RC combination is also included.",
            "content": {
              "application/xml": {
                "examples": {
                  "Simple response": {
                    "value": "<CityResponse>\n  <ResultCount>449</ResultCount>\n  <Cities>\n    <City>\n     <RcAbbreviation>DOUGLAS</RcAbbreviation>\n     <Name>ADAMS</Name>\n   </City>\n    <City>\n      <RcAbbreviation>FILLEY</RcAbbreviation>\n      <Name>ADAMS</Name>\n    </City>\n    <City>\n      <RcAbbreviation>AINSWORTH</RcAbbreviation>\n      <Name>AINSWORTH</Name>\n    </City>\n    <!-- ... SNIP ... -->\n    <City>\n      <RcAbbreviation>LONG PINE</RcAbbreviation>\n      <Name>AINSWORTH</Name>\n    </City>\n    <City>\n      <RcAbbreviation>ODELL</RcAbbreviation>\n      <Name>WYMORE</Name>\n    </City>\n    <City>\n      <RcAbbreviation>BRADSHAW</RcAbbreviation>\n      <Name>YORK</Name>\n    </City>\n    <City>\n      <RcAbbreviation>YORK</RcAbbreviation>\n      <Name>YORK</Name>\n    </City>\n    <City>\n      <RcAbbreviation>WACO</RcAbbreviation>\n      <Name>YORK</Name>\n    </City>\n  </Cities>\n</CityResponse>"
                  },
                  "Response with TN count": {
                    "value": "<CityResponse>\n  <ResultCount>129</ResultCount>\n  <Cities>\n   <City>\n      <RcAbbreviation>FILLEY</RcAbbreviation>\n      <AvailableTelephoneNumberCount>266</AvailableTelephoneNumberCount>\n      <Name>ADAMS</Name>\n    </City>\n    <City>\n      <RcAbbreviation>DOUGLAS</RcAbbreviation>\n      <AvailableTelephoneNumberCount>378</AvailableTelephoneNumberCount>\n      <Name>ADAMS</Name>\n    </City>\n    <City>\n      <RcAbbreviation>WAKEFIELD</RcAbbreviation>\n      <AvailableTelephoneNumberCount>272</AvailableTelephoneNumberCount>\n      <Name>ALLEN</Name>\n    </City>\n    <City>\n      <RcAbbreviation>ASHLAND</RcAbbreviation>\n      <AvailableTelephoneNumberCount>129</AvailableTelephoneNumberCount>\n      <Name>ASHLAND</Name>\n    </City>\n    <City>\n      <RcAbbreviation>WEST POINT</RcAbbreviation>\n      <AvailableTelephoneNumberCount>85</AvailableTelephoneNumberCount>\n      <Name>WEST POINT</Name>\n    </City>\n    <City>\n      <RcAbbreviation>OAKLAND</RcAbbreviation>\n      <AvailableTelephoneNumberCount>290</AvailableTelephoneNumberCount>\n      <Name>WEST POINT</Name>\n    </City>\n    <City>\n      <RcAbbreviation>WESTERN</RcAbbreviation>\n      <AvailableTelephoneNumberCount>134</AvailableTelephoneNumberCount>\n      <Name>WESTERN</Name>\n    </City>\n    <City>\n      <RcAbbreviation>WAYNE</RcAbbreviation>\n      <AvailableTelephoneNumberCount>434</AvailableTelephoneNumberCount>\n      <Name>WINSIDE</Name>\n    </City>\n    <City>\n      <RcAbbreviation>BRADSHAW</RcAbbreviation>\n      <AvailableTelephoneNumberCount>274</AvailableTelephoneNumberCount>\n      <Name>YORK</Name>\n    </City>\n  </Cities>\n</CityResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CitySearchResults"
                }
              }
            }
          }
        }
      }
    },
    "/rateCenters": {
      "get": {
        "tags": [
          "Rate Centers"
        ],
        "description": "The rateCenters resource returns all of the Rate Centers in the indicated State that are supported from a coverage perspective, and, if requested, that contain orderable inventory. The values returned indicate the names of the Rate Centers and, if the query parameter <b>available</b> is specified, the available inventory by Rate Center. The Rate Centers API Call returns information about the Bandwidth CLEC Network, including coverage data, indicating both the extent of on-net and off-net coverage, as well as number availability, again from an on-net and off-net perspective. The rules are as follows: <ul><li>If supported=true is specified, then the coverage or availability is reported for the Bandwidth CLEC only. </li><li>If supported=true is omitted or false, then the coverage or availability is reported for the combination of the Bandwidth CLEC and our partners </li><li>If available=true is specified, then only Rate Centers in which we have available numbers are reported. </li><li>If available is omitted or false then all Rate Centers within the scope defined by supported will be returned. </li></ul>These rules apply for both the /rateCenters and /cities API calls. <table border=\"1\" cellpadding=\"0\" cellspacing=\"0\"> <tbody> <tr> <td valign=\"top\"> </td> <td valign=\"top\"> Supported = true </td> <td valign=\"top\"> Supported is missing </td> </tr> <tr> <td valign=\"top\"> available = true </td> <td valign=\"top\"> Available numbers within the Bandwidth CLEC network </td> <td valign=\"top\"> Available numbers within the Bandwidth CLEC network combined with our partner networks </td> </tr> <tr> <td valign=\"top\"> available is missing </td> <td valign=\"top\"> Coverage in the Bandwidth CLEC </td> <td valign=\"top\"> Coverage of the combined Bandwidth CLEC + Partner networks </td></tr></tbody></table></p>",
        "operationId": "ListRateCenters",
        "summary": "List Rate Centers",
        "parameters": [
          {
            "name": "state",
            "description": "2 character state code.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "NC"
          },
          {
            "name": "available",
            "description": "If available is set as true then the result includes the quantity of the available telephone numbers in that Rate Center.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "supported",
            "description": "If supported is set to true the payload will show those Rate Centers that Bandwidth serves directly.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "This response returns the list of Rate Center names and abbreviations.  If 'available' is specified then the number of TNs available in that Rate Center is also included.",
            "content": {
              "application/xml": {
                "examples": {
                  "Simple response": {
                    "value": "<RateCenterResponse>\n  <ResultCount>450</ResultCount>\n  <RateCenters>\n    <RateCenter>\n     <Abbreviation>ADAMS</Abbreviation>\n     <Name>ADAMS</Name>\n   </RateCenter>\n   <RateCenter>\n     <Abbreviation>AINSWORTH</Abbreviation>\n     <Name>AINSWORTH</Name>\n   </RateCenter>\n   <RateCenter>\n     <Abbreviation>ALBION</Abbreviation>\n     <Name>ALBION</Name>\n   </RateCenter>\n   <RateCenter>\n     <Abbreviation>ALEXANDRIA</Abbreviation>\n     <Name>ALEXANDRIA</Name>\n   </RateCenter>\n   <!-- ... SNIP ... -->\n   <RateCenter>\n     <Abbreviation>WOOD RIVER</Abbreviation>\n     <Name>WOOD RIVER</Name>\n   </RateCenter>\n   <RateCenter>\n     <Abbreviation>WYMORE</Abbreviation>\n     <Name>WYMORE</Name>\n   </RateCenter>\n   <RateCenter>\n     <Abbreviation>WYFRYCSTHL</Abbreviation>\n     <Name>WYNOT FORDYCE SAINT HELENA</Name>\n   </RateCenter>\n   <RateCenter>\n     <Abbreviation>YORK</Abbreviation>\n     <Name>YORK</Name>\n   </RateCenter>\n   <RateCenter>\n     <Abbreviation>YUTAN</Abbreviation>\n     <Name>YUTAN</Name>\n   </RateCenter>\n </RateCenters>\n</RateCenterResponse>"
                  },
                  "Response with TN counts": {
                    "value": "<RateCenterResponse>\n  <ResultCount>131</ResultCount>\n  <RateCenters>\n    <RateCenter>\n      <Abbreviation>ADAMS</Abbreviation>\n      <AvailableTelephoneNumberCount>108</AvailableTelephoneNumberCount>\n      <Name>ADAMS</Name>\n    </RateCenter>\n    <RateCenter>\n      <Abbreviation>ALEXANDRIA</Abbreviation>\n      <AvailableTelephoneNumberCount>230</AvailableTelephoneNumberCount>\n      <Name>ALEXANDRIA</Name>\n    </RateCenter>\n    <RateCenter>\n      <Abbreviation>ASHLAND</Abbreviation>\n      <AvailableTelephoneNumberCount>129</AvailableTelephoneNumberCount>\n      <Name>ASHLAND</Name>\n    </RateCenter>\n    <!-- ... SNIP ... -->\n    <RateCenter>\n      <Abbreviation>WEST POINT</Abbreviation>\n      <AvailableTelephoneNumberCount>85</AvailableTelephoneNumberCount>\n      <Name>WEST POINT</Name>\n    </RateCenter>\n    <RateCenter>\n      <Abbreviation>WESTERN</Abbreviation>\n      <AvailableTelephoneNumberCount>134</AvailableTelephoneNumberCount>\n      <Name>WESTERN</Name>\n    </RateCenter>\n    <RateCenter>\n      <Abbreviation>WILBER</Abbreviation>\n      <AvailableTelephoneNumberCount>135</AvailableTelephoneNumberCount>\n      <Name>WILBER</Name>\n    </RateCenter>\n    <RateCenter>\n      <Abbreviation>WYMORE</Abbreviation>\n      <AvailableTelephoneNumberCount>132</AvailableTelephoneNumberCount>\n      <Name>WYMORE</Name>\n    </RateCenter>\n    <RateCenter>\n      <Abbreviation>YUTAN</Abbreviation>\n      <AvailableTelephoneNumberCount>588</AvailableTelephoneNumberCount>\n      <Name>YUTAN</Name>\n    </RateCenter>\n  </RateCenters>\n</RateCenterResponse>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/RateCenterSearchResults"
                }
              }
            }
          }
        }
      }
    },
    "/coveredRateCenters": {
      "get": {
        "tags": [
          "Rate Centers"
        ],
        "description": "The Covered Rate Centers API Call return information about the Bandwidth CLEC Network, including coverage data, indicating both the extent of on-net and off-net coverage, as well as number availability.",
        "operationId": "ListCoveredRateCenters",
        "summary": "List Covered Rate Centers",
        "parameters": [
          {
            "name": "page",
            "description": "The starting value for a paginated response. The default is '1' indicating the first page of results.\n",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "size",
            "description": "The number of rate centers to include in a paginated result payload.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 50
          },
          {
            "name": "embed",
            "description": "A set of fields that needs to be included in response. A lists of zip codes, cities, vendors, NpaNxxXs and count of available/limited available TNs are not included for each rate center by default. For example if the payload should contain a list of the Cities covered by the Rate Centers then embed=cities would be included as a query parameter. A list of vendors is available only for admin users. \nNo filter parameters are supported if LocalRateCenters is specified. In this case only size, page and any other embed parameters are supported.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "state",
            "description": "A 2 character State code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "OK"
          },
          {
            "name": "abbreviation",
            "description": "A rate center's abbreviation.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "BARTLESVL"
          },
          {
            "name": "name",
            "description": "A name of rate center.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "BARTLESVILLE"
          },
          {
            "name": "zip",
            "description": "A 5 digit zip code of the area covered by rate center.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "74029"
          },
          {
            "name": "city",
            "description": "A name of city covered by rate center.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "DEWEY"
          },
          {
            "name": "lata",
            "description": "A 3 or 5 digit rate center's LATA.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "example": 538
          },
          {
            "name": "tier",
            "description": "The tier associated with covered rate center; a value from 0 to 5.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "example": 0
          },
          {
            "name": "npa",
            "description": "The 3 digit NPA or Area Code covered by rate center.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "example": 918
          },
          {
            "name": "npaNxx",
            "description": "The 6 digits NPA and NXX values covered by rate center.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "example": 918886
          },
          {
            "name": "npaNxxX",
            "description": "7 digits of NPA, NXX and thousands block values covered by rate center.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "example": 9188862
          }
        ],
        "responses": {
          "200": {
            "description": "This response returns the list of Covered Rate Centers. <i><b>TotalCount</b></i> element's value represents the total number of rate centers for specified query parameters starting from the current page and included in response only if more rate centers available.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<CoveredRateCenters>\n  <TotalCount>18</TotalCount>\n  <CoveredRateCenter>\n    <Name>AVALON</Name>\n    <Abbreviation>AVALON</Abbreviation>\n    <State>CA</State>\n    <Lata>730</Lata>\n    <AvailableNumberCount>1</AvailableNumberCount>\n    <LimitedAvailableNumberCount>1</LimitedAvailableNumberCount>\n    <ZipCodes>\n      <ZipCode>90731</ZipCode>\n    </ZipCodes>\n  <Cities>\n    <City>SAN PEDRO</City>\n  </Cities>\n  <Tiers>\n    <Tier>0</Tier>\n  </Tiers>\n  <NpaNxxXs>\n    <NpaNxxX>3105100</NpaNxxX>\n    <NpaNxxX>3105101</NpaNxxX>\n    <NpaNxxX>3109498</NpaNxxX>\n    <NpaNxxX>3109499</NpaNxxX>\n    <NpaNxxX>4242260</NpaNxxX>\n  </NpaNxxXs>\n  <Id>3151</Id>\n  <LocalRateCenters>\n    <RateCenterId>369</RateCenterId>\n    <RateCenterId>7843</RateCenterId>\n    <RateCenterId>7945</RateCenterId>\n    <RateCenterId>2461</RateCenterId>\n    <RateCenterId>10741</RateCenterId>\n    <RateCenterId>7059</RateCenterId>\n  </LocalRateCenters>\n </CoveredRateCenter>\n<CoveredRateCenter>\n  <Name>BEVERLY HILLS</Name>\n  <Abbreviation>BEVERLYHLS</Abbreviation>\n  <State>CA</State>\n  <Lata>730</Lata>\n  <AvailableNumberCount>25</AvailableNumberCount>\n  <LimitedAvailableNumberCount>20</LimitedAvailableNumberCount>\n  <ZipCodes>\n    <ZipCode>90013</ZipCode>\n    <ZipCode>90014</ZipCode>\n    <ZipCode>90015</ZipCode>\n    <ZipCode>90017</ZipCode>\n    <ZipCode>90044</ZipCode>\n    <ZipCode>90048</ZipCode>\n    <ZipCode>90059</ZipCode>\n    <ZipCode>90061</ZipCode>\n    <ZipCode>90071</ZipCode>\n    <ZipCode>90079</ZipCode>\n    <ZipCode>90210</ZipCode>\n    <ZipCode>90211</ZipCode>\n    <ZipCode>90212</ZipCode>\n    <ZipCode>90247</ZipCode>\n    <ZipCode>90248</ZipCode>\n    <ZipCode>90249</ZipCode>\n    <ZipCode>91352</ZipCode>\n    <ZipCode>91403</ZipCode>\n    <ZipCode>91411</ZipCode>\n    <ZipCode>91423</ZipCode>\n    <ZipCode>91504</ZipCode>\n    <ZipCode>91505</ZipCode>\n  </ZipCodes>\n  <Cities>\n    <City>BEVERLY HILLS</City>\n    <City>BURBANK</City>\n    <City>GARDENA</City>\n    <City>LOS ANGELES</City>\n    <City>SHERMAN OAKS</City>\n    <City>SUN VALLEY</City>\n    <City>VAN NUYS</City>\n  </Cities>\n  <Tiers>\n    <Tier>0</Tier>\n  </Tiers>\n  <NpaNxxXs>\n    <NpaNxxX>3102010</NpaNxxX>\n    <NpaNxxX>3102011</NpaNxxX>\n    <NpaNxxX>3102012</NpaNxxX>\n    <NpaNxxX>3102013</NpaNxxX>\n    <NpaNxxX>3102014</NpaNxxX>\n    <NpaNxxX>3102015</NpaNxxX>\n    <NpaNxxX>3102016</NpaNxxX>\n    <NpaNxxX>3102017</NpaNxxX>\n    <NpaNxxX>3102018</NpaNxxX>\n    <NpaNxxX>3102019</NpaNxxX>\n    <NpaNxxX>4246669</NpaNxxX>\n    <NpaNxxX>4247770</NpaNxxX>\n    <NpaNxxX>4247771</NpaNxxX>\n    <NpaNxxX>4247772</NpaNxxX>\n    <NpaNxxX>4247773</NpaNxxX>\n    <NpaNxxX>4247774</NpaNxxX>\n    <NpaNxxX>4247775</NpaNxxX>\n    <NpaNxxX>4247776</NpaNxxX>\n    <NpaNxxX>4247777</NpaNxxX>\n    <NpaNxxX>4247778</NpaNxxX>\n    <NpaNxxX>4247779</NpaNxxX>\n  </NpaNxxXs>\n  <Id>3538</Id>\n  <LocalRateCenters>\n  <RateCenterId>4421</RateCenterId>\n  <RateCenterId>14259</RateCenterId>\n  </LocalRateCenters>\n  </CoveredRateCenter>\n</CoveredRateCenters>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CoveredRateCenterSearchResponse"
                }
              }
            }
          },
          "303": {
            "description": "No <i><b>page</b></i> or <i><b>size</b></i> query parameters specified. Link to first page of results provided in <i><b>Location</b></i> header",
            "content": {
              "application/xml": {}
            }
          },
          "400": {
            "description": "Invalid query parameter value.",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<CoveredRateCenters>\n  <ResponseStatus>\n    <ErrorCode>4002</ErrorCode>\n    <Description>Please verify that your NPA, NPA-NXX, or NPA-NXX-X search input parameters are correct.</Description>\n  </ResponseStatus>\n  </CoveredRateCenters>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CoveredRateCenterSearchErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/coveredRateCenters/{rateCenterId}": {
      "get": {
        "tags": [
          "Rate Centers"
        ],
        "description": "Retrieve information about a specific covered rate center identified as the resource.",
        "operationId": "GetCoveredRateCenter",
        "summary": "Retrieve Covered Rate Centers",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "rateCenterId",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/xml": {
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<CoveredRateCenter>\n   <Name>LOMITA</Name>\n   <Abbreviation>LOMITA</Abbreviation>\n   <State>CA</State>\n   <Lata>730</Lata>\n   <AvailableNumberCount>5536</AvailableNumberCount>\n   <LimitedAvailableNumberCount>5236</LimitedAvailableNumberCount>\n   <ZipCodes>\n      <ZipCode>90044</ZipCode>\n      <ZipCode>90059</ZipCode>\n      <ZipCode>90061</ZipCode>\n      <ZipCode>90247</ZipCode>\n      <ZipCode>90248</ZipCode>\n      <ZipCode>90249</ZipCode>\n      <ZipCode>90717</ZipCode>\n      <ZipCode>90802</ZipCode>\n      <ZipCode>90813</ZipCode>\n      <ZipCode>90822</ZipCode>\n      <ZipCode>90831</ZipCode>\n      <ZipCode>90834</ZipCode>\n   </ZipCodes>\n   <Cities>\n      <City>GARDENA</City>\n      <City>LOMITA</City>\n      <City>LONG BEACH</City>\n      <City>LOS ANGELES</City>\n   </Cities>\n   <Tiers>\n      <Tier>0</Tier>\n   </Tiers>\n   <NpaNxxXs>\n      <NpaNxxX>3102570</NpaNxxX>\n      <NpaNxxX>3102571</NpaNxxX>\n   </NpaNxxXs>\n   <Id>6854</Id>\n   <LocalRateCenters>\n      <RateCenterId>369</RateCenterId>\n      <RateCenterId>7843</RateCenterId>\n      <RateCenterId>7945</RateCenterId>\n   </LocalRateCenters>\n</CoveredRateCenter>"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/CoveredRateCenterResponse"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - the rate center id does not exist in the system.",
            "content": {
              "application/xml": {}
            }
          }
        }
      }
    },
    "/callbacks/portOutValidationCallbackApi": {
      "post": {
        "tags": [
          "Callbacks"
        ],
        "description": "The initial request for validation is a post to the pre-configured URL defined by the customer. This request contains optional elements for:<ul><li>PIN (optional) ( 10 digits )</li><li>Account Number (optional) ( 25 digits )</li><li>zipcode (optional) ( 15 characters )</li><li>a list of one or more telephone numbers (at least one telephone number must be provided) ( 10 digits )</li><li>Subscriber name for information purposes. (optional)( 93 characters )</li><li>PON for information and correlation purposes. (optional)( 25 characters )</li></ul>. <p>Please visit <a href='/docs/numbers/webhooks/portoutValidationWebhook'>Webhooks</a></p>",
        "operationId": "PortOutValidationWebhook",
        "summary": "Port-out validation webhook",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<PortOutValidationRequest>\n  <PON>some_pon</PON>\n  <Pin>1111</Pin>\n  <AccountNumber>777</AccountNumber>\n  <ZipCode>62025</ZipCode>\n  <SubscriberName>Subscriber Name</SubscriberName>\n  <TelephoneNumbers>\n    <TelephoneNumber>2223331000</TelephoneNumber>\n    <TelephoneNumber>2223331001</TelephoneNumber>\n  </TelephoneNumbers>\n</PortOutValidationRequest>"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/PortOutValidationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "<h3>Validation Passed</h3>If the port-out is considered valid the returned payload contains an indication that the numbers in the request are portable &lt;Portable&gt;true&lt;/Portable&gt; (<b>required</b>), and may play back the PON.<p>&nbsp;</p> <h3>Validation Failed</h3><p>In the case where the number should not be ported, a response payload is returned that may indicate the values that would allow a port-out request to be validated.<br/>\n<ul>\n<li>The &lt;Portable&gt; value <b>must</b> indicate \"false\"</li>\n<li>A recognizable error code values <b>must</b> be returned, unrecognized error codes will be ignored and not treated as error codes.  The list of acceptable error codes is provided above.</li>\n<li>The response payload should contain at least one of the optional fields that could be used to validate the port-out request.</li>\n<li>If the returned field/fields was/were not provided in the original request then that indicates that the field was missing from the request and should be provided</li>\n<li>If the returned field/fields was/were different than provided then that indicates an error in the requesting information</li>\n<li>The list of Telephone Numbers should contain the telephone numbers considered valid.</li>\n<li>For the port-out to be considered valid all telephone numbers in the request should be returned - If one telephone number is invalid then the request fails.</li>\n</ul><br/>\n  Failure to return a valid response will be considered an <b>approval of the port-out</b> request.<br/>\nFailure to return any response will be considered an <b>approval of the port-out</b> request.<br/></p>\n",
            "content": {
              "application/xml": {
                "examples": {
                  "Validation Passed": {
                    "value": "<PortOutValidationResponse>\n  <Portable>true</Portable>\n  <PON>some_pon</PON>\n</PortOutValidationResponse>\n"
                  },
                  "Validation Failed": {
                    "value": "<PortOutValidationResponse>\n  <Portable>false</Portable>\n  <PON>some_pon</PON>\n  <Errors>\n    <Error>\n      <Code>75xx</Code>\n      <Description>Customer api error description</Description>\n    </Error>\n    <Error>\n      <Code>75xx</Code>\n      <Description>Customer api error description</Description>\n    </Error>\n  </Errors>\n  <AcceptableValues>\n    <Pin>2222</Pin>\n    <AccountNumber>555</AccountNumber>\n    <ZipCode>02154</ZipCode>\n    <TelephoneNumbers>\n      <TelephoneNumber>2223331000</TelephoneNumber>\n    </TelephoneNumbers>\n    </AcceptableValues>\n</PortOutValidationResponse>\n"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PortOutValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "<p>Numbers <b>will be ported out</b> if a 4xx series response is received by Bandwidth</p>\n"
          },
          "500": {
            "description": "<p>An error in the customer's server - indicating that the request cannot be serviced by the customer.\nNumbers <b>will be ported out</b> if a 5xx series response is received by Bandwidth</p>\n"
          }
        }
      }
    },
    "/callbacks/notificationCallbackApi": {
      "post": {
        "tags": [
          "Callbacks"
        ],
        "description": "<p>The POST to the callback API contains a summary of the order that is independent of the type of the order or event that caused the notification callback.  This requires that the customer's end system place an API call to the Bandwidth Dashboard API to gather additional details on the change to the order or change to the TN due to the event, if that is important.  <br><br>\nThe payload of the POST for order notifications contains:\n<ul>\n<li> the Subscription ID that the notification is in response to.</li>\n<li> the type of order that the notification applies to.</li>\n<li> the order ID of the order that has changed </li>\n<li> the customer order ID of the order that has changed (the element is considered optional, and will only be provided if the related order has a Customer Order Id)</li>\n<li> the new state of the order </li>\n<li> a message if one was attached as part of the state change.  This will often be present in error cases.</li>\n<li> the body of any note that was attached to the order, if applicable</li>\n<li> list of the completed telephone numbers for Port-in/Port-out/New Number/Disconnect orders in terminal state</li>\n</ul><br><br>\nThe payload of the POST for event notifications contains:\n<ul>\n<li> the Subscription ID that the notification is in response to.</li>\n<li> the type of event that the notification applies to.</li>\n<li> list of the impacted telephone numbers for event notifications </li>\n</ul></p><p>Please visit <a href='/docs/numbers/webhooks'>Webhooks</a></p>\n",
        "operationId": "OrderWebhook",
        "summary": "Order webhook",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/xml": {
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Notification>\n  <SubscriptionId>...</SubscriptionId>\n  <!-- for order updates -->\n  <OrderType>portins | portouts | orders | disconnects | dldas | lsrorders | e911s | tnoptions</OrderType>\n  <OrderId>...</OrderId>\n  <CustomerOrderId>...</CustomerOrderId>\n  <Status>COMPLETE | FAILED | PARTIAL | EXCEPTION ... </Status>\n  <!-- for order state updates -->\n  <Message>...</Message>\n   <!-- for order state updates -->\n  <Note>...</Note>\n  <!-- for note events -->\n  <CompletedTelephoneNumbers>\n  <!-- for portins/portouts/orders/disconnects OrderTypes -->\n  <TelephoneNumber> ... </TelephoneNumber>\n  <!-- ... -->\n  </CompletedTelephoneNumbers>\n  <!-- for event updates -->\n  <EventType> [MESSAGING_LOST] </EventType>\n  <ImpactedTelephoneNumbers>\n    <TelephoneNumber> ... </TelephoneNumber>\n    <!-- ... -->\n  </ImpactedTelephoneNumbers>\n</Notification>\n"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/NotificationCallbackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "<p>a 200 OK is presumed to be acceptance of the API call.  In the case of the notification callback API the response code and any returned message is stored in the &lt;Status&gt; element of the &lt;Subscription&gt;</p>\n"
          },
          "400": {
            "description": "<p>Anything other than a 200 OK is presumed to be a failure of the API call.  In the case of the notification callback API the response code and any returned message is stored in the &lt;Status&gt; element of the &lt;Subscription&gt;.  No subsequent action is taken is based on the error.</p>\n"
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/movetns": {
      "post": {
        "tags": [
          "Move Tns"
        ],
        "description": "The POST method moves all telephone numbers specified in the body to the given SIP peer.<br>The source SIP peer is determined by the Telephone Number, i.e. the PUT method can move multiple numbers from different source SIP peers.<br>The destination SIP peer is specified in the URL.<br>NOTE: only a maximum of 5000 Telephone Numbers can be moved in one operation.",
        "operationId": "CreateSipPeerTelephoneNumberBulk",
        "summary": "Move bulk tns to sipper",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SipPeerIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SipPeerTelephoneNumberBulk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request has been successfully received.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTelephoneNumberBulkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible errors in response:<ul>    <li>Shared TNs with messaging cannot be moved to a sippeer without the SMS feature enabled.</li>    <li>Shared TNs with voice cannot be moved to a sippeer with the SMS feature enabled.</li></ul>",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTelephoneNumberBulkErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Get all sip peer gateway IPs and subnets",
        "operationId": "GetSipPeerTerminationProducts",
        "summary": "Get sip peer termination products",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SipPeerIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerTerminationProductsResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<TerminationResponse>\n   <TerminationProduct>\n      <TerminationSettings>\n         <VoiceProtocol>SIP</VoiceProtocol>\n      </TerminationSettings>\n      <TerminationHosts>\n         <TerminationHost>\n            <HostName>188.219.64.2</HostName>\n            <Port>0</Port>\n            <id>20</id>\n         </TerminationHost>\n         <TerminationHost>\n            <HostName>87.67.71.16/30</HostName>\n            <Port>0</Port>\n            <id>21</id>\n         </TerminationHost>\n      </TerminationHosts>\n   </TerminationProduct>\n</TerminationResponse>"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "title": "TerminationResponse",
                  "properties": {
                    "TerminationResponse": {
                      "$ref": "#/components/schemas/ResponseStatus"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SipPeerGatewayIpsResponse>\n   <ResponseStatus>\n      <Description>Some error description</Description>\n   </ResponseStatus>\n</SipPeerGatewayIpsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination/hosts": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Get all sip peer gateway IPs and subnets",
        "operationId": "GetSipPeerTerminationGateways",
        "summary": "Get sip peer termination gateways",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SipPeerIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerGatewayIpsResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<TerminationHosts>\n   <TerminationHost>\n      <HostName>212.240.169.208</HostName>\n      <Port>0</Port>\n      <id>21</id>\n   </TerminationHost>\n   <TerminationHost>\n      <HostName>87.67.71.16/30</HostName>\n      <Port>0</Port>\n      <id>22</id>\n   </TerminationHost>\n</TerminationHosts>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination/hosts/{gatewayId}": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Get sip peer gateway IP or subnet by id",
        "operationId": "GetSipPeerTerminationGateway",
        "summary": "Get sip peer termination gateway",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SipPeerIdPathParam"
          },
          {
            "$ref": "#/components/parameters/GatewayIdIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful result that contains the response data",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerGatewayIpResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SipPeerGatewayIpResponse>\n   <SipPeerGatewayIp>\n      <HostName>87.67.71.16/30</HostName>\n      <Port>0</Port>\n      <id>23</id>\n   </SipPeerGatewayIp>\n</SipPeerGatewayIpResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Sip peer gateway ip was not found",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "title": "SipPeerGatewayIpResponse",
                  "properties": {
                    "SipPeerGatewayIpResponse": {
                      "$ref": "#/components/schemas/ResponseStatus"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination/hosts/{gatewayId}/settings": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Get all gateway attributes",
        "operationId": "GetSipPeerTerminationGatewayAttributes",
        "summary": "Get sip peer termination gateway attributes",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SipPeerIdPathParam"
          },
          {
            "$ref": "#/components/parameters/GatewayIdIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerGatewayAttributesResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SipPeerGatewayAttributesResponse>\n   <SipPeerGatewayAttributes>\n      <GatewayId>10</GatewayId>\n      <GatewayAttributes>\n         <GatewayAttribute>\n            <id>8</id>\n            <type>TRACE</type>\n            <value>true</value>\n            <effectiveDate>2014-11-13T17:48:33</effectiveDate>\n            <inEffectiveDate>2014-12-13T17:48:33</inEffectiveDate>\n         </GatewayAttribute>\n      </GatewayAttributes>\n   </SipPeerGatewayAttributes>\n</SipPeerGatewayAttributesResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/products/termination/hosts/{gatewayId}/settings/{attributeId}": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Get gateway attribute by id",
        "operationId": "GetSipPeerTerminationGatewayAttribute",
        "summary": "Get sip peer termination gateway attribute",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SipPeerIdPathParam"
          },
          {
            "$ref": "#/components/parameters/GatewayIdIdPathParam"
          },
          {
            "name": "attributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SipPeerGatewayAttributeResponse"
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SipPeerGatewayAttributeResponse>\n   <SipPeerGatewayAttribute>\n      <GatewayId>25</GatewayId>\n      <GatewayAttribute>\n         <id>21</id>\n         <type>TRACE</type>\n         <value>true</value>\n         <effectiveDate>2014-11-13T17:48:33</effectiveDate>\n         <inEffectiveDate>2014-12-13T17:48:33</inEffectiveDate>\n      </GatewayAttribute>\n   </SipPeerGatewayAttribute>\n</SipPeerGatewayAttributeResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/{orderType}/{orderId}/adminparameters": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get order admin parameters",
        "operationId": "GetOrderAdminParameters",
        "summary": "Get Order Admin Parameters",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderTypePathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AdminParametersResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "Update order admin parameters",
        "operationId": "UpdateOrderAdminParameters",
        "summary": "Update Order Admin Parameters",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderTypePathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AdminParametersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AdminParametersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Wrong input",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AdminParametersErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "description": "Remove order admin parameters",
        "operationId": "RemoveOrderAdminParameters",
        "summary": "Remove Order Admin Parameters",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderTypePathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Order admin parameters have been successfully deleted/cancelled",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AdminParametersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Order id is invalid, order does not exist or the port-in order is already processed, and therefore cannot be deleted",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AdminParametersErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/portins/{orderId}/losingCarrier": {
      "get": {
        "tags": [
          "Porting"
        ],
        "description": "Retrieves the losing carrier information associated with the specified port-in ID number",
        "operationId": "GetPortInLosingCarrierInfo",
        "summary": "Get Port-in Losing Carrier Info",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/OrderIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The information has been successfully retrieved and displayed in the payload",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PortinLosingCarrierResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/uctrunks": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Get sip peer premise trunks",
        "operationId": "GetSipPeerPremiseTrunks",
        "summary": "Get SipPeer Premise Trunks",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SipPeerIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Information was successfully retrieved",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UcTrunkingPremiseTrunksResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/products/{productName}/tntotals": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Get Product Tn Totals",
        "operationId": "GetProductTnTotals",
        "summary": "Get Product Tn Totals",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "name": "productName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Origination",
                "Messaging",
                "TollFree"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information was successfully retrieved",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTnHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/sippeers/{sipPeerId}/totalSeats": {
      "get": {
        "tags": [
          "SipPeer Management"
        ],
        "description": "Retrieves the total number of seats on sip peer location",
        "operationId": "GetSipPeerTotalSeats",
        "summary": "Get Total Number of Seats for Sip Peer",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SipPeerIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The total number of seats has been successfully retrieved",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "SipPeerTotalSeatsResponse": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/UcTrunkingSeats"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SipPeerTotalSeatsResponse>\n   <UcTrunkingSeats>\n      <TotalCount>2</TotalCount>\n   </UcTrunkingSeats>\n</SipPeerTotalSeatsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The account ID given does not have UC Trunking associated with it",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "SipPeerTotalSeatsResponse": {
                      "$ref": "#/components/schemas/ResponseStatus"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SipPeerTotalSeatsResponse>\n   <ResponseStatus>\n      <ErrorCode>12017</ErrorCode>\n      <Description>Account '12346099' does not have product 'UcTrunking'</Description>\n   </ResponseStatus>\n</SipPeerTotalSeatsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/sites/{siteId}/totalSeats": {
      "get": {
        "tags": [
          "Site Management"
        ],
        "description": "Retrieves the total number of seats on site",
        "operationId": "GetSiteTotalSeats",
        "summary": "Get Total Number of Seats for Site",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          },
          {
            "$ref": "#/components/parameters/SiteIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The total number of seats has been successfully retrieved",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "SiteTotalSeatsResponse": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/UcTrunkingSeats"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SiteTotalSeatsResponse>\n   <UcTrunkingSeats>\n      <TotalCount>16</TotalCount>\n   </UcTrunkingSeats>\n</SiteTotalSeatsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The account ID given does not have UC Trunking associated with it",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "SiteTotalSeatsResponse": {
                      "$ref": "#/components/schemas/ResponseStatus"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<SiteTotalSeatsResponse>\n   <ResponseStatus>\n      <ErrorCode>12017</ErrorCode>\n      <Description>Account '12346099' does not have product 'UcTrunking'</Description>\n   </ResponseStatus>\n</SiteTotalSeatsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/totalSeats": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Retrieves the total number of seats on account",
        "operationId": "GetAccountTotalSeats",
        "summary": "Get Total Number of Seats for Account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountIdPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Information was successfully retrieved",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "AccountTotalSeatsResponse": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/UcTrunkingSeats"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The account ID given does not have UC Trunking associated with it",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "AccountTotalSeatsResponse": {
                      "$ref": "#/components/schemas/ResponseStatus"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "description": "example",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<AccountTotalSeatsResponse>\n   <ResponseStatus>\n      <ErrorCode>12017</ErrorCode>\n      <Description>Account '12346099' does not have product 'UcTrunking'</Description>\n   </ResponseStatus>\n</AccountTotalSeatsResponse>"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "httpBasic": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "UcTrunkingSeats": {
        "type": "object",
        "properties": {
          "UcTrunkingSeats": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              }
            }
          }
        }
      },
      "AbstractOriginationSmsTnHistory": {
        "type": "object",
        "properties": {
          "NPANXXDetailList": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "NPANXXDetail",
              "properties": {
                "TerminationHost": {
                  "type": "object",
                  "properties": {
                    "NPANXX": {
                      "type": "string"
                    },
                    "Tier": {
                      "type": "integer"
                    },
                    "Count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OriginationTnHistory": {
        "type": "object",
        "properties": {
          "Origination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AbstractOriginationSmsTnHistory"
              }
            ]
          }
        }
      },
      "SmsTnHistory": {
        "type": "object",
        "properties": {
          "Sms": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AbstractOriginationSmsTnHistory"
              }
            ]
          }
        }
      },
      "TollfreeTnHistory": {
        "type": "object",
        "properties": {
          "Tollfree": {
            "type": "object",
            "properties": {
              "Count": {
                "type": "integer"
              }
            }
          }
        }
      },
      "ProductTnHistoryResponse": {
        "type": "object",
        "properties": {
          "ProductTNDetailsResponse": {
            "$ref": "#/components/schemas/ProductTnReportWrapper"
          }
        }
      },
      "ProductTnReportWrapper": {
        "type": "object",
        "properties": {
          "ProductTNDetails": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OriginationTnHistory"
              },
              {
                "$ref": "#/components/schemas/SmsTnHistory"
              },
              {
                "$ref": "#/components/schemas/TollfreeTnHistory"
              }
            ]
          }
        }
      },
      "UcTrunkingPremiseSettings": {
        "type": "object",
        "properties": {
          "BiDirectionalTrunks": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UcTrunkingPremiseTrunksResponse": {
        "type": "object",
        "properties": {
          "UcTrunkingPremiseTrunksResponse": {
            "type": "object",
            "properties": {
              "UcTrunkingPremiseSettings": {
                "$ref": "#/components/schemas/UcTrunkingPremiseSettings"
              }
            }
          }
        }
      },
      "PortinLosingCarrierInfo": {
        "type": "object",
        "title": "LosingCarrier",
        "properties": {
          "Spid": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Wireless": {
            "type": "boolean"
          },
          "AccountNumberRequired": {
            "type": "boolean"
          },
          "MinimumPortingInterval": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PortinLosingCarrierResponse": {
        "type": "object",
        "properties": {
          "PortinLosingCarrierResponse": {
            "type": "object",
            "properties": {
              "LosingCarrier": {
                "$ref": "#/components/schemas/PortinLosingCarrierInfo"
              }
            }
          }
        }
      },
      "AdminParametersRequest": {
        "type": "object",
        "title": "AdminParameters",
        "properties": {
          "AdminParameters": {
            "$ref": "#/components/schemas/AdminParametersPayload"
          }
        }
      },
      "AdminParametersPayload": {
        "type": "object",
        "title": "AdminParameters",
        "properties": {
          "ActivityState": {
            "type": "string"
          },
          "BandwidthPrime": {
            "type": "string"
          }
        }
      },
      "AdminParametersResponse": {
        "type": "object",
        "properties": {
          "AdminParametersResponse": {
            "type": "object",
            "properties": {
              "AdminParameters": {
                "$ref": "#/components/schemas/AdminParametersPayload"
              }
            }
          }
        }
      },
      "AdminParametersErrorResponse": {
        "type": "object",
        "properties": {
          "AdminParametersResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "SipPeerGatewayAttributeResponse": {
        "type": "object",
        "properties": {
          "SipPeerGatewayAttributeResponse": {
            "type": "object",
            "properties": {
              "SipPeerGatewayAttribute": {
                "$ref": "#/components/schemas/SipPeerGatewayAttribute"
              }
            }
          }
        }
      },
      "SipPeerGatewayAttribute": {
        "type": "object",
        "properties": {
          "GatewayId": {
            "type": "integer",
            "format": "int64"
          },
          "GatewayAttribute": {
            "$ref": "#/components/schemas/TerminationAttribute"
          }
        }
      },
      "SipPeerGatewayAttributes": {
        "type": "object",
        "properties": {
          "GatewayId": {
            "type": "integer",
            "format": "int64"
          },
          "GatewayAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerminationAttribute"
            }
          }
        }
      },
      "TerminationAttribute": {
        "type": "object",
        "title": "GatewayAttribute",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "profileId": {
            "type": "integer",
            "format": "int64"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "inEffectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "productAttributeId": {
            "type": "integer",
            "format": "int64"
          },
          "isTemplate": {
            "type": "boolean"
          }
        }
      },
      "SipPeerGatewayAttributesResponse": {
        "type": "object",
        "properties": {
          "SipPeerGatewayAttributesResponse": {
            "type": "object",
            "properties": {
              "SipPeerGatewayAttributes": {
                "$ref": "#/components/schemas/SipPeerGatewayAttributes"
              }
            }
          }
        }
      },
      "SipPeerGatewayIpResponse": {
        "type": "object",
        "title": "SipPeerGatewayIpResponse",
        "properties": {
          "SipPeerGatewayIpResponse": {
            "type": "object",
            "properties": {
              "SipPeerGatewayIp": {
                "type": "object",
                "title": "SipPeerGatewayIp",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SipPeerGatewayIp"
                  }
                ]
              }
            }
          }
        }
      },
      "SipPeerGatewayIpsResponse": {
        "type": "object",
        "title": "TerminationHosts",
        "properties": {
          "TerminationHosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SipPeerGatewayIp"
            }
          }
        }
      },
      "SipPeerTerminationProductsResponse": {
        "type": "object",
        "properties": {
          "TerminationResponse": {
            "type": "object",
            "properties": {
              "TerminationProduct": {
                "$ref": "#/components/schemas/SipPeerTerminationProducts"
              }
            }
          }
        }
      },
      "SipPeerGatewayIp": {
        "type": "object",
        "title": "TerminationHost",
        "properties": {
          "HostName": {
            "type": "string"
          },
          "Port": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SipPeerGatewayIps": {
        "type": "array",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "items": {
          "$ref": "#/components/schemas/SipPeerGatewayIp"
        }
      },
      "SipPeerTerminationProducts": {
        "type": "object",
        "title": "TerminationProduct",
        "properties": {
          "TerminationSettings": {
            "$ref": "#/components/schemas/SipPeerTerminationSettings"
          },
          "TerminationHosts": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/SipPeerGatewayIp"
            }
          }
        }
      },
      "SipPeerTerminationSettings": {
        "type": "object",
        "title": "TerminationSettings",
        "properties": {
          "HttpSettings": {
            "$ref": "#/components/schemas/SipPeerHttpSettings"
          },
          "VoiceProtocol": {
            "type": "string"
          }
        }
      },
      "SipPeerTelephoneNumberBulk": {
        "type": "object",
        "properties": {
          "SipPeerTelephoneNumbers": {
            "type": "array",
            "maxItems": 5000,
            "items": {
              "type": "string",
              "xml": {
                "name": "FullNumber"
              }
            }
          }
        }
      },
      "SipPeerTelephoneNumberBulkResponse": {
        "type": "object",
        "properties": {
          "SipPeerTelephoneNumberMoveResponse": {
            "$ref": "#/components/schemas/SipPeerTelephoneNumberBulk"
          }
        }
      },
      "SipPeerTelephoneNumberBulkErrorResponse": {
        "type": "object",
        "properties": {
          "SipPeerTelephoneNumberMoveResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "EmergencyNotificationRecipientEmail": {
        "title": "Emergency notification recipient for Email type",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "Type": {
            "type": "string",
            "enum": [
              "EMAIL"
            ]
          },
          "EmailAddress": {
            "$ref": "#/components/schemas/RecipientEmailAddress"
          }
        },
        "required": [
          "Type",
          "EmailSubscription"
        ]
      },
      "EmergencyNotificationRecipientSms": {
        "title": "Emergency notification recipient for SMS type",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "Type": {
            "type": "string",
            "enum": [
              "SMS"
            ]
          },
          "SMS": {
            "$ref": "#/components/schemas/RecipientSms"
          }
        },
        "required": [
          "Type",
          "SMS"
        ]
      },
      "EmergencyNotificationRecipientTts": {
        "title": "Emergency notification recipient for TTS type",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "Type": {
            "type": "string",
            "enum": [
              "TTS"
            ]
          },
          "TTS": {
            "$ref": "#/components/schemas/RecipientTTS"
          }
        },
        "required": [
          "Type",
          "TTS"
        ]
      },
      "EmergencyNotificationRecipientCallback": {
        "title": "Emergency notification recipient for Callback type",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "Type": {
            "type": "string",
            "enum": [
              "CALLBACK"
            ]
          },
          "Callback": {
            "$ref": "#/components/schemas/RecipientCallback"
          }
        },
        "required": [
          "Type",
          "Callback"
        ]
      },
      "EmergencyNotificationGroupOrderForAddGroup": {
        "title": "Creating a new emergency notification group",
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "$ref": "#/components/schemas/CustomerOrderId"
          },
          "AddedEmergencyNotificationGroup": {
            "$ref": "#/components/schemas/AddedEmergencyNotificationGroup"
          }
        },
        "required": [
          "AddedEmergencyNotificationGroup",
          "AddedEmergencyNotificationRecipients",
          "EmergencyNotificationRecipient",
          "Identifier"
        ]
      },
      "AddedEmergencyNotificationGroup": {
        "description": "Indicates that the order is to add an emergency notification group.",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "AddedEmergencyNotificationRecipients": {
            "description": "Indicates that emergency notification recipients are being added to the emergency notification group.",
            "type": "object",
            "properties": {
              "EmergencyNotificationRecipient": {
                "$ref": "#/components/schemas/EmergencyNotificationRecipientWithId"
              }
            }
          }
        }
      },
      "AddedEmergencyNotificationGroupWithId": {
        "description": "Indicates that the order is to add an emergency notification group.",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "Identifier": {
            "$ref": "#/components/schemas/EmergencyGroupIdentifier"
          },
          "AddedEmergencyNotificationRecipients": {
            "description": "Indicates that emergency notification recipients are being added to the emergency notification group.",
            "type": "object",
            "properties": {
              "EmergencyNotificationRecipient": {
                "$ref": "#/components/schemas/EmergencyNotificationRecipientWithId"
              }
            }
          }
        }
      },
      "EmergencyNotificationGroupOrderForDeleteGroup": {
        "title": "Deleting an emergency notification group",
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "$ref": "#/components/schemas/CustomerOrderId"
          },
          "DeletedEmergencyNotificationGroup": {
            "description": "Indicates that the order is to delete an emergency notification group.",
            "type": "object",
            "properties": {
              "Identifier": {
                "$ref": "#/components/schemas/RecipientIdentifier"
              }
            }
          }
        },
        "required": [
          "DeletedEmergencyNotificationGroup",
          "Identifier"
        ]
      },
      "EmergencyNotificationGroupOrderForUpdateGroup": {
        "title": "Updating an emergency notification group",
        "type": "object",
        "properties": {
          "ModifiedEmergencyNotificationGroup": {
            "description": "Indicates that the order is to modify an emergency notification group.",
            "type": "object",
            "properties": {
              "Identifier": {
                "$ref": "#/components/schemas/RecipientIdentifier"
              },
              "Description": {
                "description": "A mandatory 200 character description of the Emergency Notification Group. The contents of this field are freeform, but ideally should describe the set of endpoints that are being grouped together for the purpose of having the same emergency notification recipients. E.g. Occupants of building 5 main campus.",
                "type": "string",
                "maxLength": 200
              }
            }
          }
        },
        "required": [
          "ModifiedEmergencyNotificationGroup",
          "Identifier"
        ]
      },
      "EmergencyNotificationGroupOrderForUpdateGroupByAddingRecipient": {
        "title": "Updating an emergency notification group by adding emergency notification recipients",
        "type": "object",
        "properties": {
          "ModifiedEmergencyNotificationGroup": {
            "description": "Indicates that the order is to modify an emergency notification group.",
            "type": "object",
            "properties": {
              "Identifier": {
                "$ref": "#/components/schemas/RecipientIdentifier"
              },
              "AddedEmergencyNotificationRecipients": {
                "description": "Indicates that emergency notification recipients are being added to the emergency notification group.",
                "type": "object",
                "properties": {
                  "EmergencyNotificationRecipient": {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientWithId"
                  }
                }
              }
            }
          }
        },
        "required": [
          "ModifiedEmergencyNotificationGroup",
          "AddedEmergencyNotificationRecipients",
          "EmergencyNotificationRecipient",
          "Identifier"
        ]
      },
      "EmergencyNotificationGroupOrderForUpdateGroupByRemovingRecipient": {
        "title": "Updating an emergency notification group by removing emergency notification recipients",
        "type": "object",
        "properties": {
          "ModifiedEmergencyNotificationGroup": {
            "description": "Indicates that the order is to modify an emergency notification group.",
            "type": "object",
            "properties": {
              "Identifier": {
                "$ref": "#/components/schemas/RecipientIdentifier"
              },
              "DeletedEmergencyNotificationRecipients": {
                "description": "Indicates that emergency notification recipients are being removed from the emergency notification group.",
                "type": "object",
                "properties": {
                  "EmergencyNotificationRecipient": {
                    "$ref": "#/components/schemas/EmergencyNotificationRecipientWithId"
                  }
                }
              }
            }
          }
        },
        "required": [
          "ModifiedEmergencyNotificationGroup",
          "DeletedEmergencyNotificationRecipients",
          "EmergencyNotificationRecipient",
          "Identifier"
        ]
      },
      "EmergencyNotificationEndpointOrderForAddAssociation": {
        "title": "Creating an order to adding emergency endpoint associations from an emergency notification group ",
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "$ref": "#/components/schemas/CustomerOrderId"
          },
          "EmergencyNotificationGroup": {
            "description": "Emergency notification group.",
            "type": "object",
            "properties": {
              "Identifier": {
                "$ref": "#/components/schemas/EmergencyGroupIdentifier"
              }
            }
          },
          "AddedAssociations": {
            "description": "Included when emergency endpoint to emergency notification group associations are to be created. Only AddedAssociations or Deleted Associations may be included in a given order.",
            "type": "object",
            "properties": {
              "EepToEngAssociations": {
                "description": "Mandatory container for the list of TNs and AEUI identifiers to be associated or dissociated with the emergency notification group",
                "type": "object",
                "properties": {
                  "EepTns": {
                    "$ref": "#/components/schemas/EepTns"
                  },
                  "EepAeuiIds": {
                    "$ref": "#/components/schemas/EepAeuiIds"
                  }
                }
              }
            }
          }
        },
        "required": [
          "EmergencyNotificationGroup",
          "AddedAssociations"
        ]
      },
      "EmergencyNotificationEndpointOrderForRemoveAssociation": {
        "title": "Creating an order to removing emergency endpoint associations from an emergency notification group ",
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "description": "An optional customer-defined order identifier that is stored with the Bandwidth order. This value is opaque to Bandwidth.",
            "type": "string",
            "maxLength": 255
          },
          "EmergencyNotificationGroup": {
            "description": "Emergency notification group.",
            "type": "object",
            "properties": {
              "Identifier": {
                "$ref": "#/components/schemas/EmergencyGroupIdentifier"
              }
            }
          },
          "DeletedAssociations": {
            "description": "Included when emergency endpoint to emergency notification group associations are to be removed. Only AddedAssociations or Deleted Associations may be included in a given order.",
            "type": "object",
            "properties": {
              "EepToEngAssociations": {
                "description": "Mandatory container for the list of TNs and AEUI identifiers to be associated or dissociated with the emergency notification group",
                "type": "object",
                "properties": {
                  "EepTns": {
                    "$ref": "#/components/schemas/EepTns"
                  },
                  "EepAeuiIds": {
                    "$ref": "#/components/schemas/EepAeuiIds"
                  }
                }
              }
            }
          }
        },
        "required": [
          "EmergencyNotificationGroup",
          "AddedAssociations"
        ]
      },
      "EepTns": {
        "description": "A container of emergency endpoints that are of type TN. This element may be omitted if none of the emergency endpoints to be associated or dissociated are telephone numbers.",
        "type": "object",
        "properties": {
          "TelephoneNumber": {
            "description": "A 10-digit telephone number representing an emergency endpoint in the ListOfEepTns. The list may consist of a single TN if desired.",
            "type": "string",
            "maxLength": 10
          }
        }
      },
      "EepAeuiIds": {
        "description": "A container of emergency endpoints that are of type AEUI. This element may be omitted if none of the emergency endpoints to be associated or dissociated are Alternate End User Identities.",
        "type": "object",
        "properties": {
          "Identifier": {
            "description": "A unique identifier for the AEUI representing an emergency endpoint in the ListOfEepAeuiIds. The list may consist of a single AEUI ID if desired.",
            "type": "string",
            "maxLength": 200
          }
        }
      },
      "EmergencyNotificationRecipientWithId": {
        "description": "An emergency notification recipient.",
        "type": "object",
        "properties": {
          "Identifier": {
            "description": "The identifier that uniquely identifies an emergency notification recipient. This identifier was assigned when the emergency notification recipient was created. A given emergency notification recipient may be associated with only one emergency notification group.",
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "CustomerOrderId": {
        "description": "An optional customer-defined order identifier that is stored with the Bandwidth order. This value is opaque to Bandwidth.",
        "type": "string",
        "maxLength": 255
      },
      "TelephoneNumber": {
        "type": "object",
        "properties": {
          "TelephoneNumber": {
            "description": "Simple Telephone Number.",
            "type": "string"
          }
        }
      },
      "RecipientIdentifier": {
        "description": "The identifier that uniquely identifies an emergency notification recipient.",
        "type": "string",
        "maxLength": 255
      },
      "OrderId": {
        "description": "The identifier that uniquely identifies an emergency notification group order.",
        "type": "string",
        "maxLength": 255
      },
      "LnpOrderPortoutResponse": {
        "type": "object",
        "properties": {
          "LnpOrderResponse": {
            "type": "object",
            "properties": {
              "RequestedFocDate": {
                "description": "This is the FOC (Final Order Commit) Date requested by the person (or machine) creating the Port-out order.",
                "type": "string"
              },
              "ActualFocDate": {
                "description": "This is the FOC (Final Order Commit) Date assigned to the Port-out order by the losing carrier or their agent.",
                "type": "string"
              },
              "PON": {
                "description": "This Bandwidth internal identifier associates the port-out order with either an internal port-in or an LSR order, whichever caused the port-out order to be created.",
                "type": "string"
              },
              "AccountId": {
                "description": "This is the account that the searched-for order will be contributing to. Specifying this parameter will restrict the search to Port-out orders within the specified account.",
                "type": "string"
              },
              "OrderCreateDate": {
                "description": "The date and time on which the CSR order was created.",
                "type": "string"
              },
              "LastModifiedDate": {
                "description": "The date and time on which the order was last modified, including status updates.",
                "type": "string"
              },
              "PortOutStatus": {
                "type": "string",
                "enum": [
                  "NEW",
                  "SUPP",
                  "MODIFY",
                  "COMPLETE",
                  "CANCELLED",
                  "VALIDATION_FAILED_NEW",
                  "VALIDATION_FAILED_SUPP",
                  "VALIDATION_FAILED_MODIFY",
                  "EXCEPTION",
                  "SOA_PENDING",
                  "SOA_CONFLICT"
                ]
              },
              "SPID": {
                "description": "The Service Provider ID of the carrier that the number is being ported to.",
                "type": "string"
              },
              "userId": {
                "description": "The UserId is authenticated for access to the network via a username string.",
                "type": "string"
              }
            }
          }
        }
      },
      "LosingCarrierTnList": {
        "title": "Losing Carrier TnList",
        "type": "object",
        "properties": {
          "LosingCarrierSPID": {
            "title": "Losing Carrier SPID",
            "type": "integer"
          },
          "LosingCarrierName": {
            "title": "Losing Carrier Name",
            "type": "string"
          },
          "LosingCarrierIsWireless": {
            "title": "Losing Carrier IsWireless",
            "type": "boolean"
          },
          "LosingCarrierAccountNumberRequired": {
            "title": "Losing Carrier Account Number Required",
            "type": "boolean"
          },
          "LosingCarrierMinimumPortingInterval": {
            "title": "Losing Carrier Minimum Porting Interval",
            "type": "integer"
          },
          "TnList": {
            "$ref": "#/components/schemas/LnpCheckerTnList"
          }
        }
      },
      "LnpCheckerTnList": {
        "type": "object",
        "properties": {
          "TN": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "TN"
              }
            }
          }
        }
      },
      "RateCenterGroup": {
        "title": "Rate Center information",
        "type": "object",
        "properties": {
          "RateCenter": {
            "title": "Rate Center",
            "type": "string"
          },
          "City": {
            "title": "City",
            "type": "string"
          },
          "State": {
            "title": "State",
            "type": "string"
          },
          "LATA": {
            "title": "LATA",
            "type": "integer"
          },
          "TnList": {
            "$ref": "#/components/schemas/LnpCheckerTnList"
          }
        }
      },
      "NumberPortabilityResponse": {
        "title": "Number Portability Response",
        "type": "object",
        "properties": {
          "NumberPortabilityResponse": {
            "title": "Number Portability Response",
            "type": "object",
            "properties": {
              "PortType": {
                "description": "Port type",
                "type": "string"
              },
              "SupportedRateCenters": {
                "description": "Supported Rate Center information for the indicated set of ratecenters, containing City, State, LATA and the list of TNs for which that Rate Center applies. \nThe Tier information is provided for offnet rate centers.",
                "type": "object",
                "properties": {
                  "RateCenterGroup": {
                    "$ref": "#/components/schemas/RateCenterGroup"
                  }
                }
              },
              "UnsupportedRateCenters": {
                "description": "Unsupported Rate Center information for the indicated set of ratecenters, containing City, State, LATA and the list of TNs for which that Rate Center applies. \nThe Tier information is provided for offnet rate centers.",
                "type": "object",
                "properties": {
                  "RateCenterGroup": {
                    "$ref": "#/components/schemas/RateCenterGroup"
                  }
                }
              },
              "PartnerSupportedRateCenters": {
                "description": "Partner Supported Rate Center information for the indicated set of ratecenters, containing City, State, LATA and the list of TNs for which that Rate Center applies. \nThe Tier information is provided for offnet rate centers.",
                "type": "object",
                "properties": {
                  "RateCenterGroup": {
                    "$ref": "#/components/schemas/RateCenterGroup"
                  }
                }
              },
              "SupportedLosingCarriers": {
                "description": "Details on Supported Losing Carriers (unavailable for Enterprise Telephony users) including name, SPID, whether or not the carrier is a wireless carrier, whether or not account number is required as part of the CSR check, and the anticipated minimum number of days before a FoC date will be granted.",
                "type": "object",
                "properties": {
                  "LosingCarrierTnList": {
                    "$ref": "#/components/schemas/LosingCarrierTnList"
                  }
                }
              },
              "UnsupportedLosingCarriers": {
                "description": "Unsupported Losing Carriers (unavailable for Enterprise Telephony users) including name, SPID, whether or not the carrier is a wireless carrier, whether or not account number is required as part of the CSR check, and the anticipated minimum number of days before a FoC date will be granted.",
                "type": "object",
                "properties": {
                  "LosingCarrierTnList": {
                    "$ref": "#/components/schemas/LosingCarrierTnList"
                  }
                }
              }
            }
          }
        }
      },
      "EmergencyGroupIdentifier": {
        "description": "The mandatory identifier that uniquely identifies the emergency notification group to which emergency endpoints are being associated. This value is assigned by the system when the emergency notification group is created.",
        "type": "string",
        "maxLength": 255
      },
      "EmergencyNotificationRecipientsResponseWithEmail": {
        "title": "Emergency Notification Recipients Response With Email",
        "type": "object",
        "properties": {
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "EmergencyNotificationRecipients": {
            "description": "List of Emergency Notification Recipients.",
            "type": "object",
            "properties": {
              "EmergencyNotificationRecipient": {
                "$ref": "#/components/schemas/EmergencyNotificationRecipientWithEmail"
              }
            }
          }
        }
      },
      "EmergencyNotificationRecipientsResponseWithCallback": {
        "title": "Emergency Notification Recipients Response with Callback",
        "type": "object",
        "properties": {
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "EmergencyNotificationRecipients": {
            "description": "List of Emergency Notification Recipients.",
            "type": "object",
            "properties": {
              "EmergencyNotificationRecipient": {
                "$ref": "#/components/schemas/EmergencyNotificationRecipientWithCallback"
              }
            }
          }
        }
      },
      "EmergencyNotificationRecipientsResponseWithSms": {
        "title": "Emergency Notification Recipients Response with SMS",
        "type": "object",
        "properties": {
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "EmergencyNotificationRecipients": {
            "description": "List of Emergency Notification Recipients.",
            "type": "object",
            "properties": {
              "EmergencyNotificationRecipient": {
                "$ref": "#/components/schemas/EmergencyNotificationRecipientWithSms"
              }
            }
          }
        }
      },
      "EmergencyNotificationRecipientsResponseWithTts": {
        "title": "Emergency Notification Recipients Response with TTS",
        "type": "object",
        "properties": {
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "EmergencyNotificationRecipients": {
            "description": "List of Emergency Notification Recipients.",
            "type": "object",
            "properties": {
              "EmergencyNotificationRecipient": {
                "$ref": "#/components/schemas/EmergencyNotificationRecipientWithTts"
              }
            }
          }
        }
      },
      "EmergencyNotificationRecipientResponseWithEmail": {
        "title": "Emergency Notification Recipient Response With Email",
        "type": "object",
        "properties": {
          "EmergencyNotificationRecipient": {
            "$ref": "#/components/schemas/EmergencyNotificationRecipientWithEmail"
          }
        }
      },
      "EmergencyNotificationRecipientResponseWithCallback": {
        "title": "Emergency Notification Recipient Response with Callback",
        "type": "object",
        "properties": {
          "EmergencyNotificationRecipient": {
            "$ref": "#/components/schemas/EmergencyNotificationRecipientWithCallback"
          }
        }
      },
      "EmergencyNotificationRecipientResponseWithSms": {
        "title": "Emergency Notification Recipient Response with SMS",
        "type": "object",
        "properties": {
          "EmergencyNotificationRecipient": {
            "$ref": "#/components/schemas/EmergencyNotificationRecipientWithSms"
          }
        }
      },
      "EmergencyNotificationRecipientResponseWithTts": {
        "title": "Emergency Notification Recipient Response with TTS",
        "type": "object",
        "properties": {
          "EmergencyNotificationRecipient": {
            "$ref": "#/components/schemas/EmergencyNotificationRecipientWithTts"
          }
        }
      },
      "Links": {
        "type": "object",
        "properties": {
          "first": {
            "description": "The first (or only) page of results matching the query.",
            "type": "string"
          },
          "next": {
            "description": "If more results exist than specified by 'size', this link returns the next page of 'size' results.",
            "type": "string"
          },
          "previous": {
            "description": "If the results are more than one page, this link returns the previous page of 'size' results.",
            "type": "string"
          },
          "last": {
            "description": "If more results exist than specified by 'size', this link return the last page of result.",
            "type": "string"
          }
        }
      },
      "EmergencyNotificationRecipientWithEmail": {
        "description": "Emergency Notification Recipient with email",
        "type": "object",
        "properties": {
          "Identifier": {
            "$ref": "#/components/schemas/RecipientIdentifier"
          },
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "CreatedDate": {
            "$ref": "#/components/schemas/RecipientCreatedDate"
          },
          "LastModifiedDate": {
            "$ref": "#/components/schemas/RecipientLastModifiedDate"
          },
          "Type": {
            "type": "string",
            "enum": [
              "EMAIL"
            ]
          },
          "EmailAddress": {
            "$ref": "#/components/schemas/RecipientEmailAddress"
          }
        }
      },
      "EmergencyNotificationRecipientWithCallback": {
        "description": "Emergency Notification Recipient with callback",
        "type": "object",
        "properties": {
          "Identifier": {
            "$ref": "#/components/schemas/RecipientIdentifier"
          },
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "CreatedDate": {
            "$ref": "#/components/schemas/RecipientCreatedDate"
          },
          "LastModifiedDate": {
            "$ref": "#/components/schemas/RecipientLastModifiedDate"
          },
          "Type": {
            "type": "string",
            "enum": [
              "CALLBACK"
            ]
          },
          "Callback": {
            "$ref": "#/components/schemas/RecipientCallback"
          }
        }
      },
      "EmergencyNotificationRecipientWithSms": {
        "description": "Emergency Notification Recipient with sms.",
        "type": "object",
        "properties": {
          "Identifier": {
            "$ref": "#/components/schemas/RecipientIdentifier"
          },
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "CreatedDate": {
            "$ref": "#/components/schemas/RecipientCreatedDate"
          },
          "lastModifiedDate": {
            "$ref": "#/components/schemas/RecipientLastModifiedDate"
          },
          "type": {
            "type": "string",
            "enum": [
              "SMS"
            ]
          },
          "Sms": {
            "$ref": "#/components/schemas/RecipientSms"
          }
        }
      },
      "EmergencyNotificationRecipientWithTts": {
        "description": "Emergency Notification Recipient with tts.",
        "type": "object",
        "description": "The list of child, or subtending, orders associated with a bulk port-in.  The bulk port-in will have an empty PortinList until telephone numbers are added using the /tnList endpoint.",
        "properties": {
          "Identifier": {
            "$ref": "#/components/schemas/RecipientIdentifier"
          },
          "Description": {
            "$ref": "#/components/schemas/NotificationRecipientDescription"
          },
          "CreatedDate": {
            "$ref": "#/components/schemas/RecipientCreatedDate"
          },
          "LastModifiedDate": {
            "$ref": "#/components/schemas/RecipientLastModifiedDate"
          },
          "Type": {
            "type": "string",
            "enum": [
              "TTS"
            ]
          },
          "TTS": {
            "$ref": "#/components/schemas/RecipientTTS"
          }
        }
      },
      "EmergencyNotificationGroupOrdersResponse": {
        "title": "Emergency Notification Group Orders Response",
        "type": "object",
        "properties": {
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "EmergencyNotificationGroupOrders": {
            "description": "List of Emergency Notification Group orders.",
            "type": "object",
            "properties": {
              "EmergencyNotificationGroupOrder": {
                "$ref": "#/components/schemas/EmergencyNotificationGroupOrder"
              }
            }
          }
        }
      },
      "EmergencyNotificationGroupOrderResponse": {
        "title": "Emergency Notification Group Order Response",
        "type": "object",
        "properties": {
          "EmergencyNotificationGroupOrder": {
            "$ref": "#/components/schemas/EmergencyNotificationGroupOrder"
          }
        }
      },
      "EmergencyNotificationGroupsResponse": {
        "title": "Emergency Notification Groups Response",
        "type": "object",
        "properties": {
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "EmergencyNotificationGroups": {
            "description": "Emergency notification group.",
            "type": "object",
            "properties": {
              "EmergencyNotificationGroup": {
                "$ref": "#/components/schemas/EmergencyNotificationGroup"
              }
            }
          }
        }
      },
      "EmergencyNotificationGroupResponse": {
        "title": "Emergency Notification Group Response",
        "type": "object",
        "properties": {
          "EmergencyNotificationGroup": {
            "$ref": "#/components/schemas/EmergencyNotificationGroup"
          }
        }
      },
      "EmergencyNotificationGroup": {
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string"
          },
          "CreatedDate": {
            "type": "string"
          },
          "ModifiedBy": {
            "type": "string"
          },
          "ModifiedDate": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "EmergencyNotificationRecipients": {
            "$ref": "#/components/schemas/EmergencyNotificationRecipients"
          },
          "EepToEngAssociations": {
            "$ref": "#/components/schemas/EepToEngAssociations"
          },
          "EndpointCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmergencyNotificationGroupWithIdOnly": {
        "description": "Emergency notification group.",
        "type": "object",
        "properties": {
          "Identifier": {
            "$ref": "#/components/schemas/EmergencyGroupIdentifier"
          }
        }
      },
      "NotificationRecipientDescription": {
        "description": "A mandatory 200 character description of the Emergency Notification Recipient. The contents of this field are freeform, but ideally should describe the set of endpoints that are being grouped together for the purpose of having the same emergency notification recipients. E.g. Occupants of building 5 main campus.",
        "type": "string",
        "maxLength": 200
      },
      "NotificationGroupDescription": {
        "description": "A mandatory 200 character description of the Emergency Notification Group. The contents of this field are freeform, but ideally should describe the set of endpoints that are being grouped together for the purpose of having the same emergency notification recipients. E.g. Occupants of building 5 main campus.",
        "type": "string",
        "maxLength": 200
      },
      "RecipientCreatedDate": {
        "description": "Creation date of the recipient.",
        "type": "string"
      },
      "GroupCreatedDate": {
        "description": "Creation date of the group.",
        "type": "string"
      },
      "OrderCreatedDate": {
        "description": "Creation date of the order.",
        "type": "string"
      },
      "RecipientLastModifiedDate": {
        "description": "Last modified date of the recipient.",
        "type": "string"
      },
      "GroupModifiedBy": {
        "description": "Group modified by the user.",
        "type": "string"
      },
      "GroupModifiedDate": {
        "description": "Last modified date of the recipient.",
        "type": "string"
      },
      "RecipientSms": {
        "description": "A telephone number capable of receiving text messages that must be specified when Type is set to SMS.",
        "type": "object",
        "properties": {
          "TelephoneNumber": {
            "$ref": "#/components/schemas/TelephoneNumber"
          }
        }
      },
      "RecipientTTS": {
        "description": "A telephone number capable of receiving voice calls that must be specified when Type is set to TTS.",
        "type": "object",
        "properties": {
          "TelephoneNumber": {
            "$ref": "#/components/schemas/TelephoneNumber"
          }
        }
      },
      "RecipientCallback": {
        "description": "Callback url and credentials",
        "type": "object",
        "properties": {
          "Url": {
            "description": "An https URL that must be provided when Type is set to CALLBACK. The URL may optionally include one or more query parameters",
            "type": "string",
            "format": "url",
            "maxLength": 256
          },
          "Username": {
            "description": "A username to be used in Basic Authentication of the callback",
            "type": "string",
            "maxLength": 32
          },
          "Password": {
            "description": "A password to be used in Basic Authentication of the callback. Passwords are not included in GET responses.",
            "type": "string",
            "maxLength": 256
          }
        }
      },
      "RecipientEmailAddress": {
        "type": "string",
        "format": "email"
      },
      "CreatedBy": {
        "description": "Order created by the user.",
        "type": "string"
      },
      "ProcessingStatus": {
        "description": "Order status.",
        "type": "string",
        "enum": [
          "FAILED",
          "COMPLETED"
        ]
      },
      "EmergencyNotificationGroupOrder": {
        "description": "Emergency Notification Group order.",
        "type": "object",
        "properties": {
          "OrderId": {
            "$ref": "#/components/schemas/OrderId"
          },
          "CustomerOrderId": {
            "$ref": "#/components/schemas/CustomerOrderId"
          },
          "OrderCreatedDate": {
            "$ref": "#/components/schemas/OrderCreatedDate"
          },
          "CreatedBy": {
            "$ref": "#/components/schemas/CreatedBy"
          },
          "ProcessingStatus": {
            "$ref": "#/components/schemas/ProcessingStatus"
          },
          "AddedEmergencyNotificationGroup": {
            "$ref": "#/components/schemas/AddedEmergencyNotificationGroupWithId"
          }
        }
      },
      "EmergencyNotificationEndpointOrdersResponse": {
        "title": "Emergency Notification Endpoint Order Response",
        "type": "object",
        "properties": {
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "EmergencyNotificationEndpointOrders": {
            "description": "Emergency Notification Endpoint Order list",
            "type": "object",
            "properties": {
              "EmergencyNotificationEndpointOrder": {
                "$ref": "#/components/schemas/EmergencyNotificationEndpointOrder"
              }
            }
          }
        }
      },
      "EmergencyNotificationEndpointOrderResponse": {
        "description": "Emergency Notification Endpoint Order Response",
        "type": "object",
        "properties": {
          "EmergencyNotificationEndpointOrder": {
            "$ref": "#/components/schemas/EmergencyNotificationEndpointOrder"
          }
        }
      },
      "EmergencyNotificationEndpointOrder": {
        "description": "Emergency Notification Endpoint order",
        "type": "object",
        "properties": {
          "OrderId": {
            "$ref": "#/components/schemas/OrderId"
          },
          "CustomerOrderId": {
            "$ref": "#/components/schemas/CustomerOrderId"
          },
          "OrderCreatedDate": {
            "$ref": "#/components/schemas/OrderCreatedDate"
          },
          "CreatedBy": {
            "$ref": "#/components/schemas/CreatedBy"
          },
          "ProcessingStatus": {
            "$ref": "#/components/schemas/ProcessingStatus"
          },
          "EmergencyNotificationEndpointAssociations": {
            "$ref": "#/components/schemas/EmergencyNotificationEndpointAssociations"
          }
        }
      },
      "EmergencyNotificationEndpointAssociations": {
        "description": "Emergency Notification Endpoint associations",
        "type": "object",
        "properties": {
          "EmergencyNotificationGroup": {
            "$ref": "#/components/schemas/EmergencyNotificationGroupWithIdOnly"
          },
          "AddedAssociations": {
            "$ref": "#/components/schemas/AddedAssociations"
          }
        }
      },
      "AddedAssociations": {
        "description": "Associations list",
        "type": "object",
        "properties": {
          "EepToEngAssociations": {
            "$ref": "#/components/schemas/EepToEngAssociations"
          },
          "ErrorList": {
            "type": "array",
            "items": {
              "properties": {
                "Description": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "EepToEngAssociations": {
        "type": "object",
        "properties": {
          "EepTns": {
            "type": "object",
            "properties": {
              "TelephoneNumber": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          },
          "EepAeuiIds": {
            "type": "object",
            "properties": {
              "Identifier": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Identifier"
                }
              }
            }
          },
          "Endpoints": {
            "type": "object",
            "properties": {
              "Identifier": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Identifier"
                }
              }
            }
          }
        }
      },
      "AccountResponseWrapper": {
        "type": "object",
        "properties": {
          "AccountResponse": {
            "$ref": "#/components/schemas/AccountResponse"
          }
        }
      },
      "AccountResponse": {
        "type": "object",
        "properties": {
          "Account": {
            "$ref": "#/components/schemas/Account"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "HousePrefix": {
            "description": "The HousePrefix is the non-numeric address number prefix of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
            "type": "string"
          },
          "HouseNumber": {
            "description": "The HouseNumber is the street address number of the ServiceAddress. HouseNumber is mandatory for port-in orders in which the ServiceAddress is mandatory.",
            "type": "string"
          },
          "HouseSuffix": {
            "description": "The HouseSuffix is the non-numeric address number suffix of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
            "type": "string"
          },
          "PreDirectional": {
            "description": "The PreDirectional is the non-numeric street name prefix of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
            "type": "string"
          },
          "StreetName": {
            "description": "The StreetName is mandatory in cases where the ServiceAddress is mandatory.",
            "type": "string"
          },
          "StreetSuffix": {
            "description": "The StreetSuffix is the street suffix of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
            "type": "string"
          },
          "PostDirectional": {
            "description": "The PostDirectional is the street name post directional of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
            "type": "string"
          },
          "AddressLine2": {
            "description": "AddressLine2 is used to specify Unit, Suite, Floor, etc. in the Service Address. AddressLine2 is optional when not needed to fully specify the ServiceAddress.",
            "type": "string"
          },
          "City": {
            "description": "City is mandatory in cases where the ServiceAddress is mandatory.",
            "type": "string"
          },
          "RegionId": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "StateCode": {
            "description": "StateCode is the 2-letter abbreviation of the state of the ServiceAddress. StateCode is mandatory in cases where the ServiceAddress is mandatory.",
            "type": "string"
          },
          "Zip": {
            "description": "Zip is the Zip Code of the ServiceAddress. Zip is mandatory in cases where the ServiceAddress is mandatory.",
            "type": "string"
          },
          "PlusFour": {
            "description": "PlusFour is the 4 digits that are sometimes suffixed to the Zip Code.",
            "type": "string"
          },
          "County": {
            "description": "The county where the subscriber or business is located.",
            "type": "string"
          },
          "Country": {
            "description": "Country is the country of the ServiceAddress. This value will be derived from the StateCode, so it should generally be omitted.",
            "type": "string"
          },
          "LegacyAddressId": {
            "type": "string",
            "deprecated": true
          },
          "LegacyEntityId": {
            "type": "string",
            "deprecated": true
          },
          "ResetAddressFields": {
            "type": "boolean"
          },
          "Latitude": {
            "type": "string"
          },
          "Longitude": {
            "type": "string"
          },
          "AddressType": {
            "$ref": "#/components/schemas/AddressType"
          }
        }
      },
      "AddressType": {
        "type": "string",
        "enum": [
          "SERVICE",
          "BILLING",
          "DLDA",
          "E911"
        ]
      },
      "Tier": {
        "type": "integer",
        "format": "int32"
      },
      "Contact": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Suffix": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "Fax": {
            "type": "string"
          },
          "Mobile": {
            "type": "string"
          },
          "OtherPhone": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "WebsiteAddress": {
            "type": "string"
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "integer",
            "format": "int32"
          },
          "GlobalAccountNumber": {
            "type": "string"
          },
          "AssociatedCatapultAccount": {
            "type": "string"
          },
          "CompanyName": {
            "type": "string"
          },
          "AccountType": {
            "type": "string"
          },
          "ExternalId": {
            "type": "string"
          },
          "BillingCycle": {
            "type": "integer",
            "format": "int32"
          },
          "PenaltyType": {
            "type": "string"
          },
          "Pricing": {
            "type": "string"
          },
          "NenaId": {
            "type": "string"
          },
          "Tiers": {
            "type": "object",
            "properties": {
              "Tier": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tier"
                }
              }
            }
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "AltSpid": {
            "type": "string"
          },
          "SPID": {
            "type": "string"
          },
          "PortCarrierType": {
            "type": "string",
            "enum": [
              "WIRELESS",
              "WIRELINE"
            ]
          },
          "Default911Provider": {
            "type": "string"
          },
          "MaxTnsForAutomatedPort": {
            "type": "integer",
            "format": "int32"
          },
          "CustomerSegment": {
            "type": "string"
          },
          "AccountRelationship": {
            "type": "string"
          }
        }
      },
      "TnList": {
        "type": "object",
        "properties": {
          "TnList": {
            "type": "object",
            "properties": {
              "TN": {
                "type": "array",
                "items": {
                  "type": "string",
                  "xml": {
                    "name": "TN"
                  }
                }
              }
            }
          }
        }
      },
      "BulkPortinRequest": {
        "type": "object",
        "properties": {
          "BulkPortin": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "type": "string",
                "description": "Internal customer order id for tracking the order.",
                "format": "alphanumeric"
              },
              "RequestedFocDate": {
                "type": "string",
                "format": "ISO8601 date-time encoding of ZULU/UTC/GMT",
                "description": "If present this will specify the date and time that the port-in is requested to happen. The actual time and date is subject to negotiation with the losing carriers.",
                "example": "2013-05-10T15:14:22Z"
              },
              "AlternateSpid": {
                "type": "string",
                "description": "Unique customer AltSPID to be applied to the port-in requests. Can be changed only for DRAFT bulk port-in."
              },
              "BillingTelephoneNumber": {
                "type": "string",
                "description": "Account or Billing telephone number for order. This will be unusual for bulk port-in requests that are expected to decompose into port-in requests from multiple carriers, because the value will be different for each losing carrier."
              },
              "Subscriber": {
                "type": "object",
                "properties": {
                  "SubscriberType": {
                    "type": "string",
                    "enum": [
                      "BUSINESS",
                      "RESIDENTIAL",
                      "GENERIC"
                    ],
                    "description": "If residential, order will be rejected if a BusinessName is entered."
                  },
                  "BusinessName": {
                    "type": "string",
                    "description": "Subscriber business name."
                  },
                  "FirstName": {
                    "type": "string",
                    "description": "Subscriber first name."
                  },
                  "MiddleInitial": {
                    "type": "string",
                    "description": "Subscriber middle initial."
                  },
                  "LastName": {
                    "type": "string",
                    "description": "Subscriber last name."
                  },
                  "ServiceAddress": {
                    "type": "object",
                    "properties": {
                      "HousePrefix": {
                        "type": "string",
                        "description": "Street address number prefix."
                      },
                      "HouseNumber": {
                        "type": "string",
                        "description": "Street address number."
                      },
                      "HouseSuffix": {
                        "type": "string",
                        "description": "Street address number suffix."
                      },
                      "PreDirectional": {
                        "type": "string",
                        "description": "Street address pre-directional."
                      },
                      "StreetName": {
                        "type": "string",
                        "description": "Street name."
                      },
                      "StreetSuffix": {
                        "type": "string",
                        "description": "Street suffix."
                      },
                      "PostDirectional": {
                        "type": "string",
                        "description": "Street address post directional."
                      },
                      "AddressLine2": {
                        "type": "string",
                        "description": "Put unit, suite, floor, etc. here."
                      },
                      "City": {
                        "type": "string",
                        "description": "City."
                      },
                      "StateCode": {
                        "type": "string",
                        "description": "Two letter state code."
                      },
                      "Zip": {
                        "type": "string",
                        "description": "Zip code."
                      },
                      "PlusFour": {
                        "type": "string",
                        "description": "Zip + 4 value."
                      },
                      "Country": {
                        "type": "string",
                        "description": "3 letter country code."
                      }
                    }
                  }
                }
              },
              "LoaAuthorizingPerson": {
                "type": "string",
                "description": "First and last name of person who authorized LOA."
              },
              "AccountNumber": {
                "type": "string",
                "description": "Account number associated with the account on the losing carrier, often required for wireless ports, or enterprise ports. This will be unusual for bulk port-in requests that are expected to decompose into port-in requests from multiple carriers."
              },
              "PinNumber": {
                "type": "string",
                "description": "PIN Number, often required for wireless ports."
              },
              "SiteId": {
                "type": "integer",
                "format": "int32",
                "description": "This is the Site / Sub-Account ID made visible in the /accounts/{accountId}/sites API call"
              },
              "PeerId": {
                "type": "integer",
                "format": "int32",
                "description": "This is the SIP Peer / Location ID made visible in the /accounts/{accountId}/sites/{siteId}/sipPeers API call"
              },
              "TnAttributes": {
                "type": "array",
                "description": "Attributes to be assigned to the telephone number. Optional parameter. Possible values - `Protected`",
                "items": {
                  "$ref": "#/components/schemas/TnAttribute"
                }
              },
              "RetryValidation": {
                "type": "boolean",
                "description": "Only allowed for PUT and PATCH requests.\n\n When toll free numbers are included in a port-in order, Bandwidth accesses a vendor to determine if the numbers are portable, and if so, from which RespOrg. In the event that we do not receive a response from our vendor after a number of retries, we give up and place the order in the INVALID_DRAFT_TNS state. This scenario can occur if our toll free porting vendor is performing maintenance, for example. Including RetryValidation with a value of true will cause the order to return to VALIDATE_DRAFT_TNS and we will repeat our attempts to retrieve the portability data from the vendor. This element is included in the synchronous response to the PUT or PATCH, when included in the request, but is not included in subsequent GET requests for the order."
              }
            }
          }
        }
      },
      "BulkPortin": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. Only alphanumeric values, dashes and spaces are allowed.",
            "type": "string"
          },
          "RequestedFocDate": {
            "description": "This is the FOC (Firm Order Commitment) Date requested by the person (or machine) creating the Port-in Order.",
            "type": "string",
            "format": "date-time"
          },
          "AlternateSpid": {
            "description": "Unique customer AltSPID to be applied to the port-in requests. Can be changed only for DRAFT bulk port-in.",
            "type": "string"
          },
          "BillingTelephoneNumber": {
            "description": "The BillingTelephoneNumber is the primary telephone number associated with the invoice that the subscriber gets from the losing carrier.",
            "type": "string"
          },
          "Subscriber": {
            "$ref": "#/components/schemas/Subscriber"
          },
          "LoaAuthorizingPerson": {
            "description": "The LoaAuthorizingPerson is mandatory for all port-types. This is the first and last names of the person that has authorized the port. The LoaAuthorizingPerson value may be up to 15 characters in length.",
            "type": "string"
          },
          "AccountNumber": {
            "description": "The WirelessInfo.AccountNumber is sometimes required to authorize the port-out from the losing carrier. This is most common for telephone numbers that were formerly wireless. This element is not applicable for toll free port-ins.",
            "type": "string"
          },
          "PinNumber": {
            "description": "Element of WirelessInfo. Not applicable to toll free port-ins. Cannot be SUPPed for Automated off-net port-ins. If you want to SUPP WirelessInfo, you must include both AccountNumber and PinNumber in the payload, even if you are not changing both.",
            "type": "string"
          },
          "SiteId": {
            "description": "The numeric designation for the Site ID that applied to the Port-in Order. The SiteId is used to provide a home within the account for the TN(s) that were ported in by the Port-in Order.",
            "type": "string"
          },
          "PeerId": {
            "description": "The numeric designation for the Location or SIP PEER ID that applied to the Port-in Order. The SIP Peer ID is used to provide a home within the location for the TN(s) that were ported in by the Port-in Order.",
            "type": "string"
          },
          "TnAttributes": {
            "type": "array",
            "description": "The TnAttributes field specifies line attributes that will apply to the ported in telephone numbers. If present, TnAttributes may have a value of PROTECTED. This element is not applicable for off-net and toll free port-types.",
            "items": {
              "$ref": "#/components/schemas/TnAttribute"
            }
          },
          "RetryValidation": {
            "type": "boolean",
            "description": "This element is only applicable in the PUT and PATCH payloads for a bulk port-in that is in the INVALID_DRAFT_TNS state due to a failure to retrieve carrier or RespOrg ownership for telephone numbers in the tnList.  If these conditions are met, including RetryValidation with a value of true will cause a fresh attempt to retrieve this information without requiring a change to the tnList."
          }
        }
      },
      "TnAttribute": {
        "type": "object",
        "description": "The TnAttributes field specifies line attributes that will apply to the ported in telephone numbers. If present, TnAttributes may have a value of PROTECTED. This element is not applicable for off-net and toll free port-types.",
        "properties": {
          "TnAttribute": {
            "type": "string"
          }
        }
      },
      "Subscriber": {
        "type": "object",
        "properties": {
          "SubscriberType": {
            "description": "The SubscriberType is mandatory for all non-toll free port-in orders. The SubscriberType field may have values: BUSINESS or RESIDENTIAL.",
            "type": "string",
            "enum": [
              "business",
              "residential",
              "generic"
            ]
          },
          "BusinessName": {
            "description": "The BusinessName is mandatory for non-toll free port-ins for which the SubscriberType is set to BUSINESS. The BusinessName may be up to 25 characters in length. This element is not applicable for toll free port-ins.",
            "type": "string"
          },
          "FirstName": {
            "description": "The FirstName value is applicable to non-toll free port-in orders in which the SubscriberType is set to RESIDENTIAL. The FirstName is always optional. The FirstName may be up to 25 characters in length.",
            "type": "string"
          },
          "MiddleInitial": {
            "description": "The MiddleInitial value is applicable to non-toll free port-in orders in which the SubscriberType is set to RESIDENTIAL. The MiddleInitial is always optional. The MiddleInitial is 1 character in length.",
            "type": "string"
          },
          "LastName": {
            "description": "The LastName value is mandatory for non-toll free port-in orders in which the SubscriberType is set to RESIDENTIAL. The LastName may be up to 25 characters in length.",
            "type": "string"
          },
          "Name": {
            "description": "If the subscriber type is business, the subscriber name is the name of the business responsible for the numbers being ported. If the subscriber type is residential, the subscriber name is the name of the person responsible for the numbers being ported.",
            "type": "string"
          },
          "AccountNumber": {
            "description": "The WirelessInfo.AccountNumber is sometimes required to authorize the port-out from the losing carrier. This is most common for telephone numbers that were formerly wireless. This element is not applicable for toll free port-ins.",
            "type": "string"
          },
          "PinNumber": {
            "description": "Element of WirelessInfo. Not applicable to toll free port-ins. Cannot be SUPPed for Automated off-net port-ins. If you want to SUPP WirelessInfo, you must include both AccountNumber and PinNumber in the payload, even if you are not changing both.",
            "type": "string"
          },
          "ServiceAddress": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "BulkPortinPatchRequest": {
        "type": "object",
        "properties": {
          "BulkPortin": {
            "$ref": "#/components/schemas/BulkPortinPatch"
          }
        }
      },
      "BulkPortinPatch": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "RequestedFocDate": {
            "$ref": "#/components/schemas/DatePatch"
          },
          "AlternateSpid": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "BillingTelephoneNumber": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "Subscriber": {
            "$ref": "#/components/schemas/SubscriberPatch"
          },
          "LoaAuthorizingPerson": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "AccountNumber": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "PinNumber": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "SiteId": {
            "$ref": "#/components/schemas/IntPatch"
          },
          "PeerId": {
            "$ref": "#/components/schemas/IntPatch"
          },
          "ProcessingStatus": {
            "$ref": "#/components/schemas/ProcessingStatusPatch"
          },
          "TnAttributes": {
            "$ref": "#/components/schemas/TnAttributesPatch"
          },
          "RetryValidation": {
            "type": "boolean"
          }
        }
      },
      "StringPatch": {
        "type": "object",
        "properties": {
          "delete": {
            "type": "boolean"
          }
        }
      },
      "DatePatch": {
        "type": "object",
        "properties": {
          "delete": {
            "type": "boolean"
          }
        }
      },
      "SubscriberPatch": {
        "type": "object",
        "properties": {
          "delete": {
            "type": "boolean"
          },
          "SubscriberType": {
            "$ref": "#/components/schemas/SubscriberTypePatch"
          },
          "BusinessName": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "FirstName": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "MiddleInitial": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "LastName": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "ServiceAddress": {
            "$ref": "#/components/schemas/AddressPatch"
          }
        }
      },
      "SubscriberTypePatch": {
        "type": "object",
        "properties": {
          "delete": {
            "type": "boolean"
          }
        }
      },
      "AddressPatch": {
        "type": "object",
        "properties": {
          "delete": {
            "type": "boolean"
          },
          "HousePrefix": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "HouseNumber": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "HouseSuffix": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "PreDirectional": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "StreetName": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "StreetSuffix": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "PostDirectional": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "AddressLine2": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "City": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "StateCode": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "Zip": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "PlusFour": {
            "$ref": "#/components/schemas/StringPatch"
          },
          "County": {
            "$ref": "#/components/schemas/StringPatch"
          }
        }
      },
      "IntPatch": {
        "type": "object",
        "properties": {
          "delete": {
            "type": "boolean"
          }
        }
      },
      "ProcessingStatusPatch": {
        "type": "object",
        "properties": {
          "delete": {
            "type": "boolean"
          }
        }
      },
      "TnAttributesPatch": {
        "type": "object",
        "properties": {
          "delete": {
            "type": "boolean"
          }
        }
      },
      "PortinList": {
        "type": "object",
        "description": "The list of child, or subtending, orders associated with a bulk port-in.  The bulk port-in will have an empty PortinList until telephone numbers are added using the /tnList endpoint.",
        "properties": {
          "PortinList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortinOrderId"
            }
          }
        }
      },
      "PortinOrderId": {
        "type": "object",
        "properties": {
          "PortinOrderId": {
            "description": "The OrderId associated with a child, or subtending, order associated with the bulk port-in.",
            "type": "string"
          }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "Note": {
            "type": "object",
            "properties": {
              "Id": {
                "description": "This is the Order Note identifier that is automatically generated by system.",
                "type": "string"
              },
              "UserId": {
                "description": "The UserId is authenticated for access to the network via a username string.",
                "type": "string"
              },
              "Description": {
                "description": "This is the Order Note description.",
                "type": "string"
              },
              "LastDateModifier": {
                "description": "This is the date when Order Note was last modified.",
                "type": "string"
              }
            }
          }
        }
      },
      "DisconnectTelephoneNumberOrder": {
        "type": "object",
        "properties": {
          "DisconnectTelephoneNumberOrder": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string",
                "description": "The name of the order.",
                "maxLength": 50
              },
              "DisconnectTelephoneNumberOrderType": {
                "$ref": "#/components/schemas/DisconnectTelephoneNumberOrderType"
              }
            },
            "required": [
              "Name"
            ]
          }
        }
      },
      "DisconnectTelephoneNumberOrderType": {
        "type": "object",
        "properties": {
          "TelephoneNumberList": {
            "type": "array",
            "description": "A list of telephone numbers to disconnect.",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "DisconnectMode": {
            "type": "string",
            "description": "The severity of disconnect order. Typically Normal.",
            "enum": [
              "NORMAL",
              "PURGE"
            ]
          },
          "Protected": {
            "type": "string",
            "description": "Change protected status of telephones during disconnection. Typically `UNCHANGED`.",
            "enum": [
              "TRUE",
              "FALSE",
              "UNCHANGED"
            ]
          }
        },
        "required": [
          "TelephoneNumberList"
        ]
      },
      "DldaOrder": {
        "type": "object",
        "properties": {
          "DldaOrder": {
            "$ref": "#/components/schemas/DldaOrderPayload"
          }
        }
      },
      "DldaOrderPayload": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string",
            "maxLength": 40,
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. Only alphanumeric values, dashes and spaces are allowed."
          },
          "DldaTnGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DldaTnGroup"
            }
          },
          "DeleteDldaTnGroups": {
            "type": "string"
          }
        }
      },
      "DldaTnGroup": {
        "type": "object",
        "description": "AddressType has to be DLDA",
        "properties": {
          "TelephoneNumbers": {
            "type": "array",
            "description": "A list of telephone numbers you need to bind information from payload",
            "items": {
              "type": "string",
              "xml": {
                "name": "TelephoneNumber"
              }
            }
          },
          "SubscriberType": {
            "type": "string",
            "enum": [
              "RESIDENTIAL",
              "BUSINESS"
            ]
          },
          "ListingType": {
            "type": "string",
            "enum": [
              "LISTED",
              "NON_LISTED",
              "NON_PUBLISHED"
            ]
          },
          "ListingName": {
            "$ref": "#/components/schemas/DldaListingName"
          },
          "ListAddress": {
            "type": "boolean"
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "required": [
          "SubscriberType",
          "ListingType",
          "ListAddress"
        ]
      },
      "DldaListingName": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "description": "Required in case RESIDENTIAL SubscriberType is chosen"
          },
          "FirstName2": {
            "type": "string",
            "description": ""
          },
          "LastName": {
            "type": "string"
          },
          "Designation": {
            "type": "string"
          },
          "TitleOfLineage": {
            "type": "string"
          },
          "TitleOfAddress": {
            "type": "string"
          },
          "TitleOfAddress2": {
            "type": "string"
          },
          "TitleOfLineageName2": {
            "type": "string"
          },
          "TitleOfAddressName2": {
            "type": "string"
          },
          "TitleOfAddress2Name2": {
            "type": "string"
          },
          "PlaceListingAs": {
            "type": "string"
          }
        },
        "required": [
          "LastName"
        ]
      },
      "TelephoneNumberError": {
        "type": "object",
        "properties": {
          "TelephoneNumber": {
            "type": "string"
          },
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CustomerOrderIdE911": {
        "title": "CustomerOrderId",
        "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. The element is optional. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters",
        "type": "string",
        "maxLength": 40
      },
      "CallerNameE911": {
        "title": "CallerName",
        "description": "CallerName that will be linked to TNs. This field is required in the case of a new address assignment",
        "type": "string",
        "maxLength": 50
      },
      "DeleteTNSpecificE911Address": {
        "description": "DeleteTNSpecificE911Address is required and must be set to `true`.",
        "type": "string"
      },
      "ConventionalAddressProvisioningE911Order": {
        "title": "CONVENTIONAL E911. TN/Address-provisioning order",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "TelephoneNumbers": {
                "description": "A list of telephone numbers you need link to the street address",
                "type": "array",
                "items": {
                  "title": "TelephoneNumber",
                  "properties": {
                    "TelephoneNumber": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "TelephoneNumber"
                  ]
                }
              },
              "CallerName": {
                "$ref": "#/components/schemas/CallerNameE911"
              },
              "Address": {
                "type": "object",
                "properties": {
                  "HouseNumber": {
                    "type": "string"
                  },
                  "HouseSuffix": {
                    "type": "string"
                  },
                  "PreDirectional": {
                    "type": "string"
                  },
                  "StreetName": {
                    "type": "string"
                  },
                  "StreetSuffix": {
                    "type": "string"
                  },
                  "PostDirectional": {
                    "type": "string"
                  },
                  "AddressLine2": {
                    "type": "string"
                  },
                  "City": {
                    "type": "string"
                  },
                  "StateCode": {
                    "type": "string"
                  },
                  "Zip": {
                    "type": "string"
                  },
                  "PlusFour": {
                    "type": "string"
                  },
                  "County": {
                    "type": "string"
                  },
                  "Country": {
                    "type": "string"
                  },
                  "AddressType": {
                    "type": "string"
                  },
                  "Latitude": {
                    "type": "string"
                  },
                  "Longitude": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "Address",
              "TelephoneNumbers"
            ]
          }
        }
      },
      "ConventionalAddressDeletionE911Order": {
        "title": "CONVENTIONAL E911. TN/Address-deletion order",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "$ref": "#/components/schemas/CustomerOrderIdE911"
              },
              "TelephoneNumbers": {
                "title": "TelephoneNumber",
                "description": "A list of telephone numbers you need unlink from the street address",
                "type": "array",
                "items": {
                  "properties": {
                    "TelephoneNumber": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "TelephoneNumber"
                  ]
                }
              },
              "DeleteTNSpecificE911Address": {
                "$ref": "#/components/schemas/DeleteTNSpecificE911Address"
              }
            },
            "required": [
              "TelephoneNumbers",
              "DeleteTNSpecificE911Address"
            ]
          }
        }
      },
      "PidfloAeuiWithAdditionalAddressWithoutLocationIdE911Order": {
        "title": "PIDF-LO AEUI. Endpoint-provisioning order with additional address provisioning and without pre-defined location id",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "$ref": "#/components/schemas/CustomerOrderIdE911"
              },
              "Address": {
                "type": "object",
                "properties": {
                  "HouseNumber": {
                    "type": "string"
                  },
                  "StreetName": {
                    "type": "string"
                  },
                  "StreetSuffix": {
                    "type": "string"
                  },
                  "City": {
                    "type": "string"
                  },
                  "StateCode": {
                    "type": "string"
                  },
                  "Zip": {
                    "type": "string"
                  },
                  "PlusFour": {
                    "type": "string"
                  },
                  "Country": {
                    "type": "string"
                  },
                  "Latitude": {
                    "type": "string"
                  },
                  "Longitude": {
                    "type": "string"
                  },
                  "AddressType": {
                    "type": "string"
                  }
                }
              },
              "AlternateEndUserIdentifiers": {
                "type": "array",
                "items": {
                  "title": "AlternateEndUserIdentifier",
                  "properties": {
                    "AlternateEndUserIdentifier": {
                      "type": "object",
                      "properties": {
                        "CallerName": {
                          "$ref": "#/components/schemas/CallerNameE911"
                        },
                        "CallbackNumber": {
                          "type": "string"
                        },
                        "Identifier": {
                          "type": "string",
                          "minItems": 1,
                          "maxLength": 30
                        },
                        "PIDFLOEnabled": {
                          "description": "PIDFLOEnabled is required and must be 'true'.",
                          "type": "string"
                        },
                        "PreferredLanguage": {
                          "type": "string",
                          "default": "en"
                        }
                      },
                      "required": [
                        "Identifier",
                        "PIDFLOEnabled"
                      ]
                    }
                  },
                  "required": [
                    "AlternateEndUserIdentifier"
                  ]
                }
              }
            },
            "required": [
              "AlternateEndUserIdentifiers",
              "Address"
            ]
          }
        }
      },
      "PidfloAeuiWithAdditionalAddressWithLocationIdE911Order": {
        "title": "PIDF-LO. AEUI endpoint-provisioning order with additional address provisioning and with pre-defined location id",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "$ref": "#/components/schemas/CustomerOrderIdE911"
              },
              "Address": {
                "type": "object",
                "properties": {
                  "LocationId": {
                    "type": "string"
                  },
                  "HouseNumber": {
                    "type": "string"
                  },
                  "StreetName": {
                    "type": "string"
                  },
                  "StreetSuffix": {
                    "type": "string"
                  },
                  "City": {
                    "type": "string"
                  },
                  "StateCode": {
                    "type": "string"
                  },
                  "Zip": {
                    "type": "string"
                  },
                  "PlusFour": {
                    "type": "string"
                  },
                  "Country": {
                    "type": "string"
                  },
                  "Latitude": {
                    "type": "string"
                  },
                  "Longitude": {
                    "type": "string"
                  },
                  "AddressType": {
                    "type": "string"
                  }
                }
              },
              "AlternateEndUserIdentifiers": {
                "type": "array",
                "items": {
                  "properties": {
                    "AlternateEndUserIdentifier": {
                      "type": "object",
                      "properties": {
                        "CallerName": {
                          "$ref": "#/components/schemas/CallerNameE911"
                        },
                        "CallbackNumber": {
                          "type": "string"
                        },
                        "Identifier": {
                          "type": "string",
                          "minItems": 1,
                          "maxLength": 30
                        },
                        "PIDFLOEnabled": {
                          "description": "PIDFLOEnabled is required and must be 'true'.",
                          "type": "string"
                        },
                        "PreferredLanguage": {
                          "type": "string",
                          "default": "en"
                        }
                      },
                      "required": [
                        "Identifier",
                        "PIDFLOEnabled"
                      ]
                    }
                  },
                  "required": [
                    "AlternateEndUserIdentifier"
                  ]
                }
              }
            },
            "required": [
              "AlternateEndUserIdentifiers",
              "Address"
            ]
          }
        }
      },
      "PidfloAeuiWithLocationIdE911Order": {
        "title": "PIDF-LO. AEUI endpoint-provisioning order with provisioned location id",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "$ref": "#/components/schemas/CustomerOrderIdE911"
              },
              "AlternateEndUserIdentifiers": {
                "type": "array",
                "items": {
                  "properties": {
                    "AlternateEndUserIdentifier": {
                      "type": "object",
                      "properties": {
                        "CallerName": {
                          "$ref": "#/components/schemas/CallerNameE911"
                        },
                        "LocationId": {
                          "type": "string"
                        },
                        "CallbackNumber": {
                          "type": "string"
                        },
                        "Identifier": {
                          "type": "string",
                          "minItems": 1,
                          "maxLength": 30
                        },
                        "PIDFLOEnabled": {
                          "description": "PIDFLOEnabled is required and must be 'true'.",
                          "type": "string"
                        },
                        "PreferredLanguage": {
                          "type": "string",
                          "default": "en"
                        }
                      },
                      "required": [
                        "LocationId",
                        "Identifier",
                        "PIDFLOEnabled"
                      ]
                    }
                  },
                  "required": [
                    "AlternateEndUserIdentifier"
                  ]
                }
              }
            },
            "required": [
              "AlternateEndUserIdentifiers"
            ]
          }
        }
      },
      "PidfloAndSimpleAeuiMixedPidfloAeuiAndNonPidloAeuiProvisioning911Order": {
        "title": "PIDF-LO and SIMPLE AEUI. Mixed PIDF-LO AEUI and Non-PIDF-LO AEUI endpoint-provisioning order",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "$ref": "#/components/schemas/CustomerOrderIdE911"
              },
              "Address": {
                "type": "object",
                "properties": {
                  "LocationId": {
                    "type": "string"
                  },
                  "HouseNumber": {
                    "type": "string"
                  },
                  "StreetName": {
                    "type": "string"
                  },
                  "StreetSuffix": {
                    "type": "string"
                  },
                  "City": {
                    "type": "string"
                  },
                  "StateCode": {
                    "type": "string"
                  },
                  "Zip": {
                    "type": "string"
                  },
                  "PlusFour": {
                    "type": "string"
                  },
                  "Country": {
                    "type": "string"
                  },
                  "Latitude": {
                    "type": "string"
                  },
                  "Longitude": {
                    "type": "string"
                  },
                  "AddressType": {
                    "type": "string"
                  }
                }
              },
              "AlternateEndUserIdentifiers": {
                "type": "array",
                "items": {
                  "properties": {
                    "AlternateEndUserIdentifier": {
                      "type": "object",
                      "properties": {
                        "CallerName": {
                          "$ref": "#/components/schemas/CallerNameE911"
                        },
                        "LocationId": {
                          "type": "string"
                        },
                        "CallbackNumber": {
                          "description": "Non-PIDF-LO: CallbackNumber is required",
                          "type": "string"
                        },
                        "Identifier": {
                          "type": "string",
                          "minItems": 1,
                          "maxLength": 30
                        },
                        "PIDFLOEnabled": {
                          "description": "PIDFLOEnabled is required and must be 'true'.",
                          "type": "string"
                        },
                        "PreferredLanguage": {
                          "type": "string",
                          "default": "en"
                        }
                      },
                      "required": [
                        "LocationId",
                        "Identifier",
                        "PIDFLOEnabled"
                      ]
                    }
                  },
                  "required": [
                    "AlternateEndUserIdentifier"
                  ]
                }
              }
            },
            "required": [
              "AlternateEndUserIdentifiers",
              "Address"
            ]
          }
        }
      },
      "PidfloAndSimpleAeuiMixedPidfloAeuiAndNonPidloAeuiDeleting911Order": {
        "title": "PIDF-LO and SIMPLE AEUI. PIDF-LO and Non-PIDF-LO endpoint-deletion order",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "$ref": "#/components/schemas/CustomerOrderIdE911"
              },
              "AlternateEndUserIdentifiers": {
                "type": "array",
                "items": {
                  "properties": {
                    "AlternateEndUserIdentifier": {
                      "type": "object",
                      "properties": {
                        "CallbackNumber": {
                          "description": "Non-PIDF-LO: CallbackNumber is required",
                          "type": "string"
                        },
                        "Identifier": {
                          "type": "string",
                          "minItems": 1,
                          "maxLength": 30
                        }
                      },
                      "required": [
                        "Identifier"
                      ]
                    }
                  },
                  "required": [
                    "AlternateEndUserIdentifier"
                  ]
                }
              },
              "DeleteTNSpecificE911Address": {
                "$ref": "#/components/schemas/DeleteTNSpecificE911Address"
              }
            },
            "required": [
              "AlternateEndUserIdentifiers",
              "DeleteTNSpecificE911Address"
            ]
          }
        }
      },
      "PidfloAddressProvisioning911Order": {
        "title": "PIDF-LO. address-provisioning order",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "$ref": "#/components/schemas/CustomerOrderIdE911"
              },
              "AdditionalAddresses": {
                "description": "A list of Address sections. This address information for all potential endpoints which will be provisioned to the Bandwidth 911 system. At call time, the customer will submit this address information within the SIP header and, if a match is determined, the call will be routed to the PSAP nearest to that address. Otherwise, the call will be routed to an ECC. These Address sections will be the same in format to the Address section in the top-level of the E911Order payload. It replaces the TelephoneNumbers and AlternateEndUserIdentifiers payload element",
                "type": "array",
                "items": {
                  "properties": {
                    "Address": {
                      "type": "object",
                      "properties": {
                        "LocationId": {
                          "type": "string"
                        },
                        "HouseNumber": {
                          "type": "string"
                        },
                        "StreetName": {
                          "type": "string"
                        },
                        "StreetSuffix": {
                          "type": "string"
                        },
                        "City": {
                          "type": "string"
                        },
                        "StateCode": {
                          "type": "string"
                        },
                        "Zip": {
                          "type": "string"
                        },
                        "PlusFour": {
                          "type": "string"
                        },
                        "Country": {
                          "type": "string"
                        },
                        "Latitude": {
                          "type": "string"
                        },
                        "Longitude": {
                          "type": "string"
                        },
                        "AddressType": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "Address"
                  ]
                }
              }
            },
            "required": [
              "AdditionalAddresses"
            ]
          }
        }
      },
      "PidfloAddressEditing911Order": {
        "title": "PIDF-LO. address-editing order",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "AdditionalAddresses": {
                "description": "A list of Address sections. This address information for all potential endpoints which will be provisioned to the Bandwidth 911 system. At call time, the customer will submit this address information within the SIP header and, if a match is determined, the call will be routed to the PSAP nearest to that address. Otherwise, the call will be routed to an ECC. These Address sections will be the same in format to the Address section in the top-level of the E911Order payload. It replaces the TelephoneNumbers and AlternateEndUserIdentifiers payload element",
                "type": "array",
                "items": {
                  "properties": {
                    "Address": {
                      "type": "object",
                      "properties": {
                        "LocationId": {
                          "type": "string"
                        },
                        "HouseNumber": {
                          "type": "string"
                        },
                        "StreetName": {
                          "type": "string"
                        },
                        "StreetSuffix": {
                          "type": "string"
                        },
                        "City": {
                          "type": "string"
                        },
                        "StateCode": {
                          "type": "string"
                        },
                        "Zip": {
                          "type": "string"
                        },
                        "Latitude": {
                          "type": "string"
                        },
                        "Longitude": {
                          "type": "string"
                        },
                        "AddressType": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "LocationId"
                      ]
                    }
                  },
                  "required": [
                    "Address"
                  ]
                }
              }
            },
            "required": [
              "AdditionalAddresses"
            ]
          }
        }
      },
      "PidfloAddressDeleting911Order": {
        "title": "PIDF-LO. PIDF-LO address-deletion order",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "$ref": "#/components/schemas/CustomerOrderIdE911"
              },
              "AdditionalAddresses": {
                "type": "array",
                "items": {
                  "properties": {
                    "Address": {
                      "type": "object",
                      "properties": {
                        "LocationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "LocationId"
                      ]
                    }
                  },
                  "required": [
                    "Address"
                  ]
                }
              },
              "DeleteTNSpecificE911Address": {
                "$ref": "#/components/schemas/DeleteTNSpecificE911Address"
              }
            },
            "required": [
              "AdditionalAddresses",
              "DeleteTNSpecificE911Address"
            ]
          }
        }
      },
      "SimpleAeuiNonPidfloProvisioning911Order": {
        "title": "SIMPLE AEUI. Non-PIDF-LO endpoint-provisioning order",
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "$ref": "#/components/schemas/CustomerOrderIdE911"
              },
              "CallerName": {
                "$ref": "#/components/schemas/CallerNameE911"
              },
              "Address": {
                "type": "object",
                "properties": {
                  "LocationId": {
                    "type": "string"
                  },
                  "HouseNumber": {
                    "type": "string"
                  },
                  "StreetName": {
                    "type": "string"
                  },
                  "StreetSuffix": {
                    "type": "string"
                  },
                  "City": {
                    "type": "string"
                  },
                  "StateCode": {
                    "type": "string"
                  },
                  "Zip": {
                    "type": "string"
                  },
                  "PlusFour": {
                    "type": "string"
                  },
                  "Country": {
                    "type": "string"
                  },
                  "Latitude": {
                    "type": "string"
                  },
                  "Longitude": {
                    "type": "string"
                  },
                  "AddressType": {
                    "type": "string"
                  }
                }
              },
              "AlternateEndUserIdentifiers": {
                "type": "array",
                "items": {
                  "properties": {
                    "AlternateEndUserIdentifier": {
                      "type": "object",
                      "properties": {
                        "CallbackNumber": {
                          "type": "string"
                        },
                        "Identifier": {
                          "type": "string",
                          "minItems": 1,
                          "maxLength": 30
                        },
                        "PIDFLOEnabled": {
                          "type": "string",
                          "default": "true"
                        }
                      },
                      "required": [
                        "CallbackNumber",
                        "Identifier"
                      ]
                    }
                  },
                  "required": [
                    "AlternateEndUserIdentifier"
                  ]
                }
              }
            },
            "required": [
              "AlternateEndUserIdentifiers",
              "Address"
            ]
          }
        }
      },
      "E911Order": {
        "type": "object",
        "properties": {
          "E911Order": {
            "$ref": "#/components/schemas/E911OrderPayload"
          }
        }
      },
      "E911OrderPayload": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string"
          },
          "SiteId": {
            "type": "integer"
          },
          "PeerId": {
            "type": "integer"
          },
          "CallerName": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "AlternateEndUserIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/E911AlternateEndUserIdentifier"
            }
          },
          "Address": {
            "$ref": "#/components/schemas/E911Address"
          },
          "AdditionalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/E911Address"
            }
          },
          "LocationId": {
            "type": "string"
          }
        }
      },
      "E911AlternateEndUserIdentifier": {
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string"
          },
          "CallbackNumber": {
            "type": "string"
          },
          "PIDFLOEnabled": {
            "type": "boolean"
          },
          "CallerName": {
            "type": "string"
          },
          "PreferredLanguage": {
            "type": "string",
            "enum": [
              "en",
              "fr",
              "Incorrect value"
            ]
          },
          "LocationId": {
            "type": "string"
          }
        }
      },
      "E911Address": {
        "type": "object",
        "properties": {
          "HousePrefix": {
            "type": "string"
          },
          "HouseNumber": {
            "type": "string"
          },
          "HouseSuffix": {
            "type": "string"
          },
          "PreDirectional": {
            "type": "string"
          },
          "StreetName": {
            "type": "string"
          },
          "StreetSuffix": {
            "type": "string"
          },
          "PostDirectional": {
            "type": "string"
          },
          "AddressLine2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "StateCode": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          },
          "PlusFour": {
            "type": "string"
          },
          "County": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "AddressType": {
            "type": "string"
          },
          "Latitude": {
            "type": "string"
          },
          "Longitude": {
            "type": "string"
          }
        }
      },
      "LidbOrder": {
        "type": "object",
        "properties": {
          "LidbOrder": {
            "$ref": "#/components/schemas/LidbOrderPayload"
          }
        }
      },
      "LidbOrderPayload": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "CustomerOrderId": {
            "type": "string",
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. The element is optional. Only alphanumeric values, dashes and spaces are allowed.",
            "maxLength": 40
          },
          "SiteId": {
            "type": "integer",
            "format": "int32"
          },
          "PeerId": {
            "type": "integer",
            "format": "int32"
          },
          "LidbTnGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LidbDetailTnGroup"
            }
          }
        }
      },
      "LidbDetailTnGroup": {
        "type": "object",
        "properties": {
          "TelephoneNumbers": {
            "type": "array",
            "description": "A list of telephone numbers that will all assume the SubscriberInformation that is listed in the payload. In an enterprise context it is not uncommon for all of the served telephone numbers to use the same string for the Subscriber Information.",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "SubscriberInformation": {
            "type": "string",
            "description": "This is the field that is displayed to the user receiving the phone call from the Telephone numbers in the TelephoneNumberList"
          },
          "UseType": {
            "type": "string",
            "enum": [
              "BUSINESS",
              "RESIDENTIAL"
            ]
          },
          "Visibility": {
            "type": "string",
            "description": " If it is tagged as PRIVATE then the data will be provided, but the display will not be provided on a standard phone call.",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ]
          }
        },
        "required": [
          "UseType",
          "Visibility"
        ]
      },
      "NumberPortabilityRequest": {
        "type": "object",
        "properties": {
          "NumberPortabilityRequest": {
            "type": "object",
            "properties": {
              "TnList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Tn"
                }
              }
            }
          }
        }
      },
      "Tn": {
        "type": "object",
        "properties": {
          "Tn": {
            "type": "string"
          }
        }
      },
      "LsrOrder": {
        "type": "object",
        "properties": {
          "LsrOrder": {
            "$ref": "#/components/schemas/LsrOrderPayload"
          }
        }
      },
      "LsrOrderPayload": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string",
            "format": "Alphanumeric, spaces and dashes",
            "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the port.",
            "maxLength": 40
          },
          "SiteId": {
            "type": "integer",
            "format": "int32",
            "description": "The numeric designation for the Site ID that applied to the LSR order. The SiteId is used to provide a home within the account for the TN(s) that were ported in by the LSR order."
          },
          "PeerId": {
            "type": "integer",
            "format": "int32",
            "description": "The numeric designation for the Location or SIP Peer ID that applied to the LSR order. The SIP Peer ID is used to provide a home within the location for the TN(s) that were ported in by the LSR Order."
          },
          "OverrideValidation": {
            "type": "boolean",
            "description": "This Bandwidth internal field is applicable only to Internal orders that are in Exception state. A value of true bypasses all port-out validation checking."
          },
          "AuthorizingPerson": {
            "type": "string",
            "format": "Alphanumeric",
            "description": "Authorizing person",
            "maxLength": 100
          },
          "SPID": {
            "type": "string",
            "description": "The NPAC SPID corresponding to the carrier that the phone numbers are porting to.",
            "maxLength": 4
          },
          "BillingTelephoneNumber": {
            "type": "string",
            "format": "Numeric",
            "description": "The billing telephone number associated with the phone numbers that are being ported.",
            "maxLength": 10
          },
          "Pon": {
            "type": "string",
            "format": "Alphanumeric and \"#\",\"-\",\"_\".",
            "description": "The Pon is customer specified order identifier field.(required)",
            "maxLength": 25
          },
          "PonVersion": {
            "type": "integer",
            "format": "int32"
          },
          "PartialPort": {
            "description": "The PartialPort must be set to true if the intent is to NOT port all of the telephone numbers associated with the BillingTelephoneNumber. If PartialPort is omitted or false, and the ListOfPhoneNumbers does not include all of the telephone numbers associated with the BillingTelephoneNumber, the port-in will be rejected.  PartialPort is applicable only to on-net port-types. This element is not applicable to toll free or off-net port-in orders.",
            "type": "boolean"
          },
          "RequestedFocDate": {
            "type": "string",
            "description": "This is the FOC (Firm Order Commitment) date requested when creating the LSR order."
          },
          "Subscriber": {
            "type": "object",
            "properties": {
              "SubscriberType": {
                "description": "Subscriber type. (Defaults to RESIDENTIAL if not specified)",
                "type": "string",
                "enum": [
                  "BUSINESS",
                  "RESIDENTIAL"
                ]
              },
              "BusinessName": {
                "description": "Subscriber business name for BUSINESS SubscriberType. (required BusinessName or LastName)",
                "type": "string",
                "maxLength": 25
              },
              "FirstName": {
                "description": "Subscriber first name for RESIDENTIAL SubscriberType.",
                "type": "string",
                "maxLength": 25
              },
              "MiddleInitial": {
                "description": "Subscriber middle initial for RESIDENTIAL SubscriberType.",
                "type": "string",
                "maxLength": 1
              },
              "LastName": {
                "description": "Subscriber last name for RESIDENTIAL SubscriberType. (required BusinessName or LastName)",
                "type": "string",
                "maxLength": 25
              },
              "Name": {
                "description": "If the subscriber type is business, the subscriber name is the name of the business responsible for the numbers being ported. If the subscriber type is residential, the subscriber name is the name of the person responsible for the numbers being ported.",
                "type": "string"
              },
              "AccountNumber": {
                "description": "Account number",
                "format": "Alphanumeric",
                "type": "string",
                "maxLength": 32
              },
              "PinNumber": {
                "description": "Pin number",
                "format": "Alphanumeric",
                "type": "string",
                "maxLength": 10
              },
              "ServiceAddress": {
                "type": "object",
                "properties": {
                  "HousePrefix": {
                    "description": "The HousePrefix is the non-numeric address number prefix of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
                    "type": "string",
                    "maxLength": 6
                  },
                  "HouseNumber": {
                    "description": "The HouseNumber is the street address number of the ServiceAddress. HouseNumber is mandatory for port-in orders in which the ServiceAddress is mandatory.",
                    "type": "string",
                    "maxLength": 45
                  },
                  "HouseSuffix": {
                    "description": "The HouseSuffix is the non-numeric address number suffix of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
                    "type": "string",
                    "maxLength": 45
                  },
                  "PreDirectional": {
                    "description":"The PreDirectional is the non-numeric street name prefix of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
                    "type": "string",
                    "maxLength": 2
                  },
                  "StreetName": {
                    "description": "The StreetName is mandatory in cases where the ServiceAddress is mandatory.",
                    "type": "string",
                    "maxLength": 200
                  },
                  "StreetSuffix": {
                    "description": "The StreetSuffix is the street suffix of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
                    "type": "string",
                    "maxLength": 45
                  },
                  "PostDirectional": {
                    "description": "The PostDirectional is the street name post directional of the ServiceAddress. This element is optional when not needed to fully specify the ServiceAddress.",
                    "type": "string",
                    "maxLength": 2
                  },
                  "AddressLine2": {
                    "description": "AddressLine2 is used to specify Unit, Suite, Floor, etc. in the Service Address. AddressLine2 is optional when not needed to fully specify the ServiceAddress.",
                    "type": "string",
                    "maxLength": 200
                  },
                  "City": {
                    "description": "City is mandatory in cases where the ServiceAddress is mandatory.",
                    "type": "string",
                    "maxLength": 100
                  },
                  "RegionId": {
                    "type": "integer",
                    "format": "int32",
                    "deprecated": true
                  },
                  "StateCode": {
                    "description": "StateCode is the 2-letter abbreviation of the state of the ServiceAddress. StateCode is mandatory in cases where the ServiceAddress is mandatory.",
                    "type": "string",
                    "maxLength": 2
                  },
                  "Zip": {
                    "description": "Zip is the Zip Code of the ServiceAddress. Zip is mandatory in cases where the ServiceAddress is mandatory.",
                    "format": "Allowed formats: 5 numbers, 5+4 or Canadian",
                    "type": "string"
                  },
                  "PlusFour": {
                    "description": "PlusFour is the 4 digits that are sometimes suffixed to the Zip Code.",
                    "type": "string"
                  },
                  "County": {
                    "description": "The county where the subscriber or business is located.",
                    "type": "string",
                    "maxLength": 45
                  },
                  "Country": {
                    "description": "Country is the country of the ServiceAddress. This value will be derived from the StateCode, so it should generally be omitted.",
                    "type": "string"
                  },
                  "AddressType": {
                    "$ref": "#/components/schemas/AddressType"
                  }
                },
                "required": [
                  "HouseNumber",
                  "StreetName",
                  "City",
                  "StateCode",
                  "Zip"
                ]
              }
            },
            "required": [
              "BusinessName",
              "LastName",
              "ServiceAddress"
            ]
          },
          "ListOfTelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "LsrOrderErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LsrOrderError"
            }
          },
          "CountOfTNs": {
            "description": "Total count of telephone numbers in order.",
            "type": "string"
          }
        },
        "required": [
          "Pon",
          "SPID",
          "Subscriber",
          "ListOfTelephoneNumbers",
          "AuthorizingPerson"
        ]
      },
      "OrderRequest": {
        "type": "object",
        "properties": {
          "Order": {
            "$ref": "#/components/schemas/Order"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "CustomerOrderId": {
            "type": "string"
          },
          "SiteId": {
            "type": "integer",
            "format": "int32"
          },
          "PeerId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderCreateDate": {
            "type": "string"
          },
          "orderType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExistingTelephoneNumberOrderType"
              },
              {
                "$ref": "#/components/schemas/RateCenterSearchAndOrderType"
              },
              {
                "$ref": "#/components/schemas/AreaCodeSearchAndOrderType"
              },
              {
                "$ref": "#/components/schemas/NPANXXSearchAndOrderType"
              },
              {
                "$ref": "#/components/schemas/TollFreeWildCharSearchAndOrderType"
              },
              {
                "$ref": "#/components/schemas/TollFreeVanitySearchAndOrderType"
              },
              {
                "$ref": "#/components/schemas/LATASearchAndOrderType"
              },
              {
                "$ref": "#/components/schemas/ZIPSearchAndOrderType"
              },
              {
                "$ref": "#/components/schemas/CitySearchAndOrderType"
              },
              {
                "$ref": "#/components/schemas/StateSearchAndOrderType"
              },
              {
                "$ref": "#/components/schemas/CombinedSearchAndOrderType"
              }
            ]
          },
          "PartialAllowed": {
            "type": "boolean"
          },
          "BackOrderRequested": {
            "type": "boolean"
          },
          "CloseOrder": {
            "type": "boolean"
          },
          "TnAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TnAttribute"
            }
          }
        }
      },
      "ExistingTelephoneNumberOrderType": {
        "type": "object",
        "properties": {
          "TelephoneNumberList": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "TelephoneNumber"
              }
            }
          },
          "ReservationIdList": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "ReservationId"
              }
            }
          }
        }
      },
      "RateCenterSearchAndOrderType": {
        "type": "object",
        "properties": {
          "RateCenter": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "EnableLCA": {
            "type": "boolean"
          }
        }
      },
      "AreaCodeSearchAndOrderType": {
        "type": "object",
        "properties": {
          "AreaCode": {
            "type": "string"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NPANXXSearchAndOrderType": {
        "type": "object",
        "properties": {
          "NpaNxx": {
            "type": "string"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "EnableLCA": {
            "type": "boolean"
          }
        }
      },
      "TollFreeWildCharSearchAndOrderType": {
        "type": "object",
        "properties": {
          "TollFreeWildCardPattern": {
            "type": "string"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TollFreeVanitySearchAndOrderType": {
        "type": "object",
        "properties": {
          "TollFreeVanity": {
            "type": "string"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LATASearchAndOrderType": {
        "type": "object",
        "properties": {
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "LATA": {
            "type": "string"
          }
        }
      },
      "ZIPSearchAndOrderType": {
        "type": "object",
        "properties": {
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "Zip": {
            "type": "string"
          }
        }
      },
      "CitySearchAndOrderType": {
        "type": "object",
        "properties": {
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "City": {
            "type": "string"
          },
          "State": {
            "type": "string"
          }
        }
      },
      "StateSearchAndOrderType": {
        "type": "object",
        "properties": {
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "State": {
            "type": "string"
          }
        }
      },
      "CombinedSearchAndOrderType": {
        "type": "object",
        "properties": {
          "AreaCode": {
            "type": "string"
          },
          "NpaNxx": {
            "type": "string"
          },
          "NpaNxxX": {
            "type": "string"
          },
          "RateCenter": {
            "type": "string"
          },
          "LATA": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Zip": {
            "type": "string"
          },
          "LocalVanity": {
            "type": "string"
          },
          "EndsIn": {
            "type": "boolean"
          },
          "EnableLCA": {
            "type": "boolean"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OrderUpdate": {
        "type": "object",
        "properties": {
          "Order": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "CustomerOrderId": {
                "type": "string"
              },
              "CloseOrder": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "MoveTnsOrders": {
        "type": "object",
        "properties": {
          "TotalCount": {
            "type": "integer"
          },
          "Links": {
            "$ref": "#/components/schemas/PaginationLinks"
          },
          "MoveTnsOrderSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSummary"
            }
          }
        }
      },
      "OrderSummary": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer"
          },
          "userId": {
            "type": "string"
          },
          "OrderId": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string"
          },
          "CountOfTNs": {
            "type": "integer"
          },
          "LastModifiedNote": {
            "$ref": "#/components/schemas/Note"
          },
          "SuppCount": {
            "type": "integer"
          },
          "OrderType": {
            "type": "string"
          },
          "CustomerOrderId": {
            "type": "string"
          },
          "OrderDate": {
            "type": "string"
          },
          "OrderStatus": {
            "type": "string"
          },
          "TelephoneNumberDetails": {
            "$ref": "#/components/schemas/TelephoneNumberDetails"
          }
        }
      },
      "TelephoneNumberDetails": {
        "type": "object",
        "properties": {
          "States": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/StateWithCount"
            }
          },
          "RateCenters": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/RateCenterWithCount"
            }
          },
          "Cities": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/CityWithCount"
            }
          },
          "Tiers": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tiers"
            }
          },
          "Vendors": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Vendors"
            }
          }
        }
      },
      "StateWithCount": {
        "type": "object",
        "properties": {
          "State": {
            "type": "string"
          },
          "Count": {
            "type": "integer"
          }
        }
      },
      "RateCenterWithCount": {
        "type": "object",
        "properties": {
          "RateCenter": {
            "type": "string"
          },
          "Count": {
            "type": "integer"
          }
        }
      },
      "CityWithCount": {
        "type": "object",
        "properties": {
          "City": {
            "type": "string"
          },
          "Count": {
            "type": "integer"
          }
        }
      },
      "Tiers": {
        "type": "object",
        "properties": {
          "Tier": {
            "type": "string"
          },
          "Count": {
            "type": "integer"
          }
        }
      },
      "Vendors": {
        "type": "object",
        "properties": {
          "VendorName": {
            "type": "string"
          },
          "VendorId": {
            "type": "integer"
          },
          "Count": {
            "type": "integer"
          }
        }
      },
      "PaginationLinks": {
        "type": "object",
        "title": "Links",
        "properties": {
          "first": {
            "type": "string"
          },
          "next": {
            "type": "string"
          },
          "previous": {
            "type": "string"
          },
          "last": {
            "type": "string"
          }
        }
      },
      "MoveTnsOrderRequest": {
        "type": "object",
        "properties": {
          "MoveTnsOrder": {
            "$ref": "#/components/schemas/MoveTnsOrder"
          }
        }
      },
      "MoveTnsOrder": {
        "title": "MoveTnsOrder",
        "type": "object",
        "required": [
          "TelephoneNumbers",
          "SiteId"
        ],
        "properties": {
          "TelephoneNumbers": {
            "description": "List of telephone numbers to be moved. Maximum of 5,000 allowed per POST",
            "type": "array",
            "minItems": 1,
            "maxItems": 5000,
            "items": {
              "type": "object",
              "properties": {
                "TelephoneNumber": {
                  "description": "Ten digit phone number with no dots or dashes",
                  "type": "integer"
                }
              }
            }
          },
          "SiteId": {
            "description": "A site id to which telephone number will be moved",
            "type": "integer"
          },
          "CustomerOrderId": {
            "description": "Internal customer order id for tracking the order. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters",
            "type": "string"
          },
          "SipPeerId": {
            "description": "A sippeer id of provided site to which telephone number will be moved",
            "type": "integer"
          },
          "SourceAccountId": {
            "description": "Id of source account, in the case of moving numbers across accounts",
            "type": "integer"
          },
          "E911ServiceAction": {
            "description": "Only valid when moving to a different account using SourceAccountId. When set to move (default) the E911 service information (if applied to the number) will be moved with the number to the new account. When set to delete the E911 service will be removed from the number",
            "type": "string",
            "enum": [
              "move",
              "delete"
            ],
            "default": "move"
          }
        }
      },
      "MoveTnsOrderResponse": {
        "type": "object",
        "properties": {
          "MoveTnsOrder": {
            "$ref": "#/components/schemas/MoveTnsOrderPayload"
          }
        }
      },
      "MoveTnsOrderPayload": {
        "title": "MoveTnsOrder",
        "type": "object",
        "properties": {
          "OrderId": {
            "type": "string"
          },
          "AccountId": {
            "type": "integer"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "CreatedByUser": {
            "type": "string"
          },
          "CustomerOrderId": {
            "type": "string"
          },
          "SiteId": {
            "type": "integer"
          },
          "SourceAccountId": {
            "type": "integer"
          },
          "SipPeerId": {
            "type": "integer"
          },
          "OrderCreateDate": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "TelephoneNumber"
              }
            }
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "RECEIVED",
              "PROCESSING",
              "PARTIAL",
              "COMPLETE",
              "FAILED"
            ]
          },
          "Errors": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/TelephoneNumberGroupError"
            }
          }
        }
      },
      "TelephoneNumberGroupError": {
        "type": "object",
        "title": "Error",
        "properties": {
          "Code": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "TelephoneNumber"
              }
            }
          }
        }
      },
      "OrderHistory": {
        "type": "object",
        "properties": {
          "OrderDate": {
            "description": "This is the date/time when the order history entry was created.",
            "type": "string"
          },
          "Note": {
            "description": "This is the order note that accompanied the order history entry.",
            "type": "string"
          },
          "Author": {
            "description": "This is the user that initiated the event that caused the order history to be updated.",
            "type": "string"
          },
          "Difference": {
            "description": "SUPP changes difference.",
            "type": "string"
          },
          "Status": {
            "description": "This is the state that the order was in when the order history event occurred.",
            "type": "string"
          }
        }
      },
      "OrderHistoryWrapper": {
        "type": "object",
        "properties": {
          "OrderHistoryWrapper": {
            "type": "object",
            "properties": {
              "OrderHistory": {
                "$ref": "#/components/schemas/OrderHistory"
              }
            }
          }
        }
      },
      "FileMetaData": {
        "type": "object",
        "properties": {
          "DocumentName": {
            "description": "Name of particular document.",
            "type": "string"
          },
          "DocumentType": {
            "description": "Enum of possible file type.",
            "type": "string",
            "enum": [
              "LOA",
              "INVOICE",
              "CSR",
              "OTHER"
            ]
          }
        }
      },
      "FileMetaDataRequest": {
        "type": "object",
        "properties": {
          "FileMetaData": {
            "type": "object",
            "properties": {
              "DocumentName": {
                "type": "string"
              },
              "DocumentType": {
                "type": "string",
                "enum": [
                  "LOA",
                  "INVOICE",
                  "CSR",
                  "OTHER"
                ]
              }
            }
          }
        }
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "description": "Simple Telephone Number.",
            "type": "string"
          }
        }
      },
      "LnpOrderBasic": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string",
            "description": "The `CustomerOrderId` is an optional field that may be provided by the customer and will remain with the order. The value is opaque to Bandwidth.",
            "format": "Only alphanumeric values, dashes and spaces",
            "maxLength": 40
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "DRAFT"
            ],
            "description": "Including `ProcessingStatus` with a value of DRAFT allows you to create a port-in request, but not process the request. This is useful if you wish to add items to the order over a period of time and submit once you have the order setup the way you want. Note, however, that draft orders that have not been updated in a couple of days are automatically deleted. Removal of stagnant draft orders is performed so that telephone numbers are not tied up in these orders, preventing them from being included in other orders.<br/><br/>Very little validation is performed while an order is in draft state. Omitting `ProcessingStatus` causes the port-in to be validated and, if correct, processed right away. The full validation is performed on the order when you change the ProcessingStatus to 'SUBMITTED' by performing a PUT request on the order. <br><br><p>All toll free telephone numbers provided will be validated (even in draft state) to ensure\nthat they are portable, and to allow you to separate telephone numbers into separate port-ins\nbased on the RespOrg that they are being ported from.</p>"
          },
          "RequestedFocDate": {
            "type": "string",
            "description": "Format: ISO8601 encoding such as “2013-05-10T15:14:22Z”, or \"2019-10-31T17:15:00+04:00\".<br/><br/>For all ports, if `RequestedFocDate` is specified, the date portion must be:<br/> - in the future<br/> - after the losing carrier's minimum number of days to port-out<br/> - not on a weekend or U.S. holiday<br/><br/>If `RequestedFocDate` is not specified, the next available FOC date meeting the criteria above will be used. If the Time portion of the `RequestedFocDate` is omitted the port-in order will be activated at the default activation time of 11:30 AM ET. If an activation time other than 11:30 AM ET is desired, that activation time should be included in the `RequestedFocDate`."
          },
          "PeerId": {
            "type": "string",
            "description": "`PeerId` specifies the numeric identifier of the SIP-peer (Location) that the telephone numbers will be ported into.<br/><br/>You can find the identifier for a SIP-peer (location) by using `GET /accounts/id/sites/id/sippeers`, or by clicking on 'Accounts' on the upper right of the [Bandwidth Dashboard](Https://dashboard.bandwidth.com), then clicking 'Locations' on the navigation bar. The SIP-peer (location) identifiers are listed next to each location name. If `PeerId` is omitted, the SIP-peer (location) designated as the 'default location' for that site (sub-account) will be used."
          },
          "LoaAuthorizingPerson": {
            "type": "string",
            "description": "This is the first and last names of the person that has authorized the port.",
            "maxLength": 15
          },
          "ListOfPhoneNumbers": {
            "type": "array",
            "description": "`ListOfPhoneNumbers` is an array of `PhoneNumber`. At least one `PhoneNumber` must be provided.",
            "items": {
              "type": "object",
              "properties": {
                "PhoneNumber": {
                  "description": "One or more phone numbers is required. <br/>Use a `<PhoneNumber>` tag for each phone number in the `<ListOfPhoneNumbers>` list.",
                  "format": "Ten digit phone number with no dots or dashes",
                  "type": "string"
                }
              }
            }
          },
          "SiteId": {
            "type": "integer",
            "format": "int32",
            "description": "`SiteId` specifies the identifier of the site (sub-account) that the telephone numbers will be ported into.<br/><br/>You can find the identifier for a site (sub-account) by using `GET /accounts/id/sites`, or by clicking on 'Manage sub-account' for the desired sub-account on the main page of the Bandwidth Dashboard."
          }
        },
        "required": [
          "SiteId",
          "ListOfPhoneNumbers",
          "LoaAuthorizingPerson"
        ]
      },
      "LnpOrderAdditionalFields": {
        "type": "object",
        "properties": {
          "BillingTelephoneNumber": {
            "type": "string",
            "description": "The `BillingTelephoneNumber` is the primary telephone number associated with the invoice that the subscriber gets from the losing carrier. For wireline port-in, the BillingTelephoneNumber is typically the telephone number being ported in."
          },
          "WirelessInfo": {
            "type": "object",
            "title": "WirelessInfo",
            "description": "Most common for telephone numbers that were formerly wireless.",
            "properties": {
              "AccountNumber": {
                "type": "string",
                "description": "The `AccountNumber` is sometimes required to authorize the port-out from the losing carrier. This is most common for telephone numbers that were formerly wireless."
              },
              "PinNumber": {
                "type": "string",
                "description": "The `PinNumber` is sometimes required to authorize the port-out from the losing carrier. This is most common for telephone numbers that were formerly wireless."
              }
            }
          },
          "Subscriber": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SubscriberBusiness"
              },
              {
                "$ref": "#/components/schemas/SubscriberResidential"
              }
            ]
          },
          "Triggered": {
            "type": "boolean",
            "description": "The `Triggered` field must be set to `true` if you want an activation time other than the 11:30 AM ET default. The desired activation time can then be specified in the time portion of the `RequestedFocDate`."
          },
          "AlternateSpid": {
            "type": "string",
            "description": "Even though the telephone numbers are being ported into Bandwidth’s SPID, some of Bandwidth’s wholesale customers have an alternate SPID that is used to identify the telephone number with that customer."
          }
        },
        "required": [
          "BillingTelephoneNumber",
          "Subscriber"
        ]
      },
      "TollFreeLnpOrderRequest": {
        "type": "object",
        "title": "Toll free",
        "description": "Manual indicates that the port-in will be processed manually by Bandwidth’s Local Number Portability team. Currently all toll free port-ins are handled manually by Bandwidth’s Local Number Portability team. But Bandwidth is in the process of automating portions of toll free porting, with a goal of eventually automating the entire process.",
        "properties": {
          "LnpOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LnpOrderBasic"
              }
            ],
            "type": "object",
            "properties": {
              "Subscriber": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscriberBusiness"
                  }
                ]
              }
            }
          }
        }
      },
      "OnNetLnpOrderRequest": {
        "type": "object",
        "title": "On-net",
        "properties": {
          "LnpOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LnpOrderBasic"
              },
              {
                "$ref": "#/components/schemas/LnpOrderAdditionalFields"
              },
              {
                "type": "object",
                "properties": {
                  "NewBillingTelephoneNumber": {
                    "type": "string",
                    "description": "This field is used to specify a new billing telephone number on the losing carrier account.<br/><br/>Cannot be the same as `BillingTelephoneNumber` or be present in the list of ported numbers."
                  },
                  "PartialPort": {
                    "type": "string",
                    "description": "The `PartialPort` must be set to `true` if the intent is to **NOT** port all of the telephone numbers associated with the `BillingTelephoneNumber`.<br/><br/>If PartialPort is omitted or false, and the `ListOfPhoneNumbers` does not include all of the telephone numbers associated with the `BillingTelephoneNumber`, the port-in will be rejected.<br/><br/>PartialPort is applicable only to on-net port-types."
                  },
                  "BillingType": {
                    "type": "string",
                    "description": ""
                  },
                  "AutoActivation": {
                    "type": "string",
                    "description": ""
                  },
                  "TnAttributes": {
                    "type": "array",
                    "description": "The `TnAttributes` field specifies line attributes that will apply to the ported in telephone numbers. If present, `TnAttributes` may have a value of `PROTECTED`.",
                    "items": {
                      "$ref": "#/components/schemas/TnAttribute"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "InternalLnpOrderRequest": {
        "type": "object",
        "title": "Internal",
        "properties": {
          "LnpOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LnpOrderBasic"
              },
              {
                "$ref": "#/components/schemas/LnpOrderAdditionalFields"
              },
              {
                "type": "object",
                "properties": {
                  "NewBillingTelephoneNumber": {
                    "type": "string",
                    "description": "This field is used to specify a new billing telephone number on the losing carrier account.<br/><br/>Cannot be the same as `BillingTelephoneNumber` or be present in the list of ported numbers."
                  },
                  "PartialPort": {
                    "type": "string",
                    "description": "The `PartialPort` must be set to `true` if the intent is to **NOT** port all of the telephone numbers associated with the `BillingTelephoneNumber`.<br/><br/>If PartialPort is omitted or false, and the `ListOfPhoneNumbers` does not include all of the telephone numbers associated with the `BillingTelephoneNumber`, the port-in will be rejected.<br/><br/>PartialPort is applicable only to on-net port-types."
                  },
                  "Immediately": {
                    "type": "boolean",
                    "description": "Including `Immediately` with a value of `true` will cause an Internal port-in to complete as soon as possible, without requiring a scheduled activation time.<br/><br/>`Immediately` has no meaning for port types other than Internal."
                  },
                  "TnAttributes": {
                    "type": "array",
                    "description": "The `TnAttributes` field specifies line attributes that will apply to the ported in telephone numbers. If present, `TnAttributes` may have a value of `PROTECTED`.",
                    "items": {
                      "$ref": "#/components/schemas/TnAttribute"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "OffNetLnpOrderRequest": {
        "type": "object",
        "title": "Off-net",
        "properties": {
          "LnpOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LnpOrderBasic"
              },
              {
                "$ref": "#/components/schemas/LnpOrderAdditionalFields"
              }
            ]
          }
        }
      },
      "WirelessInfo": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "description": "The WirelessInfo.AccountNumber is sometimes required to authorize the port-out from the losing carrier. This is most common for telephone numbers that were formerly wireless. This element is not applicable for toll free port-ins.",
            "type": "string"
          },
          "PinNumber": {
            "description": "The WirelessInfo.PinNumber is sometimes required to authorize the port-out from the losing carrier. This is most common for telephone numbers that were formerly wireless. This element is not applicable for toll free port-ins.",
            "type": "string"
          }
        }
      },
      "SubscriberBusiness": {
        "type": "object",
        "title": "BUSINESS",
        "properties": {
          "SubscriberType": {
            "type": "string",
            "enum": [
              "BUSINESS"
            ]
          },
          "BusinessName": {
            "type": "string",
            "maxLength": 25
          },
          "ServiceAddress": {
            "$ref": "#/components/schemas/PortinCreateSubscriberServiceAddress"
          }
        },
        "required": [
          "SubscriberType",
          "ServiceAddress",
          "BusinessName"
        ]
      },
      "SubscriberResidential": {
        "type": "object",
        "title": "RESIDENTIAL",
        "properties": {
          "SubscriberType": {
            "type": "string",
            "enum": [
              "RESIDENTIAL"
            ]
          },
          "FirstName": {
            "type": "string",
            "maxLength": 25
          },
          "MiddleInitial": {
            "type": "string",
            "maxLength": 1
          },
          "LastName": {
            "type": "string",
            "maxLength": 25
          },
          "ServiceAddress": {
            "$ref": "#/components/schemas/PortinCreateSubscriberServiceAddress"
          }
        },
        "required": [
          "SubscriberType",
          "ServiceAddress",
          "FirstName",
          "LastName"
        ]
      },
      "PortinSubscriberSupp": {
        "type": "object",
        "title": "Subscriber",
        "properties": {
          "SubscriberType": {
            "type": "string",
            "description": "If SubscriberType is set to BUSINESS, a BusinessName must be provided. If SubscriberType is set to RESIDENTIAL, a FirstName and LastName must be provided.",
            "enum": [
              "business",
              "residential",
              "generic"
            ]
          },
          "BusinessName": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "MiddleInitial": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "ServiceAddress": {
            "$ref": "#/components/schemas/PortinPutSubscriberServiceAddress"
          }
        }
      },
      "WirelessInfoSupp": {
        "type": "object",
        "title": "WirelessInfo",
        "description": "If you want to SUPP WirelessInfo, you must include both AccountNumber and PinNumber in the payload, even if you are not changing both.",
        "properties": {
          "AccountNumber": {
            "type": "string"
          },
          "PinNumber": {
            "type": "string"
          }
        }
      },
      "PortinSubscriberBasicServiceAddress": {
        "type": "object",
        "title": "ServiceAddress",
        "properties": {
          "HousePrefix": {
            "type": "string",
            "description": "The `HouseSuffix` is the non-numeric address number suffix of the `ServiceAddress`. This element is optional when not needed to fully specify the `ServiceAddress`."
          },
          "HouseNumber": {
            "type": "string",
            "description": "The `HouseNumber` is the street address number of the `ServiceAddress`. `HouseNumber` is mandatory for port-in orders in which the `ServiceAddress` is mandatory."
          },
          "HouseSuffix": {
            "type": "string",
            "description": "The `HouseSuffix` is the non-numeric address number suffix of the `ServiceAddress`. This element is optional when not needed to fully specify the `ServiceAddress`."
          },
          "PreDirectional": {
            "type": "string",
            "description": "The `PreDirectional` is the non-numeric street name prefix of the `ServiceAddress`. This element is optional when not needed to fully specify the `ServiceAddress`."
          },
          "StreetName": {
            "type": "string",
            "description": "The `StreetName` is mandatory in cases where the `ServiceAddress` is mandatory."
          },
          "StreetSuffix": {
            "type": "string",
            "description": "The `StreetSuffix` is the street suffix of the `ServiceAddress`. This element is optional when not needed to fully specify the `ServiceAddress`."
          },
          "PostDirectional": {
            "type": "string",
            "description": "The `PostDirectional` is the street name post directional of the `ServiceAddress`. This element is optional when not needed to fully specify the `ServiceAddress`."
          },
          "AddressLine2": {
            "type": "string",
            "description": "`AddressLine2` is used to specify Unit, Suite, Floor, etc. in the Service Address. `AddressLine2` is optional when not needed to fully specify the `ServiceAddress`."
          },
          "City": {
            "type": "string",
            "description": "`City` is mandatory in cases where the `ServiceAddress` is mandatory."
          },
          "StateCode": {
            "type": "string",
            "description": "`StateCode` is the 2-letter abbreviation of the state of the `ServiceAddress`. `StateCode` is mandatory in cases where the `ServiceAddress` is mandatory. ex: `NC`, `NY`, or `AK`",
            "maxLength": 2
          },
          "Zip": {
            "type": "string",
            "description": "`Zip` is the Zip Code of the `ServiceAddress`. `Zip` is mandatory in cases where the `ServiceAddress` is mandatory."
          },
          "PlusFour": {
            "type": "string",
            "description": "`PlusFour` is the 4 digits that are sometimes suffixed to the Zip Code.",
            "maxLength": 4
          },
          "Country": {
            "type": "string",
            "description": "`Country` is the country of the `ServiceAddress`. This value will be derived from the `StateCode`, so it should generally be omitted."
          }
        }
      },
      "PortinCreateSubscriberServiceAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PortinSubscriberBasicServiceAddress"
          }
        ],
        "title": "ServiceAddress",
        "required": [
          "HouseNumber",
          "StreetName",
          "City",
          "StateCode",
          "Zip"
        ]
      },
      "PortinPutSubscriberServiceAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PortinSubscriberBasicServiceAddress"
          }
        ],
        "type": "object",
        "title": "ServiceAddress",
        "description": "Includes all address fields. ServiceAddress elements cannot be SUPPed for Automated on-net wireless to wireless port-ins. See also, ResetAddressFields.",
        "properties": {
          "ResetAddressFields": {
            "type": "boolean",
            "description": "The `ResetAddressFields` may be specified in a `PUT` request for a non-toll free port-in order if you would like to remove `ServiceAddress` elements that are not specified in the PUT payload. Default value is `false`."
          }
        }
      },
      "LnpOrderBasicModifiableFields": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string",
            "description": "This field is removed from the order if not provided in the PUT payload."
          },
          "PeerId": {
            "type": "string"
          },
          "SiteId": {
            "type": "integer",
            "format": "int32"
          },
          "RequestedFocDate": {
            "type": "string",
            "description": "Is a subject to blackout windows if the current date is too close to an assigned FOC date."
          },
          "Triggered": {
            "type": "boolean",
            "description": "May be included in the PUT payload as is, but cannot be changed."
          },
          "TnAttributes": {
            "type": "array",
            "description": "Can be SUPPed prior to completion of the port-in request.",
            "items": {
              "$ref": "#/components/schemas/TnAttribute"
            }
          },
          "ProcessingStatus": {
            "type": "string",
            "description": "May only be SUPPed for port-in orders in draft state. The only valid value is “SUBMITTED” (not case sensitive)."
          }
        }
      },
      "LnpOrderAdditionalModifiableFields": {
        "type": "object",
        "properties": {
          "BillingTelephoneNumber": {
            "type": "string"
          },
          "Subscriber": {
            "$ref": "#/components/schemas/PortinSubscriberSupp"
          },
          "AlternateSpid": {
            "type": "string",
            "description": "Can only be modified in DRAFT state. Can only be modified if it is not configured at the system level."
          }
        }
      },
      "LnpOrderSuppManualTollFree": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LnpOrderBasicModifiableFields"
          }
        ],
        "type": "object",
        "title": "LnpOrderSupp",
        "properties": {
          "Subscriber": {
            "type": "object",
            "title": "Subscriber",
            "properties": {
              "SubscriberType": {
                "type": "string",
                "enum": [
                  "BUSINESS"
                ]
              },
              "BusinessName": {
                "type": "string",
                "maxLength": 25
              },
              "ServiceAddress": {
                "$ref": "#/components/schemas/PortinSubscriberBasicServiceAddress"
              }
            }
          },
          "LoaAuthorizingPerson": {
            "type": "string"
          },
          "RetryValidation": {
            "type": "boolean",
            "description": "If 'TOLL_FREE_PORT_INS_PHASE_1' feature is enabled for account, Bandwidth accesses a vendor to determine if the numbers are portable, and if so, from which RespOrg. In the event that we do not receive a response from our vendor after a number of retries, we give up and place the order in the INVALID_TFNS or INVALID_DRAFT_TFNS state. This scenario can occur if our toll free porting vendor is performing maintenance, for example. Including RetryValidation with a value of true will cause the order to return to VALIDATE_TFNS or VALIDATE_DRAFT_TFNS and we will repeat our attempts to retrieve the portability data from the vendor. This element is included in the synchronous response to the PUT, when included in the request, but is not included in subsequent GET requests for the order."
          },
          "ListOfPhoneNumbers": {
            "type": "array",
            "description": "May be SUPPed only in draft states (i.e. DRAFT, VALIDATE_DRAFT_TFNS, VALID_DRAFT_TFNS, or INVALID_DRAFT_TFNS)",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          }
        }
      },
      "LnpOrderSuppManualOnNetOffNet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LnpOrderBasicModifiableFields"
          },
          {
            "$ref": "#/components/schemas/LnpOrderAdditionalModifiableFields"
          }
        ],
        "type": "object",
        "title": "LnpOrderSupp",
        "properties": {
          "NewBillingTelephoneNumber": {
            "type": "string"
          },
          "WirelessInfo": {
            "$ref": "#/components/schemas/WirelessInfoSupp"
          },
          "PartialPort": {
            "type": "string"
          },
          "LoaAuthorizingPerson": {
            "type": "string"
          }
        }
      },
      "LnpOrderSuppAutomatedOnNet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LnpOrderBasicModifiableFields"
          },
          {
            "$ref": "#/components/schemas/LnpOrderAdditionalModifiableFields"
          }
        ],
        "type": "object",
        "title": "LnpOrderSupp",
        "properties": {
          "NewBillingTelephoneNumber": {
            "type": "string"
          },
          "WirelessInfo": {
            "$ref": "#/components/schemas/WirelessInfoSupp"
          },
          "PartialPort": {
            "type": "string"
          },
          "LoaAuthorizingPerson": {
            "type": "string"
          },
          "ListOfPhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          }
        }
      },
      "LnpOrderSuppAutomatedOnNetWireless": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LnpOrderBasicModifiableFields"
          },
          {
            "$ref": "#/components/schemas/LnpOrderAdditionalModifiableFields"
          }
        ],
        "type": "object",
        "title": "LnpOrderSupp",
        "properties": {
          "WirelessInfo": {
            "$ref": "#/components/schemas/WirelessInfoSupp"
          },
          "ListOfPhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          }
        }
      },
      "LnpOrderSuppAutomatedOffNet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LnpOrderBasicModifiableFields"
          },
          {
            "$ref": "#/components/schemas/LnpOrderAdditionalModifiableFields"
          }
        ],
        "type": "object",
        "title": "LnpOrderSupp",
        "properties": {
          "Subscriber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PortinSubscriberSupp"
              }
            ],
            "type": "object",
            "title": "LnpOrderSupp",
            "description": "Cannot be SUPPed after FOC received."
          }
        }
      },
      "LnpOrderSuppInternal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LnpOrderBasicModifiableFields"
          },
          {
            "$ref": "#/components/schemas/LnpOrderAdditionalModifiableFields"
          }
        ],
        "type": "object",
        "title": "LnpOrderSupp",
        "properties": {
          "NewBillingTelephoneNumber": {
            "type": "string"
          },
          "WirelessInfo": {
            "$ref": "#/components/schemas/WirelessInfoSupp"
          },
          "PartialPort": {
            "type": "string"
          },
          "LoaAuthorizingPerson": {
            "type": "string"
          },
          "Immediately": {
            "type": "boolean",
            "description": "May be included in the PUT payload as is, but cannot be changed."
          },
          "OverrideValidation": {
            "type": "boolean",
            "description": "This Bandwidth internal flag forces port-out to bypass validity checking (if there are no terminal errors). This flag can be SUPPed only for orders in EXCEPTION status."
          }
        }
      },
      "ActivationStatus": {
        "type": "object",
        "properties": {
          "ActivationStatus": {
            "type": "object",
            "properties": {
              "AutoActivationDate": {
                "description": "The date when auto activation is requested.  It can be a date/time in the past, if immediate activation is desired.",
                "type": "string",
                "format": "date-time"
              },
              "ActivatedTelephoneNumbersList": {
                "description": "This is the list of TNs that have been activated for the port-in order.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              },
              "NotYetActivatedTelephoneNumbersList": {
                "type": "array",
                "description": "This is the list of TNs that have not yet been activated for the port-in order.",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          }
        }
      },
      "PortOutResponse": {
        "type": "object",
        "properties": {
          "Status": {
            "$ref": "#/components/schemas/IrisStatus"
          },
          "OrderId": {
            "description": "The unique identifier string created by Bandwidth to refer to the order.  This value is returned in the synchronous response to the POST.",
            "type": "string"
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "NEW",
              "SUPP",
              "MODIFY",
              "COMPLETE",
              "CANCELLED",
              "VALIDATION_FAILED_NEW",
              "VALIDATION_FAILED_SUPP",
              "VALIDATION_FAILED_MODIFY",
              "EXCEPTION",
              "SOA_PENDING",
              "SOA_CONFLICT"
            ]
          },
          "PortOutRequest": {
            "$ref": "#/components/schemas/ManualPortOutRequest"
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LnpError"
            }
          }
        }
      },
      "LnpError": {
        "type": "object",
        "title": "Error",
        "properties": {
          "Description": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "Tn"
              }
            }
          },
          "Code": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IrisStatus": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Code": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AccountProduct": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Features": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Feature": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "AccountProductResponse": {
        "type": "object",
        "properties": {
          "Product": {
            "$ref": "#/components/schemas/AccountProduct"
          }
        }
      },
      "AccountProducts": {
        "type": "object",
        "properties": {
          "Product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountProduct"
            }
          }
        }
      },
      "AccountProductsResponse": {
        "type": "object",
        "properties": {
          "Products": {
            "$ref": "#/components/schemas/AccountProducts"
          }
        }
      },
      "PortOutRequest": {
        "type": "object",
        "properties": {
          "PortOutRequest": {
            "$ref": "#/components/schemas/ManualPortOutRequest"
          }
        }
      },
      "ManualPortOutRequest": {
        "type": "object",
        "properties": {
          "Pin": {
            "description": "The personal identifier number the subscriber has associated with his or her account with the carrier the number is being ported away from.",
            "type": "string"
          },
          "NewNetworkSPID": {
            "description": "The Service Provider ID of the carrier that the number is being ported to.",
            "type": "string"
          },
          "TelephoneNumberToPort": {
            "type": "string"
          },
          "FocDate": {
            "type": "string"
          },
          "PortOutAction": {
            "type": "string",
            "enum": [
              "NEW",
              "SUPP",
              "MODIFY",
              "CANCEL"
            ]
          },
          "BulkPortOut": {
            "$ref": "#/components/schemas/BulkPortout"
          }
        }
      },
      "BulkPortout": {
        "type": "object",
        "properties": {
          "PON": {
            "description": "This Bandwidth internal identifier associates the port-out order with either an internal port-in or an LSR order, whichever caused the port-out order to be created.",
            "type": "string"
          },
          "Pin": {
            "description": "The personal identifier number the subscriber has associated with his or her account with the carrier the number is being ported away from.",
            "type": "string"
          },
          "NewNetworkSPID": {
            "description": "The Service Provider ID of the carrier that the number is being ported to.",
            "type": "string"
          },
          "FocDate": {
            "type": "string",
            "format": "date-time"
          },
          "Supplemental": {
            "type": "string",
            "enum": [
              "NONE",
              "CANCEL",
              "UPDATE",
              "OTHER"
            ]
          },
          "Immediately": {
            "type": "boolean"
          },
          "TelephoneNumberList": {
            "type": "array",
            "description": "The list of telephone numbers to port-out.",
            "items": {
              "type": "string",
              "xml": {
                "name": "TelephoneNumberToPort"
              }
            }
          },
          "CallbackUrl": {
            "type": "string"
          },
          "InternalPort": {
            "type": "boolean"
          },
          "AccountNumber": {
            "type": "string"
          },
          "ZipCode": {
            "type": "string"
          },
          "SubscriberName": {
            "type": "string"
          },
          "OverrideValidation": {
            "type": "boolean"
          },
          "SkipPortPsCheck": {
            "type": "boolean"
          }
        }
      },
      "AddressesResponseWrapper": {
        "type": "object",
        "properties": {
          "AddressesResponse": {
            "$ref": "#/components/schemas/AddressesResponse"
          }
        }
      },
      "AddressesResponse": {
        "type": "object",
        "properties": {
          "Addresses": {
            "$ref": "#/components/schemas/Addresses"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "TotalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Addresses": {
        "type": "object",
        "properties": {
          "Address": {
            "items": {
              "$ref": "#/components/schemas/E911Address"
            }
          }
        }
      },
      "AddressesResponseNotFound": {
        "type": "object",
        "properties": {
          "AddressesResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "ResponseStatus": {
        "type": "object",
        "properties": {
          "ResponseStatus": {
            "type": "object",
            "properties": {
              "ErrorCode": {
                "description": "Numeric designation of corresponding error",
                "type": "integer"
              },
              "Description": {
                "description": "Detailed explanation about error ",
                "type": "string"
              }
            }
          }
        }
      },
      "Callback": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string"
          }
        }
      },
      "EmergencyNotificationRecipient": {
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string"
          },
          "CreatedDate": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "EmailAddress": {
            "type": "string"
          },
          "Sms": {
            "type": "object",
            "properties": {
              "TelephoneNumber": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          },
          "Tts": {
            "type": "object",
            "properties": {
              "TelephoneNumber": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          },
          "Callback": {
            "$ref": "#/components/schemas/Callback"
          },
          "GroupCount": {
            "type": "string"
          }
        }
      },
      "EmergencyNotificationRecipients": {
        "type": "object",
        "properties": {
          "EmergencyNotificationRecipient": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencyNotificationRecipient"
            }
          }
        }
      },
      "Identifier": {
        "type": "string"
      },
      "AlternateEndUserIdentifiersResponseWrapper": {
        "type": "object",
        "properties": {
          "AlternateEndUserIdentifiersResponse": {
            "$ref": "#/components/schemas/AlternateEndUserIdentifiersResponse"
          }
        }
      },
      "AlternateEndUserIdentifiersResponse": {
        "type": "object",
        "properties": {
          "AlternateEndUserIdentifiers": {
            "$ref": "#/components/schemas/AlternateEndUserIdentifiers"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "TotalCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "name": "TotalCount"
            }
          }
        }
      },
      "E911": {
        "type": "object",
        "properties": {
          "CallerName": {
            "type": "string"
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "EmergencyNotificationGroup": {
            "$ref": "#/components/schemas/EmergencyNotificationGroup"
          }
        }
      },
      "AlternateEndUserIdentifiers": {
        "type": "object",
        "properties": {
          "AlternateEndUserIdentifier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternateEndUserIdentifier"
            }
          }
        }
      },
      "AlternateEndUserIdentifier": {
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string"
          },
          "CallbackNumber": {
            "type": "string"
          },
          "PIDFLOEnabled": {
            "type": "boolean"
          },
          "CallerName": {
            "type": "string"
          },
          "PreferredLanguage": {
            "type": "string",
            "enum": [
              "en",
              "fr",
              "Incorrect value"
            ]
          },
          "LocationId": {
            "type": "string"
          },
          "EmergencyNotificationGroup": {
            "$ref": "#/components/schemas/EmergencyNotificationGroup"
          },
          "E911": {
            "$ref": "#/components/schemas/E911"
          }
        }
      },
      "AlternateEndUserIdentifiersResponseNotFound": {
        "type": "object",
        "properties": {
          "AlternateEndUserIdentifiersResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "AlternateEndUserIdentifierWrapper": {
        "type": "object",
        "properties": {
          "AlternateEndUserIdentifiersResponse": {
            "$ref": "#/components/schemas/AlternateEndUserIdentifierResponse"
          }
        }
      },
      "AlternateEndUserIdentifierResponse": {
        "type": "object",
        "properties": {
          "AlternateEndUserIdentifier": {
            "$ref": "#/components/schemas/AlternateEndUserIdentifier"
          }
        }
      },
      "AlternateEndUserIdentifierResponseNotFound": {
        "type": "object",
        "properties": {
          "AlternateEndUserIdentifierResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "ApplicationProvisioningResponseWrapper": {
        "type": "object",
        "properties": {
          "ApplicationProvisioningResponse": {
            "$ref": "#/components/schemas/ApplicationProvisioningResponse"
          }
        }
      },
      "ApplicationWrapper": {
        "title": "Application",
        "type": "object",
        "properties": {
          "Application": {
            "$ref": "#/components/schemas/Application"
          }
        }
      },
      "ApplicationProvisioningSingleResponseWrapper": {
        "type": "object",
        "properties": {
          "ApplicationProvisioningResponse": {
            "$ref": "#/components/schemas/ApplicationWrapper"
          }
        }
      },
      "ApplicationProvisioningResponse": {
        "type": "object",
        "properties": {
          "ApplicationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          }
        }
      },
      "RequestedCallbackTypes": {
        "type": "string",
        "enum": [
          "MESSAGE_FAILED",
          "MESSAGE_DELIVERED",
          "MESSAGE_SENDING"
        ]
      },
      "CallbackCreds": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "ApplicationId": {
            "type": "string"
          },
          "ServiceType": {
            "type": "string"
          },
          "AppName": {
            "type": "string"
          },
          "CallbackUrl": {
            "type": "string",
            "deprecated": true
          },
          "MsgCallbackUrl": {
            "type": "string",
            "deprecated": true
          },
          "InboundCallbackUrl": {
            "type": "string"
          },
          "OutboundCallbackUrl": {
            "type": "string"
          },
          "RequestedCallbackTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestedCallbackTypes"
            }
          },
          "CallInitiatedCallbackUrl": {
            "type": "string"
          },
          "CallInitiatedMethod": {
            "type": "string"
          },
          "CallStatusCallbackUrl": {
            "type": "string"
          },
          "CallStatusMethod": {
            "type": "string"
          },
          "CallbackCreds": {
            "$ref": "#/components/schemas/CallbackCreds"
          },
          "InboundCallbackCreds": {
            "$ref": "#/components/schemas/CallbackCreds"
          },
          "OutboundCallbackCreds": {
            "$ref": "#/components/schemas/CallbackCreds"
          },
          "CallInitiatedFallbackUrl": {
            "type": "string"
          },
          "CallInitiatedFallbackMethod": {
            "type": "string"
          },
          "CallInitiatedFallbackCreds": {
            "$ref": "#/components/schemas/CallbackCreds"
          },
          "CallbackTimeout": {
            "type": "string"
          }
        }
      },
      "ApplicationPayload": {
        "type": "object",
        "properties": {
          "Application": {
            "$ref": "#/components/schemas/Application"
          }
        }
      },
      "AssociatedSipPeersResponseWrapper": {
        "type": "object",
        "properties": {
          "AssociatedSipPeersResponse": {
            "$ref": "#/components/schemas/AssociatedSipPeersResponse"
          }
        }
      },
      "AssociatedSipPeersResponse": {
        "type": "object",
        "properties": {
          "AssociatedSipPeers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedSipPeer"
            }
          }
        }
      },
      "AssociatedSipPeer": {
        "type": "object",
        "properties": {
          "SiteId": {
            "type": "integer",
            "format": "int32"
          },
          "SiteName": {
            "type": "string"
          },
          "PeerId": {
            "type": "integer",
            "format": "int32"
          },
          "PeerName": {
            "type": "string"
          }
        }
      },
      "AssociatedSipPeers": {
        "type": "object",
        "properties": {
          "associatedSipPeers": {
            "type": "array",
            "xml": {
              "name": "AssociatedSipPeer"
            },
            "items": {
              "$ref": "#/components/schemas/AssociatedSipPeer"
            }
          }
        },
        "xml": {
          "name": "AssociatedSipPeers"
        }
      },
      "AssociatedSipPeersErrorResponse": {
        "type": "object",
        "properties": {
          "AssociatedSipPeersResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "SearchResultForAvailableNpaNxxWrapper": {
        "type": "object",
        "properties": {
          "SearchResultForAvailableNpaNxx": {
            "$ref": "#/components/schemas/SearchResultForAvailableNpaNxx"
          }
        }
      },
      "AvailableNpaNxx": {
        "type": "object",
        "properties": {
          "Npa": {
            "type": "string"
          },
          "Nxx": {
            "type": "string"
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "City": {
            "type": "string"
          },
          "State": {
            "type": "string"
          }
        }
      },
      "SearchResultForAvailableNpaNxx": {
        "type": "object",
        "properties": {
          "AvailableNpaNxxList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableNpaNxx"
            }
          }
        }
      },
      "SearchResultForAvailableNpaNxxErrorWrapper": {
        "type": "object",
        "properties": {
          "SearchResultForAvailableNpaNxx": {
            "$ref": "#/components/schemas/SearchResultForAvailableNpaNxxError"
          }
        }
      },
      "SearchResultForAvailableNpaNxxError": {
        "title": "SearchResultForAvailableNpaNxx",
        "type": "object",
        "properties": {
          "Error": {
            "type": "object",
            "properties": {
              "Code": {
                "type": "integer"
              },
              "Description": {
                "type": "string"
              }
            }
          }
        }
      },
      "SearchResultErrorWrapper": {
        "type": "object",
        "properties": {
          "SearchResult": {
            "$ref": "#/components/schemas/SearchResultError"
          }
        }
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "SearchResult": {
            "type": "object",
            "properties": {
              "ResultCount": {
                "type": "integer",
                "format": "int32"
              },
              "TelephoneNumberList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          }
        }
      },
      "SearchResultError": {
        "title": "SearchResult",
        "type": "object",
        "properties": {
          "Error": {
            "type": "object",
            "properties": {
              "Code": {
                "type": "integer"
              },
              "Description": {
                "type": "string"
              }
            }
          }
        }
      },
      "RealmsResponse": {
        "type": "object",
        "properties": {
          "Realms": {
            "$ref": "#/components/schemas/Realms"
          }
        }
      },
      "RealmResponse": {
        "type": "object",
        "properties": {
          "Realm": {
            "$ref": "#/components/schemas/Realm"
          }
        }
      },
      "Realms": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Realm"
        }
      },
      "Realm": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "The ID number associated with the Realm"
          },
          "Realm": {
            "type": "string",
            "description": "Realm name"
          },
          "Default": {
            "type": "boolean",
            "description": "Default Realm flag"
          },
          "Description": {
            "type": "string",
            "description": "Realm Description"
          },
          "SipCredentialCount": {
            "type": "integer",
            "description": "The ID number associated with the Realm"
          },
          "Status": {
            "type": "string",
            "description": "Indicates the status of the Realm. Only 'active' Realms can be used to associate with Sip Credentials",
            "enum": [
              "ACTIVE",
              "CREATE_PENDING",
              "CREATE_FAILED",
              "DELETE_PENDING",
              "DELETE_FAILED"
            ]
          }
        }
      },
      "RealmCreateRequest": {
        "title": "Realm",
        "type": "object",
        "required": [
          "Realm",
          "Default"
        ],
        "properties": {
          "Realm": {
            "type": "string",
            "description": "Realm name",
            "maxLength": 64
          },
          "Default": {
            "type": "boolean",
            "description": "Default Realm flag"
          },
          "Description": {
            "type": "string",
            "description": "Realm Description",
            "maxLength": 255
          }
        }
      },
      "RealmUpdateRequest": {
        "type": "object",
        "properties": {
          "Default": {
            "type": "boolean",
            "description": "Default Realm flag. A Realm can only be updated to become the new default, ie: Default cannot be set to 'false'"
          },
          "Description": {
            "type": "string",
            "description": "Realm Description",
            "maxLength": 255
          }
        }
      },
      "AccountSipCredentials": {
        "type": "object",
        "properties": {
          "SipCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SipCredential"
            }
          }
        }
      },
      "SipCredential": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "The ID number associated with the Credential"
          },
          "RealmId": {
            "type": "integer",
            "description": "The ID number corresponding to the associated Realm"
          },
          "Realm": {
            "type": "string",
            "description": "A string representing the associated Realm"
          },
          "UserName": {
            "type": "string",
            "description": "Subscriber name or aggregated name and domain value(ex: Mike@bw.com)"
          },
          "Domain": {
            "type": "string",
            "description": "Subscriber domain. Will be appended to the UserName with an '@'"
          },
          "Hash1": {
            "type": "string",
            "description": "Hash value #1 in MD5 representation"
          },
          "Hash1b": {
            "type": "string",
            "description": "Hash value #2 in MD5 representation"
          },
          "HttpVoiceV2AppId": {
            "type": "string",
            "description": "Application id associated with subscriber"
          }
        }
      },
      "AccountSipCredentialsRequest": {
        "type": "object",
        "properties": {
          "SipCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SipCredentialCreateRequest"
            }
          }
        }
      },
      "SipCredentialCreateRequest": {
        "title": "SipCredential",
        "type": "object",
        "required": [
          "UserName",
          "Hash1"
        ],
        "properties": {
          "UserName": {
            "type": "string",
            "description": "Subscriber name or aggregated name and domain value(ex: Mike@bw.com)",
            "maxLength": 32
          },
          "Domain": {
            "type": "string",
            "description": "Subscriber domain. Will be appended to the UserName with an '@'",
            "maxLength": 32
          },
          "Hash1": {
            "type": "string",
            "description": "Hash value #1 in MD5 representation",
            "maxLength": 64
          },
          "Hash1b": {
            "type": "string",
            "description": "Hash value #2 in MD5 representation",
            "maxLength": 64
          },
          "Realm": {
            "type": "string",
            "description": "Subscriber realm",
            "maxLength": 64
          },
          "HttpVoiceV2AppId": {
            "type": "string",
            "description": "Application id associated with subscriber",
            "maxLength": 64
          }
        }
      },
      "SipCredentialUpdateRequest": {
        "title": "SipCredential",
        "type": "object",
        "required": [
          "Hash1"
        ],
        "properties": {
          "Hash1": {
            "type": "string",
            "description": "Hash value #1 in MD5 representation",
            "maxLength": 64
          },
          "Hash1b": {
            "type": "string",
            "description": "Hash value #2 in MD5 representation",
            "maxLength": 64
          },
          "RealmId": {
            "type": "string",
            "description": "Subscriber realm ID"
          },
          "Realm": {
            "type": "string",
            "description": "Subscriber realm",
            "maxLength": 64
          },
          "HttpVoiceV2AppId": {
            "type": "string",
            "description": "Application id associated with subscriber",
            "maxLength": 64
          }
        }
      },
      "SipCredentialsResponse": {
        "type": "object",
        "properties": {
          "ValidSipCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SipCredential"
            }
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SipCredentialError"
            }
          }
        }
      },
      "SipCredentialError": {
        "title": "Error",
        "type": "object",
        "properties": {
          "ErrorCode": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "SipCredential": {
            "$ref": "#/components/schemas/SipCredential"
          }
        }
      },
      "SipCredentialResponse": {
        "type": "object",
        "properties": {
          "SipCredential": {
            "$ref": "#/components/schemas/SipCredential"
          },
          "Error": {
            "$ref": "#/components/schemas/SipCredentialError"
          }
        }
      },
      "Bdr": {
        "type": "object",
        "properties": {
          "Bdr": {
            "type": "object",
            "properties": {
              "StartDate": {
                "type": "string"
              },
              "EndDate": {
                "type": "string"
              }
            }
          }
        }
      },
      "BillingReport": {
        "type": "object",
        "properties": {
          "BillingReportId": {
            "type": "string"
          },
          "BillingReportKind": {
            "$ref": "#/components/schemas/BillingReportKind"
          },
          "UserId": {
            "type": "string"
          },
          "ReportStatus": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "CreatedDate": {
            "type": "string"
          },
          "DateRange": {
            "$ref": "#/components/schemas/DateRange"
          }
        }
      },
      "DateRange": {
        "type": "object",
        "properties": {
          "StartDate": {
            "type": "string"
          },
          "EndDate": {
            "type": "string"
          }
        }
      },
      "TelephoneNumbersAssignmentOrder": {
        "type": "object",
        "properties": {
          "TelephoneNumbersAssignmentOrder": {
            "$ref": "#/components/schemas/TelephoneNumbersAssignmentOrderPayload"
          }
        }
      },
      "TelephoneNumbersAssignmentOrderPayload": {
        "type": "object",
        "title": "TelephoneNumbersAssignmentOrder",
        "properties": {
          "CustomerOrderId": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "Action": {
            "type": "string",
            "enum": [
              "ASSIGN",
              "UNASSIGN"
            ]
          }
        }
      },
      "ReportInstance": {
        "type": "object",
        "properties": {
          "Instance": {
            "$ref": "#/components/schemas/ReportInstancePayload"
          }
        }
      },
      "ReportInstancePayload": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "OutputFormat": {
            "type": "string"
          },
          "ExpiresAt": {
            "type": "string"
          },
          "Parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportParameterValue"
            }
          }
        }
      },
      "ReportParameterValue": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReportInstanceResponse": {
        "type": "object",
        "properties": {
          "ReportInstanceResponse": {
            "type": "object",
            "properties": {
              "Instance": {
                "$ref": "#/components/schemas/ReportInstanceResponsePayload"
              }
            }
          }
        }
      },
      "ReportInstanceResponsePayload": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "ReportId": {
            "type": "integer"
          },
          "ReportName": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "OutputFormat": {
            "type": "string"
          },
          "ExpiresAt": {
            "type": "string"
          },
          "Parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportParameterValue"
            }
          },
          "Status": {
            "type": "string"
          },
          "RequestedByUserName": {
            "type": "string"
          },
          "RequestedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BdrCreationResponse": {
        "type": "object",
        "properties": {
          "BdrCreationResponse": {
            "type": "object",
            "properties": {
              "Info": {
                "type": "string"
              }
            }
          }
        }
      },
      "BdrCreationErrorResponse": {
        "type": "object",
        "properties": {
          "BdrCreationResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "BdrRetrievalResponse": {
        "type": "object",
        "properties": {
          "BdrRetrievalResponse": {
            "type": "object",
            "properties": {
              "Info": {
                "type": "string"
              }
            }
          }
        }
      },
      "BdrRetrievalErrorResponse": {
        "type": "object",
        "properties": {
          "BdrRetrievalResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "BillingReportsRetrievalResponse": {
        "type": "object",
        "properties": {
          "BillingReportsRetrievalResponse": {
            "type": "object",
            "properties": {
              "BillingReportList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillingReport"
                }
              }
            }
          }
        }
      },
      "BillingReportCreationResponse": {
        "type": "object",
        "properties": {
          "BillingReportCreationResponse": {
            "properties": {
              "ReportStatus": {
                "type": "string"
              },
              "Description": {
                "type": "string"
              }
            }
          }
        }
      },
      "BillingReportCreationErrorResponse": {
        "type": "object",
        "properties": {
          "BillingReportCreationResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "BillingReportKind": {
        "type": "string",
        "enum": [
          "BDR",
          "MDR",
          "INVOICE",
          "STMTBDR",
          "DIDSNAP",
          "DIDSNAP_MSG",
          "RECORDINGBDR",
          "RECORDINGSTMTBDR",
          "TRANSCRIPTIONBDR",
          "TRANSCRIPTIONSTMTBDR",
          "CNAMBDR",
          "CNAMSTMTBDR",
          "CONFBDR",
          "CONFSTMTBDR",
          "TFPEERINGSTMTBDR",
          "TNLOOKUPBDR",
          "TNLOOKUPSTMTBDR",
          "MSG_CAMPAIGN_REGISTRY_BDR",
          "MSG_CAMPAIGN_CARRIER_ACTIVATION_BDR",
          "AMDBDR",
          "AMDSTMTBDR",
          "SIPURIBDR",
          "SIPURISTMTBDR"
        ]
      },
      "BillingReportArchiveRetrievalResponse": {
        "type": "object",
        "properties": {
          "BillingReportArchiveRetrievalResponse": {
            "type": "object",
            "properties": {
              "ReportStatus": {
                "type": "string"
              },
              "Description": {
                "type": "string"
              }
            }
          }
        }
      },
      "BillingReportArchiveRetrievalErrorResponse": {
        "type": "object",
        "properties": {
          "BillingReportArchiveRetrievalResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "BillingReportRetrievalResponse": {
        "type": "object",
        "properties": {
          "BillingReportRetrievalResponse": {
            "type": "object",
            "properties": {
              "ReportStatus": {
                "type": "string"
              },
              "Description": {
                "type": "string"
              }
            }
          }
        }
      },
      "BillingReportRetrievalErrorResponse": {
        "type": "object",
        "properties": {
          "BillingReportRetrievalResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "MnoStatus": {
        "type": "object",
        "properties": {
          "MnoName": {
            "type": "string"
          },
          "MnoId": {
            "type": "string"
          },
          "Status": {
            "type": "string",
            "enum": [
              "REVIEW",
              "REJECTED",
              "APPROVED",
              "SUSPENDED"
            ]
          }
        }
      },
      "ImportedCampaignRequest": {
        "type": "object",
        "properties": {
          "ImportedCampaign": {
            "type": "object",
            "properties": {
              "CampaignId": {
                "description": "Campaign ID generated by TCR",
                "type": "string",
                "maximum": 12,
                "required": true
              }
            }
          }
        }
      },
      "ImportedCampaign": {
        "type": "object",
        "properties": {
          "ImportedCampaign": {
            "type": "object",
            "properties": {
              "CampaignId": {
                "type": "string"
              },
              "Description": {
                "type": "string"
              },
              "CreateDate": {
                "type": "string"
              },
              "Status": {
                "type": "string"
              },
              "MnoStatusList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MnoStatus"
                }
              }
            }
          }
        }
      },
      "LongCodeImportCampaignResponse": {
        "type": "object",
        "properties": {
          "LongCodeImportCampaignResponse": {
            "$ref": "#/components/schemas/ImportedCampaign"
          }
        }
      },
      "LongCodeImportCampaignErrorResponse": {
        "type": "object",
        "properties": {
          "LongCodeImportCampaignResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "LongCodeImportCampaignsResponse": {
        "type": "object",
        "properties": {
          "LongCodeImportCampaignsResponse": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "ImportedCampaigns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ImportedCampaign"
                }
              }
            }
          }
        }
      },
      "CsrErrorResponse": {
        "title": "CsrOrderResponse",
        "type": "object",
        "properties": {
          "CsrOrderResponse": {
            "type": "object",
            "properties": {
              "Errors": {
                "type": "array",
                "items": {
                  "title": "Error",
                  "properties": {
                    "Code": {
                      "type": "integer"
                    },
                    "Description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CsrGetResponse": {
        "type": "object",
        "allOf": [
          {
            "properties": {
              "CustomerOrderId": {
                "description": "Internal customer order id for tracking the order. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.",
                "type": "string"
              },
              "LastModifiedBy": {
                "description": "This is the user-name of the user that last modified the CSR Order.",
                "type": "string"
              },
              "OrderCreateDate": {
                "description": "The date and time when the order was created.",
                "type": "string"
              },
              "OrderId": {
                "description": "The identifier that uniquely identifies a CSR order.",
                "type": "string"
              },
              "LastModifiedDate": {
                "description": "This is the date when CSR Order was last modified.",
                "type": "string"
              },
              "WorkingOrBillingTelephoneNumber": {
                "description": "Working or Billing telephone number in 10-digits format NPANXXXXXX.",
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Csr"
          }
        ]
      },
      "Csr": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string",
            "description": "Internal customer order id for tracking the order.",
            "format": "Alphanumeric values, dashes and spaces",
            "maxLength": 40
          },
          "WorkingOrBillingTelephoneNumber": {
            "type": "string",
            "maxLength": 10,
            "description": "Working or Billing telephone number in 10-digits format NPANXXXXXX."
          },
          "AccountNumber": {
            "type": "string",
            "description": "Identifies the main account number on your bill, assigned by the current service provider.",
            "format": "Alphanumeric",
            "maxLength": 20
          },
          "AccountTelephoneNumber": {
            "type": "string",
            "description": "Identifies the account telephone number assigned by the current service provider.",
            "format": "Alphanumeric",
            "maxLength": 10
          },
          "EndUserName": {
            "type": "string",
            "description": "Identifies the name of the end user associated with the telephone number being queried.",
            "format": "Alphanumeric",
            "maxLength": 100
          },
          "AuthorizingUserName": {
            "type": "string",
            "description": "Identifies the name of the end user who signed the authorization.",
            "format": "Alphanumeric",
            "maxLength": 100
          },
          "CustomerCode": {
            "type": "string",
            "description": "Identifies the customer code associated with the service provider.",
            "format": "Numeric",
            "maxLength": 3
          },
          "EndUserPIN": {
            "type": "string",
            "description": "Identifies the end user’s personal identification number (PIN).",
            "format": "Alphanumeric",
            "maxLength": 50
          },
          "EndUserPassword": {
            "type": "string",
            "description": "Identifies the end user’s password to access the CSR, if applicable.",
            "format": "Alphanumeric",
            "maxLength": 100
          },
          "AddressLine1": {
            "type": "string",
            "description": "Identifies the address line 1 portion of the service address.",
            "format": "Alphanumeric",
            "maxLength": 200
          },
          "City": {
            "type": "string",
            "description": "Identifies the city of the end user where the telephone number is being serviced.",
            "format": "Alphanumeric",
            "maxLength": 100
          },
          "State": {
            "type": "string",
            "description": "Identifies the abbreviation for the state or province of the end user where the telephone number is being serviced. Must be alphabetic characters in the format XX which is the state or province abbreviation.",
            "format": "Alphabetic",
            "maxLength": 2
          },
          "ZIPCode": {
            "type": "string",
            "description": "Identifies the ZIP code, ZIP Code + extension, or postal code or the end user where the telephone number is being serviced.",
            "format": "Alphanumeric (including the dash if using ZIP Code with extension)",
            "maxLength": 10
          },
          "TypeOfService": {
            "type": "string",
            "description": "The type of service identifying the end user account.",
            "format": "Alphabetic",
            "maxLength": 50
          },
          "Status": {
            "description": "Displays the CSR orders with a given order status.",
            "type": "string"
          }
        },
        "required": [
          "WorkingOrBillingTelephoneNumber"
        ]
      },
      "LongCodeImportCampaignsErrorResponse": {
        "type": "object",
        "properties": {
          "LongCodeImportCampaignsResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "ExternalTnsOrderResponse": {
        "type": "object",
        "properties": {
          "ExternalTnsOrderResponse": {
            "type": "object",
            "properties": {
              "ExternalTnsOrder": {
                "$ref": "#/components/schemas/ExternalTnsOrder"
              }
            }
          }
        }
      },
      "ExternalTnsOrderErrorResponse": {
        "type": "object",
        "properties": {
          "ExternalTnsOrderResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "ExternalTnsOrder": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string"
          },
          "OrderCreateDate": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "CreatedByUser": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "SiteId": {
            "type": "string"
          },
          "SipPeerId": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "Action": {
            "type": "string",
            "enum": [
              "IMPORT",
              "REMOVE"
            ]
          },
          "LoaType": {
            "type": "string",
            "enum": [
              "CARRIER",
              "SUBSCRIBER"
            ]
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "RECEIVED",
              "PROCESSING",
              "COMPLETE",
              "PARTIAL",
              "FAILED"
            ]
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          }
        }
      },
      "ExternalTnsOrders": {
        "type": "object",
        "properties": {
          "ExternalTnsOrders": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "ExternalTnsOrder": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalTnsOrder"
                }
              }
            }
          }
        }
      },
      "ExternalTnsOrdersError": {
        "type": "object",
        "properties": {
          "ExternalTnsOrders": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "GeocodeRequestResponse": {
        "type": "object",
        "properties": {
          "GeocodeRequestResponse": {
            "type": "object",
            "properties": {
              "GeocodeAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "RequestAddress": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        }
      },
      "GeocodeRequestErrorResponse": {
        "type": "object",
        "properties": {
          "GeocodeRequestResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "GeocodeRequestConflictResponse": {
        "type": "object",
        "properties": {
          "ErrorMessage": {
            "type": "string"
          },
          "GeocodeRequestResponse": {
            "type": "object",
            "properties": {
              "GeocodeAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "RequestAddress": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        }
      },
      "SiteHostsResponse": {
        "type": "object",
        "properties": {
          "SiteHostsResponse": {
            "$ref": "#/components/schemas/SiteHosts"
          }
        }
      },
      "SiteHosts": {
        "type": "object",
        "properties": {
          "SiteHosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteHost"
            }
          }
        }
      },
      "SiteHost": {
        "type": "object",
        "properties": {
          "SiteId": {
            "type": "integer"
          },
          "SipPeerHosts": {
            "$ref": "#/components/schemas/SipPeerHosts"
          }
        }
      },
      "SipPeerHosts": {
        "type": "object",
        "properties": {
          "SipPeerHosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SipPeerHost"
            }
          }
        },
        "xml": {
          "name": "SipPeerHosts"
        }
      },
      "SipPeerHost": {
        "type": "object",
        "properties": {
          "SipPeerId": {
            "type": "integer"
          },
          "SmsHosts": {
            "$ref": "#/components/schemas/Hosts"
          },
          "VoiceHosts": {
            "$ref": "#/components/schemas/Hosts"
          },
          "TerminationHosts": {
            "$ref": "#/components/schemas/Hosts"
          }
        }
      },
      "Hosts": {
        "type": "object",
        "properties": {
          "Hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Host"
            }
          }
        }
      },
      "Host": {
        "type": "object",
        "properties": {
          "HostName": {
            "type": "string"
          },
          "Port": {
            "type": "string"
          }
        }
      },
      "ImportTnCheckerResponse": {
        "type": "object",
        "properties": {
          "ImportTnCheckerResponse": {
            "type": "object",
            "properties": {
              "ImportTnCheckerPayload": {
                "type": "object",
                "properties": {
                  "TelephoneNumbers": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TelephoneNumber"
                    }
                  },
                  "ImportTnErrors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ImportTnError"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ImportTnError": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          }
        }
      },
      "ImportTnCheckerErrorResponse": {
        "type": "object",
        "properties": {
          "ImportTnCheckerResponse": {
            "type": "object",
            "properties": {
              "Errors": {
                "type": "array",
                "items": {
                  "title": "Error",
                  "properties": {
                    "Code": {
                      "type": "integer"
                    },
                    "Description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SubscriptionsErrorResponse": {
        "type": "object",
        "properties": {
          "SubscriptionsResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "SubscriptionsResponse": {
        "type": "object",
        "properties": {
          "SubscriptionsResponse": {
            "type": "object",
            "properties": {
              "Subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionResponsePayload"
                }
              }
            }
          }
        }
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "SubscriptionResponse": {
            "type": "object",
            "properties": {
              "Subscription": {
                "$ref": "#/components/schemas/SubscriptionResponsePayload"
              }
            }
          }
        }
      },
      "SubscriptionResponsePayload": {
        "type": "object",
        "properties": {
          "SubscriptionId": {
            "type": "string"
          },
          "OrderType": {
            "type": "string"
          },
          "OrderId": {
            "type": "string"
          },
          "EventType": {
            "type": "string"
          },
          "EmailSubscription": {
            "$ref": "#/components/schemas/EmailSubscription"
          },
          "CallbackSubscription": {
            "$ref": "#/components/schemas/CallbackSubscription"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "Subscription": {
            "type": "object",
            "properties": {
              "OrderType": {
                "type": "string"
              },
              "OrderId": {
                "type": "string"
              },
              "EventType": {
                "type": "string"
              },
              "EmailSubscription": {
                "$ref": "#/components/schemas/EmailSubscription"
              },
              "CallbackSubscription": {
                "$ref": "#/components/schemas/CallbackSubscription"
              }
            }
          }
        }
      },
      "EmailSubscription": {
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "DigestRequested": {
            "type": "string",
            "enum": [
              "NONE",
              "DAILY"
            ]
          }
        },
        "required": [
          "DigestRequested"
        ]
      },
      "CallbackSubscription": {
        "type": "object",
        "properties": {
          "URL": {
            "description": "The URL that notifications should get POSTed to, HTTPS is highly recommended.",
            "type": "string",
            "format": "uri"
          },
          "Expiry": {
            "description": "The number of seconds after which to expire this subscription. Can be omitted from the request payload and defaults to 86400 seconds (1 day). Typical values for your convenience are: 86400 - 1 day, 604800 - 1 week, 2592000 - 1 month, 31536000 - 1 year, 315360000 - 10 years.",
            "type": "integer",
            "format": "int64"
          },
          "Status": {
            "type": "string"
          },
          "CallbackCredentials": {
            "$ref": "#/components/schemas/CallbackCredentials"
          }
        }
      },
      "CallbackCredentials": {
        "description": "Recommended these credentials will be used to when authenticating with the notification receiving server",
        "type": "object",
        "properties": {
          "BasicAuthentication": {
            "$ref": "#/components/schemas/BasicAuthenticationCredentials"
          },
          "PublicKey": {
            "description": "A BASE64 encoded public key matching the notification receiving server.",
            "type": "string"
          }
        }
      },
      "BasicAuthenticationCredentials": {
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "maxLength": 100
          },
          "Password": {
            "description": "The password will be stored encrypted and never returned via the API.",
            "type": "string"
          }
        }
      },
      "EmailSubscriptionByOrderTypeRequest": {
        "title": "Email subscription by order type",
        "type": "object",
        "properties": {
          "OrderType": {
            "$ref": "#/components/schemas/SubscriptionOrderType"
          },
          "OrderId": {
            "$ref": "#/components/schemas/SubscriptionOrderId"
          },
          "EmailSubscription": {
            "$ref": "#/components/schemas/EmailSubscription"
          }
        },
        "required": [
          "OrderType"
        ]
      },
      "EmailSubscriptionByEventTypeRequest": {
        "title": "Email subscription by event type",
        "type": "object",
        "properties": {
          "EventType": {
            "type": "string",
            "enum": [
              "MESSAGING_LOST"
            ]
          },
          "EmailSubscription": {
            "$ref": "#/components/schemas/EmailSubscription"
          }
        },
        "required": [
          "EventType"
        ]
      },
      "CallBackSubscriptionByOrderTypeRequest": {
        "title": "Callback subscription by order type",
        "type": "object",
        "properties": {
          "OrderType": {
            "$ref": "#/components/schemas/SubscriptionOrderType"
          },
          "OrderId": {
            "$ref": "#/components/schemas/SubscriptionOrderId"
          },
          "CallbackSubscription": {
            "$ref": "#/components/schemas/CallbackSubscription"
          }
        }
      },
      "SubscriptionOrderId": {
        "description": "If provided order id notifications will only be sent for events regarding this specific order, if omitted notifications regarding events for all orders of the specified type will be sent.",
        "type": "string",
        "format": "uuid"
      },
      "SubscriptionOrderType": {
        "type": "string",
        "enum": [
          "portins",
          "orders",
          "portouts",
          "disconnects",
          "dldas",
          "lsrorders",
          "e911s",
          "tnoptions",
          "externalTns",
          "lidb",
          "bulkPortins",
          "importtnorders",
          "removeImportedTnOrders",
          "csrs",
          "emergencyNotificationGroup",
          "emergencyEndpointGroup",
          "tollfreePortingValidations"
        ]
      },
      "CallBackSubscriptionByEventTypeRequest": {
        "title": "Callback subscription by event type",
        "type": "object",
        "properties": {
          "EventType": {
            "type": "string",
            "enum": [
              "MESSAGING_LOST"
            ]
          },
          "CallbackSubscription": {
            "$ref": "#/components/schemas/CallbackSubscription"
          }
        },
        "required": [
          "EventType"
        ]
      },
      "ImportTnOrdersResponseList": {
        "type": "object",
        "properties": {
          "ImportTnOrders": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "ImportTnOrderSummary": {
                "$ref": "#/components/schemas/ImportTnOrderSummary"
              }
            }
          }
        }
      },
      "ImportTnOrderSummary": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string"
          },
          "CountsOfTNs": {
            "type": "integer"
          },
          "OrderType": {
            "type": "string",
            "enum": [
              "import_tn_orders"
            ]
          },
          "OrderDate": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "UserId": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "RECEIVED",
              "PROCESSING",
              "COMPLETE",
              "PARTIAL",
              "FAILED"
            ]
          }
        }
      },
      "ImportTnOrderResponse": {
        "type": "object",
        "properties": {
          "ImportTnOrderResponse": {
            "type": "object",
            "properties": {
              "ImportTnOrder": {
                "$ref": "#/components/schemas/ImportTnOrder"
              }
            }
          }
        }
      },
      "ImportTnOrderRequest": {
        "title": "ImportTnOrder",
        "properties": {
          "ImportTnOrder": {
            "type": "object",
            "required": [
              "TelephoneNumbers",
              "SiteId",
              "Subscriber",
              "LoaAuthorizingPerson"
            ],
            "properties": {
              "TelephoneNumbers": {
                "description": "List of telephone numbers to be moved",
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "TelephoneNumber": {
                      "description": "Ten digit phone number with no dots or dashes",
                      "type": "integer"
                    }
                  }
                }
              },
              "SiteId": {
                "description": "A site id to which telephone number will be moved",
                "type": "integer"
              },
              "CustomerOrderId": {
                "description": "Internal customer order id for tracking the order. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters",
                "type": "string"
              },
              "SipPeerId": {
                "description": "A sippeer id of provided site to which telephone number will be moved",
                "type": "integer"
              },
              "Subscriber": {
                "description": "Subscriber information.",
                "properties": {
                  "Name": {
                    "description": "Subscriber business / customer name.",
                    "maxLength": 45,
                    "type": "string"
                  },
                  "ServiceAddress": {
                    "description": "address",
                    "properties": {
                      "HouseNumber": {
                        "description": "Street address number.",
                        "type": "integer"
                      },
                      "StreetName": {
                        "description": "Street name.",
                        "type": "string"
                      },
                      "City": {
                        "description": "City.",
                        "type": "string"
                      },
                      "StateCode": {
                        "description": "Two letter state code.",
                        "type": "string"
                      },
                      "Zip": {
                        "description": "Zip code.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "LoaAuthorizingPerson": {
                "description": "First and last name of person who authorized LOA.",
                "type": "string"
              },
              "LoaType": {
                "description": "Identify the LoaType on TNs.",
                "type": "string",
                "enum": [
                  "SUBSCRIBER",
                  "CARRIER"
                ],
                "default": "SUBSCRIBER"
              }
            }
          }
        }
      },
      "ImportTnOrder": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string"
          },
          "OrderCreateDate": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "CreatedByUser": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "SiteId": {
            "type": "string"
          },
          "SipPeerId": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "LoaAuthorizingPerson": {
            "type": "string"
          },
          "LoaType": {
            "type": "string",
            "enum": [
              "CARRIER",
              "SUBSCRIBER"
            ]
          },
          "Subscriber": {
            "$ref": "#/components/schemas/ImportTnSubscriber"
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "RECEIVED",
              "PROCESSING",
              "COMPLETE",
              "PARTIAL",
              "FAILED"
            ]
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ImportTnSubscriber": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "ServiceAddress": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "ImportTnOrderError": {
        "type": "object",
        "properties": {
          "ImportTnOrderResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "FileListResponse": {
        "type": "object",
        "properties": {
          "FileListResponse": {
            "type": "object",
            "properties": {
              "fileCount": {
                "type": "integer"
              },
              "fileData": {
                "$ref": "#/components/schemas/FileData"
              },
              "resultCode": {
                "type": "integer"
              },
              "resultMessage": {
                "type": "string"
              }
            }
          }
        }
      },
      "FileData": {
        "type": "object",
        "properties": {
          "FileName": {
            "type": "string"
          },
          "FileMetaData": {
            "$ref": "#/components/schemas/FileMetaData"
          }
        }
      },
      "FileUploadResponse": {
        "type": "object",
        "properties": {
          "FileUploadResponse": {
            "type": "object",
            "properties": {
              "fileName": {
                "description": "The (optional) name that was associated with the file when it was uploaded.",
                "type": "integer"
              },
              "resultCode": {
                "description": "Result code of fetching the list of files from AWS.",
                "type": "integer"
              },
              "resultMessage": {
                "description": "Results of the attempt to fetch the list of files.",
                "type": "string"
              }
            }
          }
        }
      },
      "TnOptionOrderReportSummaryResponse": {
        "type": "object",
        "title": "TnOptionOrderReportResponse",
        "properties": {
          "TnOptionOrderReportResponse": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "Links": {
                "$ref": "#/components/schemas/PaginationLinks"
              },
              "TnOptionOrderSummary": {
                "type": "array",
                "title": "TnOptionOrderSummary",
                "items": {
                  "$ref": "#/components/schemas/OrderSummary"
                }
              }
            }
          }
        }
      },
      "TnOptionOrderReportDetailedResponse": {
        "type": "object",
        "title": "TnOptionOrderReportResponse",
        "properties": {
          "TnOptionOrderReportResponse": {
            "type": "object",
            "properties": {
              "TnOptionOrders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TnOptionOrderResponsePayload"
                }
              }
            }
          }
        }
      },
      "TnOptionOrderResponse": {
        "type": "object",
        "properties": {
          "TnOptionOrderResponse": {
            "type": "object",
            "properties": {
              "TnOptionOrder": {
                "$ref": "#/components/schemas/TnOptionOrderResponsePayload"
              }
            }
          }
        }
      },
      "TnOptionOrderErrorResponse": {
        "type": "object",
        "properties": {
          "TnOptionOrderResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "TnOptionOrderResponsePayload": {
        "type": "object",
        "title": "TnOptionOrder",
        "properties": {
          "OrderId": {
            "type": "string"
          },
          "AccountId": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "LastModifiedBy": {
            "type": "string"
          },
          "CreatedByUser": {
            "type": "string"
          },
          "CustomerOrderId": {
            "type": "string"
          },
          "SiteId": {
            "type": "integer",
            "format": "int32"
          },
          "PeerId": {
            "type": "integer",
            "format": "int32"
          },
          "OrderCreateDate": {
            "type": "string"
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "RECEIVED",
              "PROCESSING",
              "COMPLETE",
              "PARTIAL",
              "FAILED"
            ]
          },
          "TnOptionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TnOptionGroup"
            }
          },
          "ErrorList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TnOptionOrderError"
            }
          },
          "Warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TnOptionOrderWarningPayload"
            }
          }
        }
      },
      "TnOptionOrderRequest": {
        "type": "object",
        "title": "TnOptionOrder",
        "properties": {
          "TnOptionOrder": {
            "$ref": "#/components/schemas/TnOptionOrderPayload"
          }
        }
      },
      "TnOptionOrderPayload": {
        "type": "object",
        "title": "TnOptionOrder",
        "properties": {
          "Name": {
            "type": "string"
          },
          "CustomerOrderId": {
            "type": "string",
            "description": "Optional value for Id set by customer",
            "format": "Only alphanumeric values, dashes and spaces are allowed",
            "maxLength": 40
          },
          "TnOptionGroups": {
            "type": "array",
            "description": "Each group contains list of telephone numbers and set of TN options you want to assign to all TNs in the list",
            "items": {
              "$ref": "#/components/schemas/TnOptionGroup"
            }
          }
        }
      },
      "TnOptionGroup": {
        "type": "object",
        "properties": {
          "NumberFormat": {
            "type": "string",
            "enum": [
              "10digit",
              "11digit",
              "e164",
              "unchanged",
              "systemDefault"
            ]
          },
          "RPIDFormat": {
            "type": "string",
            "enum": [
              "10digit",
              "11digit",
              "e164",
              "unchanged",
              "systemDefault"
            ]
          },
          "RewriteUser": {
            "type": "string",
            "enum": [
              "{custom value}",
              "unchanged",
              "systemDefault"
            ]
          },
          "CallForward": {
            "type": "string",
            "enum": [
              "10digit",
              "unchanged",
              "systemDefault"
            ]
          },
          "CallingNameDisplay": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "unchanged",
              "systemDefault"
            ]
          },
          "PortOutPasscode": {
            "type": "string",
            "minLength": 4,
            "maxLength": 10,
            "format": "alphanumeric",
            "enum": [
              "{custom value}",
              "unchanged",
              "systemDefault"
            ]
          },
          "Protected": {
            "type": "string",
            "enum": [
              "true",
              "false",
              "unchanged",
              "systemDefault"
            ]
          },
          "Sms": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "unchanged"
            ]
          },
          "FinalDestinationURI": {
            "type": "string",
            "minLength": 10,
            "maxLength": 60,
            "format": "a 10 digit telephone number or a SIP URI ( without the sip: prefix ) in the form address-string@host IP:port, where the host IP is an IPv4 address in the standard numerical n.n.n.n. form, and the port is numeric, and optional\ncontaining [a-z,A-Z,0-9], with ':', '.' and '@' to delimit the components of the overall string, and less than 60 characters long",
            "enum": [
              "{custom value}",
              "unchanged",
              "systemDefault"
            ]
          },
          "A2pSettings": {
            "$ref": "#/components/schemas/A2pSettings"
          },
          "NNID": {
            "type": "string",
            "format": "integer",
            "enum": [
              "{custom value}",
              "unchanged",
              "systemDefault"
            ]
          },
          "ESPID": {
            "type": "string",
            "enum": [
              "{custom value}",
              "unchanged",
              "systemDefault"
            ]
          },
          "OriginationRoutePlan": {
            "$ref": "#/components/schemas/OriginationRoutePlan"
          },
          "PindropEnabled": {
            "type": "string",
            "enum": [
              "{custom value}",
              "true",
              "false"
            ]
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "10 digit tn",
              "xml": {
                "name": "TelephoneNumber"
              }
            }
          }
        }
      },
      "A2pSettings": {
        "type": "object",
        "properties": {
          "MessageClass": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "CampaignId": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64
          },
          "Action": {
            "type": "string",
            "enum": [
              "UNCHANGED",
              "SYSTEM_DEFAULT",
              "OFF",
              "DELETE",
              "AS_SPECIFIED",
              "INCORRECT_VALUE"
            ]
          }
        }
      },
      "OriginationRoutePlan": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Route": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OriginationRoutePayload"
            }
          },
          "Action": {
            "type": "string",
            "enum": [
              "UNCHANGED",
              "OFF",
              "AS_SPECIFIED",
              "INCORRECT_VALUE"
            ]
          }
        }
      },
      "OriginationRoutePayload": {
        "type": "object",
        "properties": {
          "Endpoint": {
            "type": "string",
            "format": "a NANP 10 digit telephone number, or\na SIP URI, or\na IPv4 address, or\na Fully Qualified Domain name(FQDN)"
          },
          "Priority": {
            "type": "integer",
            "format": "int32"
          },
          "Weight": {
            "type": "integer",
            "format": "int32"
          },
          "EndpointType": {
            "type": "string",
            "enum": [
              "TN",
              "IPv4",
              "SIP",
              "FQDN"
            ]
          }
        }
      },
      "TnOptionOrderError": {
        "type": "object",
        "title": "Error",
        "properties": {
          "TelephoneNumber": {
            "type": "string"
          },
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TnOptionOrderWarningPayload": {
        "type": "object",
        "title": "Warning",
        "properties": {
          "TelephoneNumber": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "TnOptionOrderReportErrorResponse": {
        "type": "object",
        "title": "TnOptionOrderReportResponse",
        "properties": {
          "TnOptionOrderReportResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "ReservationRequest": {
        "type": "object",
        "properties": {
          "Reservation": {
            "$ref": "#/components/schemas/ReservationRequestPayload"
          }
        }
      },
      "ReservationRequestPayload": {
        "type": "object",
        "title": "Reservation",
        "properties": {
          "ReservedTn": {
            "$ref": "#/components/schemas/TelephoneNumber"
          }
        }
      },
      "ReservationResponsePayload": {
        "type": "object",
        "properties": {
          "ReservationId": {
            "type": "string"
          },
          "AccountId": {
            "type": "integer",
            "format": "int32"
          },
          "ReservationExpires": {
            "type": "integer",
            "format": "int64"
          },
          "ReservedTn": {
            "$ref": "#/components/schemas/TelephoneNumber"
          }
        }
      },
      "ReservationResponse": {
        "type": "object",
        "properties": {
          "Reservation": {
            "$ref": "#/components/schemas/ReservationResponsePayload"
          }
        }
      },
      "ReservationErrorResponse": {
        "type": "object",
        "properties": {
          "ReservationResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "TollFreePortingValidationOrdersResponse": {
        "type": "object",
        "properties": {
          "TollFreePortingValidationResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TollFreePortingValidationResponse"
            }
          }
        }
      },
      "TollFreePortingValidationResponse": {
        "type": "object",
        "properties": {
          "TollFreePortingValidationResponse": {
            "type": "object",
            "properties": {
              "TollFreePortingValidation": {
                "$ref": "#/components/schemas/TollFreePortingValidationResponsePayload"
              }
            }
          }
        }
      },
      "TnOptionOrderReportValidationErrorResponse": {
        "type": "object",
        "title": "TollFreePortingValidationResponse",
        "properties": {
          "TollFreePortingValidationResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "TollFreePortingValidationRequest": {
        "type": "object",
        "properties": {
          "TollFreePortingValidation": {
            "$ref": "#/components/schemas/TollFreePortingValidationRequestPayload"
          }
        }
      },
      "TollFreePortingValidationRequestPayload": {
        "type": "object",
        "title": "TollFreePortingValidation",
        "properties": {
          "CustomerOrderId": {
            "type": "string",
            "description": "An optional string that may be associated with the order. It will be included in all responses and notifications related to the order, and may be used to correlate with an order in a customer system"
          },
          "TollFreeNumberList": {
            "type": "array",
            "description": "Is a list of toll free telephone numbers for which you want information about the status and RespOrg from SOMOS. The list may consist of up to 5,000 toll free telephone numbers in one order.  The more numbers in the order, the longer it will take the order to complete.",
            "maxItems": 5000,
            "items": {
              "$ref": "#/components/schemas/TollFreeNumber"
            }
          }
        }
      },
      "TollFreePortingValidationResponsePayload": {
        "type": "object",
        "title": "TollFreePortingValidation",
        "properties": {
          "CustomerOrderId": {
            "type": "string"
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "SUBMITTED",
              "PROCESSING",
              "FAILED",
              "COMPLETE",
              "CANCELLED"
            ]
          },
          "AccountId": {
            "type": "integer",
            "format": "int32"
          },
          "CreatedByUser": {
            "type": "string"
          },
          "OrderCreateDate": {
            "type": "string"
          },
          "OrderId": {
            "type": "string"
          },
          "TollFreeNumberList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TollFreeNumber"
            }
          },
          "ErrorList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LnpError"
            }
          },
          "Breakdown": {
            "$ref": "#/components/schemas/TollFreePortingValidationOrderBreakdown"
          }
        }
      },
      "TollFreePortingValidationOrderBreakdown": {
        "type": "object",
        "properties": {
          "PortableTollFreeNumberList": {
            "$ref": "#/components/schemas/PortableTollFreeNumberList"
          },
          "ManuallyPortableTollFreeNumberList": {
            "$ref": "#/components/schemas/ManuallyPortableTollFreeNumberList"
          },
          "NonPortableTollFreeNumberList": {
            "$ref": "#/components/schemas/NonPortableTollFreeNumberList"
          }
        }
      },
      "PortableTollFreeNumberList": {
        "type": "object",
        "properties": {
          "RespOrgList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TollFreeNumberRespOrg"
            }
          }
        }
      },
      "TollFreeNumberRespOrg": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "RespOrgException": {
            "type": "boolean"
          },
          "TollFreeNumberList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TollFreeNumber"
            }
          }
        }
      },
      "NonPortableTollFreeNumberList": {
        "type": "object",
        "properties": {
          "RespOrgList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TollFreeNumberRespOrg"
            }
          },
          "DeniedTollFreeNumberList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeniedTollFreeNumber"
            }
          },
          "SpareTollFreeNumberList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TollFreeNumber"
            }
          },
          "UnavailableTollFreeNumberList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TollFreeNumber"
            }
          }
        }
      },
      "DeniedTollFreeNumber": {
        "type": "object",
        "properties": {
          "TollFreeNumber": {
            "type": "string"
          },
          "SomosErrorCode": {
            "type": "string"
          },
          "SomosErrorDescription": {
            "type": "string"
          }
        }
      },
      "TollFreeNumber": {
        "type": "object",
        "properties": {
          "TollFreeNumber": {
            "type": "string"
          }
        }
      },
      "ManuallyPortableTollFreeNumberList": {
        "type": "object",
        "properties": {
          "DisconnectedTollFreeNumberList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TollFreeNumber"
            }
          },
          "TransitionalTollFreeNumberList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TollFreeNumber"
            }
          }
        }
      },
      "TnPortOutPasscodesErrorResponse": {
        "type": "object",
        "title": "TelephoneNumbersResponse",
        "properties": {
          "TelephoneNumbersResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "TnPortOutPasscodesResponse": {
        "type": "object",
        "properties": {
          "TelephoneNumbersResponse": {
            "type": "object",
            "properties": {
              "TelephoneNumberCount": {
                "type": "integer"
              },
              "TelephoneNumbers": {
                "$ref": "#/components/schemas/TnPortOutPasscodesPayload"
              },
              "Links": {
                "$ref": "#/components/schemas/PaginationLinks"
              },
              "ErrorList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumberGroupError"
                }
              }
            }
          }
        }
      },
      "TnPortOutPasscodesPayload": {
        "type": "object",
        "title": "TelephoneNumbers",
        "properties": {
          "TelephoneNumber": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TnPortOutPasscodePayload"
            }
          }
        }
      },
      "TnPortOutPasscodePayload": {
        "type": "object",
        "title": "TelephoneNumber",
        "properties": {
          "FullNumber": {
            "type": "string"
          },
          "Passcode": {
            "type": "string"
          }
        }
      },
      "TnListRequest": {
        "type": "object",
        "properties": {
          "TnList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tn"
            }
          }
        }
      },
      "TelephoneNumbersErrorResponse": {
        "type": "object",
        "title": "TelephoneNumbersResponse",
        "properties": {
          "TelephoneNumbersResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "TelephoneNumbersHistoryResponse": {
        "type": "object",
        "properties": {
          "TelephoneNumbersResponse": {
            "type": "object",
            "properties": {
              "TelephoneNumbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumberDetailHistoryPayload"
                }
              },
              "Links": {
                "$ref": "#/components/schemas/PaginationLinks"
              },
              "TelephoneNumberCount": {
                "type": "integer",
                "format": "int32"
              },
              "ErrorList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumberGroupError"
                }
              }
            }
          }
        }
      },
      "TelephoneNumberStatusShortWrapper": {
        "type": "object",
        "properties": {
          "TelephoneNumberResponse": {
            "type": "object",
            "properties": {
              "TelephoneNumber": {
                "type": "string"
              },
              "Status": {
                "type": "string"
              },
              "LastModifiedDate": {
                "type": "string"
              },
              "OrderCreateDate": {
                "type": "string"
              },
              "OrderId": {
                "type": "string"
              },
              "OrderType": {
                "type": "string"
              },
              "InServiceDate": {
                "type": "string"
              },
              "SiteId": {
                "type": "integer",
                "format": "int32"
              },
              "PeerGroup": {
                "type": "string"
              },
              "AccountId": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "TelephoneNumberStatusWrapper": {
        "type": "object",
        "properties": {
          "TelephoneNumberResponse": {
            "type": "object",
            "properties": {
              "TelephoneNumberStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DetailedTelephoneNumberStatus"
                }
              },
              "TelephoneNumber": {
                "type": "string"
              },
              "Status": {
                "type": "string"
              },
              "LastModifiedDate": {
                "type": "string"
              },
              "OrderCreateDate": {
                "type": "string"
              },
              "OrderId": {
                "type": "string"
              },
              "OrderType": {
                "type": "string"
              },
              "InServiceDate": {
                "type": "string"
              },
              "SiteId": {
                "type": "integer",
                "format": "int32"
              },
              "PeerGroup": {
                "type": "string"
              },
              "AccountId": {
                "type": "integer",
                "format": "int32"
              },
              "TelephoneNumberDetails": {
                "$ref": "#/components/schemas/OrderDetailsReport"
              }
            }
          }
        }
      },
      "DetailedTelephoneNumberStatus": {
        "type": "object",
        "properties": {
          "tn": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "UserId": {
            "type": "string"
          },
          "Spid": {
            "type": "string"
          },
          "AltSpid": {
            "type": "string"
          },
          "Lrn": {
            "type": "string"
          },
          "Ocn": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "OrderCreateDate": {
            "type": "string"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "AccountId": {
            "type": "integer",
            "format": "int32"
          },
          "VendorId": {
            "type": "string"
          },
          "LNPLosingCarrierName": {
            "type": "string"
          },
          "OrderId": {
            "type": "string"
          },
          "OrderType": {
            "type": "string"
          },
          "OrderStatus": {
            "type": "string"
          }
        }
      },
      "OrderDetailsReport": {
        "type": "object",
        "properties": {
          "City": {
            "type": "string"
          },
          "Lata": {
            "type": "string"
          },
          "RateCenter": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "AreaCode": {
            "type": "string"
          },
          "NPA-NXX": {
            "type": "string"
          },
          "NPA-NXX-X": {
            "type": "string"
          },
          "FullNumber": {
            "type": "string"
          },
          "Tier": {
            "type": "integer",
            "format": "int32"
          },
          "VendorId": {
            "type": "integer",
            "format": "int32"
          },
          "VendorName": {
            "type": "string"
          },
          "Count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TelephoneNumberDetailHistoryResponse": {
        "type": "object",
        "properties": {
          "TelephoneNumberResponse": {
            "type": "object",
            "properties": {
              "TelephoneNumberDetails": {
                "$ref": "#/components/schemas/TelephoneNumberDetailHistoryPayload"
              }
            }
          }
        }
      },
      "TelephoneNumberDetailHistoryPayload": {
        "type": "object",
        "title": "TelephoneNumber",
        "properties": {
          "City": {
            "type": "string"
          },
          "Lata": {
            "type": "integer",
            "format": "int32"
          },
          "State": {
            "type": "string"
          },
          "FullNumber": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "TnType": {
            "type": "string"
          },
          "Tier": {
            "type": "integer",
            "format": "int32"
          },
          "VendorId": {
            "type": "integer",
            "format": "int32"
          },
          "VendorName": {
            "type": "string"
          },
          "RateCenter": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "AccountId": {
            "type": "integer",
            "format": "int32"
          },
          "Site": {
            "$ref": "#/components/schemas/Site"
          },
          "SipPeer": {
            "$ref": "#/components/schemas/SipPeer"
          },
          "ServiceTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "ServiceType"
              }
            }
          },
          "LastModified": {
            "type": "string"
          },
          "InServiceDate": {
            "type": "string"
          },
          "TnAttributes": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "TnAttribute"
              }
            }
          },
          "MessagingSettings": {
            "$ref": "#/components/schemas/MessagingSettings"
          },
          "TnOptions": {
            "$ref": "#/components/schemas/TnOptions"
          },
          "OriginationRoutePlan": {
            "$ref": "#/components/schemas/OriginationRoutePlan"
          },
          "HostedTelephoneNumberDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostedTelephoneNumberDetailHistory"
            }
          }
        }
      },
      "TelephoneNumberRateCenterResponse": {
        "type": "object",
        "properties": {
          "TelephoneNumberResponse": {
            "type": "object",
            "properties": {
              "TelephoneNumberDetails": {
                "type": "object",
                "properties": {
                  "State": {
                    "type": "string"
                  },
                  "RateCenter": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "TelephoneNumberLataResponse": {
        "type": "object",
        "properties": {
          "TelephoneNumberResponse": {
            "type": "object",
            "properties": {
              "TelephoneNumberDetails": {
                "type": "object",
                "properties": {
                  "Lata": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "Site": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "CustomerProvidedId": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "UcTrunkingConfiguration": {
            "$ref": "#/components/schemas/SiteUcTrunkingConfigurationPayload"
          },
          "SipPeers": {
            "$ref": "#/components/schemas/SipPeers"
          },
          "TotalTnCount": {
            "type": "integer",
            "format": "int32"
          },
          "SipPeerCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SiteUcTrunkingConfigurationPayload": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string"
          },
          "UsageCategory": {
            "type": "string"
          }
        }
      },
      "SipPeers": {
        "type": "object",
        "properties": {
          "SipPeer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SipPeer"
            }
          }
        }
      },
      "SipPeer": {
        "type": "object",
        "properties": {
          "PeerId": {
            "type": "integer",
            "format": "int32"
          },
          "PeerName": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "IsDefaultPeer": {
            "type": "boolean"
          },
          "FinalDestinationUri": {
            "type": "string"
          },
          "VoiceHosts": {
            "$ref": "#/components/schemas/Hosts"
          },
          "VoiceHostGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Hosts"
            }
          },
          "TerminationHosts": {
            "$ref": "#/components/schemas/SipPeerTerminationHosts"
          },
          "Products": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "Product"
              },
              "enum": [
                "Origination",
                "Termination",
                "MESSAGING",
                "E911",
                "TollFree",
                "UcTrunking",
                "EdgeManagement",
                "CORE",
                "Iris",
                "NumberManagement",
                "Analytics",
                "CampaignManagement"
              ]
            }
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "PremiseTrunks": {
            "type": "string"
          },
          "CallingName": {
            "$ref": "#/components/schemas/SipPeerLineOptionDto"
          },
          "SuggestedAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "TnCount": {
            "type": "integer",
            "format": "int32"
          },
          "SsSendToCustomer": {
            "type": "string",
            "enum": [
              "NONE",
              "VERSTAT",
              "ENH_VERSTAT",
              "VERSTAT_AND_IDENTITY",
              "ENH_VERSTAT_AND_IDENTITY",
              "IDENTITY"
            ]
          }
        }
      },
      "SipPeerTerminationHosts": {
        "type": "object",
        "properties": {
          "TerminationHost": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SipPeerTerminationHost"
            }
          }
        }
      },
      "SipPeerTerminationHost": {
        "type": "object",
        "properties": {
          "HostName": {
            "type": "string"
          },
          "Port": {
            "type": "string"
          },
          "CustomerTrafficAllowed": {
            "type": "string"
          }
        }
      },
      "SipPeerLineOptionDto": {
        "type": "object",
        "properties": {
          "Display": {
            "type": "boolean"
          },
          "Enforced": {
            "type": "boolean"
          }
        }
      },
      "MessagingSettings": {
        "type": "object",
        "properties": {
          "SmsEnabled": {
            "type": "string"
          },
          "CampaignId": {
            "type": "string"
          },
          "MessageClass": {
            "type": "string"
          },
          "A2pState": {
            "type": "string",
            "enum": [
              "OFF",
              "SYSTEM_DEFAULT",
              "OVERRIDDEN"
            ]
          },
          "AssignedNnRoute": {
            "$ref": "#/components/schemas/TnDetailsNnRoute"
          }
        }
      },
      "TnDetailsNnRoute": {
        "type": "object",
        "title": "NNRoute",
        "properties": {
          "Nnid": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "TnOptions": {
        "type": "object",
        "properties": {
          "NumberFormat": {
            "type": "string"
          },
          "RPIDFormat": {
            "type": "string"
          },
          "RewriteUser": {
            "type": "string"
          },
          "CallForward": {
            "$ref": "#/components/schemas/TelephoneNumber"
          },
          "FinalDestinationURI": {
            "type": "string"
          },
          "CallingNameDisplay": {
            "type": "string"
          },
          "PortOutPasscode": {
            "type": "string"
          },
          "PindropEnabled": {
            "type": "string"
          }
        }
      },
      "HostedTelephoneNumberDetailHistory": {
        "type": "object",
        "properties": {
          "AccountId": {
            "type": "integer",
            "format": "int32"
          },
          "Site": {
            "$ref": "#/components/schemas/Site"
          },
          "SipPeer": {
            "$ref": "#/components/schemas/SipPeer"
          },
          "ServiceTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "TnAttribute"
              }
            }
          },
          "LastModified": {
            "type": "string"
          },
          "MessagingSettings": {
            "$ref": "#/components/schemas/MessagingSettings"
          },
          "Features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Feature"
            }
          },
          "TnAttributes": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "TnAttribute"
              }
            }
          },
          "TnOptions": {
            "$ref": "#/components/schemas/TnOptions"
          }
        }
      },
      "Feature": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          }
        }
      },
      "TelephoneNumberAvailableNnRoutesErrorResponse": {
        "type": "object",
        "title": "AvailableNnRoutes",
        "properties": {
          "AvailableNnRoutes": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "TelephoneNumberAvailableNnRoutesResponse": {
        "type": "object",
        "properties": {
          "AvailableNnRoutes": {
            "$ref": "#/components/schemas/TelephoneNumberAvailableNnRoutes"
          }
        }
      },
      "TelephoneNumberAvailableNnRoutes": {
        "type": "object",
        "title": "AvailableNnRoutes",
        "properties": {
          "NNRoute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TnDetailsNnRoute"
            }
          }
        }
      },
      "TnSite": {
        "type": "object",
        "properties": {
          "Site": {
            "type": "object",
            "properties": {
              "Id": {
                "type": "integer",
                "format": "int32"
              },
              "Name": {
                "type": "string"
              }
            }
          }
        }
      },
      "TnSipPeer": {
        "type": "object",
        "properties": {
          "SipPeer": {
            "type": "object",
            "properties": {
              "Id": {
                "type": "integer",
                "format": "int32"
              },
              "Name": {
                "type": "string"
              }
            }
          }
        }
      },
      "NpaNxxRcLcaSearchResult": {
        "type": "object",
        "properties": {
          "SearchResult": {
            "type": "object",
            "properties": {
              "ListofNPANXX": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "NPANXX": {
                      "type": "string"
                    }
                  }
                }
              },
              "Location": {
                "type": "object",
                "properties": {
                  "RateCenters": {
                    "$ref": "#/components/schemas/TnRateCenters"
                  }
                }
              }
            }
          }
        }
      },
      "TnRateCenters": {
        "type": "object",
        "title": "RateCenters",
        "properties": {
          "State": {
            "type": "integer",
            "format": "int32"
          },
          "RCs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "RC": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TnReservationResponse": {
        "type": "object",
        "properties": {
          "TNReservation": {
            "$ref": "#/components/schemas/Reservation"
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "ReservationId": {
            "type": "string"
          },
          "AccountId": {
            "type": "integer",
            "format": "int32"
          },
          "ReservationExpires": {
            "type": "integer",
            "format": "int64"
          },
          "ReservedTn": {
            "type": "string"
          }
        }
      },
      "CitySearchResults": {
        "type": "object",
        "properties": {
          "CityResponse": {
            "type": "object",
            "properties": {
              "Cities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CitySearchResult"
                }
              },
              "ResultCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "CitySearchResult": {
        "title": "City",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "RcAbbreviation": {
            "type": "string"
          },
          "AvailableTelephoneNumberCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RateCenterSearchResults": {
        "type": "object",
        "properties": {
          "RateCenterResponse": {
            "type": "object",
            "properties": {
              "RateCenters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RateCenterSearchResult"
                }
              },
              "ResultCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "RateCenterSearchResult": {
        "type": "object",
        "title": "RateCenter",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Abbreviation": {
            "type": "string"
          },
          "AvailableTelephoneNumberCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CoveredRateCenterSearchResponse": {
        "type": "object",
        "properties": {
          "CoveredRateCenters": {
            "type": "object",
            "properties": {
              "Links": {
                "$ref": "#/components/schemas/PaginationLinks"
              },
              "TotalCount": {
                "type": "integer",
                "format": "int32"
              },
              "CoveredRateCenter": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CoveredRateCenter"
                }
              }
            }
          }
        }
      },
      "CoveredRateCenterResponse": {
        "type": "object",
        "properties": {
          "CoveredRateCenter": {
            "$ref": "#/components/schemas/CoveredRateCenter"
          }
        }
      },
      "CoveredRateCenter": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          },
          "Abbreviation": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "Lata": {
            "type": "integer",
            "format": "int32"
          },
          "AvailableNumberCount": {
            "type": "integer",
            "format": "int32"
          },
          "limitedAvailableNumberCount": {
            "type": "integer",
            "format": "int32"
          },
          "ZipCodes": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "ZipCode"
              }
            }
          },
          "Cities": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "City"
              }
            }
          },
          "Vendors": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "Vendor"
              }
            }
          },
          "Tiers": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "format": "byte",
              "xml": {
                "name": "Tier"
              }
            }
          },
          "NpaNxxXs": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "NpaNxxX"
              }
            }
          },
          "Npas": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "Npa"
              }
            }
          },
          "LocalRateCenterIds": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "name": "LocalRateCenters",
              "wrapped": true
            },
            "items": {
              "type": "integer",
              "format": "int32",
              "xml": {
                "name": "RateCenterId"
              }
            }
          }
        },
        "xml": {
          "name": "CoveredRateCenter"
        }
      },
      "CoveredRateCenterSearchErrorResponse": {
        "type": "object",
        "properties": {
          "CoveredRateCenters": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "PortOutValidationRequest": {
        "type": "object",
        "properties": {
          "PortOutValidationRequest": {
            "type": "object",
            "properties": {
              "PON": {
                "type": "string"
              },
              "Pin": {
                "type": "string"
              },
              "AccountNumber": {
                "type": "string"
              },
              "ZipCode": {
                "type": "string"
              },
              "SubscriberName": {
                "type": "string"
              },
              "TelephoneNumbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          }
        }
      },
      "PortOutValidationResponse": {
        "type": "object",
        "properties": {
          "PortOutValidationResponse": {
            "type": "object",
            "properties": {
              "Portable": {
                "type": "boolean"
              },
              "PON": {
                "type": "string"
              },
              "Errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Error",
                  "properties": {
                    "Code": {
                      "type": "string"
                    },
                    "Description": {
                      "type": "string"
                    }
                  }
                }
              },
              "AcceptableValues": {
                "type": "object",
                "properties": {
                  "Pin": {
                    "type": "string"
                  },
                  "AccountNumber": {
                    "type": "string"
                  },
                  "ZipCode": {
                    "type": "string"
                  },
                  "TelephoneNumbers": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TelephoneNumber"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "NotificationCallbackRequest": {
        "type": "object",
        "properties": {
          "Notification": {
            "type": "object",
            "properties": {
              "SubscriptionId": {
                "type": "string"
              },
              "OrderType": {
                "type": "string",
                "enum": [
                  "portins",
                  "portouts",
                  "orders",
                  "disconnects",
                  "dldas",
                  "lsrorders",
                  "e911s",
                  "tnoptions"
                ]
              },
              "OrderId": {
                "type": "string"
              },
              "CustomerOrderId": {
                "type": "string"
              },
              "Status": {
                "type": "string"
              },
              "Message": {
                "type": "string"
              },
              "Note": {
                "type": "string"
              },
              "CompletedTelephoneNumbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              },
              "EventType": {
                "type": "string"
              },
              "ImpactedTelephoneNumbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          }
        }
      },
      "RemoveImportedTnOrdersHistoryResponse": {
        "type": "object",
        "properties": {
          "RemoveImportedTnOrdersReportResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "RemoveImportedTnOrders": {
        "type": "object",
        "properties": {
          "TotalCount": {
            "type": "integer"
          },
          "Links": {
            "$ref": "#/components/schemas/PaginationLinks"
          },
          "RemoveImportedTnOrderSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSummary"
            }
          }
        }
      },
      "RemoveImportedTnOrderRequest": {
        "required": [
          "TelephoneNumbers"
        ],
        "title": "RemoveImportedTnOrder",
        "properties": {
          "CustomerOrderId": {
            "type": "string",
            "description": "Internal customer order id for tracking the order. Only alphanumeric values, dashes and spaces are allowed",
            "maxLength": 40
          },
          "TelephoneNumbers": {
            "description": "Ten digit phone number with no dots or dashes. One or more is required. Use a PhoneNumber tag for each phone number in the list",
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          }
        }
      },
      "RemoveImportedTnOrdersResponse": {
        "type": "object",
        "properties": {
          "RemoveImportedTnOrder": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "type": "string"
              },
              "OrderCreateDate": {
                "type": "string"
              },
              "AccountId": {
                "type": "integer"
              },
              "CreatedByUser": {
                "type": "string"
              },
              "OrderId": {
                "type": "string"
              },
              "LastModifiedDate": {
                "type": "string"
              },
              "ProcessingStatus": {
                "type": "string",
                "enum": [
                  "RECEIVED",
                  "PROCESSING",
                  "COMPLETE",
                  "PARTIAL",
                  "FAILED"
                ]
              },
              "TelephoneNumbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              },
              "Errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumberGroupError"
                }
              }
            }
          }
        }
      },
      "BulkPortinResponses": {
        "type": "object",
        "properties": {
          "BulkPortinResponses": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "Links": {
                "$ref": "#/components/schemas/Links"
              },
              "BulkPortinResponse": {
                "type": "array",
                "items": {
                  "properties": {
                    "OrderId": {
                      "description": "The unique identifier string created by Bandwidth to refer to the order.  This value is returned in the synchronous response to the POST.",
                      "type": "string"
                    },
                    "CompanyName": {
                      "description": "The name associated with the Bandwidth account that created this order.",
                      "type": "string"
                    },
                    "LastModifiedBy": {
                      "description": "The username that last modified the order.  This may show as \"System\" if the order was last modified by Bandwidth automated software.",
                      "type": "string"
                    },
                    "LastModifiedDate": {
                      "description": "The date and time on which the order was last modified, including status updates.",
                      "type": "string"
                    },
                    "OrderCreateDate": {
                      "description": "The date and time when the order was created.",
                      "type": "string"
                    },
                    "PortinList": {
                      "$ref": "#/components/schemas/PortinList"
                    },
                    "ProcessingStatus": {
                      "type": "string",
                      "enum": [
                        "DRAFT",
                        "IN_PROGRESS",
                        "NEEDS_ATTENTION",
                        "PARTIAL",
                        "COMPLETED",
                        "CANCELLED",
                        "VALIDATE_DRAFT_TNS",
                        "VALID_DRAFT_TNS",
                        "INVALID_DRAFT_TNS"
                      ]
                    },
                    "RequestedFocDate": {
                      "description": "This is the FOC (Firm Order Commitment) date requested by the person (or machine) creating the order.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BulkPortinResponse": {
        "type": "object",
        "properties": {
          "BulkPortin": {
            "$ref": "#/components/schemas/BulkPortin"
          }
        }
      },
      "PortinListResponse": {
        "type": "object",
        "properties": {
          "PortinListResponse": {
            "type": "object",
            "properties": {
              "PortinList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PortinOrderId"
                }
              },
              "Errors": {
                "type": "array",
                "items": {
                  "properties": {
                    "Error": {
                      "type": "object",
                      "properties": {
                        "ErrorCode": {
                          "description": "Numeric designation of corresponding error.",
                          "type": "integer"
                        },
                        "PortinOrderId": {
                          "type": "string"
                        },
                        "Description": {
                          "description": "Detailed explanation about error.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Notes": {
        "type": "object",
        "properties": {
          "Notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          }
        }
      },
      "NoteErrorResponse": {
        "type": "object",
        "properties": {
          "NoteResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "TnListResponse": {
        "type": "object",
        "properties": {
          "TnListResponse": {
            "type": "object",
            "properties": {
              "ProcessingStatus": {
                "type": "string",
                "enum": [
                  "DRAFT",
                  "PARTIAL",
                  "COMPLETED",
                  "CANCELED",
                  "VALIDATE_DRAFT_TNS",
                  "VALID_DRAFT_TNS",
                  "INVALID_DRAFT_TNS"
                ]
              },
              "OrderId": {
                "description": "The unique identifier string created by Bandwidth to refer to the order.  This value is returned in the synchronous response to the POST.",
                "type": "string"
              },
              "PortableTnList": {
                "description": "This is a list of all of the telephone numbers from the tnList that were validated and are known to be portable.",
                "type": "array",
                "items": {
                  "properties": {
                    "TN": {
                      "type": "string"
                    }
                  }
                }
              },
              "NotValidatedTnList": {
                "description": "This is a list of any telephone numbers from the tnList that have not yet been validated.",
                "type": "array",
                "items": {
                  "properties": {
                    "TN": {
                      "type": "string"
                    }
                  }
                }
              },
              "ChildPortinOrderList": {
                "description": "This is a list of any telephone numbers from the tnList that have not yet been validated.",
                "type": "object",
                "properties": {
                  "ChildPortinOrder": {
                    "description": "The list of child, or subtending, orders associated with a bulk port-in.  The bulk port-in will have an empty ChildPortinOrderList if none of the telephone numbers included in the /tnList are portable.",
                    "type": "object",
                    "properties": {
                      "OrderId": {
                        "description": "The unique identifier string created by Bandwidth to refer to the order.  This value is returned in the synchronous response to the POST.",
                        "type": "string"
                      },
                      "TnList": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "Tn": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "ChildPortinOrder": {
                "type": "object",
                "description": "The OrderId and TnList of a child order associated with a bulk port-in. A child order is created for each set of telephone numbers that can be ported together.  This element shows which telephone numbers are associated with each child order.",
                "properties": {
                  "OrderId": {
                    "type": "string"
                  },
                  "TnList": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "Tn": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "ErrorList": {
                "type": "array",
                "description": "The list of errors (if any) associated with the telephone numbers in the tnList.",
                "items": {
                  "properties": {
                    "Error": {
                      "type": "object",
                      "properties": {
                        "Code": {
                          "description": "Numeric designation of corresponding error.",
                          "type": "integer"
                        },
                        "Description": {
                          "description": "Detailed explanation about error.",
                          "type": "string"
                        },
                        "TnList": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "Tn": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TnListPutResponse": {
        "type": "object",
        "properties": {
          "TnListResponse": {
            "type": "object",
            "properties": {
              "OrderId": {
                "description": "This is Bandwidth order ID.",
                "type": "string"
              },
              "ProcessingStatus": {
                "description": "The processing status of this order. Values may be: PROCESSING, COMPLETED, FAILED. PROCESSING means that the system is still processing the order. COMPLETED means that the order has been successfully completed. FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system.",
                "type": "string",
                "enum": [
                  "DRAFT",
                  "PARTIAL",
                  "COMPLETED",
                  "CANCELED",
                  "VALIDATE_DRAFT_TNS",
                  "VALID_DRAFT_TNS",
                  "INVALID_DRAFT_TNS"
                ]
              }
            }
          }
        }
      },
      "TnListPutErrorResponse": {
        "type": "object",
        "properties": {
          "TnListResponse": {
            "type": "object",
            "properties": {
              "ResponseStatus": {
                "$ref": "#/components/schemas/ResponseStatus"
              },
              "OrderId": {
                "type": "string"
              },
              "ProcessingStatus": {
                "type": "string",
                "enum": [
                  "INVALID_DRAFT_TNS"
                ]
              }
            }
          }
        }
      },
      "BulkPortInHistoryResponse": {
        "type": "object",
        "properties": {
          "BulkPortInHistoryResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "fileListResponse": {
        "type": "object",
        "properties": {
          "fileListResponse": {
            "type": "object",
            "properties": {
              "fileCount": {
                "description": "Total count of files in response.",
                "type": "integer"
              },
              "fileData": {
                "description": "Optional metadata associated with the file that was uploaded.",
                "type": "object",
                "properties": {
                  "FileName": {
                    "description": "The name that was associated with the file when it was uploaded.",
                    "type": "string"
                  },
                  "FileMetaData": {
                    "type": "object",
                    "properties": {
                      "DocumentType": {
                        "description": "Enum of possible file type.",
                        "type": "string",
                        "enum": [
                          "LOA",
                          "INVOICE",
                          "CSR",
                          "OTHER"
                        ]
                      }
                    }
                  }
                }
              },
              "resultCode": {
                "description": "Result code of fetching the list of files from AWS.",
                "type": "integer"
              },
              "resultMessage": {
                "description": "Results of the attempt to fetch the list of files.",
                "type": "string"
              }
            }
          }
        }
      },
      "SitesResponse": {
        "type": "object",
        "properties": {
          "Sites": {
            "type": "object",
            "properties": {
              "Site": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteInfo"
                }
              }
            }
          }
        }
      },
      "SiteInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "SiteResponse": {
        "type": "object",
        "properties": {
          "Site": {
            "$ref": "#/components/schemas/SitePayload"
          }
        }
      },
      "SitePayload": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "UcTrunkingConfiguration": {
            "$ref": "#/components/schemas/SiteUcTrunkingConfigurationPayload"
          }
        }
      },
      "SiteResponseBadRequest": {
        "type": "object",
        "properties": {
          "ResponseStatus": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "SiteResponseConflict": {
        "type": "object",
        "properties": {
          "ResponseStatus": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "AddressErrorDescription": {
            "$ref": "#/components/schemas/AddressErrorDescription"
          }
        }
      },
      "AddressErrorDescription": {
        "type": "object",
        "properties": {
          "AddressInconsistencies": {
            "type": "string"
          },
          "RecommendedAddress": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "TNSipPeersResponse": {
        "type": "object",
        "properties": {
          "SipPeers": {
            "$ref": "#/components/schemas/SipPeers"
          }
        }
      },
      "SipPeerResponse": {
        "type": "object",
        "properties": {
          "SipPeer": {
            "$ref": "#/components/schemas/SipPeer"
          }
        }
      },
      "SipPeerPayload": {
        "type": "object",
        "properties": {
          "PeerName": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "IsDefaultPeer": {
            "type": "boolean"
          },
          "FinalDestinationUri": {
            "type": "string"
          },
          "VoiceHosts": {
            "$ref": "#/components/schemas/Hosts"
          },
          "VoiceHostGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Hosts"
            }
          },
          "TerminationHosts": {
            "$ref": "#/components/schemas/SipPeerTerminationHosts"
          },
          "Products": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "Product"
              },
              "enum": [
                "Origination",
                "Termination",
                "MESSAGING",
                "E911",
                "TollFree",
                "UcTrunking",
                "EdgeManagement",
                "CORE",
                "Iris",
                "NumberManagement",
                "Analytics",
                "CampaignManagement"
              ]
            }
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "PremiseTrunks": {
            "type": "string"
          },
          "CallingName": {
            "$ref": "#/components/schemas/SipPeerLineOptionDto"
          },
          "SuggestedAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "TnCount": {
            "type": "integer",
            "format": "int32"
          },
          "SsSendToCustomer": {
            "type": "string",
            "enum": [
              "NONE",
              "VERSTAT",
              "ENH_VERSTAT",
              "VERSTAT_AND_IDENTITY",
              "ENH_VERSTAT_AND_IDENTITY",
              "IDENTITY"
            ]
          }
        }
      },
      "SipPeerResponseBadRequest": {
        "type": "object",
        "properties": {
          "SipPeerResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "SipPeerResponseConflict": {
        "type": "object",
        "properties": {
          "ResponseStatus": {
            "$ref": "#/components/schemas/ResponseStatus"
          },
          "AddressErrorDescription": {
            "$ref": "#/components/schemas/AddressErrorDescription"
          }
        }
      },
      "SipPeerTelephoneNumbersResponse": {
        "type": "object",
        "properties": {
          "SipPeerTelephoneNumbers": {
            "type": "object",
            "properties": {
              "SipPeerTelephoneNumber": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SipPeerTelephoneNumber"
                }
              }
            }
          }
        }
      },
      "SipPeerTelephoneNumberResponse": {
        "type": "object",
        "properties": {
          "SipPeerTelephoneNumber": {
            "$ref": "#/components/schemas/SipPeerTelephoneNumber"
          }
        }
      },
      "SipPeerTelephoneNumber": {
        "type": "object",
        "properties": {
          "FullNumber": {
            "type": "string",
            "description": "A 10 Digit Telephone Number"
          },
          "CallForward": {
            "type": "string",
            "description": "Does this telephone number have call forwarding or not"
          },
          "NumberFormat": {
            "type": "string",
            "enum": [
              "10digit",
              "11digit",
              "e164",
              "false"
            ]
          },
          "RPIDFormat": {
            "type": "string",
            "enum": [
              "10digit",
              "11digit",
              "e164",
              "false"
            ],
            "description": "Telephone number RPID format"
          },
          "RewriteUser": {
            "type": "string",
            "maxLength": 25
          },
          "CallingNameDisplay": {
            "type": "string",
            "description": "Calling Name of the caller is available to the user or not on incoming calls"
          },
          "TnAttributes": {
            "description": "Is this telephone number protected or not",
            "type": "array",
            "items": {
              "properties": {
                "TnAttribute": {
                  "type": "string"
                }
              }
            }
          },
          "MessagingSettings": {
            "type": "string",
            "description": "Does this telephone number have any messaging system configured"
          }
        }
      },
      "SipPeerTelephoneNumberResponseBadRequest": {
        "type": "object",
        "properties": {
          "ResponseStatus": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "SipPeerTelephoneNumbersCountResponse": {
        "type": "object",
        "properties": {
          "SipPeerTelephoneNumbersCount": {
            "type": "object",
            "properties": {
              "SipPeerTelephoneNumbersCount": {
                "type": "integer",
                "description": "Telephone numbers count on provided sipPeer"
              },
              "CnamCount": {
                "type": "integer",
                "description": "Telephone numbers count with activated CNAM on provided sipPeer"
              },
              "LidbCount": {
                "type": "integer",
                "description": "Telephone numbers count with activated Lidb on provided sipPeer"
              }
            }
          }
        }
      },
      "AccountTelephoneNumbersHistoryResponse": {
        "type": "object",
        "properties": {
          "TNs": {
            "type": "object",
            "properties": {
              "TelephoneNumbers": {
                "$ref": "#/components/schemas/TelephoneNumbers"
              },
              "Links": {
                "$ref": "#/components/schemas/PaginationLinks"
              },
              "TotalCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "TelephoneNumbers": {
        "type": "object",
        "properties": {
          "TelephoneNumbers": {
            "type": "object",
            "properties": {
              "Count": {
                "description": "Total count of telephone numbers associated with the specified port-in number.",
                "type": "integer"
              },
              "TelephoneNumber": {
                "description": "ListOfPhoneNumbers is an array of PhoneNumber. At least one PhoneNumber must be provided for all port-types.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          }
        }
      },
      "TelephoneNumberTotalsHistory": {
        "type": "object",
        "title": "Quantity",
        "properties": {
          "Quantity": {
            "type": "object",
            "properties": {
              "Count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "ExternalTnsOrderRequest": {
        "type": "object",
        "properties": {
          "ExternalTnsOrder": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "type": "string",
                "description": "An order ID created by the customer for their tracking purposes",
                "format": "Only alphanumeric values, dashes and spaces are allowed",
                "maxLength": 40
              },
              "SiteId": {
                "type": "integer",
                "format": "int32",
                "description": "The ID of the Site that the Telephone Numbers are to be provisioned to",
                "required": true
              },
              "SipPeerId": {
                "type": "integer",
                "format": "int32",
                "description": "The ID of the SIP Peer that the Telephone Numbers are to be provisioned to",
                "required": false
              },
              "Action": {
                "type": "string",
                "description": "Indentify the action on external TNs",
                "required": true,
                "enum": [
                  "IMPORT",
                  "REMOVE"
                ]
              },
              "LoaType": {
                "type": "string",
                "enum": [
                  "CARRIER",
                  "SUBSCRIBER"
                ],
                "description": "Identify the LoaType on external TNs",
                "required": false,
                "default": "CARRIER"
              },
              "TelephoneNumbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          }
        }
      },
      "GeocodeRequestAddress": {
        "type": "object",
        "properties": {
          "RequestAddress": {
            "type": "object",
            "properties": {
              "AddressLine1": {
                "type": "string",
                "required": true
              },
              "HousePrefix": {
                "type": "string"
              },
              "HouseNumber": {
                "type": "string"
              },
              "HouseSuffix": {
                "type": "string"
              },
              "PreDirectional": {
                "type": "string"
              },
              "StreetName": {
                "type": "string"
              },
              "StreetSuffix": {
                "type": "string"
              },
              "PostDirectional": {
                "type": "string"
              },
              "AddressLine2": {
                "type": "string"
              },
              "City": {
                "type": "string",
                "required": true
              },
              "StateCode": {
                "type": "string",
                "required": true
              },
              "Zip": {
                "type": "string"
              },
              "PlusFour": {
                "type": "string"
              },
              "County": {
                "type": "string"
              },
              "Country": {
                "type": "string"
              },
              "AddressType": {
                "type": "string"
              },
              "ResetAddressFields": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "ImportTnCheckerPayload": {
        "type": "object",
        "properties": {
          "ImportTnCheckerPayload": {
            "type": "object",
            "properties": {
              "SiteId": {
                "type": "integer",
                "format": "int32"
              },
              "SipPeerId": {
                "type": "integer",
                "format": "int32"
              },
              "TelephoneNumbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          }
        }
      },
      "TelephoneNumbersAssignmentOrderHistoryResponse": {
        "type": "object",
        "properties": {
          "TelephoneNumbersAssignmentOrders": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "TelephoneNumbersAssignmentOrderSummary": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumbersAssignmentOrderSummary"
                }
              }
            }
          }
        }
      },
      "TelephoneNumbersAssignmentOrderResponse": {
        "type": "object",
        "properties": {
          "TelephoneNumbersAssignmentOrderResponse": {
            "type": "object",
            "properties": {
              "AccountId": {
                "type": "integer",
                "format": "int32"
              },
              "TotalQuantity": {
                "type": "integer",
                "format": "int32"
              },
              "FailedQuantity": {
                "type": "integer",
                "format": "int32"
              },
              "CreatedByUser": {
                "type": "string"
              },
              "OrderCreateDate": {
                "type": "string"
              },
              "OrderStatus": {
                "type": "string"
              },
              "OrderId": {
                "type": "string"
              },
              "TelephoneNumbersAssignmentOrder": {
                "$ref": "#/components/schemas/TelephoneNumbersAssignmentOrderPayload"
              },
              "Errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumbersAssignmentError"
                }
              }
            }
          }
        }
      },
      "TelephoneNumbersAssignmentError": {
        "type": "object",
        "title": "Error",
        "properties": {
          "Code": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          }
        }
      },
      "TelephoneNumbersAssignmentOrderSummary": {
        "type": "object",
        "properties": {
          "TelephoneNumbersAssignmentOrderSummary": {
            "type": "object",
            "properties": {
              "accountId": {
                "type": "integer",
                "format": "int32"
              },
              "TotalQuantity": {
                "type": "integer",
                "format": "int32"
              },
              "FailedQuantity": {
                "type": "integer",
                "format": "int32"
              },
              "userId": {
                "type": "string"
              },
              "OrderDate": {
                "type": "string"
              },
              "OrderType": {
                "type": "string"
              },
              "OrderStatus": {
                "type": "string"
              },
              "Action": {
                "type": "string"
              },
              "OrderId": {
                "type": "string"
              }
            }
          }
        }
      },
      "TelephoneNumbersAssignmentOrderErrorResponse": {
        "type": "object",
        "properties": {
          "TelephoneNumbersAssignmentOrderResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "ReportsResponse": {
        "type": "object",
        "properties": {
          "Reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotDetailedReport"
            }
          }
        }
      },
      "NotDetailedReport": {
        "title": "Report",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "DisplayPriority": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "Reports": {
            "$ref": "#/components/schemas/Report"
          }
        }
      },
      "Report": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "ID of the report"
          },
          "Name": {
            "type": "string",
            "description": "Name of the report"
          },
          "Description": {
            "type": "string",
            "description": "A description of the report in general terms"
          },
          "Parameters": {
            "type": "array",
            "description": "A set of parameters that are used to provide boundaries on the information that is provided",
            "items": {
              "$ref": "#/components/schemas/ReportParameter"
            }
          }
        }
      },
      "ReportParameter": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name of the parameter"
          },
          "Type": {
            "type": "string",
            "description": "Type of the parameter",
            "enum": [
              "Account ID",
              "Site ID",
              "SipPeer ID",
              "String",
              "Integer",
              "Boolean",
              "Enum"
            ]
          },
          "ValueFilter": {
            "type": "string",
            "description": "Contains a semicolon separated list of InternalNames"
          },
          "Values": {
            "type": "array",
            "description": "A list of values of Enum type",
            "items": {
              "$ref": "#/components/schemas/ReportEnumParameterValue"
            }
          },
          "Required": {
            "type": "boolean",
            "description": "Declaration of whether it is required or not"
          },
          "Description": {
            "type": "string",
            "description": "Description of the parameter"
          },
          "MultiSelectAllowed": {
            "type": "boolean",
            "description": "Is multiple vales allowed or not"
          },
          "HelpInformation": {
            "type": "string",
            "description": "Some help info for describing parameter"
          }
        }
      },
      "ReportEnumParameterValue": {
        "title": "Value",
        "type": "object",
        "properties": {
          "InternalName": {
            "type": "string",
            "description": "InternalName tag value uses in report instance creation"
          },
          "DisplayName": {
            "type": "string",
            "description": "DisplayName tag value can be used for UI purposes"
          }
        }
      },
      "ReportInstancesResponse": {
        "type": "object",
        "properties": {
          "Instances": {
            "$ref": "#/components/schemas/ReportInstances"
          }
        }
      },
      "ReportInstances": {
        "type": "array",
        "items": {
          "properties": {
            "Instance": {
              "$ref": "#/components/schemas/ReportInstanceResponsePayload"
            }
          }
        }
      },
      "LidbOrderHistoryResponse": {
        "type": "object",
        "properties": {
          "ResponseSelectWrapper": {
            "type": "object",
            "properties": {
              "ListOrderIdUserIdDate": {
                "type": "object",
                "properties": {
                  "TotalCount": {
                    "type": "integer"
                  },
                  "OrderIdUserIdDate": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OrderSummary"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LidbOrderResponse": {
        "type": "object",
        "properties": {
          "LidbOrderResponse": {
            "$ref": "#/components/schemas/LidbOrderResponsePayload"
          }
        }
      },
      "LidbOrderResponsePayload": {
        "type": "object",
        "properties": {
          "LidbOrder": {
            "type": "object",
            "properties": {
              "orderId": {
                "type": "string"
              },
              "LastModifiedDate": {
                "type": "string"
              },
              "CreatedByUser": {
                "type": "string"
              },
              "OrderCreateDate": {
                "type": "string"
              },
              "OrderCompleteDate": {
                "type": "string"
              },
              "ProcessingStatus": {
                "type": "string"
              },
              "CustomerOrderId": {
                "type": "string",
                "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the Order. The element is optional. Only alphanumeric values, dashes and spaces are allowed.",
                "maxLength": 40
              },
              "SiteId": {
                "type": "integer",
                "format": "int32"
              },
              "PeerId": {
                "type": "integer",
                "format": "int32"
              },
              "LidbTnGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LidbDetailTnGroup"
                }
              },
              "ErrorList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LidbOrderError"
                }
              }
            }
          }
        }
      },
      "LidbOrderError": {
        "type": "object",
        "title": "Error",
        "properties": {
          "TelephoneNumber": {
            "type": "string"
          },
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "LidbOrderErrorResponse": {
        "type": "object",
        "properties": {
          "LidbOrderResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "LsrOrderHistoryResponse": {
        "type": "object",
        "properties": {
          "LsrOrders": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "LsrOrderSummary": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "description": "This is the account that the searched-for order will be contributing to. Specifying this parameter will restrict the search to portin orders within the specified account.",
                      "type": "integer"
                    },
                    "CountOfTNs": {
                      "description": "Total count of telephone numbers in order.",
                      "type": "integer"
                    },
                    "CustomerOrderId": {
                      "description": "The Customer Order ID is an ID assigned by the account owner to provide a reference number for the LSR order.",
                      "type": "string"
                    },
                    "userId": {
                      "description": "The UserId is authenticated for access to the network via a username string.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "This is the date when LSR order was last modified.",
                      "type": "string"
                    },
                    "OrderType": {
                      "type": "string"
                    },
                    "OrderDate": {
                      "description": "A specific date on which you wish to see modifications to a LSR order.",
                      "type": "string"
                    },
                    "OrderStatus": {
                      "description": "The state of the LSR order.",
                      "type": "string"
                    },
                    "ActualFocDate": {
                      "description": "This is the FOC (Firm Order Commitment) date assigned to the Port-in Order by the losing carrier or their agent.",
                      "type": "string"
                    },
                    "BillingTelephoneNumber": {
                      "description": "The BillingTelephoneNumber is the primary telephone number associated with the invoice that the subscriber gets from the losing carrier.",
                      "type": "string"
                    },
                    "CreatedByUser": {
                      "description": "The username of the person that created the order.",
                      "type": "string"
                    },
                    "OrderId": {
                      "description": "The identifier that uniquely identifies a LSR order.",
                      "type": "string"
                    },
                    "Pon": {
                      "description": "The PON that is referenced in the LSR order.",
                      "type": "string"
                    },
                    "PonVersion": {
                      "type": "string"
                    },
                    "RequestedFocDate": {
                      "description": "This is the FOC (Firm Order Commitment) date requested by the person (or machine) creating the LSR order.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LsrOrderResponse": {
        "type": "object",
        "properties": {
          "LsrOrderResponse": {
            "type": "object",
            "properties": {
              "LsrOrder": {
                "$ref": "#/components/schemas/LsrOrderPayload"
              }
            }
          }
        }
      },
      "LsrOrderErrorResponse": {
        "type": "object",
        "properties": {
          "LsrOrderResponse": {
            "type": "object",
            "properties": {
              "LsrOrder": {
                "$ref": "#/components/schemas/LsrOrderPayload"
              },
              "LsrOrderErrors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LsrOrderError"
                }
              },
              "ResponseStatus": {
                "$ref": "#/components/schemas/ResponseStatus"
              }
            }
          }
        }
      },
      "LsrOrderNotFoundResponse": {
        "type": "object",
        "properties": {
          "LsrOrderResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "LsrOrderError": {
        "type": "object",
        "properties": {
          "Code": {
            "description": "Numeric designation of corresponding error.",
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "description": "Detailed explanation about error.",
            "type": "string"
          }
        }
      },
      "NotesResponse": {
        "type": "object",
        "properties": {
          "Notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          }
        }
      },
      "OrderNotesResponse": {
        "type": "object",
        "properties": {
          "Notes": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "Note",
              "properties": {
                "Id": {
                  "type": "integer"
                },
                "UserId": {
                  "type": "string"
                },
                "Description": {
                  "type": "string"
                },
                "LastDateModifier": {
                  "type": "string",
                  "format": "datetime"
                }
              }
            }
          }
        }
      },
      "NoteResponse": {
        "type": "object",
        "properties": {
          "Note": {
            "$ref": "#/components/schemas/Note"
          }
        }
      },
      "TnOrderHistoryResponse": {
        "type": "object",
        "properties": {
          "ResponseSelectWrapper": {
            "type": "object",
            "properties": {
              "ListOrderIdUserIdDate": {
                "type": "object",
                "properties": {
                  "TotalCount": {
                    "type": "integer"
                  },
                  "Links": {
                    "$ref": "#/components/schemas/Links"
                  },
                  "OrderIdUserIdDate": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OrderSummary"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TnOrderCreatedResponse": {
        "type": "object",
        "properties": {
          "OrderResponse": {
            "$ref": "#/components/schemas/Order"
          }
        }
      },
      "TnOrderUpdatedResponse": {
        "type": "object",
        "properties": {
          "OrderResponse": {
            "type": "object",
            "properties": {
              "Order": {
                "$ref": "#/components/schemas/Order"
              },
              "CompletedQuantity": {
                "type": "integer"
              },
              "CreatedByUser": {
                "type": "string"
              },
              "LastModifiedDate": {
                "type": "string"
              },
              "OrderCompleteDate": {
                "type": "string"
              },
              "OrderStatus": {
                "type": "string"
              },
              "CompletedNumbers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "TelephoneNumber": {
                      "type": "object",
                      "properties": {
                        "FullNumber": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "FailedQuantity": {
                "type": "integer"
              }
            }
          }
        }
      },
      "TnOrderBadResponse": {
        "type": "object",
        "properties": {
          "OrderResponse": {
            "$ref": "#/components/schemas/Order"
          },
          "ErrorList": {
            "type": "array",
            "items": {
              "properties": {
                "Error": {
                  "type": "object",
                  "properties": {
                    "Code": {
                      "type": "integer"
                    },
                    "Description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TelephoneDetailsAreaCodes": {
        "type": "object",
        "properties": {
          "TelephoneDetailsReports": {
            "type": "object",
            "properties": {
              "TelephoneDetailsReport": {
                "type": "object",
                "properties": {
                  "AreaCode": {
                    "type": "string"
                  },
                  "Count": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "TelephoneDetailsNpaNxx": {
        "type": "object",
        "properties": {
          "TelephoneDetailsReports": {
            "type": "object",
            "properties": {
              "TelephoneDetailsReport": {
                "type": "object",
                "properties": {
                  "NPA-NXX": {
                    "type": "string"
                  },
                  "Count": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "TelephoneDetailsTotals": {
        "type": "object",
        "properties": {
          "TelephoneDetailsReports": {
            "type": "object",
            "properties": {
              "TelephoneDetailsReport": {
                "type": "object",
                "properties": {
                  "Count": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "OrderTelephoneNumbersResponse": {
        "type": "object",
        "properties": {
          "TelephoneNumbers": {
            "type": "object",
            "properties": {
              "Count": {
                "type": "integer"
              },
              "TelephoneNumber": {
                "type": "string"
              }
            }
          }
        }
      },
      "LNPResponseWrapper": {
        "type": "object",
        "properties": {
          "LNPResponseWrapper": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "Links": {
                "$ref": "#/components/schemas/Links"
              },
              "lnpPortInfoForGivenStatus": {
                "$ref": "#/components/schemas/lnpPortInfoForGivenStatus"
              }
            }
          }
        }
      },
      "lnpPortInfoForGivenStatus": {
        "type": "object",
        "properties": {
          "accountId": {
            "description": "This is the account that the searched-for order will be contributing to. Specifying this parameter will restrict the search to portin orders within the specified account.",
            "type": "integer"
          },
          "CountOfTNs": {
            "description": "Total count of telephone numbers in order.",
            "type": "integer"
          },
          "userId": {
            "description": "Bandwidth user ID.",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "This is the date when Port-in Order was last modified.",
            "type": "string"
          },
          "OrderDate": {
            "type": "string"
          },
          "OrderId": {
            "description": "This is Bandwidth Oder ID.",
            "type": "string"
          },
          "OrderType": {
            "type": "string"
          },
          "ActualFOCDate": {
            "description": "This is the FOC (Firm Order Commitment) Date assigned to the Port-in Order by the losing carrier or their agent.",
            "type": "string"
          },
          "BillingTelephoneNumber": {
            "description": "The BillingTelephoneNumber is the primary telephone number associated with the invoice that the subscriber gets from the losing carrier.",
            "type": "string"
          },
          "CompanyName": {
            "description": "Name associated with the Bandwidth Dashboard account.",
            "type": "string"
          },
          "LNPLosingCarrierId": {
            "description": "Internal use only",
            "type": "string"
          },
          "LNPLosingCarrierName": {
            "description": "The carrier that the telephone numbers are being ported away from.",
            "type": "string"
          },
          "ProcessingStatus": {
            "description": "The processing status of this order. Values may be: PROCESSING, COMPLETED, FAILED. PROCESSING means that the system is still processing the order. COMPLETED means that the order has been successfully completed. FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system.",
            "type": "string"
          },
          "RequestedFOCDate": {
            "description": "This is the FOC (Firm Order Commitment) Date requested by the person (or machine) creating the Port-in Order.",
            "type": "string"
          },
          "VendorId": {
            "description": "Internal use only.",
            "type": "string"
          },
          "VendorName": {
            "type": "string"
          },
          "PON": {
            "description": "A PON (Port Order Number) is a system generated order number assigned to port orders to easily identify individual requests.",
            "type": "string"
          }
        }
      },
      "LnpOrderResponse": {
        "type": "object",
        "properties": {
          "LnpOrderResponse": {
            "type": "object",
            "properties": {
              "OrderId": {
                "type": "string",
                "description": "Unique orderId that is used to manage the order."
              },
              "Status": {
                "type": "object",
                "properties": {
                  "Code": {
                    "type": "integer"
                  },
                  "Description": {
                    "type": "string"
                  }
                }
              },
              "Errors": {
                "type": "object",
                "properties": {
                  "Code": {
                    "description": "Numeric designation of corresponding error.",
                    "type": "integer"
                  },
                  "Description": {
                    "description": "Detailed explanation about error.",
                    "type": "string"
                  }
                }
              },
              "ProcessingStatus": {
                "description": "The processing status of this order. Values may be: PROCESSING, COMPLETED, FAILED. PROCESSING means that the system is still processing the order. COMPLETED means that the order has been successfully completed. FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system.",
                "type": "string",
                "enum": [
                  "PENDING_DOCUMENTS"
                ]
              },
              "LoaAuthorizingPerson": {
                "description": "The LoaAuthorizingPerson is mandatory for all port-types. This is the first and last names of the person that has authorized the port. The LoaAuthorizingPerson value may be up to 15 characters in length.",
                "type": "string"
              },
              "Subscriber": {
                "$ref": "#/components/schemas/Subscriber"
              },
              "WirelessInfo": {
                "$ref": "#/components/schemas/WirelessInfo"
              },
              "TnAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TnAttribute"
                }
              },
              "BillingTelephoneNumber": {
                "description": "The BillingTelephoneNumber is the primary telephone number associated with the invoice that the subscriber gets from the losing carrier.",
                "type": "string"
              },
              "NewBillingTelephoneNumber": {
                "description": "This field is used to specify a new billing telephone number on the losing carrier account.",
                "type": "string"
              },
              "SiteId": {
                "description": "The numeric designation for the Site ID that applied to the Port-in Order. The SiteId is used to provide a home within the account for the TN(s) that were ported in by the Port-in Order",
                "type": "string"
              },
              "PeerId": {
                "description": "The numeric designation for the Location or SIP PEER ID that applied to the Port-in Order. The SIP Peer ID is used to provide a home within the location for the TN(s) that were ported in by the Port-in Order",
                "type": "string"
              },
              "ListOfPhoneNumbers": {
                "type": "array",
                "description": "ListOfPhoneNumbers is an array of PhoneNumber. At least one PhoneNumber must be provided for all port-types.",
                "items": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              },
              "Triggered": {
                "description": "The Triggered field must be set to true if you want an activation time other than the 11:30 AM ET default. The desired activation time can then be specified in the time portion of the RequestedFocDate. Triggered activation is not yet supported for toll free port-in orders.",
                "type": "string"
              }
            }
          }
        }
      },
      "LnpOrderPutResponse": {
        "type": "object",
        "properties": {
          "LnpOrderResponse": {
            "type": "object",
            "properties": {
              "OrderId": {
                "type": "string"
              },
              "Status": {
                "type": "object",
                "properties": {
                  "Code": {
                    "type": "integer"
                  },
                  "Description": {
                    "type": "string"
                  }
                }
              },
              "ProcessingStatus": {
                "description": "The processing status of this order. Values may be: PROCESSING, COMPLETED, FAILED. PROCESSING means that the system is still processing the order. COMPLETED means that the order has been successfully completed. FAILED means that errors occurred while processing the order, and that the order did not make any changes to the system.",
                "type": "string",
                "enum": [
                  "REQUESTED_SUPP"
                ]
              },
              "RequestedFocDate": {
                "description": "This is the FOC (Firm Order Commitment) Date requested by the person (or machine) creating the Port-in Order.",
                "type": "string"
              },
              "BillingTelephoneNumber": {
                "type": "string",
                "description": "The BillingTelephoneNumber is the primary telephone number associated with the invoice that the subscriber gets from the losing carrier."
              },
              "NewBillingTelephoneNumber": {
                "type": "string",
                "description": "This field is used to specify a new billing telephone number on the losing carrier account."
              },
              "Triggered": {
                "description": "The Triggered field must be set to true if you want an activation time other than the 11:30 AM ET default. The desired activation time can then be specified in the time portion of the RequestedFocDate. Triggered activation is not yet supported for toll free port-in orders.",
                "type": "string"
              }
            }
          }
        }
      },
      "ActivationStatusResponse": {
        "type": "object",
        "properties": {
          "ActivationStatusResponse": {
            "$ref": "#/components/schemas/ActivationStatus"
          }
        }
      },
      "ActivationStatusErrorResponse": {
        "$ref": "#/components/schemas/ResponseStatus"
      },
      "TelephoneDetailsReports": {
        "type": "object",
        "properties": {
          "TelephoneDetailsReports": {
            "type": "object",
            "properties": {
              "TelephoneDetailsReport": {
                "type": "object",
                "properties": {
                  "AreaCode": {
                    "description": "The first 3 digits of a 10-digit North American Numbering Plan telephone number.",
                    "type": "integer"
                  },
                  "Count": {
                    "description": "Total number of area codes associated with the specified port-in number.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "TelephoneDetailsReportsNPAXX": {
        "type": "object",
        "properties": {
          "TelephoneDetailsReports": {
            "type": "object",
            "properties": {
              "NPA-NXX": {
                "description": "The first 6 digits of a 10-digit North American Numbering Plan telephone number.",
                "type": "integer"
              },
              "Count": {
                "description": "Total number of NPA-NXX codes associated with the specified port-in number",
                "type": "integer"
              }
            }
          }
        }
      },
      "Quantity": {
        "type": "object",
        "properties": {
          "Quantity": {
            "type": "object",
            "properties": {
              "Count": {
                "description": "Total count of telephone numbers associated with the specified port-in number.",
                "type": "integer"
              }
            }
          }
        }
      },
      "PortinsTotal": {
        "type": "object",
        "properties": {
          "Quantity": {
            "type": "object",
            "properties": {
              "Count": {
                "description": "Total count of port-ins.",
                "type": "integer"
              }
            }
          }
        }
      },
      "CsrResponses": {
        "type": "object",
        "properties": {
          "CsrResponses": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "Links": {
                "$ref": "#/components/schemas/Links"
              },
              "CsrResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CsrResponse"
                }
              }
            }
          }
        }
      },
      "CsrResponse": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "description": "Internal customer order id for tracking the order.  Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters.",
            "type": "string"
          },
          "LastModifiedBy": {
            "description": "This is the user-name of the user that last modified the CSR Order.",
            "type": "string"
          },
          "OrderCreateDate": {
            "description": "The date and time on which the CSR order was created.",
            "type": "string"
          },
          "AccountId": {
            "description": "This is the account that the searched-for order will be contributing to. Specifying this parameter will restrict the search to portin orders within the specified account.",
            "type": "integer"
          },
          "OrderId": {
            "description": "The identifier that uniquely identifies a CSR order.",
            "type": "string"
          },
          "LastModifiedDate": {
            "description": "This is the date when Port-in Order was last modified.",
            "type": "string"
          },
          "Status": {
            "description": "The state of the CSRS order.  Possible values are: COMPLETE, FAILED.",
            "type": "string"
          },
          "AccountNumber": {
            "description": "The account number that the telephone number being queried is associated with on the carrier that currently hosts that number.",
            "type": "string"
          },
          "AccountTelephoneNumber": {
            "description": "Identifies the account telephone number assigned by the current service provider. Alphanumeric characters are supported with a max length of 10 characters.",
            "type": "string"
          },
          "EndUserName": {
            "description": "Identifies the name of the end user associated with the telephone number being queried. Alphanumeric characters are supported with a max length of 100 characters.",
            "type": "string"
          },
          "AuthorizingUserName": {
            "description": "Identifies the name of the end user who signed the authorization. Alphanumeric characters are supported with a max length of 100 characters.",
            "type": "string"
          },
          "CustomerCode": {
            "description": "Identifies the customer code associated with the service provider. Must be numeric characters only with a max length of 3 characters.",
            "type": "string"
          },
          "EndUserPIN": {
            "description": "Identifies the end user’s personal identification number (PIN). Alphanumeric characters are supported with a max length of 50 characters.",
            "type": "string"
          },
          "AddressLine1": {
            "description": "Identifies the address line 1 portion of the service address. Alphanumeric characters are supported with a max length of 200 characters.",
            "type": "string"
          },
          "City": {
            "description": "Identifies the city of the end user where the telephone number is being serviced. Alphanumeric characters are supported with a max length of 100 characters.",
            "type": "string"
          },
          "State": {
            "description": "Identifies the abbreviation for the state or province of the end user where the telephone number is being serviced. Must be alpha characters only in the format XX with a max length of 2 characters, where XX is the state or province abbreviation.",
            "type": "string"
          },
          "ZIPCode": {
            "description": "Identifies the ZIP code, ZIP Code + extension, or postal code or the end user where the telephone number is being serviced. Alphanumeric characters are supported with a max length of 10 characters (including the dash if using ZIP Code with extension).",
            "type": "string"
          },
          "TypeOfService": {
            "description": "The type of service identifying the end user account. Must be alphabetic characters only with a max length of 50 characters.",
            "type": "string"
          },
          "CsrData": {
            "type": "object",
            "properties": {
              "AccountNumber": {
                "description": "Identifies the main account number on your bill, assigned by the current service provider. Alphanumeric characters are supported with a max length of 20 characters.",
                "type": "string"
              },
              "CustomerName": {
                "description": "The subscriber name associated with the telephone number being queried.",
                "type": "string"
              },
              "ServiceAddress": {
                "type": "object",
                "description": "The service address associated with the telephone number being queried.",
                "properties": {
                  "UnparsedAddress": {
                    "description": "The service address other than the City, State, and ZIP.",
                    "type": "string"
                  },
                  "City": {
                    "description": "Identifies the city of the end user where the telephone number is being serviced. Alphanumeric characters are supported with a max length of 100 characters.",
                    "type": "string"
                  },
                  "State": {
                    "description": "Identifies the abbreviation for the state or province of the end user where the telephone number is being serviced. Must be alpha characters only in the format XX with a max length of 2 characters, where XX is the state or province abbreviation.",
                    "type": "string"
                  },
                  "Zip": {
                    "description": "Identifies the ZIP code, ZIP Code + extension, or postal code or the end user where the telephone number is being serviced. Alphanumeric characters are supported with a max length of 10 characters (including the dash if using ZIP Code with extension).",
                    "type": "string"
                  }
                }
              },
              "WorkingTelephoneNumber": {
                "description": "The telephone number for which the CSR was retrieved.",
                "type": "string"
              },
              "WorkingTelephoneNumbersOnAccount": {
                "type": "array",
                "description": "The list of all telephone numbers on the account, associate with the billing telephone number.",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              }
            }
          }
        }
      },
      "TNs": {
        "type": "object",
        "properties": {
          "TNs": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "TelephoneNumbers": {
                "type": "object",
                "properties": {
                  "Count": {
                    "type": "integer"
                  },
                  "TelephoneNumber": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TelephoneNumber"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ResponseSelectWrapper": {
        "type": "object",
        "properties": {
          "ResponseSelectWrapper": {
            "type": "object",
            "properties": {
              "ListOrderIdUserIdDate": {
                "type": "object",
                "properties": {
                  "TotalCount": {
                    "type": "integer"
                  },
                  "Links": {
                    "$ref": "#/components/schemas/Links"
                  },
                  "OrderIdUserIdDate": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OrderIdUserIdDate"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OrderIdUserIdDate": {
        "type": "object",
        "properties": {
          "CountOfTNs": {
            "type": "integer"
          },
          "userId": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "OrderType": {
            "type": "string"
          },
          "OrderDate": {
            "type": "string"
          },
          "OrderStatus": {
            "type": "string"
          },
          "TelephoneNumberDetails": {
            "$ref": "#/components/schemas/TelephoneNumberDetails"
          }
        }
      },
      "DisconnectTelephoneNumberOrderResponse": {
        "type": "object",
        "properties": {
          "DisconnectTelephoneNumberOrderResponse": {
            "type": "object",
            "properties": {
              "orderRequest": {
                "$ref": "#/components/schemas/orderRequest"
              }
            }
          }
        }
      },
      "orderRequest": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "OrderCreateDate": {
            "type": "string"
          },
          "DisconnectTelephoneNumberOrderType": {
            "$ref": "#/components/schemas/DisconnectTelephoneNumberOrderType"
          }
        }
      },
      "DisconnectTelephoneNumberOrderErrorResponse": {
        "type": "object",
        "properties": {
          "DisconnectTelephoneNumberOrderResponse": {
            "type": "object",
            "properties": {
              "ErrorList": {
                "type": "array",
                "items": {
                  "properties": {
                    "Error": {
                      "type": "object",
                      "properties": {
                        "Code": {
                          "type": "integer"
                        },
                        "Description": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "orderRequest": {
                "type": "object",
                "properties": {
                  "OrderCreateDate": {
                    "type": "string",
                    "format": "datetime",
                    "example": "2019-11-19T14:06:57.254Z"
                  },
                  "DisconnectTelephoneNumberOrderType": {
                    "$ref": "#/components/schemas/DisconnectTelephoneNumberOrderType"
                  }
                }
              }
            }
          }
        }
      },
      "DisconnectTelephoneNumberOrderFetchResponse": {
        "type": "object",
        "properties": {
          "DisconnectTelephoneNumberOrderResponse": {
            "type": "object",
            "properties": {
              "DisconnectedTelephoneNumberList": {
                "type": "array",
                "items": {
                  "properties": {
                    "TelephoneNumber": {
                      "$ref": "#/components/schemas/TelephoneNumber"
                    }
                  }
                }
              },
              "orderRequest": {
                "$ref": "#/components/schemas/orderRequest"
              },
              "OrderStatus": {
                "type": "string"
              }
            }
          }
        }
      },
      "DldaOrderResponse": {
        "type": "object",
        "properties": {
          "DldaOrderResponse": {
            "type": "object",
            "properties": {
              "DldaOrder": {
                "$ref": "#/components/schemas/DldaOrderPayload"
              }
            }
          }
        }
      },
      "DldaOrderErrorResponse": {
        "type": "object",
        "properties": {
          "DldaOrderResponse": {
            "type": "object",
            "properties": {
              "DldaOrder": {
                "$ref": "#/components/schemas/DldaOrderPayload"
              },
              "ResponseStatus": {
                "$ref": "#/components/schemas/ResponseStatus"
              }
            }
          }
        }
      },
      "DldaOrderErrorNotFoundResponse": {
        "type": "object",
        "properties": {
          "DldaOrderResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "DldaOrderReportErrorResponse": {
        "type": "object",
        "properties": {
          "DldaOrderReportResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "E911Orders": {
        "type": "object",
        "properties": {
          "E911Orders": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "E911OrderSummary": {
                "type": "array",
                "items": {
                  "properties": {
                    "accountId": {
                      "type": "integer"
                    },
                    "CountOfTNs": {
                      "type": "integer"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "type": "string"
                    },
                    "OrderDate": {
                      "type": "string"
                    },
                    "OrderType": {
                      "type": "string"
                    },
                    "OrderStatus": {
                      "type": "string"
                    },
                    "OrderId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "E911OrderResponse": {
        "type": "object",
        "properties": {
          "E911OrderResponse": {
            "type": "object",
            "properties": {
              "E911Order": {
                "$ref": "#/components/schemas/E911OrderPayload"
              }
            }
          }
        }
      },
      "E911OrderFetchResponse": {
        "type": "object",
        "properties": {
          "E911Order": {
            "type": "object",
            "properties": {
              "OrderCreateDate": {
                "type": "string"
              },
              "AccountId": {
                "type": "integer"
              },
              "CreatedByUser": {
                "type": "string"
              },
              "OrderId": {
                "type": "string"
              },
              "LastModifiedDate": {
                "type": "string"
              },
              "Address": {
                "$ref": "#/components/schemas/E911Address"
              },
              "CallerName": {
                "type": "string"
              },
              "CustomerId": {
                "type": "string"
              },
              "ProcessingStatus": {
                "type": "string"
              },
              "TelephoneNumbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              },
              "ErrorList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "AlternateEndUserIdentifiers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AlternateEndUserIdentifier"
                }
              },
              "AdditionalAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "OrderType": {
                "type": "string"
              }
            }
          }
        }
      },
      "E911OrderReportResponse": {
        "type": "object",
        "properties": {
          "E911OrderReportResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "TnE911AddressResponse" : {
        "type" : "object",
        "properties" : {
          "Address" : {
            "$ref" : "#/components/schemas/TnE911Address"
          },
          "EmergencyNotificationGroup" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupPayload"
          },
          "TnE911Address" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TnE911AddressPayload"
            }
          }
        }
      },
      "TnE911AddressPayload" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "integer"
          },
          "Address" : {
            "$ref" : "#/components/schemas/TnE911Address"
          },
          "EmergencyNotificationGroup" : {
            "$ref" : "#/components/schemas/EmergencyNotificationGroupPayload"
          }
        }
      },
      "EmergencyNotificationGroupPayload" : {
        "type" : "object",
        "properties" : {
          "Identifier" : {
            "$ref": "#/components/schemas/Identifier"
          },
          "CreatedDate" : {
            "type" : "string"
          },
          "ModifiedBy" : {
            "type" : "string"
          },
          "ModifiedDate" : {
            "type" : "string"
          },
          "Description" : {
            "type" : "string"
          },
          "EmergencyNotificationRecipients" : {
            "$ref" : "#/components/schemas/EmergencyNotificationRecipientsPayload"
          },
          "EepToEngAssociations" : {
            "$ref" : "#/components/schemas/EepToEngAssociationsPayload"
          },
          "EndpointCount" : {
            "type" : "integer"
          }
        }
      },
      "EepToEngAssociationsPayload": {
        "type": "object",
        "properties": {
          "EepTns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "EepAeuiIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          },
          "Endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          }
        }
      },
      "EmergencyNotificationRecipientsPayload" : {
        "type" : "object",
        "properties" : {
          "EmergencyNotificationRecipient" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmergencyNotificationRecipientPayload"
            }
          }
        }
      },
      "EmergencyNotificationRecipientPayload" : {
        "type" : "object",
        "properties" : {
          "Identifier": {
            "$ref": "#/components/schemas/Identifier"
          },
          "CreatedDate": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "EmailAddress": {
            "type": "string"
          },
          "Sms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "Tts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "Callback": {
            "$ref": "#/components/schemas/CallbackPayload"
          },
          "GroupCount": {
            "type": "string"
          }
        }
      },
      "CallbackPayload" : {
        "type" : "object",
        "properties" : {
          "Url" : {
            "type" : "string"
          }
        }
      },
      "TnE911Address" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Country" : {
            "type" : "string"
          },
          "HouseSuffix" : {
            "type" : "string"
          },
          "PreDirectional" : {
            "type" : "string"
          },
          "StreetName" : {
            "type" : "string"
          },
          "PostDirectional" : {
            "type" : "string"
          },
          "AddressLine2" : {
            "type" : "string"
          },
          "StateCode" : {
            "type" : "string"
          },
          "Latitude" : {
            "type" : "string"
          },
          "Longitude" : {
            "type" : "string"
          },
          "HouseNumber" : {
            "type" : "string"
          },
          "City" : {
            "type" : "string"
          },
          "Zip" : {
            "type" : "string"
          },
          "PlusFour" : {
            "type" : "string"
          }
        }
      },
      "SipPeerProductsResponse": {
        "type": "object",
        "properties": {
          "Products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          }
        }
      },
      "SipPeerOriginationSettingsResponse": {
        "type": "object",
        "properties": {
          "SipPeerOriginationSettings": {
            "$ref": "#/components/schemas/SipPeerProductSettings"
          }
        }
      },
      "SipPeerTerminationSettingsResponse": {
        "type": "object",
        "properties": {
          "SipPeerTerminationSettings": {
            "$ref": "#/components/schemas/SipPeerProductSettings"
          }
        }
      },
      "SipPeerProductSettings": {
        "type": "object",
        "properties": {
          "HttpSettings": {
            "$ref": "#/components/schemas/SipPeerHttpSettings"
          },
          "VoiceProtocol": {
            "type": "string"
          }
        }
      },
      "SipPeerHttpSettings": {
        "title": "HttpSettings",
        "type": "object",
        "properties": {
          "HttpVoiceV2AppId": {
            "type": "string"
          }
        }
      },
      "SipPeerOriginationSettingsRequest": {
        "title": "SipPeerHttpSettings",
        "type": "object",
        "required": [
          "VoiceProtocol"
        ],
        "properties": {
          "VoiceProtocol": {
            "$ref": "#/components/schemas/ProductVoiceProtocol"
          },
          "HttpSettings": {
            "$ref": "#/components/schemas/ProductHttpSettings"
          }
        }
      },
      "SipPeerTerminationSettingsRequest": {
        "title": "SipPeerTerminationSettings",
        "type": "object",
        "required": [
          "VoiceProtocol"
        ],
        "properties": {
          "VoiceProtocol": {
            "$ref": "#/components/schemas/ProductVoiceProtocol"
          },
          "HttpSettings": {
            "$ref": "#/components/schemas/ProductHttpSettings"
          }
        }
      },
      "ProductVoiceProtocol": {
        "type": "string",
        "enum": [
          "HTTP",
          "SIP"
        ]
      },
      "ProductHttpSettings": {
        "description": "Only allowed if VoiceProtocol is HTTP",
        "type": "object",
        "properties": {
          "HttpVoiceV2AppId": {
            "type": "string"
          }
        }
      },
      "SipPeerSmsFeatureResponse": {
        "type": "object",
        "properties": {
          "SipPeerSmsFeature": {
            "$ref": "#/components/schemas/SipPeerSmsFeature"
          }
        }
      },
      "SipPeerSmsFeature": {
        "type": "object",
        "properties": {
          "SipPeerSmsFeatureSettings": {
            "$ref": "#/components/schemas/SipPeerSmsFeatureSettings"
          },
          "SmppHosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmsHost"
            }
          },
          "HttpSettings": {
            "$ref": "#/components/schemas/SmsHttpSettings"
          }
        }
      },
      "SipPeerSmsFeatureSettings": {
        "title": "SmsSettings",
        "type": "object",
        "properties": {
          "TollFree": {
            "type": "boolean"
          },
          "ShortCode": {
            "type": "boolean"
          },
          "A2pLongCode": {
            "type": "string",
            "enum": [
              "DEFAULT_ON",
              "DEFAULT_OFF",
              "INCORRECT_VALUE"
            ]
          },
          "A2pMessageClass": {
            "type": "string"
          },
          "Protocol": {
            "type": "string",
            "enum": [
              "SIP",
              "SMPP",
              "HTTP"
            ]
          },
          "Zone1": {
            "type": "boolean"
          },
          "Zone2": {
            "type": "boolean"
          },
          "Zone3": {
            "type": "boolean"
          },
          "Zone4": {
            "type": "boolean"
          },
          "Zone5": {
            "type": "boolean"
          }
        }
      },
      "SmsHost": {
        "type": "object",
        "properties": {
          "HostName": {
            "type": "string"
          },
          "Port": {
            "type": "string"
          },
          "HostId": {
            "type": "integer"
          },
          "Priority": {
            "type": "integer"
          },
          "ConnectionType": {
            "type": "string",
            "enum": [
              "TRANSCEIVER",
              "SENDER_ONLY",
              "RECEIVER_ONLY"
            ]
          }
        }
      },
      "SmsHttpSettings": {
        "title": "HttpSettings",
        "type": "object",
        "properties": {
          "ProxyPeerId": {
            "type": "integer"
          }
        }
      },
      "MmsFeatureResponse": {
        "type": "object",
        "properties": {
          "MmsFeature": {
            "$ref": "#/components/schemas/SipPeerMmsFeature"
          }
        }
      },
      "SipPeerMmsFeature": {
        "title": "MmsFeature",
        "type": "object",
        "properties": {
          "MmsSettings": {
            "$ref": "#/components/schemas/MmsSettings"
          },
          "Protocols": {
            "$ref": "#/components/schemas/MmsProtocols"
          }
        }
      },
      "MmsSettings": {
        "type": "object",
        "properties": {
          "Protocol": {
            "type": "string",
            "enum": [
              "MM4",
              "HTTP"
            ]
          }
        }
      },
      "MmsProtocols": {
        "title": "Protocols",
        "type": "object",
        "properties": {
          "MM4": {
            "$ref": "#/components/schemas/MmsMM4Protocol"
          },
          "HTTP": {
            "$ref": "#/components/schemas/MmsHttpProtocol"
          }
        }
      },
      "MmsHttpProtocol": {
        "title": "HTTP",
        "type": "object",
        "properties": {
          "HttpSettings": {
            "$ref": "#/components/schemas/MmsHttpSettings"
          }
        }
      },
      "MmsHttpSettings": {
        "title": "HttpSettings",
        "type": "object",
        "properties": {
          "ProxyPeerId": {
            "type": "integer"
          }
        }
      },
      "MmsMM4Protocol": {
        "title": "Mm4Hosts",
        "type": "object",
        "properties": {
          "Tls": {
            "type": "string"
          },
          "MmsMM4TermHosts": {
            "$ref": "#/components/schemas/MmsMM4TermHosts"
          },
          "MmsMM4OrigHosts": {
            "$ref": "#/components/schemas/MmsMM4OrigHosts"
          }
        }
      },
      "MmsMM4TermHosts": {
        "type": "object",
        "properties": {
          "TermHosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MmsMM4TermHost"
            }
          }
        }
      },
      "MmsMM4TermHost": {
        "title": "TermHost",
        "type": "object",
        "properties": {
          "HostName": {
            "type": "string"
          },
          "Port": {
            "type": "string"
          },
          "HostId": {
            "type": "integer"
          }
        }
      },
      "MmsMM4OrigHosts": {
        "type": "object",
        "properties": {
          "OrigHosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MmsMM4OrigHost"
            }
          }
        }
      },
      "MmsMM4OrigHost": {
        "title": "OrigHosts",
        "type": "object",
        "properties": {
          "HostName": {
            "type": "string"
          },
          "Port": {
            "type": "string"
          },
          "HostId": {
            "type": "integer"
          },
          "Priority": {
            "type": "integer"
          }
        }
      },
      "MmsFeatureMmsSettingsResponse": {
        "type": "object",
        "properties": {
          "MmsSettings": {
            "$ref": "#/components/schemas/MmsSettings"
          }
        }
      },
      "ApplicationsSettingsResponse": {
        "type": "object",
        "properties": {
          "ApplicationsSettings": {
            "$ref": "#/components/schemas/ApplicationsSettings"
          }
        }
      },
      "ApplicationsSettings": {
        "type": "object",
        "properties": {
          "HttpMessagingV2AppId": {
            "type": "string"
          }
        }
      },
      "SipPeerMessagingSettingsResponse": {
        "type": "object",
        "properties": {
          "SipPeerMessagingSettings": {
            "$ref": "#/components/schemas/SipPeerMessagingSettings"
          }
        }
      },
      "SipPeerMessagingSettings": {
        "type": "object",
        "properties": {
          "BreakOutCountries": {
            "type": "array",
            "items": {
              "properties": {
                "Country": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "SiteOrdersResponse": {
        "type": "object",
        "properties": {
          "ResponseSelectWrapper": {
            "type": "object",
            "properties": {
              "ListOrderIdUserIdDate": {
                "type": "object",
                "properties": {
                  "TotalCount": {
                    "type": "integer"
                  },
                  "OrderIdUserIdDate": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OrderSummary"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SiteTNsResponse": {
        "type": "object",
        "properties": {
          "SiteTNs": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              }
            }
          }
        }
      },
      "ImportVoiceTnOrdersResponseList": {
        "type": "object",
        "properties": {
          "ImportVoiceTnOrders": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              },
              "ImportVoiceTnOrderSummary": {
                "$ref": "#/components/schemas/ImportVoiceTnOrderSummary"
              }
            }
          }
        }
      },
      "ImportVoiceTnOrderSummary": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string"
          },
          "CountsOfTNs": {
            "type": "integer"
          },
          "OrderType": {
            "type": "string",
            "enum": [
              "import_voice_tn_orders"
            ]
          },
          "OrderDate": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "UserId": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "RECEIVED",
              "PROCESSING",
              "COMPLETE",
              "PARTIAL",
              "FAILED"
            ]
          }
        }
      },
      "ImportVoiceTnOrderRequest": {
        "title": "ImportVoiceTnOrder",
        "properties": {
          "ImportVoiceTnOrder": {
            "type": "object",
            "required": [
              "TelephoneNumbers",
              "SiteId"
            ],
            "properties": {
              "TelephoneNumbers": {
                "description": "List of telephone numbers to be moved",
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "TelephoneNumber": {
                      "description": "Ten digit phone number with no dots or dashes",
                      "type": "integer"
                    }
                  }
                }
              },
              "SiteId": {
                "description": "A site id to which telephone number will be moved",
                "type": "integer"
              },
              "CustomerOrderId": {
                "description": "Internal customer order id for tracking the order. Only alphanumeric values, dashes and spaces are allowed. Max length is 40 characters",
                "type": "string"
              },
              "SipPeerId": {
                "description": "A sippeer id of provided site to which telephone number will be moved",
                "type": "integer"
              }
            }
          }
        }
      },
      "ImportVoiceTnOrderResponse": {
        "type": "object",
        "properties": {
          "ImportVoiceTnOrderResponse": {
            "type": "object",
            "properties": {
              "ImportVoiceTnOrder": {
                "$ref": "#/components/schemas/ImportVoiceTnOrder"
              }
            }
          }
        }
      },
      "ImportVoiceTnOrder": {
        "type": "object",
        "properties": {
          "CustomerOrderId": {
            "type": "string"
          },
          "OrderCreateDate": {
            "type": "string"
          },
          "AccountId": {
            "type": "string"
          },
          "CreatedByUser": {
            "type": "string"
          },
          "LastModifiedDate": {
            "type": "string"
          },
          "SiteId": {
            "type": "string"
          },
          "SipPeerId": {
            "type": "string"
          },
          "TelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          },
          "ProcessingStatus": {
            "type": "string",
            "enum": [
              "RECEIVED",
              "PROCESSING",
              "COMPLETE",
              "PARTIAL",
              "FAILED"
            ]
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ImportVoiceTnOrderError": {
        "type": "object",
        "properties": {
          "ImportVoiceTnOrderResponse": {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        }
      },
      "RemoveImportedVoiceTnOrders": {
        "type": "object",
        "properties": {
          "TotalCount": {
            "type": "integer"
          },
          "Links": {
            "$ref": "#/components/schemas/PaginationLinks"
          },
          "RemoveImportedVoiceTnOrderSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSummary"
            }
          }
        }
      },
      "RemoveImportedVoiceTnOrderRequest": {
        "required": [
          "TelephoneNumbers"
        ],
        "title": "RemoveImportedVoiceTnOrder",
        "properties": {
          "CustomerOrderId": {
            "type": "string",
            "description": "Internal customer order id for tracking the order. Only alphanumeric values, dashes and spaces are allowed",
            "maxLength": 40
          },
          "TelephoneNumbers": {
            "description": "Ten digit phone number with no dots or dashes. One or more is required. Use a PhoneNumber tag for each phone number in the list",
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/TelephoneNumber"
            }
          }
        }
      },
      "RemoveImportedVoiceTnOrderResponse": {
        "type": "object",
        "properties": {
          "RemoveImportedVoiceTnOrder": {
            "type": "object",
            "properties": {
              "CustomerOrderId": {
                "type": "string"
              },
              "OrderCreateDate": {
                "type": "string"
              },
              "AccountId": {
                "type": "integer"
              },
              "CreatedByUser": {
                "type": "string"
              },
              "OrderId": {
                "type": "string"
              },
              "LastModifiedDate": {
                "type": "string"
              },
              "ProcessingStatus": {
                "type": "string",
                "enum": [
                  "RECEIVED",
                  "PROCESSING",
                  "COMPLETE",
                  "PARTIAL",
                  "FAILED"
                ]
              },
              "TelephoneNumbers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumber"
                }
              },
              "Errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TelephoneNumberGroupError"
                }
              }
            }
          }
        }
      },
      "SippeerRequest": {
        "type": "object",
        "properties": {
          "PeerName": {
            "description": "Mandatory name for the SIP Peer",
            "maxLength": 10,
            "type": "string"
          },
          "Description": {
            "description": "Description for the SIP Peer",
            "type": "string"
          },
          "IsDefaultPeer": {
            "description": "Value is True or False. The Default SIP Peer is the default \"destination\" for any Telephone Numbers that are ordered for the Site in which the SIP Peer resides.  Each Site can have only 1 default SIP Peer. You can configure multiple SIP Peers on a Site",
            "type": "boolean"
          },
          "HostName": {
            "description": "The IP Address or Host Name of the address to be used for the VoiceHosts or VoiceHostGroups addresses",
            "type": "string"
          },
          "Port": {
            "description": "Optional Port Number for Voice and Termination hosts. This is an optional parameter that has default values that are dependent on the Application",
            "type": "integer"
          },
          "VoiceHosts": {
            "description": "These addresses, comprised of HostName and optional Port, are used by the Bandwidth network to send calls to for Origination services. The VoiceHosts list of IP addresses used for an active/standby address selection mechanism, where the first address is attempted, followed by the second address and so on. Except under failure situations the first address in the list is preferred. Maximum of 10 hosts - can be IP address or Fully Qualified Domain Name",
            "type": "array",
            "items": {
              "properties": {
                "Host": {
                  "type": "object",
                  "properties": {
                    "HostName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "VoiceHostGroups": {
            "description": "The VoiceHostGroups element is comprised of one VoiceHostGroup element, which is used to randomly distribute traffic amongst up to 10 IP addresses. Failover behavior is retained within the group",
            "type": "array",
            "items": {
              "properties": {
                "VoiceHostGroup": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hosts"
                  }
                }
              }
            }
          },
          "TerminationHosts": {
            "description": "These addresses, comprised of IP or Subnet(CIDR format) and optional Port, are used by the Bandwidth network to send calls to for Termination services. Maximum of 10 hosts - can be IP address or subnets. In case of subnet you should specify NetworkAddress of subnet as IP",
            "type": "array",
            "items": {
              "properties": {
                "TerminationHost": {
                  "type": "object",
                  "properties": {
                    "HostName": {
                      "type": "string"
                    },
                    "Port": {
                      "type": "string"
                    },
                    "CustomerTrafficAllowed": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "Address": {
            "description": "Billing or Service Address for the SIP Peer.  This element is optional for accounts except for accounts with the UC Trunking Product.  If the address element is provided the following fields can be provided:",
            "type": "object",
            "required": [
              "HouseNumber",
              "StreetName",
              "City",
              "StateCode",
              "Zip",
              "AddressType"
            ],
            "properties": {
              "HouseNumber": {
                "type": "string"
              },
              "HouseSuffix": {
                "type": "string"
              },
              "PreDirectional": {
                "type": "string"
              },
              "StreetName": {
                "type": "string"
              },
              "StreetSuffix": {
                "type": "string"
              },
              "PostDirectional": {
                "type": "string"
              },
              "City": {
                "type": "string"
              },
              "StateCode": {
                "type": "string"
              },
              "Zip": {
                "type": "string"
              },
              "PlusFour": {
                "type": "string"
              },
              "County": {
                "type": "string"
              },
              "Country": {
                "type": "string",
                "default": "US"
              },
              "AddressType": {
                "type": "string",
                "enum": [
                  "Billing",
                  "Service"
                ]
              }
            }
          }
        }
      },
      "BrandRequest": {
        "type": "object",
        "properties": {
          "Brand": {
            "type": "object",
            "properties": {
              "EntityType": {
                "description": "Entity type behind the brand. THis is the form of business establishment.",
                "type": "string",
                "enum": [
                  "PRIVATE_PROFIT",
                  "PUBLIC_PROFIT",
                  "NON_PROFIT",
                  "GOVERNMENT",
                  "SOLE_PROPRIETOR"
                ]
              },
              "AltBusinessId": {
                "description": "Alternate business identifier such as DUNS, LEI, GIIN.",
                "type": "string"
              },
              "AltBusinessIdType": {
                "type": "string",
                "enum": [
                  "NONE",
                  "DUNS",
                  "GIIN",
                  "LEI"
                ]
              },
              "BrandRelationship": {
                "description": "Enum value describing the relationship with your Account.",
                "type": "string",
                "enum": [
                  "BASIC_ACCOUNT",
                  "SMALL_ACCOUNT",
                  "MEDIUM_ACCOUNT",
                  "LARGE_ACCOUNT",
                  "KEY_ACCOUNT"
                ]
              },
              "City": {
                "type": "string",
                "maxLength": 100
              },
              "CompanyName": {
                "description": "Legal Company Name. Not required for Sole Proprietor.",
                "type": "string",
                "maxLength": 100
              },
              "Country": {
                "description": "ISO2 2 characters country code.",
                "type": "string",
                "example": "US"
              },
              "DisplayName": {
                "type": "string",
                "maxLength": 100
              },
              "Ein": {
                "description": "Government assigned corporate tax ID, EIN is 9-digits in U.S. Not required for Sole_Proprietor.",
                "type": "string",
                "maxLength": 9
              },
              "Email": {
                "description": "Valid email address of brand support contact.",
                "type": "string",
                "maxLength": 100
              },
              "Phone": {
                "description": "Valid phone number in e.164 international format.",
                "type": "string",
                "example": "+18009999999"
              },
              "PostalCode": {
                "description": "Postal codes. Use 5 digit zipcode for United States.",
                "type": "string",
                "maxLength": 5
              },
              "State": {
                "description": "State name. Must be 2 letters code for United States.",
                "type": "string",
                "maxLength": 2
              },
              "Street": {
                "type": "string",
                "maxLength": 100
              },
              "StockExchange": {
                "type": "string",
                "enum": [
                  "NONE",
                  "NASDAQ",
                  "NYSE",
                  "AMEX",
                  "AMX",
                  "ASX",
                  "B3",
                  "BME",
                  "BSE",
                  "FRA",
                  "ICEX",
                  "JPX",
                  "JSE",
                  "KRX",
                  "LON",
                  "NSE",
                  "OMX",
                  "SEHK",
                  "SSE",
                  "STO",
                  "SWX",
                  "SZSE",
                  "TSX",
                  "TWSE",
                  "VSE"
                ]
              },
              "StockSymbol": {
                "type": "string"
              },
              "Vertical": {
                "description": "Enum value describing vertical or industry segment of the brand. Disabled for Sole_Proprieto",
                "type": "string",
                "enum": [
                  "REAL_ESTATE",
                  "ENERGY",
                  "HEALTHCARE",
                  "ENTERTAINMENT",
                  "RETAIL",
                  "AGRICULTURE",
                  "INSURANCE",
                  "EDUCATION",
                  "HOSPITALITY",
                  "FINANCIAL",
                  "GAMBLING",
                  "CONSTRUCTION",
                  "NGO",
                  "MANUFACTURING",
                  "GOVERNMENT",
                  "TECHNOLOGY",
                  "COMMUNICATION"
                ]
              },
              "Website": {
                "type": "string",
                "maxLength": 100
              },
              "IsMain": {
                "description": "true or false. True if creating 'My Brand', false if creating 'Customer Brand'",
                "type": "boolean"
              }
            },
            "required": [
              "EntityType",
              "BrandRelationship",
              "City",
              "CompanyName",
              "Country",
              "DisplayName",
              "Ein",
              "Email",
              "Phone",
              "PostalCode",
              "State",
              "Street",
              "Vertical",
              "IsMain"
            ]
          }
        }
      },
      "Brand": {
        "type": "object",
        "properties": {
          "EntityType": {
            "description": "Entity type behind the brand. THis is the form of business establishment.",
            "type": "string",
            "enum": [
              "PRIVATE_PROFIT",
              "PUBLIC_PROFIT",
              "NON_PROFIT",
              "GOVERNMENT",
              "SOLE_PROPRIETOR"
            ]
          },
          "AltBusinessId": {
            "description": "Alternate business identifier such as DUNS, LEI, GIIN.",
            "type": "string"
          },
          "AltBusinessIdType": {
            "type": "string",
            "enum": [
              "NONE",
              "DUNS",
              "GIIN",
              "LEI"
            ]
          },
          "BrandRelationship": {
            "description": "Enum value describing the relationship with your Account.",
            "type": "string",
            "enum": [
              "BASIC_ACCOUNT",
              "SMALL_ACCOUNT",
              "MEDIUM_ACCOUNT",
              "LARGE_ACCOUNT",
              "KEY_ACCOUNT"
            ]
          },
          "City": {
            "type": "string"
          },
          "CompanyName": {
            "description": "Legal Company Name.",
            "type": "string"
          },
          "Country": {
            "description": "ISO2 2 characters country code.",
            "type": "string"
          },
          "DisplayName": {
            "type": "string"
          },
          "Ein": {
            "description": "Government assigned corporate tax ID.",
            "type": "string"
          },
          "Email": {
            "description": "Valid email address of brand support contact.",
            "type": "string"
          },
          "Phone": {
            "description": "Valid phone number in e.164 international format.",
            "type": "string"
          },
          "PostalCode": {
            "description": "Postal codes. Use 5 digit zipcode for United States.",
            "type": "string"
          },
          "State": {
            "description": "State name. Must be 2 letters code for United States.",
            "type": "string"
          },
          "Street": {
            "type": "string"
          },
          "StockExchange": {
            "type": "string",
            "enum": [
              "NONE",
              "NASDAQ",
              "NYSE",
              "AMEX",
              "AMX",
              "ASX",
              "B3",
              "BME",
              "BSE",
              "FRA",
              "ICEX",
              "JPX",
              "JSE",
              "KRX",
              "LON",
              "NSE",
              "OMX",
              "SEHK",
              "SSE",
              "STO",
              "SWX",
              "SZSE",
              "TSX",
              "TWSE",
              "VSE"
            ]
          },
          "StockSymbol": {
            "type": "string"
          },
          "Vertical": {
            "description": "Enum value describing vertical or industry segment of the brand.",
            "type": "string",
            "enum": [
              "REAL_ESTATE",
              "ENERGY",
              "HEALTHCARE",
              "ENTERTAINMENT",
              "RETAIL",
              "AGRICULTURE",
              "INSURANCE",
              "EDUCATION",
              "HOSPITALITY",
              "FINANCIAL",
              "GAMBLING",
              "CONSTRUCTION",
              "NGO",
              "MANUFACTURING",
              "GOVERNMENT",
              "TECHNOLOGY",
              "COMMUNICATION"
            ]
          },
          "Website": {
            "type": "string"
          },
          "IsMain": {
            "type": "boolean"
          }
        }
      },
      "BrandResponse": {
        "type": "object",
        "properties": {
          "BrandResponse": {
            "type": "object",
            "properties": {
              "Brand": {
                "$ref": "#/components/schemas/Brand"
              }
            }
          }
        }
      },
      "BrandErrorResponse": {
        "type": "object",
        "properties": {
          "BrandResponse": {
            "type": "object",
            "properties": {
              "Brand": {
                "$ref": "#/components/schemas/ResponseStatus"
              }
            }
          }
        }
      },
      "BrandsErrorResponse": {
        "type": "object",
        "properties": {
          "BrandsResponse": {
            "type": "object",
            "properties": {
              "Brand": {
                "$ref": "#/components/schemas/ResponseStatus"
              }
            }
          }
        }
      },
      "BrandsResponse": {
        "type": "object",
        "properties": {
          "BrandsResponse": {
            "type": "object",
            "properties": {
              "Brands": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          }
        }
      },
      "SiteOrdersResponse": {
        "type": "object",
        "properties": {
          "ResponseSelectWrapper": {
            "type": "object",
            "properties": {
              "ListOrderIdUserIdDate": {
                "type": "object",
                "properties": {
                  "TotalCount": {
                    "type": "integer"
                  },
                  "OrderIdUserIdDate": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OrderSummary"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SiteTNsResponse": {
        "type": "object",
        "properties": {
          "SiteTNs": {
            "type": "object",
            "properties": {
              "TotalCount": {
                "type": "integer"
              }
            }
          }
        }
      },
      "ImportToAccountOrderRequest": {
        "title": "ImportTnAccountOrder",
        "properties": {
          "ImportToAccountNumberOrder": {
            "type": "object",
            "required": [
              "ImportToAccountNumberOrderType",
              "SiteId"
            ],
            "properties": {
              "ImportToAccountNumberOrderType": {
                "$ref": "#/components/schemas/ImportToAccountNumberOrderType"
              },
              "SiteId": {
                "description": "A site id to which telephone number will be imported",
                "type": "integer"
              },
              "PeerId": {
                "description": "A sippeer id of provided site to which telephone number will be imported",
                "type": "integer"
              }
            }
          }
        }
      },
      "ImportToAccountOrderResponseOrderRequest": {
        "title": "orderRequest",
        "properties": {
          "ImportToAccountNumberOrderType": {
            "$ref": "#/components/schemas/ImportToAccountNumberOrderType"
          },
          "SiteId": {
            "description": "A site id to which telephone number will be imported",
            "type": "integer"
          },
          "PeerId": {
            "description": "A sippeer id of provided site to which telephone number will be imported",
            "type": "integer"
          },
          "OrderCreatedDate": {
            "$ref": "#/components/schemas/OrderCreatedDate"
          }
        }
      },
      "ImportToAccountNumberOrderResponse": {
        "title": "ImportToAccountNumberOrderResponse",
        "properties": {
          "OrderRequest": {
            "type": "object",
            "properties": {
              "ImportToAccountNumberOrderType": {
                "$ref": "#/components/schemas/ImportToAccountNumberOrderType"
              },
              "id": {
                "description": "Assigned order id.",
                "type": "integer"
              },
              "OrderCreatedDate": {
                "$ref": "#/components/schemas/OrderCreatedDate"
              },
              "SiteId": {
                "description": "A site id to which telephone number will be imported",
                "type": "integer"
              },
              "PeerId": {
                "description": "A sippeer id of provided site to which telephone number will be imported",
                "type": "integer"
              },
              "ErrorList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "ImportToAccountNumberOrderErrorResponse": {
        "title": "ImportToAccountNumberOrderErrorResponse",
        "properties": {
          "OrderRequest": {
            "type": "object",
            "properties": {
              "ErrorList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "ImportToAccountNumberOrderResponseForGet": {
        "title": "ImportToAccountNumberOrderResponse",
        "properties": {
          "OrderRequest": {
            "type": "object",
            "properties": {
              "ImportedTelephoneNumberList": {
                "$ref": "#/components/schemas/ImportedTelephoneNumberList"
              },
              "orderRequest": {
                "$ref": "#/components/schemas/ImportToAccountOrderResponseOrderRequest"
              },
              "OrderStatus": {
                "type": "string"
              },
              "ImportedTelephoneNumberDetailList": {
                "$ref": "#/components/schemas/ImportedTelephoneNumberDetailList"
              },
              "ErrorList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "ImportToAccountNumberOrderType": {
        "type": "object",
        "required": [
          "TelephoneNumberList",
          "BillingType",
          "VendorName"
        ],
        "properties": {
          "TelephoneNumberList": {
            "$ref": "#/components/schemas/TelephoneNumberList"
          },
          "BatchId": {
            "$ref": "#/components/schemas/BatchId"
          },
          "BatchSize": {
            "$ref": "#/components/schemas/BatchSize"
          },
          "VendorName": {
            "$ref": "#/components/schemas/VendorName"
          },
          "BillingType": {
            "$ref": "#/components/schemas/BillingType"
          },
          "TnAttributes": {
            "$ref": "#/components/schemas/TnAttributes"
          },
          "InitialStatus": {
            "$ref": "#/components/schemas/InitialStatus"
          }
        }
      },
      "TelephoneNumberList": {
        "description": "List of telephone numbers to be imported",
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "properties": {
            "TelephoneNumber": {
              "description": "Ten digit phone number with no dots or dashes",
              "type": "integer"
            }
          }
        }
      },
      "ImportedTelephoneNumberList": {
        "description": "List of telephone numbers that were imported",
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "properties": {
            "TelephoneNumber": {
              "description": "Ten digit phone number with no dots or dashes",
              "type": "integer"
            }
          }
        }
      },
      "ImportedTelephoneNumberDetailList": {
        "description": "List of telephone numbers details that were imported",
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "properties": {
            "TelephoneNumberDetail": {
              "type": "object",
              "properties": {
                "FullNumber": {
                  "description": "Ten digit phone number with no dots or dashes",
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "BatchId": {
        "description": "A user-chosen id for the batch of phone numbers.  This Batch ID can span multiple number submissions.  Up to 10 alphanumeric characters.  If  the submission is not intended to be grouped into a batch of submissions then the Batch ID must be globally unique. It is recommended that the batch ids be globally unique, and that imports not be grouped together in batches by use of a common batch id.",
        "type": "string"
      },
      "BatchSize": {
        "description": "The number of TNs in the batch, aggregated across all of the orders in the batch. This total spans API Calls, so if 3 calls are necessary to import 15000 numbers, this value would be 15000.  It is recommended to use a batch size equal to the number of telephone numbers in the API call, and use a different batch name for each API call - essentially limiting a batch to a single API call.",
        "type": "integer"
      },
      "VendorName": {
        "description": "The vendor that owns the number that is being ported in.  If the number is manually ported to a partner’s network then this would reflect that partner.",
        "type": "string"
      },
      "BillingType": {
        "description": "Type of billing rules to be applied.",
        "type": "string",
        "enum": [
          "NOCHARGE",
          "PORTIN",
          "NEWNUMBER",
          "PROJECTPORT"
        ]
      },
      "NumberFormat": {
        "description": "Format of TNs to import.",
        "type": "string",
        "enum": [
          "10D",
          "E164",
          "USMOBILESC"
        ]
      },
      "TnAttributes": {
        "description": "List of phone number attributes to be assigned.",
        "type": "object",
        "properties": {
          "TnAttribute": {
            "type": "string",
            "enum": [
              "Protected"
            ]
          }
        }
      },
      "InitialStatus": {
        "description": "TN status that be assigned to imported telephone numbers. Required existence of \"Protected\" TnAttribute.",
        "type": "string",
        "enum": [
          "Available"
        ]
      },
      "Batches": {
        "type": "object",
        "properties": {
          "Batches": {
            "type": "object",
            "properties": {
              "Batch": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/Batch"
                }
              }
            }
          }
        }
      },
      "Batch": {
        "type": "object",
        "properties": {
          "BatchId": {
            "type": "string"
          },
          "OrderId": {
            "$ref": "#/components/schemas/OrderId"
          },
          "OrderCreateDate": {
            "$ref": "#/components/schemas/OrderCreatedDate"
          },
          "OrderStatus": {
            "type": "string"
          },
          "SubmittedTnCount": {
            "type": "integer"
          },
          "SuccessfulTnCount": {
            "type": "integer"
          },
          "BatchSize": {
            "type": "integer"
          }
        }
      },
      "MessagingA2pCampaignsResponse": {
        "type": "object",
        "properties": {
          "MessagingA2pCampaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessagingA2pCampaign"
            }
          }
        }
      },
      "MessagingA2pCampaign": {
        "type": "object",
        "properties": {
          "CampaignId": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "AccountId": {
            "type": "integer"
          },
          "MessageClass": {
            "type": "string"
          },
          "Imported": {
            "type": "boolean"
          },
          "CreatedDate": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          }
        }
      },
      "AccountHttpFeatureResponse": {
        "type": "object",
        "properties": {
          "AccountHttpFeature": {
            "$ref": "#/components/schemas/AccountHttpFeature"
          }
        }
      },
      "AccountHttpFeature": {
        "type": "object",
        "properties": {
          "DefaultProxyPeerId": {
            "type": "integer"
          }
        }
      },
      "AccountMmsFeatureResponse": {
        "type": "object",
        "properties": {
          "AccountHttpFeature": {
            "$ref": "#/components/schemas/MmsFeature"
          }
        }
      },
      "MmsFeature": {
        "type": "object",
        "properties": {
          "MmsSettings": {
            "$ref": "#/components/schemas/AccountMmsSettings"
          },
          "MM4Settings": {
            "$ref": "#/components/schemas/MM4Settings"
          }
        }
      },
      "AccountMmsSettings": {
        "type": "object",
        "properties": {
          "MM4Enabled": {
            "type": "boolean"
          },
          "TollFreeMMSAllowed": {
            "type": "boolean"
          },
          "DefaultProvider": {
            "type": "string"
          },
          "GenDlr": {
            "type": "boolean"
          },
          "GenReadReply": {
            "type": "boolean"
          }
        }
      },
      "MM4Settings": {
        "type": "object",
        "properties": {
          "Domain": {
            "type": "string"
          },
          "ConnValidWindow": {
            "type": "integer"
          },
          "MaxConn": {
            "type": "integer"
          },
          "PersistentConn": {
            "type": "boolean"
          },
          "KeepAliveNoop": {
            "type": "boolean"
          },
          "SkipAck": {
            "type": "boolean"
          },
          "AllowMultiRecepient": {
            "type": "boolean"
          },
          "ConnMessageRatio": {
            "type": "integer"
          },
          "ConnSentTimeout": {
            "type": "integer"
          },
          "MaxMessagesInQueue": {
            "type": "integer"
          },
          "LoopAllowed": {
            "type": "boolean"
          },
          "ForceAck": {
            "type": "boolean"
          },
          "AsyncMessageFlowSupported": {
            "type": "boolean"
          }
        }
      },
      "AccountSmsFeatureResponse": {
        "type": "object",
        "properties": {
          "AccountHttpFeature": {
            "$ref": "#/components/schemas/AccountSmsFeature"
          }
        }
      },
      "AccountSmsFeature": {
        "type": "object",
        "properties": {
          "MmsSettings": {
            "$ref": "#/components/schemas/AccountSmsFeatureSettings"
          },
          "SmppSettings": {
            "$ref": "#/components/schemas/SmppSettings"
          }
        }
      },
      "AccountSmsFeatureSettings": {
        "type": "object",
        "properties": {
          "Zone1": {
            "type": "boolean"
          },
          "Zone2": {
            "type": "boolean"
          },
          "Zone3": {
            "type": "boolean"
          },
          "Zone4": {
            "type": "boolean"
          },
          "Zone5": {
            "type": "boolean"
          },
          "SmppEnabled": {
            "type": "boolean"
          },
          "DefaultProvider": {
            "type": "integer"
          }
        }
      },
      "SmppSettings": {
        "type": "object",
        "properties": {
          "SmppUsername": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "Dlr": {
            "type": "string",
            "enum": [
              "INTERMEDIATE",
              "FINAL"
            ]
          },
          "DlrCarrier": {
            "type": "boolean"
          },
          "MaxPendingSubmits": {
            "type": "integer"
          },
          "ForceTon": {
            "type": "boolean"
          },
          "AllowThirdPartyTN": {
            "type": "boolean"
          },
          "ConnectionTypeDefault": {
            "type": "string",
            "enum": [
              "TRANSCEIVER",
              "SENDER_ONLY",
              "RECEIVER_ONLY"
            ]
          },
          "MaxConnections": {
            "type": "integer"
          },
          "ResetPassword": {
            "type": "boolean"
          },
          "SrcTon": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "UNKNOWN",
              "INTERNATIONAL",
              "NATIONAL",
              "NETWORKSPECIFIC",
              "SUBSCRIBER",
              "ALPHANUMERIC",
              "ABBREVIATED",
              "EXTENSION"
            ]
          },
          "SrcNpi": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "UNKNOWN",
              "E164",
              "X121",
              "TELEX",
              "NATIONAL",
              "PRIVATE",
              "ERMES",
              "EXTENSION"
            ]
          },
          "DstTon": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "UNKNOWN",
              "INTERNATIONAL",
              "NATIONAL",
              "NETWORKSPECIFIC",
              "SUBSCRIBER",
              "ALPHANUMERIC",
              "ABBREVIATED",
              "EXTENSION"
            ]
          },
          "DstNpi": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "UNKNOWN",
              "E164",
              "X121",
              "TELEX",
              "NATIONAL",
              "PRIVATE",
              "ERMES",
              "EXTENSION"
            ]
          }
        }
      },
      "MmsFeatureMm4AdminSettingsResponse": {
        "type": "object",
        "properties": {
          "mm4Settings": {
            "$ref": "#/components/schemas/MM4Settings"
          }
        }
      },
      "AccountMmsFeatureSettingsResponse": {
        "type": "object",
        "properties": {
          "mmsSettings": {
            "$ref": "#/components/schemas/AccountMmsSettings"
          }
        }
      },
      "AccountMessagingRoutesResponse": {
        "type": "object",
        "properties": {
          "MessagingRoutes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessagingRoute"
            }
          }
        }
      },
      "MessagingRoute": {
        "type": "object",
        "properties": {
          "NNID": {
            "type": "string"
          },
          "TNType": {
            "type": "string",
            "enum": [
              "OnNetTns",
              "OffNetUsaRoutedTns",
              "OffNetCanadianRoutedTns",
              "ExternalCustomerOwnedTns",
              "ExternalThirdPartyTnsTns",
              "ExternalCanadianTns",
              "TollFreeTns",
              "ExternalTollFreeTns",
              "A2pOnNetTns",
              "A2pOffNetTns"
            ]
          },
          "Default": {
            "type": "boolean"
          },
          "Details": {
            "$ref": "#/components/schemas/MessagingRouteDetails"
          }
        }
      },
      "MessagingRouteDetails": {
        "type": "object",
        "properties": {
          "NNRoute": {
            "$ref": "#/components/schemas/NNRoute"
          }
        }
      },
      "NNRoute": {
        "type": "object",
        "properties": {
          "Nnid": {
            "type": "integer"
          },
          "Espid": {
            "type": "string"
          },
          "DeliveryNetwork": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "trafficType": {
            "type": "string"
          },
          "ProvisionerIds": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ProvisionerId": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "MessagingSettingsResponse": {
        "type": "object",
        "properties": {
          "MessagingSettings": {
            "$ref": "#/components/schemas/MessagingSettings"
          }
        }
      },
      "MessagingSettings": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "EnabledOnNewTN": {
            "type": "boolean"
          },
          "SupportedOnImportedTns": {
            "type": "boolean"
          },
          "EnableOnNetMessageRoutes": {
            "type": "boolean"
          },
          "EnableOffNetMessageRoutes": {
            "type": "boolean"
          },
          "PreventUpdatingNetNumber": {
            "type": "boolean"
          },
          "ProxyPeersOwner": {
            "type": "integer"
          },
          "BreakOutCountries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Country": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "E911SettingsResponse": {
        "type": "object",
        "properties": {
          "E911Settings": {
            "$ref": "#/components/schemas/E911Settings"
          }
        }
      },
      "E911Settings": {
        "type": "object",
        "properties": {
          "Hosts": {
            "$ref": "#/components/schemas/Hosts"
          },
          "EVSCredentials": {
            "$ref": "#/components/schemas/EVSCredentials"
          }
        }
      },
      "EVSCredentials": {
        "type": "object",
        "properties": {
          "EVSCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EVSCredential"
            }
          }
        }
      },
      "EVSCredential": {
        "type": "object",
        "properties": {
          "EVSAccountId": {
            "type": "integer"
          },
          "RouteType": {
            "type": "string"
          }
        }
      },
      "EdgeManagementSettingsResponse": {
        "type": "object",
        "properties": {
          "EdgeManagementSettings": {
            "$ref": "#/components/schemas/EdgeManagementSettings"
          }
        }
      },
      "EdgeManagementSettings": {
        "type": "object",
        "properties": {
          "SbcSettings": {
            "$ref": "#/components/schemas/SbcSettings"
          },
          "SipAuthentication": {
            "$ref": "#/components/schemas/SipAuthentication"
          },
          "ProductSpecificAccessRestrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessRestriction"
            }
          },
          "HttpVoice": {
            "$ref": "#/components/schemas/HttpVoice"
          },
          "WebRtc": {
            "$ref": "#/components/schemas/WebRtc"
          },
          "TollFreePeeringPartner": {
            "$ref": "#/components/schemas/TollFreePeeringPartner"
          }
        }
      },
      "SbcSettings": {
        "type": "object",
        "properties": {
          "TrunkGroupId": {
            "type": "string"
          },
          "NodeGroupName": {
            "type": "string"
          }
        }
      },
      "SipAuthentication": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "Status": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "COMPLETE",
              "FAILED"
            ]
          },
          "Errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SipAuthError"
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "BRIDGE",
              "REGISTRAR"
            ]
          }
        }
      },
      "SipAuthError": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "AccessRestriction": {
        "type": "object",
        "properties": {
          "RestrictedProduct": {
            "type": "string"
          },
          "RestrictedAccessTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "RestrictedAccessType": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "HttpVoice": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          },
          "CallAdmissionControlSettings": {
            "$ref": "#/components/schemas/CallAdmissionControlSettings"
          }
        }
      },
      "CallAdmissionControlSettings": {
        "type": "object",
        "properties": {
          "CPS": {
            "type": "integer"
          },
          "ConcurrentCalls": {
            "type": "integer"
          },
          "OutboundCallsDequeuedPerSecond": {
            "type": "integer"
          }
        }
      },
      "WebRtc": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          }
        }
      },
      "TollFreePeeringPartner": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean"
          }
        }
      },
      "SipAuthenticationResponse": {
        "type": "object",
        "properties": {
          "SipAuthentication": {
            "$ref": "#/components/schemas/SipAuthSettings"
          }
        }
      },
      "SipAuthSettings": {
        "type": "object",
        "properties": {
          "SBC": {
            "$ref": "#/components/schemas/SipAuthSbc"
          },
          "RealmDnsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmDns"
            }
          }
        }
      },
      "SipAuthSbc": {
        "type": "object",
        "properties": {
          "Zone": {
            "$ref": "#/components/schemas/Zone"
          }
        }
      },
      "Zone": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "SipSigPort": {
            "$ref": "#/components/schemas/SipSigPort"
          }
        }
      },
      "SipSigPort": {
        "type": "object",
        "properties": {
          "Index": {
            "type": "integer"
          },
          "PortNumber": {
            "type": "integer"
          }
        }
      },
      "RealmDns": {
        "type": "object",
        "properties": {
          "Realm": {
            "type": "string"
          },
          "DefaultGroupName": {
            "type": "string"
          },
          "DNSRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DNSRecord"
            }
          }
        }
      },
      "DNSRecord": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "enum": [
              "A",
              "SRV"
            ]
          },
          "Name": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          },
          "TTL": {
            "type": "integer"
          }
        }
      },
      "TerminationSettingsResponse": {
        "type": "object",
        "properties": {
          "TerminationSettings": {
            "$ref": "#/components/schemas/TerminationSettings"
          }
        }
      },
      "TerminationSettings": {
        "type": "object",
        "properties": {
          "RogerUsedForTerminationSettings": {
            "type": "boolean"
          },
          "LegacyTerminationSettings": {
            "$ref": "#/components/schemas/LegacyTerminationSettings"
          },
          "RogerTerminationSettings": {
            "$ref": "#/components/schemas/RogerTerminationSettings"
          },
          "HttpVoiceProxyTermHost": {
            "type": "string",
            "description": "can be used only with RogerTerminationSettings"
          }
        }
      },
      "LegacyTerminationSettings": {
        "type": "object",
        "properties": {
          "CustomerTrafficAllowed": {
            "type": "string",
            "enum": [
              "ALL",
              "LITE",
              "DOMESTIC",
              "NONE"
            ]
          },
          "CpsQueue": {
            "type": "integer"
          },
          "ConcurrentOutboundCalls": {
            "type": "integer"
          },
          "ConcurrentBidirectionalCalls": {
            "type": "integer"
          },
          "BillingType": {
            "type": "string",
            "enum": [
              "DNIS",
              "LRN"
            ]
          },
          "RateType": {
            "type": "string",
            "enum": [
              "FLAT",
              "FULL_CR",
              "NPANXX",
              "BILL_NUM_LCR"
            ]
          },
          "DiscountPercentage": {
            "type": "integer"
          },
          "GuaranteedTermination": {
            "type": "boolean"
          }
        }
      },
      "RogerTerminationSettings": {
        "type": "object",
        "properties": {
          "SubnetAddressingAllowed": {
            "type": "boolean"
          },
          "TerminationId": {
            "type": "integer"
          }
        }
      },
      "TollFreeSettingsResponse": {
        "type": "object",
        "properties": {
          "TerminationSettings": {
            "$ref": "#/components/schemas/TollFreeSettings"
          }
        }
      },
      "TollFreeSettings": {
        "type": "object",
        "properties": {
          "RespOrgException": {
            "type": "boolean"
          },
          "RespOrgIdList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "RespOrgId": {
                  "type": "string"
                }
              }
            }
          },
          "TargetBandwidthRespOrgId": {
            "type": "string"
          }
        }
      },
      "UcTrunkingSettingsResponse": {
        "type": "object",
        "properties": {
          "UcTrunkingSettings": {
            "$ref": "#/components/schemas/UcTrunkingSettings"
          }
        }
      },
      "UcTrunkingSettings": {
        "type": "object",
        "properties": {
          "PartnerType": {
            "type": "string",
            "enum": [
              "RESELLER",
              "AGENT"
            ]
          },
          "MaxUcTrunks": {
            "type": "integer"
          },
          "BillingType": {
            "type": "string",
            "enum": [
              "DNIS",
              "LRN"
            ]
          },
          "CustomerTrafficAllowed": {
            "type": "string",
            "enum": [
              "ALL",
              "LITE",
              "DOMESTIC",
              "NONE"
            ]
          },
          "UsageCategory": {
            "type": "string",
            "enum": [
              "UC250",
              "UC500",
              "UC1000"
            ]
          },
          "TrunkAllocationRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrunkAllocationRule"
            }
          }
        }
      },
      "TrunkAllocationRule": {
        "type": "object",
        "properties": {
          "LowerBound": {
            "type": "integer"
          },
          "Ratio": {
            "type": "integer"
          }
        }
      },
      "UcTrunkingCloudSettingsResponse": {
        "type": "object",
        "properties": {
          "UcTrunkingCloudSettings": {
            "$ref": "#/components/schemas/UcTrunkingCloudSettings"
          }
        }
      },
      "UcTrunkingCloudSettingsPayload": {
        "type": "object",
        "properties": {
          "UcTrunkingCloudSettings": {
            "$ref": "#/components/schemas/UcTrunkingCloudSettings"
          }
        }
      },
      "UcTrunkingCloudSettings": {
        "type": "object",
        "properties": {
          "BiDirectionalTrunks": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "AccountIdPathParam": {
        "name": "accountId",
        "description": "User's account ID",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "1234567"
      },
      "StatusQueryParam": {
        "name": "status",
        "description": "The status of the order being searched for.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "COMPLETE",
              "PARTIAL",
              "FAILED"
            ]
          }
        }
      },
      "OrderIdPathParam": {
        "name": "orderId",
        "description": "ID of order to retrieve",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "bf1305b8-8998-1111-2222-51ba3ce52d4e"
      },
      "OrderTypePathParam": {
        "name": "orderType",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SiteIdPathParam": {
        "name": "siteId",
        "description": "Site ID of the Sip Peer",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "407"
      },
      "SipPeerIdPathParam": {
        "name": "sipPeerId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "GatewayIdIdPathParam": {
        "name": "gatewayId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  },
  "tags": [
    {
      "name": "10DLC"
    },
    {
      "name": "Account"
    },
    {
      "name": "Addresses"
    },
    {
      "name": "Applications",
      "description": "Bandwidth uses HTTP webhooks to send message & voice events to any publicly addressable url.",
      "externalDocs": {
        "description": "Application guide",
        "url": "/docs/account/applications/"
      }
    },
    {
      "name": "Available Tns"
    },
    {
      "name": "Bulk Port-In",
      "description": "Manage bulk port-in orders",
      "externalDocs": {
        "description": "Bulk port-in guide",
        "url": "/docs/numbers/guides/bulkportins/"
      }
    },
    {
      "name": "Callbacks"
    },
    {
      "name": "Cities"
    },
    {
      "name": "DLDA",
      "description": "DLDA = Directory Listing and Directory Assistance. A DLDA resource associates a TN with a Street Address. This gets updated in a Network Database.",
      "externalDocs": {
        "description": "DLDA guide",
        "url": "/docs/numbers/guides/manageNumberFeatures/#directory-listing-and-directory-assistance-dlda"
      }
    },
    {
      "name": "DLR",
      "description": "DLR - Dynamic location routing",
      "externalDocs": {
        "description": "DLR guide",
        "url": "/docs/emergency/dashboard/dlr/"
      }
    },
    {
      "name": "Disconnecting Numbers",
      "description": "Disconnecting a phone number leaves it in all applicable inventories, but makes it available for activation with a new subscriber.",
      "externalDocs": {
        "description": "Disconnecting number guide",
        "url": "/docs/numbers/guides/disconnectNumbers/"
      }
    },
    {
      "name": "Emergency Notification",
      "description": "Emergency notifications are designed to support notification of front-desk personnel in the event that someone dials an emergency call from a multi-line telephone system (MLTS).",
      "externalDocs": {
        "description": "Emergency notification guide",
        "url": "/docs/emergency/dashboard/notifications/"
      }
    },
    {
      "name": "External Tn"
    },
    {
      "name": "Import Tn"
    },
    {
      "name": "In-service Numbers"
    },
    {
      "name": "LIDB",
      "description": "LIDB - Line Information DataBase",
      "externalDocs": {
        "description": "LIDB guide",
        "url": "/docs/numbers/guides/manageNumberFeatures/#calling-name-display-update-lidb"
      }
    },
    {
      "name": "Move Tns"
    },
    {
      "name": "Numbers Assignment"
    },
    {
      "name": "Orders"
    },
    {
      "name": "Porting",
      "description": "",
      "externalDocs": {
        "description": "Porting guide",
        "url": "/docs/numbers/guides/portingNumbers/"
      }
    },
    {
      "name": "Rate Centers"
    },
    {
      "name": "Reports",
      "externalDocs": {
        "description": "Reports guide",
        "url": "/docs/numbers/guides/setup-reports/accountReports/"
      }
    },
    {
      "name": "Sip Registrar",
      "externalDocs": {
        "description": "Sip Registrar guide",
        "url": "/docs/account/sipRegistrar/#create-sip-credentials"
      }
    },
    {
      "name": "SipPeer Management"
    },
    {
      "name": "Site Management"
    },
    {
      "name": "Subscriptions",
      "externalDocs": {
        "description": "Subscriptions details",
        "url": "/docs/account/subscriptions/"
      }
    },
    {
      "name": "Tn Option"
    },
    {
      "name": "Tn Reservation"
    },
    {
      "name": "Tns"
    }
  ]
}
